[
    {
        "date": "2016-06-01",
        "desc": "Advanced Operating Systems is a graduate-level course that addresses a broad range of topics in operating system design and implementation, including:Operating system structuringSynchronization, communication and scheduling in parallel systemsDistributed systems, their communication mechanisms, distributed objects and middlewareFailures and recovery managementSystem support for Internet-scale computingBy tracing the key ideas of today's most popular systems to their origins in research, the class highlights key developments in operating system design over the last two decades and illustrates how insight has evolved to implementation.PrerequisitesStudents are expected to have completed an undergraduate OS course, or have industry experience. General knowledge of operating systems content will be assumed.&nbsp;To gain a better understanding of the prerequisite concepts necessary for success in this course, please take&nbsp;this brief diagnostic preparedness test. This test is for prospective students' personal purposes, to gauge readiness for this graduate-level Advanced Operating Systems course.&nbsp;Another resource for students to utilize in gauging preparedness is the&nbsp;CS 6210 Prerequisites and Concepts list. Please take the time to review the concepts in this document. If a student does not feel comfortable with the listed tasks, it may be beneficial to review this subject matter prior to registering for the course.Minimum Technical RequirementsBrowser and connection speed: An up-to-date version of Chrome or Firefox is strongly recommended. We also support Internet Explorer 9 and the desktop versions of Internet Explorer 10 and above (not the metro versions). 2+ Mbps recommended; at minimum 0.768 Mbps download speedOperating system:- PC: Windows XP or higher with latest updates installed- Mac: OS X 10.6 or higher with latest updates installed- Linux: Any recent distribution that has the supported browsers installed",
        "desc_html": "Advanced Operating Systems is a graduate-level course that addresses a broad\nrange of topics in operating system design and implementation, including:\n\n  * Operating system structuring\n  * Synchronization, communication and scheduling in parallel systems\n  * Distributed systems, their communication mechanisms, distributed objects and middleware\n  * Failures and recovery management\n  * System support for Internet-scale computing\n\nBy tracing the key ideas of today's most popular systems to their origins in\nresearch, the class highlights key developments in operating system design\nover the last two decades and illustrates how insight has evolved to\nimplementation.\n\n**Prerequisites**\n\nStudents are expected to have completed an undergraduate OS course, or have\nindustry experience. General knowledge of operating systems content will be\nassumed.  \n  \nTo gain a better understanding of the prerequisite concepts necessary for\nsuccess in this course, please take [this brief diagnostic preparedness\ntest](http://www.omscs.gatech.edu/wp-content/uploads/2014/03\n/cs6210_diagnostic-preparedness-test.pdf). This test is for prospective\nstudents' personal purposes, to gauge readiness for this graduate-level\nAdvanced Operating Systems course.  \n  \nAnother resource for students to utilize in gauging preparedness is the [CS\n6210 Prerequisites and Concepts list](http://www.omscs.gatech.edu/wp-\ncontent/uploads/2014/03/AOSPrereq-and-Concepts-List.pdf). Please take the time\nto review the concepts in this document. If a student does not feel\ncomfortable with the listed tasks, it may be beneficial to review this subject\nmatter prior to registering for the course.\n\n**Minimum Technical Requirements**\n\n    * Browser and connection speed: An up-to-date version of Chrome or Firefox is strongly recommended. We also support Internet Explorer 9 and the desktop versions of Internet Explorer 10 and above (not the metro versions). 2+ Mbps recommended; at minimum 0.768 Mbps download speed\n    * Operating system:  \n\\- PC: Windows XP or higher with latest updates installed  \n\\- Mac: OS X 10.6 or higher with latest updates installed  \n\\- Linux: Any recent distribution that has the supported browsers installed\n\n",
        "name": "CS 6210: Advanced Operating Systems",
        "provider": "Georgia Tech Online Master of Science in Computer Science",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Georgia Institute of Technology"
        ],
        "url": "http://www.omscs.gatech.edu/cs-6210-advanced-operating-systems/",
        "video_url": "https://www.youtube.com/embed/D0feztVihSA?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2016-02-29",
        "desc": "The Beauty and Joy of Computing (BJC) is a computer science principles course developed at the University of California, Berkeley, intended to broaden participation in computing to non-traditional groups. Computing has profoundly changed the world, opening up wonderful new ways for people to connect, design, research, play, create, and express themselves. However, just using a computer is only a small part of the picture. The real transformative and empowering experience comes when one learns how to program the computer, to translate ideas into code. This course teaches students how to do exactly that, using Snap! (based on Scratch), one of the friendliest programming languages ever invented. It's purely graphical, which means programming involves simply dragging blocks around, and building bigger blocks out of smaller blocks. But this course is far more than just learning to program. We focus on seven big ideas (creativity, abstraction, data and information, algorithms, programming, the Internet, and global impact), and six computational thinking practices (connecting computing, creating computational artifacts, abstracting, analyzing problems and artifacts, communicating, and collaborating). Throughout the course, relevance is emphasized: relevance to the student and to society. This fun, introductory course is not just for computer science majors, it\u2019s for everyone\u2026 join us!Learn more about our High School and AP* Exam Preparation Courses",
        "desc_html": "The Beauty and Joy of Computing (BJC) is a computer science principles course\ndeveloped at the University of California, Berkeley, intended to broaden\nparticipation in computing to non-traditional groups. Computing has profoundly\nchanged the world, opening up wonderful new ways for people to connect,\ndesign, research, play, create, and express themselves. However, just using a\ncomputer is only a small part of the picture. The real transformative and\nempowering experience comes when one learns how to program the computer, to\ntranslate ideas into code. This course teaches students how to do exactly\nthat, using Snap! (based on Scratch), one of the friendliest programming\nlanguages ever invented. It's purely graphical, which means programming\ninvolves simply dragging blocks around, and building bigger blocks out of\nsmaller blocks. But this course is far more than just learning to program. We\nfocus on seven big ideas (creativity, abstraction, data and information,\nalgorithms, programming, the Internet, and global impact), and six\ncomputational thinking practices (connecting computing, creating computational\nartifacts, abstracting, analyzing problems and artifacts, communicating, and\ncollaborating). Throughout the course, relevance is emphasized: relevance to\nthe student and to society. This fun, introductory course is not just for\ncomputer science majors, it\u2019s for everyone\u2026 join us!  \n  \nLearn more about our High School and AP* Exam Preparation Courses\n\n",
        "name": "BJC.4x: The Beauty and Joy of Computing (CS Principles), Part 4",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of California, Berkeley"
        ],
        "url": "https://www.edx.org/course/beauty-joy-computing-cs-principles-part-uc-berkeleyx-bjc-4x",
        "video_url": ""
    },
    {
        "date": "2016-01-31",
        "desc": "Level Up! covers the complete Advanced Placement* Computer Science A course in unique and engaging ways. It's a significant change of pace from other online introductory programming courses. While you will rigorously learn the art of programming in Java, you will spend much of your time designing and writing games and simulations.\u00a0 This course has no textbook because all the materials are online.\u00a0 You\u2019ll be reading; checking your understanding with self-tests; analyzing, modifying, and debugging code as well as writing it; and working with your fellow students to come to common understandings.\u00a0 You\u2019ll work with sounds and pictures (what do you sound like speaking backwards?), write adventure games and \u201csmart\u201d board games, and spend time trying to understand whole programs rather than just little pieces.We\u2019ve designed this course to help high-school students prepare for the Advanced Placement Computer Science test, and we\u2019ll cover everything you need to know. It has been successfully used in classrooms for several years, and now its available for anyone, in school or not, through EdX. If you are an adult or a student who isn\u2019t going to take the AP test, you are more than welcome to join!\u00a0 We go beyond the minimum required by the AP committee, introducing graphics, mouse commands, and other tools for real programmers.We based this course on the principles of \u201clab-centric\u201d instruction, in which lectures are replaced by hands-on activities.\u00a0 We won\u2019t include long, fact-filled videos, and the webpages in this course will be your \u201ctextbook\u201d.Learn more about our High School and AP* Exam Preparation Courses* Advanced Placement and AP are registered trademarks of the College Board, which was not involved in the production of, and does not endorse, these offerings.",
        "desc_html": "Level Up! covers the complete Advanced Placement* Computer Science A course in\nunique and engaging ways. It's a significant change of pace from other online\nintroductory programming courses. While you will rigorously learn the art of\nprogramming in Java, you will spend much of your time designing and writing\ngames and simulations.\u00a0 This course has no textbook because all the materials\nare online.\u00a0 You\u2019ll be reading; checking your understanding with self-tests;\nanalyzing, modifying, and debugging code as well as writing it; and working\nwith your fellow students to come to common understandings.\u00a0 You\u2019ll work with\nsounds and pictures (what do you sound like speaking backwards?), write\nadventure games and \u201csmart\u201d board games, and spend time trying to understand\nwhole programs rather than just little pieces.  \n  \nWe\u2019ve designed this course to help high-school students prepare for the\nAdvanced Placement Computer Science test, and we\u2019ll cover everything you need\nto know. It has been successfully used in classrooms for several years, and\nnow its available for anyone, in school or not, through EdX. If you are an\nadult or a student who isn\u2019t going to take the AP test, you are more than\nwelcome to join!\u00a0 We go beyond the minimum required by the AP committee,\nintroducing graphics, mouse commands, and other tools for real programmers.  \n  \nWe based this course on the principles of \u201clab-centric\u201d instruction, in which\nlectures are replaced by hands-on activities.\u00a0 We won\u2019t include long, fact-\nfilled videos, and the webpages in this course will be your \u201ctextbook\u201d.  \n  \nLearn more about our High School and AP* Exam Preparation Courses  \n  \n* Advanced Placement and AP are registered trademarks of the College Board, which was not involved in the production of, and does not endorse, these offerings. \n\n",
        "name": "LUCS.4x: Preparing for the AP* Computer Science A Exam \u2014 Level Up! Part 4",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of California, Berkeley"
        ],
        "url": "https://www.edx.org/course/preparing-ap-computer-science-exam-level-uc-berkeleyx-lucs-4x",
        "video_url": ""
    },
    {
        "date": "2016-01-31",
        "desc": "Level Up! covers the complete Advanced Placement* Computer Science A course in unique and engaging ways. It's a significant change of pace from other online introductory programming courses. While you will rigorously learn the art of programming in Java, you will spend much of your time designing and writing games and simulations.\u00a0 This course has no textbook because all the materials are online.\u00a0 You\u2019ll be reading; checking your understanding with self-tests; analyzing, modifying, and debugging code as well as writing it; and working with your fellow students to come to common understandings.\u00a0 You\u2019ll work with sounds and pictures (what do you sound like speaking backwards?), write adventure games and \u201csmart\u201d board games, and spend time trying to understand whole programs rather than just little pieces.We\u2019ve designed this course to help high-school students prepare for the Advanced Placement Computer Science test, and we\u2019ll cover everything you need to know. It has been successfully used in classrooms for several years, and now its available for anyone, in school or not, through EdX. If you are an adult or a student who isn\u2019t going to take the AP test, you are more than welcome to join!\u00a0 We go beyond the minimum required by the AP committee, introducing graphics, mouse commands, and other tools for real programmers.We based this course on the principles of \u201clab-centric\u201d instruction, in which lectures are replaced by hands-on activities.\u00a0 We won\u2019t include long, fact-filled videos, and the webpages in this course will be your \u201ctextbook\u201d.Learn more about our High School and AP* Exam Preparation Courses* Advanced Placement and AP are registered trademarks of the College Board, which was not involved in the production of, and does not endorse, these offerings.",
        "desc_html": "Level Up! covers the complete Advanced Placement* Computer Science A course in\nunique and engaging ways. It's a significant change of pace from other online\nintroductory programming courses. While you will rigorously learn the art of\nprogramming in Java, you will spend much of your time designing and writing\ngames and simulations.\u00a0 This course has no textbook because all the materials\nare online.\u00a0 You\u2019ll be reading; checking your understanding with self-tests;\nanalyzing, modifying, and debugging code as well as writing it; and working\nwith your fellow students to come to common understandings.\u00a0 You\u2019ll work with\nsounds and pictures (what do you sound like speaking backwards?), write\nadventure games and \u201csmart\u201d board games, and spend time trying to understand\nwhole programs rather than just little pieces.  \n  \nWe\u2019ve designed this course to help high-school students prepare for the\nAdvanced Placement Computer Science test, and we\u2019ll cover everything you need\nto know. It has been successfully used in classrooms for several years, and\nnow its available for anyone, in school or not, through EdX. If you are an\nadult or a student who isn\u2019t going to take the AP test, you are more than\nwelcome to join!\u00a0 We go beyond the minimum required by the AP committee,\nintroducing graphics, mouse commands, and other tools for real programmers.  \n  \nWe based this course on the principles of \u201clab-centric\u201d instruction, in which\nlectures are replaced by hands-on activities.\u00a0 We won\u2019t include long, fact-\nfilled videos, and the webpages in this course will be your \u201ctextbook\u201d.  \n  \nLearn more about our High School and AP* Exam Preparation Courses  \n  \n* Advanced Placement and AP are registered trademarks of the College Board, which was not involved in the production of, and does not endorse, these offerings. \n\n",
        "name": "LUCS.3x: Preparing for the AP* Computer Science A Exam \u2014 Level Up! Part 3",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of California, Berkeley"
        ],
        "url": "https://www.edx.org/course/preparing-ap-computer-science-exam-level-uc-berkeleyx-lucs-3x",
        "video_url": ""
    },
    {
        "date": "2016-01-04",
        "desc": "The Beauty and Joy of Computing (BJC) is a computer science principles course developed at the University of California, Berkeley, intended to broaden participation in computing to non-traditional groups. Computing has profoundly changed the world, opening up wonderful new ways for people to connect, design, research, play, create, and express themselves. However, just using a computer is only a small part of the picture. The real transformative and empowering experience comes when one learns how to program the computer, to translate ideas into code. This course teaches students how to do exactly that, using Snap! (based on Scratch), one of the friendliest programming languages ever invented. It's purely graphical, which means programming involves simply dragging blocks around, and building bigger blocks out of smaller blocks. But this course is far more than just learning to program. We focus on seven big ideas (creativity, abstraction, data and information, algorithms, programming, the Internet, and global impact), and six computational thinking practices (connecting computing, creating computational artifacts, abstracting, analyzing problems and artifacts, communicating, and collaborating). Throughout the course, relevance is emphasized: relevance to the student and to society. This fun, introductory course is not just for computer science majors, it\u2019s for everyone\u2026 join us!Learn more about our High School and AP* Exam Preparation Courses",
        "desc_html": "The Beauty and Joy of Computing (BJC) is a computer science principles course\ndeveloped at the University of California, Berkeley, intended to broaden\nparticipation in computing to non-traditional groups. Computing has profoundly\nchanged the world, opening up wonderful new ways for people to connect,\ndesign, research, play, create, and express themselves. However, just using a\ncomputer is only a small part of the picture. The real transformative and\nempowering experience comes when one learns how to program the computer, to\ntranslate ideas into code. This course teaches students how to do exactly\nthat, using Snap! (based on Scratch), one of the friendliest programming\nlanguages ever invented. It's purely graphical, which means programming\ninvolves simply dragging blocks around, and building bigger blocks out of\nsmaller blocks. But this course is far more than just learning to program. We\nfocus on seven big ideas (creativity, abstraction, data and information,\nalgorithms, programming, the Internet, and global impact), and six\ncomputational thinking practices (connecting computing, creating computational\nartifacts, abstracting, analyzing problems and artifacts, communicating, and\ncollaborating). Throughout the course, relevance is emphasized: relevance to\nthe student and to society. This fun, introductory course is not just for\ncomputer science majors, it\u2019s for everyone\u2026 join us!  \n  \nLearn more about our High School and AP* Exam Preparation Courses\n\n",
        "name": "BJC.3x: The Beauty and Joy of Computing (CS Principles), Part 3",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of California, Berkeley"
        ],
        "url": "https://www.edx.org/course/beauty-joy-computing-cs-principles-part-uc-berkeleyx-bjc-3x",
        "video_url": ""
    },
    {
        "date": "2015-12-31",
        "desc": "UPDATE: we're doing a live, updated MOOC of this course at stanford-online July-2014 (not this Coursera version). See here:http://cs101.class.stanford.edu/CS101 teaches the essential ideas of Computer Science for a zero-prior-experience audience. Computers can appear very complicated, but in reality, computers work within just a few, simple patterns. CS101 demystifies and brings those patterns to life, which is useful for anyone using computers today.In CS101, students play and experiment with short bits of \"computer code\" to bring to life to the power and limitations of computers. Everything works within the browser, so there is no extra software to download or install. CS101 also provides a general background on computers today: what is a computer, what is hardware, what is software, what is the internet. No previous experience is required other than the ability to use a web browser.Here is&nbsp;another video&nbsp;Nick created for this class.SyllabusCS101 topics are covered with a mixture of video lecture and active lab work, all in the browser:The nature of computers and code, what they can and cannot doHow computer hardware works: chips, cpu, memory, diskNecessary jargon: bits, bytes, megabytes, gigabytesHow software works: what is a program, what is \"running\"How digital images workComputer code: loops and logicBig ideas: abstraction, logic, bugsHow structured data worksHow the internet works: ip address, routing, ethernet, wi-fiComputer security: viruses, trojans, and passwords, oh my!Analog vs. digitalDigital media, images, sounds, video, compression",
        "desc_html": "**UPDATE**: we're doing a live, updated MOOC of this course at stanford-online July-2014 (not this Coursera version). See here: [http://cs101.class.stanford.edu/](http://cs101.class.stanford.edu)   \n\nCS101 teaches the essential ideas of Computer Science for a zero-prior-\nexperience audience. Computers can appear very complicated, but in reality,\ncomputers work within just a few, simple patterns. CS101 demystifies and\nbrings those patterns to life, which is useful for anyone using computers\ntoday.\n\nIn CS101, students play and experiment with short bits of \"computer code\" to\nbring to life to the power and limitations of computers. Everything works\nwithin the browser, so there is no extra software to download or install.\nCS101 also provides a general background on computers today: what is a\ncomputer, what is hardware, what is software, what is the internet. No\nprevious experience is required other than the ability to use a web browser.\n\nHere is [another video](http://www.youtube.com/watch?v=A9pMbRKq8Ro) Nick\ncreated for this class.****\n\n## Syllabus\n\nCS101 topics are covered with a mixture of video lecture and active lab work,\nall in the browser:\n\n  * The nature of computers and code, what they can and cannot do\n  * How computer hardware works: chips, cpu, memory, disk\n  * Necessary jargon: bits, bytes, megabytes, gigabytes\n  * How software works: what is a program, what is \"running\"\n  * How digital images work\n  * Computer code: loops and logic\n  * Big ideas: abstraction, logic, bugs\n  * How structured data works\n  * How the internet works: ip address, routing, ethernet, wi-fi\n  * Computer security: viruses, trojans, and passwords, oh my!\n  * Analog vs. digital\n  * Digital media, images, sounds, video, compression\n\n",
        "name": "Computer Science 101",
        "provider": "Coursera",
        "rating": "4.25",
        "reviews": "8",
        "university": [
            "Stanford University"
        ],
        "url": "https://www.coursera.org/course/cs101",
        "video_url": ""
    },
    {
        "date": "2015-12-31",
        "desc": "\"Introduction to Databases\" was one of Stanford's three inaugural massive open online courses in the fall of 2011; it was offered again in MOOC format in 2013 and 2014. Materials from the MOOC offerings have been available for self-study on Coursera as well as on other platforms.Starting in summer 2014, the materials are now being offered on the OpenEdX platform as a set of smaller self-paced \"mini-courses\", which can be assembled in a variety of ways to learn about different aspects of databases.All of the mini-courses are based around video lectures and/or video demos. Many of them include in-video quizzes to check understanding, in-depth standalone quizzes, and/or a variety of automatically-checked interactive programming exercises. Each mini-course also includes a discussion forum and pointers to readings and resources. Taught by Professor Jennifer Widom, the overall curriculum draws from Stanford's popular Databases course.To explore and enroll in the new Databases mini-courses, please visithttps://class.stanford.edu/courses/DB/2014/SelfPaced/about.Syllabus",
        "desc_html": "\"Introduction to Databases\" was one of Stanford's three inaugural massive open\nonline courses in the fall of 2011; it was offered again in MOOC format in\n2013 and 2014. Materials from the MOOC offerings have been available for self-\nstudy on Coursera as well as on other platforms. **Starting in summer 2014,\nthe materials are now being offered on the OpenEdX platform as a set of\nsmaller self-paced \"mini-courses\", which can be assembled in a variety of ways\nto learn about different aspects of databases.** All of the mini-courses are\nbased around video lectures and/or video demos. Many of them include in-video\nquizzes to check understanding, in-depth standalone quizzes, and/or a variety\nof automatically-checked interactive programming exercises. Each mini-course\nalso includes a discussion forum and pointers to readings and resources.\nTaught by Professor Jennifer Widom, the overall curriculum draws from\nStanford's popular Databases course. **To explore and enroll in the new\nDatabases mini-courses, please visit**\n<https://class.stanford.edu/courses/DB/2014/SelfPaced/about>.\n\n## Syllabus\n\n** **\n\n",
        "name": "Introduction to Databases",
        "provider": "Coursera",
        "rating": "4.7916666666667",
        "reviews": "24",
        "university": [
            "Stanford University"
        ],
        "url": "https://www.coursera.org/course/db",
        "video_url": ""
    },
    {
        "date": "2015-12-31",
        "desc": "In this class you will learn how to design secure systems and write secure code. You will learn how to find vulnerabilities in code and how to design software systems that limit the impact of security vulnerabilities. We will focus on principles for building secure systems and give many real world examples. In addition, the course will cover topics such as:memory safety vulnerabilitiestechniques and tools for vulnerability detection and defensesecurity principles such as sandboxing, isolation and least privilegemobile platform and application securitybasic crypto conceptsweb securitynetwork securitymalware detection and defenseCourse homework and labs will help students practice the concepts and techniques learned in class, such as how to find vulnerabilities and how to fix them. The labs and projects are designed to help students practice the principles of secure system design.",
        "desc_html": "In this class you will learn how to design secure systems and write secure\ncode. You will learn how to find vulnerabilities in code and how to design\nsoftware systems that limit the impact of security vulnerabilities. We will\nfocus on principles for building secure systems and give many real world\nexamples. In addition, the course will cover topics such as:\n\n  * memory safety vulnerabilities\n  * techniques and tools for vulnerability detection and defense\n  * security principles such as sandboxing, isolation and least privilege\n  * mobile platform and application security\n  * basic crypto concepts\n  * web security\n  * network security\n  * malware detection and defense\n\nCourse homework and labs will help students practice the concepts and\ntechniques learned in class, such as how to find vulnerabilities and how to\nfix them. The labs and projects are designed to help students practice the\nprinciples of secure system design.\n\n",
        "name": "Computer Security",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Stanford University"
        ],
        "url": "https://www.coursera.org/course/security",
        "video_url": ""
    },
    {
        "date": "2015-12-31",
        "desc": "Machine learning algorithms can figure out how to perform important tasks by generalizing from examples. This is often feasible and cost-effective when manual programming is not. Machine learning (also known as data mining, pattern recognition and predictive analytics) is used widely in business, industry, science and government, and &nbsp;there is a great shortage of experts in it. If you pick up a machine learning textbook you may find it forbiddingly mathematical, but in this class you will learn that the key ideas and algorithms are in fact quite intuitive. And powerful!Most of the class will be devoted to supervised learning (in other words, learning in which a teacher provides the learner with the correct answers at training time). This is the most mature and widely used type of machine learning. We will cover the main supervised learning techniques, including decision trees, rules, instances, Bayesian techniques, neural networks, model ensembles, and support vector machines. We will also touch on learning theory with an emphasis on its practical uses. Finally, we will cover the two main classes of unsupervised learning methods: clustering and dimensionality reduction. Throughout the class there will be an emphasis not just on individual algorithms but on ideas that cut across them and tips for making them work.In the class projects you will build your own implementations of machine learning algorithms and apply them to problems like spam filtering, clickstream mining, recommender systems, and computational biology. This will get you as close to becoming a machine learning expert as you can in ten weeks!SyllabusWeek One: Basic concepts in machine learning.Week Two: Decision tree induction.Week Three: Learning sets of rules and logic programs.Week Four: Instance-based learning.Week Five: Statistical learning.Week Six: Neural networks.Week Seven: Model ensembles.Week Eight: Learning theory.Week Nine: Support vector machines.Week Ten: Clustering and dimensionality reduction.",
        "desc_html": "Machine learning algorithms can figure out how to perform important tasks by\ngeneralizing from examples. This is often feasible and cost-effective when\nmanual programming is not. Machine learning (also known as data mining,\npattern recognition and predictive analytics) is used widely in business,\nindustry, science and government, and  there is a great shortage of experts in\nit. If you pick up a machine learning textbook you may find it forbiddingly\nmathematical, but in this class you will learn that the key ideas and\nalgorithms are in fact quite intuitive. And powerful!\n\n  \n\nMost of the class will be devoted to supervised learning (in other words,\nlearning in which a teacher provides the learner with the correct answers at\ntraining time). This is the most mature and widely used type of machine\nlearning. We will cover the main supervised learning techniques, including\ndecision trees, rules, instances, Bayesian techniques, neural networks, model\nensembles, and support vector machines. We will also touch on learning theory\nwith an emphasis on its practical uses. Finally, we will cover the two main\nclasses of unsupervised learning methods: clustering and dimensionality\nreduction. Throughout the class there will be an emphasis not just on\nindividual algorithms but on ideas that cut across them and tips for making\nthem work.\n\n  \n\nIn the class projects you will build your own implementations of machine\nlearning algorithms and apply them to problems like spam filtering,\nclickstream mining, recommender systems, and computational biology. This will\nget you as close to becoming a machine learning expert as you can in ten\nweeks!\n\n  \n\n## Syllabus\n\nWeek One: Basic concepts in machine learning.\n\nWeek Two: Decision tree induction.\n\nWeek Three: Learning sets of rules and logic programs.\n\nWeek Four: Instance-based learning.\n\nWeek Five: Statistical learning.\n\nWeek Six: Neural networks.\n\nWeek Seven: Model ensembles.\n\nWeek Eight: Learning theory.\n\nWeek Nine: Support vector machines.\n\nWeek Ten: Clustering and dimensionality reduction.\n\n",
        "name": "Machine Learning",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of Washington"
        ],
        "url": "https://www.coursera.org/course/machlearning",
        "video_url": ""
    },
    {
        "date": "2015-12-30",
        "desc": "Specialization: Machine Learning",
        "desc_html": "Specialization: Machine Learning\n\n",
        "name": "CS 7545, Machine Learning for Trading",
        "provider": "Georgia Tech Online Master of Science in Computer Science",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Georgia Institute of Technology"
        ],
        "url": "http://www.omscs.gatech.edu/",
        "video_url": ""
    },
    {
        "date": "2015-12-30",
        "desc": "Specializations: Computational Perception & Robotics, Computer Graphics, Databases & Software Engineering, Machine Learning, Networking, Social Computing, Systems",
        "desc_html": "Specializations: Computational Perception & Robotics, Computer Graphics,\nDatabases & Software Engineering, Machine Learning, Networking, Social\nComputing, Systems\n\n",
        "name": "CS 6505, Computability and Algorithms",
        "provider": "Georgia Tech Online Master of Science in Computer Science",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Georgia Institute of Technology"
        ],
        "url": "http://www.omscs.gatech.edu/",
        "video_url": ""
    },
    {
        "date": "2015-12-30",
        "desc": "Covers modern computer architecture, including speculation, out-of-order instruction execution, advanced branch prediction, multi-level non-blocking caches, cache coherence and consistency, and a number of other topics related to how modern processor cores work, and how they are put together into a multi-core processor chip. Prerequisites: Undergraduate computer architecture course that covers basic computer organization; working knowledge of topics such as instruction sets, pipelining, dependences and hazards, caches and basic speculation (especially basic branch prediction), and basic multi-core concepts like shared memory programming and synchronization.",
        "desc_html": "Covers modern computer architecture, including speculation, out-of-order\ninstruction execution, advanced branch prediction, multi-level non-blocking\ncaches, cache coherence and consistency, and a number of other topics related\nto how modern processor cores work, and how they are put together into a\nmulti-core processor chip. Prerequisites: Undergraduate computer architecture\ncourse that covers basic computer organization; working knowledge of topics\nsuch as instruction sets, pipelining, dependences and hazards, caches and\nbasic speculation (especially basic branch prediction), and basic multi-core\nconcepts like shared memory programming and synchronization.\n\n",
        "name": "CS 6290, High Performance Computer Architecture",
        "provider": "Georgia Tech Online Master of Science in Computer Science",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Georgia Institute of Technology"
        ],
        "url": "http://www.omscs.gatech.edu/",
        "video_url": ""
    },
    {
        "date": "2015-12-30",
        "desc": "Covers both theoretical and practical issues in machine learning, which is is the area of artificial intelligence concerned with computational artifacts that modify and improve performance through experience. Presents algorithms and approaches in the context of in larger systems. Course will cover such topics as statistical supervised and unsupervised learning methods, randomized search algorithms, Bayesian learning methods, and reinforcement learning. Also covers theoretical concepts such as inductive bias, the PAC and Mistake-bound learning frameworks, minimum description length principle, and Ockham's Razor. Prerequisite: An introductory course in artificial intelligence is recommended but not required.",
        "desc_html": "Covers both theoretical and practical issues in machine learning, which is is\nthe area of artificial intelligence concerned with computational artifacts\nthat modify and improve performance through experience. Presents algorithms\nand approaches in the context of in larger systems. Course will cover such\ntopics as statistical supervised and unsupervised learning methods, randomized\nsearch algorithms, Bayesian learning methods, and reinforcement learning. Also\ncovers theoretical concepts such as inductive bias, the PAC and Mistake-bound\nlearning frameworks, minimum description length principle, and Ockham's Razor.\nPrerequisite: An introductory course in artificial intelligence is recommended\nbut not required.\n\n",
        "name": "CS 7641, Machine Learning",
        "provider": "Georgia Tech Online Master of Science in Computer Science",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Georgia Institute of Technology",
            "Brown University"
        ],
        "url": "http://www.omscs.gatech.edu/",
        "video_url": ""
    },
    {
        "date": "2015-12-30",
        "desc": "Specializations: Computational Perception & Robotics, Interactive Intelligence",
        "desc_html": "Specializations: Computational Perception & Robotics, Interactive Intelligence\n\n",
        "name": "CS 6601, Artificial Intelligence",
        "provider": "Georgia Tech Online Master of Science in Computer Science",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Georgia Institute of Technology"
        ],
        "url": "http://www.omscs.gatech.edu/",
        "video_url": ""
    },
    {
        "date": "2015-12-30",
        "desc": "Specializations: Computational Perception & Robotics, Computer Graphics",
        "desc_html": "Specializations: Computational Perception & Robotics, Computer Graphics\n\n",
        "name": "CS 4495, Computer Vision",
        "provider": "Georgia Tech Online Master of Science in Computer Science",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Georgia Institute of Technology"
        ],
        "url": "http://www.omscs.gatech.edu/",
        "video_url": ""
    },
    {
        "date": "2015-12-30",
        "desc": "Specializations: TBD",
        "desc_html": "Specializations: TBD\n\n",
        "name": "CS 8803, Special Topics: Introduction to Database Systems",
        "provider": "Georgia Tech Online Master of Science in Computer Science",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Georgia Institute of Technology"
        ],
        "url": "http://www.omscs.gatech.edu/",
        "video_url": ""
    },
    {
        "date": "2015-12-30",
        "desc": "Specialization: Computational Perception & Robotics",
        "desc_html": "Specialization: Computational Perception & Robotics\n\n",
        "name": "CS 6475, Advanced Computational Photography",
        "provider": "Georgia Tech Online Master of Science in Computer Science",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Georgia Institute of Technology"
        ],
        "url": "http://www.omscs.gatech.edu/",
        "video_url": ""
    },
    {
        "date": "2015-12-30",
        "desc": "Specializations: High-Performance Computing, Modeling & Simulations, Scientific Computing",
        "desc_html": "Specializations: High-Performance Computing, Modeling & Simulations,\nScientific Computing\n\n",
        "name": "CSE 6220, High-Performance Computing",
        "provider": "Georgia Tech Online Master of Science in Computer Science",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Georgia Institute of Technology"
        ],
        "url": "http://www.omscs.gatech.edu/",
        "video_url": ""
    },
    {
        "date": "2015-12-28",
        "desc": "This course covers methods for organizing your code, both conceptually and literally. You&rsquo;ll learn the importance of separating concerns when writing JavaScript, gaining hands-on experience along the way. Separating concerns can be done with or without an organizational library or framework. We&rsquo;ll learn how to separate concerns without one, and then we&rsquo;ll explore an organizational library together. You&rsquo;ll also learn strategies for exploring other libraries and frameworks on your own.By the end of this course, you&rsquo;ll understand (from experience) the importance of code organization, and how to implement it with either vanilla JavaScript or an organizational library or framework. Your applications will start looking clean and professional&mdash;not just to your users, but also to anyone who looks at the code driving your applications.Why Take This Course?Many developers dive right into projects without thinking of the organization or structure of the code they&rsquo;re writing. It's easy to hack projects together, but the best developers spend the extra time to think about the organization of their application and adhere to sound organizational practices.In order to write clean code that will get you your next job or promotion, you'll need to have a solid understanding of organizational techniques, and you'll need to implement those techniques in your projects. Software developers who write clean and organized code are surprisingly hard to find, so if you can master code organization you&rsquo;ll be a step above the rest.Prerequisites and RequirementsThis course is for intermediate web developers with some experience with JavaScript, and some prior experience with a JavaScript library, such as jQuery.Students should also be proficient in HTML and CSS, and should have experience creating static pages.See the&nbsp;Technology Requirements&nbsp;for using Udacity.&nbsp;SyllabusLesson 1: Changing ExpectationsWe'll first start by building a project the way you already know how: without an overarching organizational paradigm. Specifically, we'll discuss pain points and difficulties that are easy to run into when you don't use an organizational model. Then, we'll discuss a paradigm that will help us in the future, and we&rsquo;ll see some examples of that paradigm in action.Lesson 2: RefactoringWe'll spend some time discussing how our new paradigm applies to the project we worked on in Lesson 1. Then we'll rebuild the project with the new organizational paradigm.Lesson 3: Using an Organizational LibraryFinally, we'll explore how to use KnockoutJS, an organizational library, to organize our code and to reduce the amount of boilerplate code we write. Our resulting application will be well-organized, easy to understand, and extendable.ProjectsYou will develop a single-page application featuring a map of your neighborhood or a neighborhood you would like to visit.",
        "desc_html": "This course covers methods for organizing your code, both conceptually and\nliterally. You'll learn the importance of separating concerns when writing\nJavaScript, gaining hands-on experience along the way. Separating concerns can\nbe done with or without an organizational library or framework. We'll learn\nhow to separate concerns without one, and then we'll explore an organizational\nlibrary together. You'll also learn strategies for exploring other libraries\nand frameworks on your own.\n\nBy the end of this course, you'll understand (from experience) the importance\nof code organization, and how to implement it with either vanilla JavaScript\nor an organizational library or framework. Your applications will start\nlooking clean and professional--not just to your users, but also to anyone who\nlooks at the code driving your applications.\n\n**Why Take This Course?**\n\nMany developers dive right into projects without thinking of the organization\nor structure of the code they're writing. It's easy to hack projects together,\nbut the best developers spend the extra time to think about the organization\nof their application and adhere to sound organizational practices.\n\nIn order to write clean code that will get you your next job or promotion,\nyou'll need to have a solid understanding of organizational techniques, and\nyou'll need to implement those techniques in your projects. Software\ndevelopers who write clean and organized code are surprisingly hard to find,\nso if you can master code organization you'll be a step above the rest.\n\n**Prerequisites and Requirements**\n\nThis course is for intermediate web developers with some experience with\nJavaScript, and some prior experience with a JavaScript library, such as\njQuery.\n\nStudents should also be proficient in HTML and CSS, and should have experience\ncreating static pages.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity.\n\n\n\n## Syllabus\n\n**Lesson 1: Changing Expectations**\n\nWe'll first start by building a project the way you already know how: without\nan overarching organizational paradigm. Specifically, we'll discuss pain\npoints and difficulties that are easy to run into when you don't use an\norganizational model. Then, we'll discuss a paradigm that will help us in the\nfuture, and we'll see some examples of that paradigm in action.\n\n**Lesson 2: Refactoring**\n\nWe'll spend some time discussing how our new paradigm applies to the project\nwe worked on in Lesson 1. Then we'll rebuild the project with the new\norganizational paradigm.\n\n**Lesson 3: Using an Organizational Library**\n\nFinally, we'll explore how to use KnockoutJS, an organizational library, to\norganize our code and to reduce the amount of boilerplate code we write. Our\nresulting application will be well-organized, easy to understand, and\nextendable.\n\n**Projects**\n\nYou will develop a single-page application featuring a map of your\nneighborhood or a neighborhood you would like to visit.\n\n",
        "name": "JavaScript Design Patterns",
        "provider": "Udacity",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.udacity.com/course/ud989",
        "video_url": "https://www.youtube.com/embed/1MxVA8y8IBA?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-10-26",
        "desc": "In the cloud networking course, we will see what the network needs to do to enable cloud computing. We will explore current practice bytalking to leading industry experts, as well as looking intointeresting new researchthat might shape the cloud network\u2019s future.This course will allow us to explorein-depth the challenges for cloud networking\u2014how do we build a network infrastructure that provides the agility to deploy virtual networks on a shared infrastructure, that enables both efficient transfer of big data and low latency communication, and that enables applications to be federated across countries and continents? Examining how these objectives are met will set the stage for the rest of the course.This course places an emphasis on bothoperations and design rationale\u2014i.e., how things work and why they were designed this way. We're excited to start the course with you and take a look inside what has become thecritical communications infrastructurefor many applications today.SyllabusThis course will be covering the following topics:Physical data center network topology and fault-toleranceNetwork virtualizationSoftware defined networkingCongestion control and traffic engineering&nbsp;Inter-data center networks",
        "desc_html": "In the cloud networking course, we will see what the network needs to do to\nenable cloud computing. We will explore current practice by **talking to\nleading industry experts**, as well as looking into **interesting new\nresearch** that might shape the cloud network\u2019s future.\n\nThis course will allow us to explore **in-depth the challenges for cloud\nnetworking**\u2014how do we build a network infrastructure that provides the\nagility to deploy virtual networks on a shared infrastructure, that enables\nboth efficient transfer of big data and low latency communication, and that\nenables applications to be federated across countries and continents?\nExamining how these objectives are met will set the stage for the rest of the\ncourse.\n\nThis course places an emphasis on both **operations and design\nrationale**\u2014i.e., how things work and why they were designed this way. We're\nexcited to start the course with you and take a look inside what has become\nthe **critical communications infrastructure** for many applications today.\n\n## Syllabus\n\nThis course will be covering the following topics:\n\n  * Physical data center network topology and fault-tolerance\n  * Network virtualization\n  * Software defined networking\n  * Congestion control and traffic engineering \n  * Inter-data center networks\n\n",
        "name": "Cloud Networking",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of Illinois at Urbana-Champaign"
        ],
        "url": "https://www.coursera.org/course/cloudnetworking",
        "video_url": ""
    },
    {
        "date": "2015-10-26",
        "desc": "The Beauty and Joy of Computing (BJC) is a computer science principles course developed at the University of California, Berkeley, intended to broaden participation in computing to non-traditional groups. Computing has profoundly changed the world, opening up wonderful new ways for people to connect, design, research, play, create, and express themselves. However, just using a computer is only a small part of the picture. The real transformative and empowering experience comes when one learns how to program the computer, to translate ideas into code. This course teaches students how to do exactly that, using Snap! (based on Scratch), one of the friendliest programming languages ever invented. It's purely graphical, which means programming involves simply dragging blocks around, and building bigger blocks out of smaller blocks. But this course is far more than just learning to program. We focus on seven big ideas (creativity, abstraction, data and information, algorithms, programming, the Internet, and global impact), and six computational thinking practices (connecting computing, creating computational artifacts, abstracting, analyzing problems and artifacts, communicating, and collaborating). Throughout the course, relevance is emphasized: relevance to the student and to society. This fun, introductory course is not just for computer science majors, it\u2019s for everyone\u2026 join us!Learn more about our High School and AP Courses",
        "desc_html": "The Beauty and Joy of Computing (BJC) is a computer science principles course\ndeveloped at the University of California, Berkeley, intended to broaden\nparticipation in computing to non-traditional groups. Computing has profoundly\nchanged the world, opening up wonderful new ways for people to connect,\ndesign, research, play, create, and express themselves. However, just using a\ncomputer is only a small part of the picture. The real transformative and\nempowering experience comes when one learns how to program the computer, to\ntranslate ideas into code. This course teaches students how to do exactly\nthat, using Snap! (based on Scratch), one of the friendliest programming\nlanguages ever invented. It's purely graphical, which means programming\ninvolves simply dragging blocks around, and building bigger blocks out of\nsmaller blocks. But this course is far more than just learning to program. We\nfocus on seven big ideas (creativity, abstraction, data and information,\nalgorithms, programming, the Internet, and global impact), and six\ncomputational thinking practices (connecting computing, creating computational\nartifacts, abstracting, analyzing problems and artifacts, communicating, and\ncollaborating). Throughout the course, relevance is emphasized: relevance to\nthe student and to society. This fun, introductory course is not just for\ncomputer science majors, it\u2019s for everyone\u2026 join us!  \n  \nLearn more about our High School and AP Courses\n\n",
        "name": "BJC.2x: The Beauty and Joy of Computing (CS Principles), Part 2",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of California, Berkeley"
        ],
        "url": "https://www.edx.org/course/beauty-joy-computing-cs-principles-part-uc-berkeleyx-bjc-2x",
        "video_url": ""
    },
    {
        "date": "2015-10-26",
        "desc": "In this course you will be introduced to the origin and philosophies behind the qualitative approach to empirical science. You will learn about data collection, description, analysis and interpretation in qualitative research. The qualitative approach often involves an iterative process. We will focus on the basic ingredients required for this process: data collection and analysis. A good qualitative analysis consists of a general strategy of analysis, clear analytic 'actions' and documentation of all the steps taken. An important analytical action is coding parts of the material. This forms the basis for the categorisation and interpretation of the data. In this course you will learn to use statistical software to perform the qualitative analysis. We will also discuss and compare different types of analysis and interpretation. The most important concepts in qualitative analysis will be discussed in light of these different types.SyllabusThe qualitative approach to empirical science has its own origin story and is associated with a different philosophy of science than the quantitative approach. In this course you will learn about the qualitative way of thinking, but also about data collection, description, analysis and interpretation in qualitative research. You will gain hands on experience with interviewing and observation and practice analysis of this type of data using statistical software.Week 1:Introduction&nbsp;\u2022\tintroduction to qualitative methods&nbsp;\u2022\tphilosophy of science&nbsp;\u2022\tdifferences between qualitative versus quantitative approaches\u2022\tmixed-methods\u2022\twarm-up assignments (not graded)Week 2:Qualitative traditions&nbsp;\u2022\thistory of qualitative methods&nbsp;\u2022\tintroduction to ethnography\u2022\tresearch design in ethnography\u2022\tquiz and small assignment (graded)Week 3:Observation and field notes&nbsp;\u2022\taccess and role of the researcher\u2022\tfield notes\u2022\tsampling&nbsp;\u2022\tquiz and paper on week 1 &amp; 2 (graded)Week 4:Organization and analysis\u2022\trecording data\u2022\torganzing data&nbsp;\u2022\tanalysis of observational data\u2022\tquiz and small assignment (graded)Week 5:Interviewing\u2022\tdifference between structured and qualitative interview&nbsp;\u2022\tinterviewing versus observation\u2022\tasking questions\u2022\tquiz and paper on week 3 &amp; 4 (graded)Week 6:Data analysis\u2022\tcontent analysis\u2022\tanalytical induction\u2022\tgrounded theory\u2022\tquiz and small assignment (graded)Week 7:Study week\u2022\ttime to ask your final questions\u2022\ttime to work on last paperWeek 8:Exam week\u2022\tpaper on week 5 &amp; 6 (graded), final exam (graded) and course evaluation",
        "desc_html": "In this course you will be introduced to the origin and philosophies behind\nthe qualitative approach to empirical science. You will learn about data\ncollection, description, analysis and interpretation in qualitative research.\nThe qualitative approach often involves an iterative process. We will focus on\nthe basic ingredients required for this process: data collection and analysis.\nA good qualitative analysis consists of a general strategy of analysis, clear\nanalytic 'actions' and documentation of all the steps taken. An important\nanalytical action is coding parts of the material. This forms the basis for\nthe categorisation and interpretation of the data. In this course you will\nlearn to use statistical software to perform the qualitative analysis. We will\nalso discuss and compare different types of analysis and interpretation. The\nmost important concepts in qualitative analysis will be discussed in light of\nthese different types.  \n\n## Syllabus\n\nThe qualitative approach to empirical science has its own origin story and is\nassociated with a different philosophy of science than the quantitative\napproach. In this course you will learn about the qualitative way of thinking,\nbut also about data collection, description, analysis and interpretation in\nqualitative research. You will gain hands on experience with interviewing and\nobservation and practice analysis of this type of data using statistical\nsoftware.  \n  \nWeek 1: **Introduction **\n\n\u2022 introduction to qualitative methods\n\n\u2022 philosophy of science\n\n\u2022 differences between qualitative versus quantitative approaches\n\n\u2022 mixed-methods\n\n\u2022 warm-up assignments (not graded)\n\n  \n\nWeek 2: **Qualitative traditions **\n\n\u2022 history of qualitative methods\n\n\u2022 introduction to ethnography\n\n\u2022 research design in ethnography\n\n\u2022 quiz and small assignment (graded)\n\n  \n\nWeek 3: **Observation and field notes **\n\n\u2022 access and role of the researcher\n\n\u2022 field notes\n\n\u2022 sampling\n\n\u2022 quiz and paper on week 1 & 2 (graded)\n\n  \n\nWeek 4: **Organization and analysis**\n\n\u2022 recording data\n\n\u2022 organzing data\n\n\u2022 analysis of observational data\n\n\u2022 quiz and small assignment (graded)\n\n  \n\nWeek 5: **Interviewing**\n\n\u2022 difference between structured and qualitative interview\n\n\u2022 interviewing versus observation\n\n\u2022 asking questions\n\n\u2022 quiz and paper on week 3 & 4 (graded)\n\n  \n\nWeek 6: **Data analysis**\n\n\u2022 content analysis\n\n\u2022 analytical induction\n\n\u2022 grounded theory\n\n\u2022 quiz and small assignment (graded)\n\n  \n\nWeek 7: **Study week**\n\n\u2022 time to ask your final questions\n\n\u2022 time to work on last paper\n\n  \n\nWeek 8: **Exam week**\n\n\u2022 paper on week 5 & 6 (graded), final exam (graded) and course evaluation\n\n",
        "name": "Qualitative Research Methods",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of Amsterdam"
        ],
        "url": "https://www.coursera.org/course/qualitativemethods",
        "video_url": ""
    },
    {
        "date": "2015-10-01",
        "desc": "El presente curso est&aacute; dise&ntilde;ado para los participantes desde cualquier parte del mundo puedan conocer la importancia de los Sistemas de Informaci&oacute;n en las empresas, la toma de decisiones gerenciales, y como realizar de una forma m&aacute;s efectiva las operaciones gerenciales y empresariales.&nbsp;El curso sobre Inform&aacute;tica Gerencial pretende &nbsp;dar a conocer la importancia de los Sistemas de Informaci&oacute;n (SI) en las empresas, como se construyen y como apoyan la administraci&oacute;n y organizaci&oacute;n de la empresa.&nbsp;El mismo busca que los alumnos puedan comprender la aplicaci&oacute;n de los sistemas de informaci&oacute;n en la estrategia de la organizaci&oacute;n e Identificar los tipos de sistemas de informaci&oacute;n para la toma de decisiones y su incidencia en la sociedad.&nbsp;SyllabusM&oacute;dulo 0. Presentaci&oacute;n del cursoM&oacute;dulo 1. Los Sistemas de Informaci&oacute;n (SI)M&oacute;dulo 2. Aplicaciones de un Sistema de Informaci&oacute;n en la estrategia de la organizaci&oacute;nM&oacute;dulo 3. Los sistemas de Informaci&oacute;n para la Toma de decisiones en la EmpresaM&oacute;dulo 4. Desarrollo de un Proyecto de TIM&oacute;dulo 5. Los Sistemas de informaci&oacute;n y la SociedadM&oacute;dulo 6. Gerencia de las TIC en las empresas",
        "desc_html": "El presente curso esta dise\u00f1ado para los participantes desde cualquier parte\ndel mundo puedan conocer la importancia de los Sistemas de Informacion en las\nempresas, la toma de decisiones gerenciales, y como realizar de una forma mas\nefectiva las operaciones gerenciales y empresariales.\n\nEl curso sobre Informatica Gerencial pretende  dar a conocer la importancia de\nlos Sistemas de Informacion (SI) en las empresas, como se construyen y como\napoyan la administracion y organizacion de la empresa.\n\n\n\nEl mismo busca que los alumnos puedan comprender la aplicacion de los sistemas\nde informacion en la estrategia de la organizacion e Identificar los tipos de\nsistemas de informacion para la toma de decisiones y su incidencia en la\nsociedad.\n\n## Syllabus\n\nModulo 0. Presentacion del curso\n\nModulo 1. Los Sistemas de Informacion (SI)\n\nModulo 2. Aplicaciones de un Sistema de Informacion en la estrategia de la\norganizacion\n\nModulo 3. Los sistemas de Informacion para la Toma de decisiones en la Empresa\n\nModulo 4. Desarrollo de un Proyecto de TI\n\nModulo 5. Los Sistemas de informacion y la Sociedad\n\nModulo 6. Gerencia de las TIC en las empresas\n\n",
        "name": "Inform\u00e1tica Gerencial",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Universidad Abierta Para Adultos"
        ],
        "url": "https://www.miriadax.net/web/informatica-gerencial",
        "video_url": "https://www.youtube.com/embed/O1eveKXgWsg?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-09-30",
        "desc": "Level Up! covers the complete Advanced Placement* Computer Science A course in unique and engaging ways. It's a significant change of pace from other online introductory programming courses. While you will rigorously learn the art of programming in Java, you will spend much of your time designing and writing games and simulations.\u00a0 This course has no textbook because all the materials are online.\u00a0 You\u2019ll be reading; checking your understanding with self-tests; analyzing, modifying, and debugging code as well as writing it; and working with your fellow students to come to common understandings.\u00a0 You\u2019ll work with sounds and pictures (what do you sound like speaking backwards?), write adventure games and \u201csmart\u201d board games, and spend time trying to understand whole programs rather than just little pieces.We\u2019ve designed this course to help high-school students prepare for the Advanced Placement Computer Science test, and we\u2019ll cover everything you need to know. It has been successfully used in classrooms for several years, and now its available for anyone, in school or not, through EdX. If you are an adult or a student who isn\u2019t going to take the AP test, you are more than welcome to join!\u00a0 We go beyond the minimum required by the AP committee, introducing graphics, mouse commands, and other tools for real programmers.We based this course on the principles of \u201clab-centric\u201d instruction, in which lectures are replaced by hands-on activities.\u00a0 We won\u2019t include long, fact-filled videos, and the webpages in this course will be your \u201ctextbook\u201d.Learn more about our High School and AP* Exam Preparation Courses* Advanced Placement and AP are registered trademarks of the College Board, which was not involved in the production of, and does not endorse, these offerings.",
        "desc_html": "Level Up! covers the complete Advanced Placement* Computer Science A course in\nunique and engaging ways. It's a significant change of pace from other online\nintroductory programming courses. While you will rigorously learn the art of\nprogramming in Java, you will spend much of your time designing and writing\ngames and simulations.\u00a0 This course has no textbook because all the materials\nare online.\u00a0 You\u2019ll be reading; checking your understanding with self-tests;\nanalyzing, modifying, and debugging code as well as writing it; and working\nwith your fellow students to come to common understandings.\u00a0 You\u2019ll work with\nsounds and pictures (what do you sound like speaking backwards?), write\nadventure games and \u201csmart\u201d board games, and spend time trying to understand\nwhole programs rather than just little pieces.  \n  \nWe\u2019ve designed this course to help high-school students prepare for the\nAdvanced Placement Computer Science test, and we\u2019ll cover everything you need\nto know. It has been successfully used in classrooms for several years, and\nnow its available for anyone, in school or not, through EdX. If you are an\nadult or a student who isn\u2019t going to take the AP test, you are more than\nwelcome to join!\u00a0 We go beyond the minimum required by the AP committee,\nintroducing graphics, mouse commands, and other tools for real programmers.  \n  \nWe based this course on the principles of \u201clab-centric\u201d instruction, in which\nlectures are replaced by hands-on activities.\u00a0 We won\u2019t include long, fact-\nfilled videos, and the webpages in this course will be your \u201ctextbook\u201d.  \n  \nLearn more about our High School and AP* Exam Preparation Courses  \n  \n* Advanced Placement and AP are registered trademarks of the College Board, which was not involved in the production of, and does not endorse, these offerings. \n\n",
        "name": "LUCS.1x: Preparing for the AP* Computer Science A Exam \u2014 Level Up! Part 1",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of California, Berkeley"
        ],
        "url": "https://www.edx.org/course/preparing-ap-computer-science-exam-level-uc-berkeleyx-lucs-1x",
        "video_url": ""
    },
    {
        "date": "2015-09-30",
        "desc": "Level Up! covers the complete Advanced Placement* Computer Science A course in unique and engaging ways. It's a significant change of pace from other online introductory programming courses. While you will rigorously learn the art of programming in Java, you will spend much of your time designing and writing games and simulations.\u00a0 This course has no textbook because all the materials are online.\u00a0 You\u2019ll be reading; checking your understanding with self-tests; analyzing, modifying, and debugging code as well as writing it; and working with your fellow students to come to common understandings.\u00a0 You\u2019ll work with sounds and pictures (what do you sound like speaking backwards?), write adventure games and \u201csmart\u201d board games, and spend time trying to understand whole programs rather than just little pieces.We\u2019ve designed this course to help high-school students prepare for the Advanced Placement Computer Science test, and we\u2019ll cover everything you need to know. It has been successfully used in classrooms for several years, and now its available for anyone, in school or not, through EdX. If you are an adult or a student who isn\u2019t going to take the AP test, you are more than welcome to join!\u00a0 We go beyond the minimum required by the AP committee, introducing graphics, mouse commands, and other tools for real programmers.We based this course on the principles of \u201clab-centric\u201d instruction, in which lectures are replaced by hands-on activities.\u00a0 We won\u2019t include long, fact-filled videos, and the webpages in this course will be your \u201ctextbook\u201d.Learn more about our High School and AP* Exam Preparation Courses* Advanced Placement and AP are registered trademarks of the College Board, which was not involved in the production of, and does not endorse, these offerings.",
        "desc_html": "Level Up! covers the complete Advanced Placement* Computer Science A course in\nunique and engaging ways. It's a significant change of pace from other online\nintroductory programming courses. While you will rigorously learn the art of\nprogramming in Java, you will spend much of your time designing and writing\ngames and simulations.\u00a0 This course has no textbook because all the materials\nare online.\u00a0 You\u2019ll be reading; checking your understanding with self-tests;\nanalyzing, modifying, and debugging code as well as writing it; and working\nwith your fellow students to come to common understandings.\u00a0 You\u2019ll work with\nsounds and pictures (what do you sound like speaking backwards?), write\nadventure games and \u201csmart\u201d board games, and spend time trying to understand\nwhole programs rather than just little pieces.  \n  \nWe\u2019ve designed this course to help high-school students prepare for the\nAdvanced Placement Computer Science test, and we\u2019ll cover everything you need\nto know. It has been successfully used in classrooms for several years, and\nnow its available for anyone, in school or not, through EdX. If you are an\nadult or a student who isn\u2019t going to take the AP test, you are more than\nwelcome to join!\u00a0 We go beyond the minimum required by the AP committee,\nintroducing graphics, mouse commands, and other tools for real programmers.  \n  \nWe based this course on the principles of \u201clab-centric\u201d instruction, in which\nlectures are replaced by hands-on activities.\u00a0 We won\u2019t include long, fact-\nfilled videos, and the webpages in this course will be your \u201ctextbook\u201d.  \n  \nLearn more about our High School and AP* Exam Preparation Courses* Advanced\nPlacement and AP are registered trademarks of the College Board, which was not\ninvolved in the production of, and does not endorse, these offerings.\n\n",
        "name": "LUCS.2x: Preparing for the AP* Computer Science A Exam \u2014 Level Up! Part 2",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of California, Berkeley"
        ],
        "url": "https://www.edx.org/course/preparing-ap-computer-science-exam-level-uc-berkeleyx-lucs-2x",
        "video_url": ""
    },
    {
        "date": "2015-09-08",
        "desc": "The Beauty and Joy of Computing&nbsp;(BJC) is a computer science principles course developed at the University of California, Berkeley, intended to broaden participation in computing to non-traditional groups. Computing has profoundly changed the world, opening up wonderful new ways for people to connect, design, research, play, create, and express themselves. However, just&nbsp;using&nbsp;a computer is only a small part of the picture. The real transformative and empowering experience comes when one learns how toprogram&nbsp;the computer, to translate ideas into code. This course teaches students how to do exactly that, using Snap!&nbsp;(based on Scratch), one of the friendliest programming languages ever invented. It's purely graphical, which means programming involves simply dragging blocks around, and building bigger blocks out of smaller blocks. But this course is far more than just learning to program. We focus on seven big ideas (creativity, abstraction, data and information, algorithms, programming, the Internet, and global impact), and six computational thinking practices (connecting computing, creating computational artifacts, abstracting, analyzing problems and artifacts, communicating, and collaborating). Throughout the course, relevance is emphasized: relevance to the student and to society. This fun, introductory course is not just for computer science majors, it&rsquo;s for everyone&hellip; join us!",
        "desc_html": "The Beauty and Joy of Computing (BJC) is a computer science principles course\ndeveloped at the University of California, Berkeley, intended to broaden\nparticipation in computing to non-traditional groups. Computing has profoundly\nchanged the world, opening up wonderful new ways for people to connect,\ndesign, research, play, create, and express themselves. However, just _using_\na computer is only a small part of the picture. The real transformative and\nempowering experience comes when one learns how to_program_ the computer, to\ntranslate ideas into code. This course teaches students how to do exactly\nthat, using Snap_!_ (based on Scratch), one of the friendliest programming\nlanguages ever invented. It's purely graphical, which means programming\ninvolves simply dragging blocks around, and building bigger blocks out of\nsmaller blocks. But this course is far more than just learning to program. We\nfocus on seven big ideas (creativity, abstraction, data and information,\nalgorithms, programming, the Internet, and global impact), and six\ncomputational thinking practices (connecting computing, creating computational\nartifacts, abstracting, analyzing problems and artifacts, communicating, and\ncollaborating). Throughout the course, relevance is emphasized: relevance to\nthe student and to society. This fun, introductory course is not just for\ncomputer science majors, it's for everyone\u2026 join us!\n\n",
        "name": "BJC.1x: The Beauty and Joy of Computing, Part 1",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of California, Berkeley"
        ],
        "url": "https://www.edx.org/course/beauty-joy-computing-cs-principles-part-uc-berkeleyx-bjc-1x",
        "video_url": ""
    },
    {
        "date": "2015-08-24",
        "desc": "Learn of \"cloudonomics,\" the underlying economic reasons that we are creating the cloud. Learn thebasic concepts underlying cloud servicesand be able to use services like AWS or OpenStack Dashboard to construct cloud services or applications.Demonstrate your abilityto create web services, massively parallel data intensive computations using Map/Reduce, NoSQL databases, and real-time processing of real-time data streams. Use machine learning tools to solve simple problems.This course serves as an introduction to building applications for cloud computing based onemerging OpenStackand other platforms. The course includes concepts of:Baremetal provisioningNeutron networkingIdentity serviceImage serviceOrchestrationInfrastructure as a serviceSoftware as a servicePlatform as a serviceMapReduceBig dataAnalyticsPrivacy and legal issuesThe course will also include example problems and solutions to cloud computing, includinghands-on laboratory experiments(Load Balancing and Web Services, MapReduce, Hive, Storm, and Mahout).Case studieswill be drawn from Yahoo, Google, Twitter, Facebook, data mining, analytics, and machine learning.SyllabusThis course will be covering the following topics:schedulingresource allocationenergy efficiencysecurity and monitoringavailability and consistencydata center networkspricing modelapplicationsextensions of the cloud platform",
        "desc_html": "Learn of \"**cloudonomics**,\" the underlying economic reasons that we are\ncreating the cloud. Learn the **basic concepts underlying cloud services** and\nbe able to use services like AWS or OpenStack Dashboard to construct cloud\nservices or applications. **Demonstrate your ability** to create web services,\nmassively parallel data intensive computations using Map/Reduce, NoSQL\ndatabases, and real-time processing of real-time data streams. Use machine\nlearning tools to solve simple problems.\n\nThis course serves as an introduction to building applications for cloud\ncomputing based on **emerging OpenStack** and other platforms. The course\nincludes concepts of:\n\n  * Baremetal provisioning\n  * Neutron networking\n  * Identity service\n  * Image service\n  * Orchestration\n  * Infrastructure as a service\n  * Software as a service\n  * Platform as a service\n  * MapReduce\n  * Big data\n  * Analytics\n  * Privacy and legal issues\n\nThe course will also include example problems and solutions to cloud\ncomputing, including **hands-on laboratory experiments** (Load Balancing and\nWeb Services, MapReduce, Hive, Storm, and Mahout). **Case studies** will be\ndrawn from Yahoo, Google, Twitter, Facebook, data mining, analytics, and\nmachine learning.  \n\n## Syllabus\n\nThis course will be covering the following topics:\n\n  * scheduling\n  * resource allocation\n  * energy efficiency\n  * security and monitoring\n  * availability and consistency\n  * data center networks\n  * pricing model\n  * applications\n  * extensions of the cloud platform\n\n",
        "name": "Cloud Computing Applications",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of Illinois at Urbana-Champaign"
        ],
        "url": "https://www.coursera.org/course/cloudapplications",
        "video_url": ""
    },
    {
        "date": "2015-07-28",
        "desc": "\u672c\u8bfe\u7a0b\u5185\u5bb9\u7a0b\u6db5\u76d6\u679a\u4e3e\u3001\u4e8c\u5206\u3001\u8d2a\u5fc3\u3001\u9012\u5f52\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u52a8\u6001\u89c4\u5212\u7b49\u57fa\u672c\u7b97\u6cd5\uff0c\u914d\u4ee5\u9002\u91cf\u7684\u5728\u7ebf\u8bc4\u6d4b\u4f8b\u9898\uff0c\u4f7f\u5f97\u5b66\u5458\u901a\u8fc7\u672c\u8bfe\u7a0b\u7684\u5b66\u4e60\uff0c\u4e0d\u4f46\u80fd\u591f\u638c\u63e1\u8fd9\u4e9b\u7b97\u6cd5\u7684\u539f\u7406\uff0c\u8fd8\u80fd\u591f\u5bf9\u8fd9\u4e9b\u7b97\u6cd5\u8fdb\u884c\u7075\u6d3b\u5e94\u7528\u4ee5\u53ca\u51c6\u786e\u5b9e\u73b0\u3002\u672c\u8bfe\u7a0b\u7684\u4e2d\u7684\u7f16\u7a0b\u4efb\u52a1\uff0c\u5c06\u5145\u5206\u8bad\u7ec3\u5b66\u5458\u7684\u601d\u7ef4\u80fd\u529b\u548c\u52a8\u624b\u80fd\u529b\uff0c\u4fc3\u6210\u5bf9\u5b66\u5458\u5168\u9762\u3001\u7f1c\u5bc6\u601d\u8003\u95ee\u9898\u7684\u4e60\u60ef\u3002\u8fbe\u5230\u672c\u95e8\u8bfe\u7a0b\u7684\u8981\u6c42\uff0c\u5373\u610f\u5473\u8005\u5b66\u5458\u5177\u5907\u4e86\u521d\u6b65\u7684\u7b97\u6cd5\u57fa\u7840\u548c\u8f83\u5f3a\u7684\u7f16\u7a0b\u5b9e\u73b0\u80fd\u529b\u3002Syllabus\u7b2c1\u5468 \u679a\u4e3e\u7b97\u6cd5\u7b2c2\u5468 \u9012\u5f52\u7b97\u6cd5\u7b2c3\u5468 \u52a8\u6001\u89c4\u5212\u7b97\u6cd5 (1)\u7b2c4\u5468 \u52a8\u6001\u89c4\u5212\u7b97\u6cd5 (2)\u7b2c5\u5468 \u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u7b97\u6cd5 (1)\u7b2c6\u5468 \u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u7b97\u6cd5 (2)\u7b2c7\u5468 \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u7b97\u6cd5\u7b2c8\u5468 \u4e8c\u5206\u4e0e\u8d2a\u5fc3\u7b97\u6cd5",
        "desc_html": "\u672c\u8bfe\u7a0b\u5185\u5bb9\u7a0b\u6db5\u76d6\u679a\u4e3e\u3001\u4e8c\u5206\u3001\u8d2a\u5fc3\u3001\u9012\u5f52\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u52a8\u6001\u89c4\u5212\u7b49\u57fa\u672c\u7b97\u6cd5\uff0c\u914d\u4ee5\u9002\u91cf\u7684\u5728\u7ebf\u8bc4\u6d4b\u4f8b\u9898\uff0c\u4f7f\u5f97\u5b66\u5458\u901a\u8fc7\u672c\u8bfe\u7a0b\u7684\u5b66\u4e60\uff0c\u4e0d\u4f46\u80fd\u591f\u638c\u63e1\u8fd9\u4e9b\u7b97\n\u6cd5\u7684\u539f\u7406\uff0c\u8fd8\u80fd\u591f\u5bf9\u8fd9\u4e9b\u7b97\u6cd5\u8fdb\u884c\u7075\u6d3b\u5e94\u7528\u4ee5\u53ca\u51c6\u786e\u5b9e\u73b0\u3002\u672c\u8bfe\u7a0b\u7684\u4e2d\u7684\u7f16\u7a0b\u4efb\u52a1\uff0c\u5c06\u5145\u5206\u8bad\u7ec3\u5b66\u5458\u7684\u601d\u7ef4\u80fd\u529b\u548c\u52a8\u624b\u80fd\u529b\uff0c\u4fc3\u6210\u5bf9\u5b66\u5458\u5168\u9762\u3001\u7f1c\u5bc6\u601d\u8003\u95ee\u9898\u7684\u4e60\u60ef\u3002\u8fbe\u5230\u672c\u95e8\u8bfe\n\u7a0b\u7684\u8981\u6c42\uff0c\u5373\u610f\u5473\u8005\u5b66\u5458\u5177\u5907\u4e86\u521d\u6b65\u7684\u7b97\u6cd5\u57fa\u7840\u548c\u8f83\u5f3a\u7684\u7f16\u7a0b\u5b9e\u73b0\u80fd\u529b\u3002\n\n## Syllabus\n\n\u7b2c1\u5468 \u679a\u4e3e\u7b97\u6cd5\n\n\u7b2c2\u5468 \u9012\u5f52\u7b97\u6cd5\n\n\u7b2c3\u5468 \u52a8\u6001\u89c4\u5212\u7b97\u6cd5 (1)\n\n\u7b2c4\u5468 \u52a8\u6001\u89c4\u5212\u7b97\u6cd5 (2)\n\n\u7b2c5\u5468 \u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u7b97\u6cd5 (1)\n\n\u7b2c6\u5468 \u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u7b97\u6cd5 (2)\n\n\u7b2c7\u5468 \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u7b97\u6cd5\n\n\u7b2c8\u5468 \u4e8c\u5206\u4e0e\u8d2a\u5fc3\u7b97\u6cd5\n\n",
        "name": "\u7b97\u6cd5\u57fa\u7840",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Peking University"
        ],
        "url": "https://www.coursera.org/course/spalgo",
        "video_url": ""
    },
    {
        "date": "2015-07-28",
        "desc": "\u4ecb\u7ecd\u89c6\u9891\u82e5\u65e0\u6cd5\u6b63\u5e38\u64ad\u653e\uff0c\u8bf7\u770b\u8fd9\u91cc\u3002\u8fd9\u95e8\u8bfe\u7a0b\u5c06\u5e2e\u52a9\u5b66\u751f\u5b66\u4e60\u5982\u4f55\u8fd0\u7528\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u548c\u76f8\u5173\u7b97\u6cd5\u89e3\u51b3\u590d\u6742\u7684\u5b9e\u9645\u95ee\u9898\u3002 \u6211\u4eec\u5c06\u6df1\u5165\u5b66\u4e60\u6392\u5e8f\u3001\u68c0\u7d22\u3001\u7d22\u5f15\u3001\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4ee5\u53ca\u6570\u636e\u7ed3\u6784\u5e94\u7528\u7b49\u5185\u5bb9\u3002\u6d89\u53ca\u5feb\u901f\u6392\u5e8f\u3001\u5916\u6392\u5e8f\u7b49\u5404\u79cd\u7ecf\u5178\u6392\u5e8f\u7b97\u6cd5\uff0c\u96c6\u5408\u3001\u6563\u5217\u3001\u4f4d\u56fe\u7b49\u68c0\u7d22\u65b9\u6cd5\uff0cB/B+\u6811\u3001Trie\u6811\u7b49\u7d22\u5f15\u7ed3\u6784\uff0c\u5e7f\u4e49\u8868\u3001\u591a\u7ef4\u6570\u7ec4\u7b49\u9ad8\u7ea7\u7ebf\u6027\u7ed3\u6784\uff0cAVL\u3001\u7ea2\u9ed1\u6811\u3001\u4f38\u5c55\u6811\u7b49\u5e73\u8861\u4e8c\u53c9\u6811\u3002 \u901a\u8fc7\u8bfe\u7a0b\u5b66\u4e60\uff0c\u5927\u5bb6\u7684\u62bd\u8c61\u601d\u7ef4\u80fd\u529b\u3001\u95ee\u9898\u6c42\u89e3\u80fd\u529b\u5c06\u5f97\u5230\u8f83\u5927\u63d0\u5347\uff0c\u7f16\u7a0b\u80fd\u529b\u548c\u4ee3\u7801\u8d28\u91cf\u4f1a\u6709\u8d28\u7684\u98de\u8dc3\uff01This course will help students learn to use advanced data and algorithms to solve complex real-world problems. We will learn Sorting, Searching, Indexing, as well as their applications thoroughly. More detailed, these chapters include a variety of classic Sorting algorithms (Quicksort, External Sorting), Searching methods (Sets, Hash Tables, Bitmaps), Indexing structures (B/B+ trees, Trie trees), Advanced List-Structure (generalized lists, Multi-dimensional arrays) and Balanced Binary Trees (AVL, Red-Black trees, Splay trees). After studying this course, students will be well prepared for further study and research in engineering and other computer-related areas.Syllabus&nbsp;\u7b2c\u4e00\u5468&nbsp;\u5185\u6392\u5e8f\uff08\u4e0a\uff09Lecture 1 Internal Sorting I\u2022&nbsp;&nbsp;&nbsp;\n\u6392\u5e8f\u95ee\u9898\u7684\u57fa\u672c\u6982\u5ff5&nbsp;The Basic Concept of Sorting\u2022&nbsp;&nbsp;&nbsp;\n\u63d2\u5165\u6392\u5e8f ( Shell \u6392\u5e8f)&nbsp;Insertion Sort (Shell Sort)\u2022&nbsp;&nbsp;&nbsp;\n\u9009\u62e9\u6392\u5e8f (\u5806\u6392\u5e8f)&nbsp;Selection Sort (Heap Sort)\u2022&nbsp;&nbsp;&nbsp;\n\u4ea4\u6362\u6392\u5e8f\uff08\u5192\u6ce1\u6392\u5e8f\u3001\u5feb\u901f\u6392\u5e8f\uff09Exchange Sort (Bubble Sort, Quick Sort)\u7b2c\u4e8c\u5468&nbsp;\u5185\u6392\u5e8f\uff08\u4e0b\uff09Lecture 2 Internal Sorting II\u2022&nbsp;&nbsp;&nbsp;\n\u5f52\u5e76\u6392\u5e8f&nbsp;Merge Sort\u2022&nbsp;&nbsp;&nbsp;\n\u6876\u6392\u5e8f&nbsp;&nbsp;Bin Sort\u2022&nbsp;&nbsp;&nbsp;\n\u9759\u6001\u57fa\u6570\u6392\u5e8f&nbsp;&nbsp;Static Radix Sort\u2022&nbsp;&nbsp;&nbsp;\n\u94fe\u5f0f\u57fa\u6570\u6392\u5e8f&nbsp;&nbsp;Linked Radix Sort\u2022&nbsp;&nbsp;&nbsp;\n\u7d22\u5f15\u6392\u5e8f&nbsp;&nbsp;Indexing Sort\u2022&nbsp;&nbsp;&nbsp;\n\u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u4ee3\u4ef7&nbsp;&nbsp;The Complexity of Sorting\u7b2c\u4e09\u5468&nbsp;\u6587\u4ef6\u4e0e\u5916\u6392\u5e8f&nbsp;Lecture 3 File and External Sort\u2022&nbsp;&nbsp;&nbsp;\n\u4e3b\u5b58\u3001\u5916\u5b58\u3001\u6587\u4ef6\u7684\u7ec4\u7ec7&nbsp;Main Memory, External Memory and File\u2019s Architecture\u2022&nbsp;&nbsp;&nbsp;\n\u5916\u6392\u5e8f&nbsp;External Sort\u7b2c\u56db\u5468&nbsp;\u68c0\u7d22&nbsp;Lecture 4 Searching\u2022&nbsp;&nbsp;&nbsp;\n\u68c0\u7d22\u7684\u6982\u5ff5&nbsp;The Concept of Searching\u2022&nbsp;&nbsp;&nbsp;\n\u57fa\u4e8e\u7ebf\u6027\u8868\u7684\u68c0\u7d22&nbsp;&nbsp;Linear Searching\u2022&nbsp;&nbsp;&nbsp;\n\u96c6\u5408\u7684\u68c0\u7d22&nbsp;&nbsp;Set-based Searching\u2022&nbsp;&nbsp;&nbsp;\n\u6563\u5217\u8868\u7684\u6982\u5ff5\u548c\u6563\u5217\u51fd\u6570&nbsp;The Concept of Hash Table, Hash Function\u2022&nbsp;&nbsp;&nbsp;\n\u6563\u5217\u51b2\u7a81\u5904\u7406 &nbsp;Solving Hash Collision\u2022&nbsp;&nbsp;&nbsp;\n\u6563\u5217\u7684\u5b9e\u73b0\u53ca\u6027\u80fd\u5206\u6790&nbsp;The Implementation of Hash Table and Its Complexity Analysis\u7b2c\u4e94\u5468&nbsp;\u7d22\u5f15&nbsp;Lecture 5 Indexing\u2022&nbsp;&nbsp;&nbsp;\n\u9759\u6001\u7d22\u5f15&nbsp;Static Indexing\u2022&nbsp;&nbsp;&nbsp;\n\u5012\u6392\u7d22\u5f15&nbsp;&nbsp;Inverted Indexing\u2022&nbsp;&nbsp;&nbsp;\nB\u6811&nbsp;&nbsp;B-Trees\u2022&nbsp;&nbsp;&nbsp;\nB+\u6811&nbsp;&nbsp;B+-Trees\u2022&nbsp;&nbsp;&nbsp;\n\u4f4d\u7d22\u5f15\u6280\u672f&nbsp;&nbsp;Bitmap Indexing\u2022&nbsp;&nbsp;&nbsp;\n\u7ea2\u9ed1\u6811&nbsp;&nbsp;Red-Black Tree\u7b2c\u516d\u5468&nbsp;\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\uff08\u4e0a\u2014\u2014\u7ebf\u6027\u7ed3\u6784\uff09Lecture 6 Advanced Data Structures I , List-Structure\u2022&nbsp;&nbsp;&nbsp;\n\u591a\u7ef4\u6570\u7ec4&nbsp;&nbsp;Multilists\u2022&nbsp;&nbsp;&nbsp;\n\u5e7f\u4e49\u8868&nbsp;Generalized Tables\u2022&nbsp;&nbsp;&nbsp;\n\u5b58\u50a8\u7ba1\u7406&nbsp;Memory Management\u7b2c\u4e03\u5468&nbsp;\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\uff08\u4e0b\u2014\u2014\u6811\u5f62\u7ed3\u6784\uff09Lecture 7 Advanced Data Structures II , Tree-Structure\u2022&nbsp;&nbsp;&nbsp;\nTrie \u6811 &nbsp;Trie Trees\u2022&nbsp;&nbsp;&nbsp;\nAVL\u6811\u6982\u5ff5\u53ca\u63d2\u5165\u7b97\u6cd5&nbsp;The AVL Tree and Its Inserting Algorithm\u2022&nbsp;&nbsp;&nbsp;\nAVL\u6811\u5220\u9664\u53ca\u6027\u80fd\u5206\u6790&nbsp;The Deletion of AVL Trees, Complexity Analysis\u2022&nbsp;&nbsp;&nbsp;\nSplay\u6811&nbsp;Splay Tree\u7b2c\u516b\u5468&nbsp;\u6570\u636e\u7ed3\u6784\u5e94\u7528\uff08\u4e0d\u8003\u6838\uff09Lecture 8 The application of Data Structures (Optional)",
        "desc_html": "\u4ecb\u7ecd\u89c6\u9891\u82e5\u65e0\u6cd5\u6b63\u5e38\u64ad\u653e\uff0c\u8bf7\u770b[\u8fd9\u91cc](http://video.study.163.com/edu-\nvideo/nos/mp4/2013/11/20/303416_hd.mp4)\u3002  \n  \n\u8fd9\u95e8\u8bfe\u7a0b\u5c06\u5e2e\u52a9\u5b66\u751f\u5b66\u4e60\u5982\u4f55\u8fd0\u7528\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u548c\u76f8\u5173\u7b97\u6cd5\u89e3\u51b3\u590d\u6742\u7684\u5b9e\u9645\u95ee\u9898\u3002 \u6211\u4eec\u5c06\u6df1\u5165\u5b66\u4e60\u6392\u5e8f\u3001\u68c0\u7d22\u3001\u7d22\u5f15\u3001\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4ee5\u53ca\u6570\u636e\u7ed3\u6784\u5e94\u7528\u7b49\u5185\u5bb9\u3002\u6d89\u53ca\u5feb\u901f\u6392\u5e8f\u3001\n\u5916\u6392\u5e8f\u7b49\u5404\u79cd\u7ecf\u5178\u6392\u5e8f\u7b97\u6cd5\uff0c\u96c6\u5408\u3001\u6563\u5217\u3001\u4f4d\u56fe\u7b49\u68c0\u7d22\u65b9\u6cd5\uff0cB/B+\u6811\u3001Trie\u6811\u7b49\u7d22\u5f15\u7ed3\u6784\uff0c\u5e7f\u4e49\u8868\u3001\u591a\u7ef4\u6570\u7ec4\u7b49\u9ad8\u7ea7\u7ebf\u6027\u7ed3\u6784\uff0cAVL\u3001\u7ea2\u9ed1\u6811\u3001\u4f38\u5c55\u6811\u7b49\u5e73\u8861\u4e8c\u53c9\u6811\u3002\n\u901a\u8fc7\u8bfe\u7a0b\u5b66\u4e60\uff0c\u5927\u5bb6\u7684\u62bd\u8c61\u601d\u7ef4\u80fd\u529b\u3001\u95ee\u9898\u6c42\u89e3\u80fd\u529b\u5c06\u5f97\u5230\u8f83\u5927\u63d0\u5347\uff0c\u7f16\u7a0b\u80fd\u529b\u548c\u4ee3\u7801\u8d28\u91cf\u4f1a\u6709\u8d28\u7684\u98de\u8dc3\uff01  \n  \nThis course will help students learn to use advanced data and algorithms to\nsolve complex real-world problems. We will learn Sorting, Searching, Indexing,\nas well as their applications thoroughly. More detailed, these chapters\ninclude a variety of classic Sorting algorithms (Quicksort, External Sorting),\nSearching methods (Sets, Hash Tables, Bitmaps), Indexing structures (B/B+\ntrees, Trie trees), Advanced List-Structure (generalized lists, Multi-\ndimensional arrays) and Balanced Binary Trees (AVL, Red-Black trees, Splay\ntrees). After studying this course, students will be well prepared for further\nstudy and research in engineering and other computer-related areas.  \n\n## Syllabus\n\n\n\n**\u7b2c\u4e00\u5468**** ****\u5185\u6392\u5e8f\uff08\u4e0a\uff09****Lecture 1 Internal Sorting I****  \n**\u2022    \u6392\u5e8f\u95ee\u9898\u7684\u57fa\u672c\u6982\u5ff5 The Basic Concept of Sorting  \n\u2022    \u63d2\u5165\u6392\u5e8f ( Shell \u6392\u5e8f) Insertion Sort (Shell Sort)  \n\u2022    \u9009\u62e9\u6392\u5e8f (\u5806\u6392\u5e8f) Selection Sort (Heap Sort)  \n\u2022    \u4ea4\u6362\u6392\u5e8f\uff08\u5192\u6ce1\u6392\u5e8f\u3001\u5feb\u901f\u6392\u5e8f\uff09Exchange Sort (Bubble Sort, Quick Sort)\n\n**\u7b2c\u4e8c****\u5468**** ****\u5185\u6392\u5e8f\uff08\u4e0b\uff09****Lecture 2 Internal Sorting II  \n**\u2022    \u5f52\u5e76\u6392\u5e8f Merge Sort  \n\u2022    \u6876\u6392\u5e8f  Bin Sort  \n\u2022    \u9759\u6001\u57fa\u6570\u6392\u5e8f  Static Radix Sort  \n\u2022    \u94fe\u5f0f\u57fa\u6570\u6392\u5e8f  Linked Radix Sort  \n\u2022    \u7d22\u5f15\u6392\u5e8f  Indexing Sort  \n\u2022    \u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u4ee3\u4ef7  The Complexity of Sorting\n\n**\u7b2c\u4e09****\u5468**** ****\u6587\u4ef6\u4e0e\u5916\u6392\u5e8f ****Lecture 3 File and External Sort  \n**\u2022    \u4e3b\u5b58\u3001\u5916\u5b58\u3001\u6587\u4ef6\u7684\u7ec4\u7ec7 Main Memory, External Memory and File\u2019s Architecture  \n\u2022    \u5916\u6392\u5e8f External Sort\n\n**\u7b2c\u56db****\u5468**** ****\u68c0\u7d22 ****Lecture 4 Searching  \n**\u2022    \u68c0\u7d22\u7684\u6982\u5ff5 The Concept of Searching  \n\u2022    \u57fa\u4e8e\u7ebf\u6027\u8868\u7684\u68c0\u7d22  Linear Searching  \n\u2022    \u96c6\u5408\u7684\u68c0\u7d22  Set-based Searching  \n\u2022    \u6563\u5217\u8868\u7684\u6982\u5ff5\u548c\u6563\u5217\u51fd\u6570 The Concept of Hash Table, Hash Function  \n\u2022    \u6563\u5217\u51b2\u7a81\u5904\u7406  Solving Hash Collision  \n\u2022    \u6563\u5217\u7684\u5b9e\u73b0\u53ca\u6027\u80fd\u5206\u6790 The Implementation of Hash Table and Its Complexity Analysis\n\n**\u7b2c\u4e94****\u5468**** ****\u7d22\u5f15**** Lecture 5 Indexing  \n**\u2022    \u9759\u6001\u7d22\u5f15 Static Indexing  \n\u2022    \u5012\u6392\u7d22\u5f15  Inverted Indexing  \n\u2022    B\u6811  B-Trees  \n\u2022    B+\u6811  B+-Trees  \n\u2022    \u4f4d\u7d22\u5f15\u6280\u672f  Bitmap Indexing  \n\u2022    \u7ea2\u9ed1\u6811  Red-Black Tree\n\n**\u7b2c\u516d****\u5468**** ****\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\uff08\u4e0a****\u2014\u2014****\u7ebf\u6027\u7ed3\u6784\uff09****Lecture 6 Advanced Data Structures I , List-Structure  \n**\u2022    \u591a\u7ef4\u6570\u7ec4  Multilists  \n\u2022    \u5e7f\u4e49\u8868 Generalized Tables  \n\u2022    \u5b58\u50a8\u7ba1\u7406 Memory Management\n\n**\u7b2c\u4e03****\u5468**** ****\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\uff08\u4e0b****\u2014\u2014****\u6811\u5f62\u7ed3\u6784\uff09****Lecture 7 Advanced Data Structures II , Tree-Structure  \n**\u2022    Trie \u6811  Trie Trees  \n\u2022    AVL\u6811\u6982\u5ff5\u53ca\u63d2\u5165\u7b97\u6cd5 The AVL Tree and Its Inserting Algorithm  \n\u2022    AVL\u6811\u5220\u9664\u53ca\u6027\u80fd\u5206\u6790 The Deletion of AVL Trees, Complexity Analysis  \n\u2022    Splay\u6811 Splay Tree\n\n**\u7b2c\u516b\u5468 ****\u6570\u636e\u7ed3\u6784\u5e94\u7528\uff08\u4e0d\u8003\u6838\uff09****Lecture 8 The application of Data Structures (Optional)**\n\n  \n\n",
        "name": "\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5 Advanced Data  Structures and Algorithms",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Peking University"
        ],
        "url": "https://www.coursera.org/course/spdsalgo2",
        "video_url": ""
    },
    {
        "date": "2015-07-28",
        "desc": "\u672c\u8bfe\u7a0b\u9762\u5411\u5df2\u7ecf\u638c\u63e1C\u8bed\u8a00\u7684\u5b66\u5458\u3002\u901a\u8fc7\u672c\u8bfe\u7a0b\u7684\u5b66\u4e60\uff0c\u5b66\u5458\u5c06\u638c\u63e1C++\u8bed\u8a00\u4e2d\u7c7b\u3001\u5bf9\u8c61\u3001\u8fd0\u7b97\u7b26\u91cd\u8f7d\u3001\u7ee7\u627f\u3001\u591a\u6001\u7b49\u9762\u5411\u5bf9\u8c61\u7684\u673a\u5236\uff0c\u4ee5\u53ca\u6a21\u7248\u3001STL\u7b49\u6cdb\u578b\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u673a\u5236\uff0c\u9886\u609f\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u65b9\u6cd5\u548c\u6cdb\u578b\u7a0b\u5e8f\u8bbe\u8ba1\u65b9\u6cd5\u7684\u4f18\u52bf\uff0c\u5177\u5907\u7f16\u5199\u8f83\u5927\u89c4\u6a21\u7684\u3001\u53ef\u91cd\u7528\u6027\u548c\u53ef\u6269\u5145\u6027\u4ff1\u4f73\u7684\u9762\u76f8\u5bf9\u8c61\u7684\u7a0b\u5e8f\u4e4b\u80fd\u529b\u3002Syllabus\u7b2c1\u5468 \u8d70\u8fdbC++\u7b2c2\u5468 \u7c7b\u548c\u5bf9\u8c61\u7b2c3\u5468 \u8fd0\u7b97\u7b26\u91cd\u8f7d\u7b2c4\u5468 \u7ee7\u627f\u4e0e\u6d3e\u751f\u7b2c5\u5468 \u591a\u6001\u4e0e\u865a\u51fd\u6570\u7b2c6\u5468 \u6587\u4ef6\u64cd\u4f5c\u548c\u6a21\u677f\u7b2c7\u5468 \u6807\u51c6\u6a21\u677f\u5e93STL (1)\u7b2c8\u5468 \u6807\u51c6\u6a21\u677f\u5e93STL (2)Additional Material: C++11",
        "desc_html": "\u672c\u8bfe\u7a0b\u9762\u5411\u5df2\u7ecf\u638c\u63e1C\u8bed\u8a00\u7684\u5b66\u5458\u3002\u901a\u8fc7\u672c\u8bfe\u7a0b\u7684\u5b66\u4e60\uff0c\u5b66\u5458\u5c06\u638c\u63e1C++\u8bed\u8a00\u4e2d\u7c7b\u3001\u5bf9\u8c61\u3001\u8fd0\u7b97\u7b26\u91cd\u8f7d\u3001\u7ee7\u627f\u3001\u591a\u6001\u7b49\u9762\u5411\u5bf9\u8c61\u7684\u673a\u5236\uff0c\u4ee5\u53ca\u6a21\u7248\u3001STL\u7b49\u6cdb\u578b\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u673a\n\u5236\uff0c\u9886\u609f\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u65b9\u6cd5\u548c\u6cdb\u578b\u7a0b\u5e8f\u8bbe\u8ba1\u65b9\u6cd5\u7684\u4f18\u52bf\uff0c\u5177\u5907\u7f16\u5199\u8f83\u5927\u89c4\u6a21\u7684\u3001\u53ef\u91cd\u7528\u6027\u548c\u53ef\u6269\u5145\u6027\u4ff1\u4f73\u7684\u9762\u76f8\u5bf9\u8c61\u7684\u7a0b\u5e8f\u4e4b\u80fd\u529b\u3002\n\n## Syllabus\n\n\u7b2c1\u5468 \u8d70\u8fdbC++\n\n\u7b2c2\u5468 \u7c7b\u548c\u5bf9\u8c61\n\n\u7b2c3\u5468 \u8fd0\u7b97\u7b26\u91cd\u8f7d\n\n\u7b2c4\u5468 \u7ee7\u627f\u4e0e\u6d3e\u751f\n\n\u7b2c5\u5468 \u591a\u6001\u4e0e\u865a\u51fd\u6570\n\n\u7b2c6\u5468 \u6587\u4ef6\u64cd\u4f5c\u548c\u6a21\u677f\n\n\u7b2c7\u5468 \u6807\u51c6\u6a21\u677f\u5e93STL (1)\n\n\u7b2c8\u5468 \u6807\u51c6\u6a21\u677f\u5e93STL (2)\n\nAdditional Material: C++11\n\n",
        "name": "C++\u7a0b\u5e8f\u8bbe\u8ba1",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Peking University"
        ],
        "url": "https://www.coursera.org/course/spcpp",
        "video_url": ""
    },
    {
        "date": "2015-07-28",
        "desc": "&nbsp; \u672c\u8bfe\u7a0b\u7684\u5185\u5bb9\u4e3b\u8981\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff1a\uff081\uff09\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6\uff0c\u7ea6\u5360\u8bfe\u65f6\u91cf\u768440%\uff1b\uff082\uff09\u8ba1\u7b97\u673a\u7a0b\u5e8f\u5bfc\u8bba\uff0c\u7ea6\u5360\u8bfe\u65f6\u91cf\u768460%\uff1b&nbsp;&nbsp;&nbsp; \u5728\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u4e3a\u5927\u5bb6\u89e3\u7b54\u4e00\u4e9b\u4e0e\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u76f8\u5173\u7684\u57fa\u7840\u95ee\u9898\uff0c\u4f8b\u5982\uff0c\u201c\u8ba1\u7b97\u673a\u4e3a\u4ec0\u4e48\u80fd\u591f\u8fdb\u884c\u8ba1\u7b97\uff1f\u201d\uff0c\u201c\u8ba1\u7b97\u673a\u7a0b\u5e8f\u5728\u8ba1\u7b97\u673a\u4e2d\u662f\u5982\u4f55\u8fd0\u884c\u7684\uff1f\u201d\uff0c\u201c\u8ba1\u7b97\u673a\u7684\u53d1\u5c55\u89c4\u5f8b\u662f\u4ec0\u4e48\uff1f\u201d\uff0c\u201c\u4e0b\u4e00\u4ee3\u7684\u8ba1\u7b97\u673a\u5c06\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\uff1f\u201d\u7b49\u7b49\u3002\u6211\u4eec\u5e0c\u671b\u901a\u8fc7\u5bf9\u8fd9\u4e9b\u95ee\u9898\u7684\u89e3\u7b54\uff0c\u8fbe\u5230\u4e24\u4e2a\u76ee\u7684\uff1a\u5176\u4e00\uff0c\u57f9\u517b\u8d77\u5927\u5bb6\u5bf9\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u5174\u8da3\uff1b\u5176\u4e8c\uff0c\u5e2e\u52a9\u5927\u5bb6\u5efa\u7acb\u8d77\u5b66\u4e60\u8ba1\u7b97\u673a\u79d1\u5b66\u6240\u9700\u8981\u7684\u201c\u80cc\u666f\u77e5\u8bc6\u6846\u67b6\u201d\u3002&nbsp;&nbsp;&nbsp; \u5728\u8ba1\u7b97\u673a\u7a0b\u5e8f\u5bfc\u8bba\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u9010\u6b65\u5f15\u9886\u5927\u5bb6\u6b65\u5165\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u9886\u57df\u3002\u6211\u4eec\u4ee5C\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u4e3a\u8f7d\u4f53\uff0c\u4ece\u611f\u6027\u8ba4\u8bc6\u8ba1\u7b97\u673a\u7a0b\u5e8f\u5f00\u59cb\uff0c\u5e26\u9886\u5927\u5bb6\u8ba4\u8bc6\u8ba1\u7b97\u673a\u7a0b\u5e8f\uff0c\u611f\u53d7\u8ba1\u7b97\u673a\u7a0b\u5e8f\u7684\u5f00\u53d1\u8fc7\u7a0b\uff0c\u7406\u89e3\u7f16\u7a0b\u8bed\u8a00\u7684\u6784\u6210\u6210\u5206\uff0c\u4f53\u4f1a\u5229\u7528\u8ba1\u7b97\u673a\u7a0b\u5e8f\u89e3\u51b3\u73b0\u5b9e\u95ee\u9898\u7684\u8fc7\u7a0b\u3002Syllabus\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6\u8ba1\u7b97\u673a\u7684\u5386\u53f2\u4e0e\u672a\u6765 ---------------- \u7b2c 1 \u5468\u8ba1\u7b97\u673a\u7684\u57fa\u672c\u539f\u7406 -------------------&nbsp;\u7b2c 2 \u5468\u7a0b\u5e8f\u8fd0\u884c\u7684\u57fa\u672c\u539f\u7406 ---------------- \u7b2c 3 \u5468\u8ba1\u7b97\u673a\u7a0b\u5e8f\u5bfc\u8bba\u611f\u6027\u8ba4\u8bc6\u8ba1\u7b97\u673a\u7a0b\u5e8f ----------------&nbsp;\u7b2c 4 \u5468\u7406\u6027\u8ba4\u8bc6\u8ba1\u7b97\u673a\u7a0b\u5e8fC\u7a0b\u5e8f\u5bfc\u8bba ------------------------ \u7b2c 5 \u5468C\u7a0b\u5e8f\u4e2d\u7684\u6570\u636e\u6210\u5206 ------------ \u7b2c 5 \u5468C\u7a0b\u5e8f\u4e2d\u7684\u8fd0\u7b97\u6210\u5206 ------------ \u7b2c 6 \u5468C\u7a0b\u5e8f\u4e2d\u7684\u63a7\u5236\u6210\u5206 ------------ \u7b2c&nbsp;7 \u5468\u4ece\u73b0\u5b9e\u95ee\u9898\u5230\u8ba1\u7b97\u673a\u7a0b\u5e8f ---------- \u7b2c 8 \u5468",
        "desc_html": "  \u672c\u8bfe\u7a0b\u7684\u5185\u5bb9\u4e3b\u8981\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff1a\uff081\uff09\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6\uff0c\u7ea6\u5360\u8bfe\u65f6\u91cf\u768440%\uff1b\uff082\uff09\u8ba1\u7b97\u673a\u7a0b\u5e8f\u5bfc\u8bba\uff0c\u7ea6\u5360\u8bfe\u65f6\u91cf\u768460%\uff1b\n\n    \u5728\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u4e3a\u5927\u5bb6\u89e3\u7b54\u4e00\u4e9b\u4e0e\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u76f8\u5173\u7684\u57fa\u7840\u95ee\u9898\uff0c\u4f8b\u5982\uff0c\u201c\u8ba1\u7b97\u673a\u4e3a\u4ec0\u4e48\u80fd\u591f\u8fdb\u884c\u8ba1\u7b97\uff1f\u201d\uff0c\u201c\u8ba1\u7b97\u673a\u7a0b\u5e8f\u5728\u8ba1\u7b97\u673a\u4e2d\u662f\u5982\u4f55\u8fd0\u884c\u7684\uff1f\u201d\uff0c\u201c\u8ba1\u7b97\u673a\u7684\u53d1\u5c55\u89c4\u5f8b\u662f\u4ec0\u4e48\uff1f\u201d\uff0c\u201c\u4e0b\u4e00\u4ee3\u7684\u8ba1\u7b97\u673a\u5c06\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\uff1f\u201d\u7b49\u7b49\u3002\u6211\u4eec\u5e0c\u671b\u901a\u8fc7\u5bf9\u8fd9\u4e9b\u95ee\u9898\u7684\u89e3\u7b54\uff0c\u8fbe\u5230\u4e24\u4e2a\u76ee\u7684\uff1a\u5176\u4e00\uff0c\u57f9\u517b\u8d77\u5927\u5bb6\u5bf9\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u5174\u8da3\uff1b\u5176\u4e8c\uff0c\u5e2e\u52a9\u5927\u5bb6\u5efa\u7acb\u8d77\u5b66\u4e60\u8ba1\u7b97\u673a\u79d1\u5b66\u6240\u9700\u8981\u7684\u201c\u80cc\u666f\u77e5\u8bc6\u6846\u67b6\u201d\u3002\n\n    \u5728\u8ba1\u7b97\u673a\u7a0b\u5e8f\u5bfc\u8bba\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u9010\u6b65\u5f15\u9886\u5927\u5bb6\u6b65\u5165\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u9886\u57df\u3002\u6211\u4eec\u4ee5C\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u4e3a\u8f7d\u4f53\uff0c\u4ece\u611f\u6027\u8ba4\u8bc6\u8ba1\u7b97\u673a\u7a0b\u5e8f\u5f00\u59cb\uff0c\u5e26\u9886\u5927\u5bb6\u8ba4\u8bc6\u8ba1\u7b97\u673a\u7a0b\u5e8f\uff0c\u611f\u53d7\u8ba1\u7b97\u673a\u7a0b\u5e8f\u7684\u5f00\u53d1\u8fc7\u7a0b\uff0c\u7406\u89e3\u7f16\u7a0b\u8bed\u8a00\u7684\u6784\u6210\u6210\u5206\uff0c\u4f53\u4f1a\u5229\u7528\u8ba1\u7b97\u673a\u7a0b\u5e8f\u89e3\u51b3\u73b0\u5b9e\u95ee\u9898\u7684\u8fc7\u7a0b\u3002  \n\n## Syllabus\n\n\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6\n\n  * \u8ba1\u7b97\u673a\u7684\u5386\u53f2\u4e0e\u672a\u6765 ---------------- \u7b2c 1 \u5468\n  * \u8ba1\u7b97\u673a\u7684\u57fa\u672c\u539f\u7406 ------------------- \u7b2c 2 \u5468\n  * \u7a0b\u5e8f\u8fd0\u884c\u7684\u57fa\u672c\u539f\u7406 ---------------- \u7b2c 3 \u5468\n\n\u8ba1\u7b97\u673a\u7a0b\u5e8f\u5bfc\u8bba\n\n  * \u611f\u6027\u8ba4\u8bc6\u8ba1\u7b97\u673a\u7a0b\u5e8f ---------------- \u7b2c 4 \u5468\n  * \u7406\u6027\u8ba4\u8bc6\u8ba1\u7b97\u673a\u7a0b\u5e8f \n    * C\u7a0b\u5e8f\u5bfc\u8bba ------------------------ \u7b2c 5 \u5468\n    * C\u7a0b\u5e8f\u4e2d\u7684\u6570\u636e\u6210\u5206 ------------ \u7b2c 5 \u5468\n    * C\u7a0b\u5e8f\u4e2d\u7684\u8fd0\u7b97\u6210\u5206 ------------ \u7b2c 6 \u5468\n    * C\u7a0b\u5e8f\u4e2d\u7684\u63a7\u5236\u6210\u5206 ------------ \u7b2c 7 \u5468\n  * \u4ece\u73b0\u5b9e\u95ee\u9898\u5230\u8ba1\u7b97\u673a\u7a0b\u5e8f ---------- \u7b2c 8 \u5468\n\n",
        "name": "\u8ba1\u7b97\u5bfc\u8bba",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Peking University"
        ],
        "url": "https://www.coursera.org/course/spic1",
        "video_url": ""
    },
    {
        "date": "2015-07-28",
        "desc": "\u4ecb\u7ecd\u89c6\u9891\u82e5\u65e0\u6cd5\u6b63\u5e38\u64ad\u653e\uff0c\u8bf7\u770b\u8fd9\u91cc\u3002&nbsp;\u672c\u8bfe\u7a0b\u56f4\u7ed5\u7740\u201c\u7b97\u6cd5+\u6570\u636e\u7ed3\u6784=\u7a0b\u5e8f\u201d\u7684\u601d\u8def\uff0c\u4ee5\u95ee\u9898\u6c42\u89e3\u4e3a\u5bfc\u5411\u8fdb\u884c\u5b66\u4e60\uff0c\u5e2e\u52a9\u5927\u5bb6\u63d0\u9ad8\u7406\u8bba\u3001\u62bd\u8c61\u3001\u8bbe\u8ba1\u7684\u80fd\u529b\u3002\u4e3b\u8981\u5305\u62ec\u7684\u5185\u5bb9\u6709\uff1a\u7ebf\u6027\u8868\uff0c\u6808\u4e0e\u961f\u5217\uff0c\u5b57\u7b26\u4e32\uff0c\u4e8c\u53c9\u6811\uff0c\u6811\uff0c\u56fe\u3002\u5b66\u751f\u5c06\u901a\u8fc7\u6743\u8861\u65f6\u7a7a\u548c\u5176\u4ed6\u8d44\u6e90\u5f00\u9500\uff0c\u5229\u7528\u6570\u636e\u7ed3\u6784\u6765\u7ec4\u7ec7\u6570\u636e\u3001\u8bbe\u8ba1\u9ad8\u6548\u7684\u7b97\u6cd5\u3001\u5b8c\u6210\u9ad8\u8d28\u91cf\u7684\u7a0b\u5e8f\u4ee5\u6ee1\u8db3\u9519\u7efc\u590d\u6742\u7684\u5b9e\u9645\u5e94\u7528\u9700\u8981\u3002The course will build on the idea of \"Algorithms + Data Structures = Programs\" as it helps students improve their knowledge of theory and their ability to think abstractly to solve problems. We will introduce Linear Lists, Stacks, Queues, Strings, Binary Trees, Trees and Graphs, which are fundamental data structures. Students will learn how to organize data efficiently and make tradeoffs between space and time complexity, design efficient and effective algorithms, and implement high quality programs to solve complex real-world problems.&nbsp;Syllabus\u7b2c\u4e00\u5468 &nbsp;\u6982\u8bba Week 1 Overview\u95ee\u9898\u6c42\u89e3&nbsp; Solving\nProblems\u6570\u636e\u7ed3\u6784\u4e0e\u62bd\u8c61\u6570\u636e\u7c7b\u578b Data\nStructures and Abstract Data Types\u7b97\u6cd5\u7279\u6027\u53ca\u5206\u7c7b The\nProperties and Categories of Algorithm\u7b97\u6cd5\u6548\u7387\u4e0e\u5ea6\u91cf\n&nbsp;Evaluating Efficiency of Algorithm&nbsp;\u7b2c\u4e8c\u5468&nbsp;\u7ebf\u6027\u8868&nbsp;Week 2 Linear Lists\u7ebf\u6027\u7ed3\u6784 The Structure\nof Lists\u987a\u5e8f\u8868 Sequential\nLists\u94fe\u8868 Linked Lists\u987a\u5e8f\u8868\u548c\u94fe\u8868\u7684\u6bd4\u8f83 The\nComparison of Sequential Lists and Linked Lists\u7b2c\u4e09\u5468 \u6808\u4e0e\u961f\u5217&nbsp;Week 3 Stack and\nQueue\u6808 Stacks\u6808\u4e0e\u9012\u5f52 Stacks and\nRecursion\u9012\u5f52\u8f6c\u975e\u9012\u5f52\uff08\u9009\u4fee\uff09 Implementation of Recursion using Stacks (Optional)\u961f\u5217 Queues &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\u961f\u5217\u7684\u5e94\u7528 The\nApplication of Queues\u7b2c\u56db\u5468&nbsp;\u5b57\u7b26\u4e32 Week 4 Strings\u5b57\u7b26\u4e32\u57fa\u672c\u6982\u5ff5&nbsp;The Basic\nConcept of Strings\u5b57\u7b26\u4e32\u7684\u5b58\u50a8\u7ed3\u6784&nbsp;The\nStorage Structure of Strings\u5b57\u7b26\u4e32\u8fd0\u7b97\u7684\u7b97\u6cd5\u5b9e\u73b0&nbsp;The Implementation\nof Strings\u2019 Operations\u5b57\u7b26\u4e32\u7684\u5feb\u901f\u6a21\u5f0f\u5339\u914d\uff08\u9009\u4fee\uff09&nbsp;KMP Fast String Matching (Optional)&nbsp;\u7b2c\u4e94\u5468&nbsp;\u4e8c\u53c9\u6811\uff08\u4e0a\uff09Week 5&nbsp;Binary Trees I\u4e8c\u53c9\u6811\u7684\u6982\u5ff5&nbsp;The Basic\nConcept of Binary Trees\u4e8c\u53c9\u6811\u7684\u62bd\u8c61\u6570\u636e\u7c7b\u578b&nbsp;The\nAbstract Data Type for a Binary Tree\u4e8c\u53c9\u6811\u7684\u641c\u7d22 &nbsp;Binary Tree Traversals\u4e8c\u53c9\u6811\u7684\u5b58\u50a8\u7ed3\u6784&nbsp;The Storage\nStructures for Binary Trees\u7b2c\u516d\u5468&nbsp;\u4e8c\u53c9\u6811\uff08\u4e0b\uff09Week 6 Binary Trees\nII\u4e8c\u53c9\u641c\u7d22\u6811 &nbsp;Binary\nSearch Trees\u5806\u4e0e\u4f18\u5148\u961f\u5217&nbsp;Heaps\nand Priority QueuesHuffman\u6811\u53ca\u5176\u5e94\u7528&nbsp;&nbsp;Huffman Coding Trees and Its Application &nbsp;\u7b2c\u4e03\u5468&nbsp;\u6811&nbsp;Week 7 Trees\u6811\u7684\u5b9a\u4e49\u3001\u6811\u4e0e\u4e8c\u53c9\u6811\u7684\u7b49\u4ef7\u8f6c\u6362&nbsp;The\nDefinitions of Trees and Mapping between Trees and Binary Trees\u6811\u7684\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u53ca\u6811\u7684\u904d\u5386 &nbsp;The Abstract Data Types of a Tree, Tree Traversals &nbsp;\u6811\u7684\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784 The Linked Structure of Trees\u6811\u7684\u7236\u6307\u9488\u8868\u793a\u6cd5 The Parent Point Implementation of Trees\u6811\u7684\u987a\u5e8f\u5b58\u50a8\u548cK\u53c9\u6811&nbsp;Serialization\nof Trees, and K-ary Trees&nbsp;\u7b2c\u516b\u5468&nbsp;\u56fe&nbsp;Week 8 Graphs\u56fe\u7684\u6982\u5ff5\u548c\u62bd\u8c61\u6570\u636e\u7c7b\u578b&nbsp;The\nConcept and Abstract Data Types of a Graph\u56fe\u7684\u5b58\u50a8\u7ed3\u6784 The Storage Structure of a Graph\u56fe\u7684\u904d\u5386 Graph Traversal\u6700\u77ed\u8def\u5f84 Shortest Path\u6700\u5c0f\u751f\u6210\u6811 &nbsp;Minimum-Cost\nSpanning Trees",
        "desc_html": "\u4ecb\u7ecd\u89c6\u9891\u82e5\u65e0\u6cd5\u6b63\u5e38\u64ad\u653e\uff0c\u8bf7\u770b[\u8fd9\u91cc](http://video.study.163.com/edu-\nvideo/nos/mp4/2013/11/20/303416_hd.mp4)\u3002  \n\n\u672c\u8bfe\u7a0b\u56f4\u7ed5\u7740\u201c\u7b97\u6cd5+\u6570\u636e\u7ed3\u6784=\u7a0b\u5e8f\u201d\u7684\u601d\u8def\uff0c\u4ee5\u95ee\u9898\u6c42\u89e3\u4e3a\u5bfc\u5411\u8fdb\u884c\u5b66\u4e60\uff0c\u5e2e\u52a9\u5927\u5bb6\u63d0\u9ad8\u7406\u8bba\u3001\u62bd\u8c61\u3001\u8bbe\u8ba1\u7684\u80fd\u529b\u3002\u4e3b\u8981\u5305\u62ec\u7684\u5185\u5bb9\u6709\uff1a\u7ebf\u6027\u8868\uff0c\u6808\u4e0e\u961f\u5217\uff0c\u5b57\u7b26\u4e32\uff0c\u4e8c\u53c9\u6811\n\uff0c\u6811\uff0c\u56fe\u3002\u5b66\u751f\u5c06\u901a\u8fc7\u6743\u8861\u65f6\u7a7a\u548c\u5176\u4ed6\u8d44\u6e90\u5f00\u9500\uff0c\u5229\u7528\u6570\u636e\u7ed3\u6784\u6765\u7ec4\u7ec7\u6570\u636e\u3001\u8bbe\u8ba1\u9ad8\u6548\u7684\u7b97\u6cd5\u3001\u5b8c\u6210\u9ad8\u8d28\u91cf\u7684\u7a0b\u5e8f\u4ee5\u6ee1\u8db3\u9519\u7efc\u590d\u6742\u7684\u5b9e\u9645\u5e94\u7528\u9700\u8981\u3002\n\nThe course will build on the idea of \"Algorithms + Data Structures = Programs\"\nas it helps students improve their knowledge of theory and their ability to\nthink abstractly to solve problems. We will introduce Linear Lists, Stacks,\nQueues, Strings, Binary Trees, Trees and Graphs, which are fundamental data\nstructures. Students will learn how to organize data efficiently and make\ntradeoffs between space and time complexity, design efficient and effective\nalgorithms, and implement high quality programs to solve complex real-world\nproblems.  \n\n## Syllabus\n\n\u7b2c\u4e00\u5468  \u6982\u8bba Week 1 Overview  \n\u95ee\u9898\u6c42\u89e3  Solving Problems  \n\u6570\u636e\u7ed3\u6784\u4e0e\u62bd\u8c61\u6570\u636e\u7c7b\u578b Data Structures and Abstract Data Types  \n\u7b97\u6cd5\u7279\u6027\u53ca\u5206\u7c7b The Properties and Categories of Algorithm  \n\u7b97\u6cd5\u6548\u7387\u4e0e\u5ea6\u91cf  Evaluating Efficiency of Algorithm\n\n\u7b2c\u4e8c\u5468 \u7ebf\u6027\u8868 Week 2 Linear Lists**  \n**\u7ebf\u6027\u7ed3\u6784 The Structure of Lists  \n\u987a\u5e8f\u8868 Sequential Lists  \n\u94fe\u8868 Linked Lists  \n\u987a\u5e8f\u8868\u548c\u94fe\u8868\u7684\u6bd4\u8f83 The Comparison of Sequential Lists and Linked Lists\n\n\u7b2c\u4e09\u5468 \u6808\u4e0e\u961f\u5217 Week 3 Stack and Queue  \n\u6808 Stacks  \n\u6808\u4e0e\u9012\u5f52 Stacks and Recursion  \n\u9012\u5f52\u8f6c\u975e\u9012\u5f52\uff08\u9009\u4fee\uff09 Implementation of Recursion using Stacks (Optional)  \n\u961f\u5217 Queues  \n\u961f\u5217\u7684\u5e94\u7528 The Application of Queues\n\n\u7b2c\u56db\u5468 \u5b57\u7b26\u4e32 Week 4 Strings  \n\u5b57\u7b26\u4e32\u57fa\u672c\u6982\u5ff5 The Basic Concept of Strings  \n\u5b57\u7b26\u4e32\u7684\u5b58\u50a8\u7ed3\u6784 The Storage Structure of Strings  \n\u5b57\u7b26\u4e32\u8fd0\u7b97\u7684\u7b97\u6cd5\u5b9e\u73b0 The Implementation of Strings\u2019 Operations  \n\u5b57\u7b26\u4e32\u7684\u5feb\u901f\u6a21\u5f0f\u5339\u914d\uff08\u9009\u4fee\uff09 KMP Fast String Matching (Optional)\n\n\u7b2c\u4e94\u5468 \u4e8c\u53c9\u6811\uff08\u4e0a\uff09Week 5 Binary Trees I**  \n**\u4e8c\u53c9\u6811\u7684\u6982\u5ff5 The Basic Concept of Binary Trees  \n\u4e8c\u53c9\u6811\u7684\u62bd\u8c61\u6570\u636e\u7c7b\u578b The Abstract Data Type for a Binary Tree  \n\u4e8c\u53c9\u6811\u7684\u641c\u7d22  Binary Tree Traversals  \n\u4e8c\u53c9\u6811\u7684\u5b58\u50a8\u7ed3\u6784 The Storage Structures for Binary Trees\n\n****\n\n\u7b2c\u516d\u5468 \u4e8c\u53c9\u6811\uff08\u4e0b\uff09Week 6 Binary Trees II  \n\u4e8c\u53c9\u641c\u7d22\u6811  Binary Search Trees  \n\u5806\u4e0e\u4f18\u5148\u961f\u5217 Heaps and Priority Queues  \nHuffman\u6811\u53ca\u5176\u5e94\u7528  Huffman Coding Trees and Its Application  \n\n\u7b2c\u4e03\u5468 \u6811 Week 7 Trees**  \n**\u6811\u7684\u5b9a\u4e49\u3001\u6811\u4e0e\u4e8c\u53c9\u6811\u7684\u7b49\u4ef7\u8f6c\u6362 The Definitions of Trees and Mapping between Trees and Binary Trees  \n\u6811\u7684\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u53ca\u6811\u7684\u904d\u5386  The Abstract Data Types of a Tree, Tree Traversals  \n\u6811\u7684\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784 The Linked Structure of Trees  \n\u6811\u7684\u7236\u6307\u9488\u8868\u793a\u6cd5 The Parent Point Implementation of Trees  \n\u6811\u7684\u987a\u5e8f\u5b58\u50a8\u548cK\u53c9\u6811 Serialization of Trees, and K-ary Trees\n\n\u7b2c\u516b\u5468 \u56fe Week 8 Graphs**  \n**\u56fe\u7684\u6982\u5ff5\u548c\u62bd\u8c61\u6570\u636e\u7c7b\u578b The Concept and Abstract Data Types of a Graph  \n\u56fe\u7684\u5b58\u50a8\u7ed3\u6784 The Storage Structure of a Graph  \n\u56fe\u7684\u904d\u5386 Graph Traversal  \n\u6700\u77ed\u8def\u5f84 Shortest Path  \n\u6700\u5c0f\u751f\u6210\u6811  Minimum-Cost Spanning Trees\n\n",
        "name": "\u6570\u636e\u7ed3\u6784\u57fa\u7840 Basic Data Structures and Algorithms",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Peking University"
        ],
        "url": "https://www.coursera.org/course/spdsalgo",
        "video_url": ""
    },
    {
        "date": "2015-07-28",
        "desc": "\u5728C\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u4ee5\u201cC \u8bed\u8a00\u201d\u4e3a\u4e3b\u8981\u5b66\u4e60\u5bf9\u8c61\uff0c\u4ee5\u5178\u578b\u7684C++\u7f16\u7a0b\u73af\u5883\uff08\u5982Visual Studio C++, Eclipse\u7b49\uff09\u4e3a\u5de5\u5177\uff0c\u5b66\u4e60\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u5e76\u57f9\u517b\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u57fa\u672c\u6280\u80fd\u3002\u901a\u4fd7\u8bb2\uff0c\u5728\u8fd9\u4e2a\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u6559\u4f1a\u5927\u5bb6\u201c\u5982\u4f55\u4f7f\u7528C\u8bed\u8a00\u7f16\u5199\u8ba1\u7b97\u673a\u7a0b\u5e8f\uff0c\u751a\u81f3\u7f16\u5199\u5177\u6709\u4e00\u5b9a\u6280\u672f\u96be\u5ea6\u7684\u7a0b\u5e8f\u201d\u3002&nbsp;&nbsp;&nbsp; \u5bf9\u4e8e\u7b2c\u4e00\u6b21\u5b66\u4e60\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u540c\u5b66\u800c\u8a00\uff0c\u901a\u5e38\u4f1a\u89c9\u5f97\u5b66\u4e60\u8fc7\u7a0b\u6bd4\u8f83\u56f0\u96be\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u7279\u522b\u63d0\u793a\u5927\u5bb6\uff1a\u201c\u5bf9\u4e8e\u96be\u5b66\u7684\u4e1c\u897f\uff0c\u66f4\u8981\u5faa\u5e8f\u6e10\u8fdb\uff0c\u66f4\u8981\u9075\u5faa\u5b66\u4e60\u89c4\u5f8b\u2014\u2014\u5148\u6253\u597d\u57fa\u7840\uff0c\u9010\u6b65\u8fdb\u9636\uff01\u201d\u4e3a\u6b64\uff0c\u6211\u4eec\u628a\u201cC\u7a0b\u5e8f\u8bbe\u8ba1\u201d\u90e8\u5206\u7684\u5b66\u4e60\u5212\u5206\u4e3a\u56db\u4e2a\u8fed\u4ee3\u5468\u671f\uff1a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \u5468\u671f\u4e00\uff1a \u611f\u6027\u8ba4\u8bc6\u8ba1\u7b97\u673a\u7a0b\u5e8f\uff1b&nbsp;\uff08\u5177\u4f53\u5185\u5bb9\u8bf7\u53c2\u8003 \u8ba1\u7b97\u5bfc\u8bba \u8bfe\u7a0b\uff09&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \u5468\u671f\u4e8c\uff1a \u7406\u6027\u8ba4\u8bc6\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\uff1b&nbsp;&nbsp;\uff08\u5177\u4f53\u5185\u5bb9\u8bf7\u53c2\u8003 \u8ba1\u7b97\u5bfc\u8bba \u8bfe\u7a0b\uff09&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \u5468\u671f\u4e09\uff1a \u5b66\u4f1a\u4f7f\u7528\u2014\u2014\u51fd\u6570\uff1b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \u5468\u671f\u56db\uff1a \u5b66\u4e60\u4f7f\u7528C\u7a0b\u5e8f\u4e2d\u7684\u590d\u6742\u6210\u5206\uff08\u6307\u9488\u3001\u7ed3\u6784\u4f53\u3001\u94fe\u8868\u7b49\uff09\uff1b&nbsp;&nbsp;&nbsp; \u4e4b\u6240\u4ee5\u79f0\u4e3a\u201c\u8fed\u4ee3\u5468\u671f\u201d\uff0c\u662f\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u5728\u6bcf\u4e2a\u5468\u671f\u4e2d\uff0c\u540c\u5b66\u4eec\u90fd\u80fd\u591f\u7f16\u5199\u51fa\u5b8c\u6574\u3001\u53ef\u8fd0\u884c\u3001\u80fd\u89e3\u51b3\u95ee\u9898\u7684\u8ba1\u7b97\u673a\u7a0b\u5e8f\uff0c\u800c\u4e0d\u662f\u4ec5\u4ec5\u5b66\u4e60\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u7684\u67d0\u4e2a\u90e8\u5206\uff01\u6240\u4ee5\uff0c\u5b66\u4e60\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u8fc7\u7a0b\uff0c\u5e94\u8be5\u662f\u4e00\u4e2a\u201c\u5728\u5b9e\u6218\u4e2d\u8fdb\u9636\u201d\u7684\u8fc7\u7a0b\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u201c\u77e5\u8bc6\u5806\u780c\u201d\u7684\u8fc7\u7a0b\u3002\u5e0c\u671b\u8fd9\u4e2a\u8fed\u4ee3\u8fdb\u9636\u7684\u5b66\u4e60\u8fc7\u7a0b\u53ef\u4ee5\u5e2e\u52a9\u5927\u5bb6\u987a\u5229\u8fbe\u6210\u5b66\u4e60\u76ee\u6807\u3002&nbsp;&nbsp;SyllabusC\u7a0b\u5e8f\u8bbe\u8ba1\u5b66\u4e60\u6307\u5bfc ------------ \u7b2c 1 \u5468\u6570\u7ec4\u4e0e\u5b57\u7b26\u4e32 -------------------- \u7b2c&nbsp;2 \u5468C\u7a0b\u5e8f\u4e2d\u7684\u51fd\u6570 ------------------ \u7b2c 3 \u5468\u51fd\u6570\u7684\u5d4c\u5957\u4e0e\u9012\u5f52 -------------- \u7b2c 4 \u5468C\u7a0b\u5e8f\u4e2d\u7684\u6307\u9488 ------------------ \u7b2c 5 \u5468\u6307\u9488\u4e0e\u6570\u7ec4 ----------------------- \u7b2c 6 \u5468\u6307\u9488\u4e0e\u51fd\u6570 ----------------------- \u7b2c 7 \u5468\u7ed3\u6784\u4f53\u4e0e\u94fe\u8868 -------------------- \u7b2c 8 \u5468\u8f7b\u53e9\u9762\u5411\u5bf9\u8c61\u4e4b\u95e8 -------------- \u7b2c&nbsp;8 \u5468",
        "desc_html": "\u5728C\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u90e8\u5206\uff0c\u6211\u4eec\u5c06**\u4ee5\u201cC \u8bed\u8a00\u201d\u4e3a\u4e3b\u8981\u5b66\u4e60\u5bf9\u8c61\uff0c\u4ee5\u5178\u578b\u7684C++\u7f16\u7a0b\u73af\u5883\uff08\u5982Visual Studio C++, Eclipse\u7b49\uff09\u4e3a\u5de5\u5177\uff0c\u5b66\u4e60\n\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u76f8\u5173\u77e5\u8bc6**\uff0c\u5e76\u57f9\u517b\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u57fa\u672c\u6280\u80fd\u3002\u901a\u4fd7\u8bb2\uff0c\u5728\u8fd9\u4e2a\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u6559\u4f1a\u5927\u5bb6\u201c\u5982\u4f55\u4f7f\u7528C\u8bed\u8a00\u7f16\u5199\u8ba1\u7b97\u673a\u7a0b\u5e8f\uff0c\u751a\u81f3\u7f16\u5199\u5177\u6709\u4e00\u5b9a\u6280\u672f\u96be\u5ea6\u7684\u7a0b\u5e8f\u201d\u3002\n\n    \u5bf9\u4e8e\u7b2c\u4e00\u6b21\u5b66\u4e60\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u540c\u5b66\u800c\u8a00\uff0c\u901a\u5e38\u4f1a\u89c9\u5f97\u5b66\u4e60\u8fc7\u7a0b\u6bd4\u8f83\u56f0\u96be\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u7279\u522b\u63d0\u793a\u5927\u5bb6\uff1a\u201c\u5bf9\u4e8e\u96be\u5b66\u7684\u4e1c\u897f\uff0c\u66f4\u8981\u5faa\u5e8f\u6e10\u8fdb\uff0c\u66f4\u8981\u9075\u5faa\u5b66\u4e60\u89c4\u5f8b\u2014\u2014\u5148\u6253\u597d\u57fa\u7840\uff0c\u9010\u6b65\u8fdb\u9636\uff01\u201d\u4e3a\u6b64\uff0c**\u6211\u4eec\u628a\u201cC\u7a0b\u5e8f\u8bbe\u8ba1\u201d\u90e8\u5206\u7684\u5b66\u4e60\u5212\u5206\u4e3a\u56db\u4e2a\u8fed\u4ee3\u5468\u671f**\uff1a\n\n**        \u5468\u671f\u4e00**\uff1a \u611f\u6027\u8ba4\u8bc6\u8ba1\u7b97\u673a\u7a0b\u5e8f\uff1b \uff08\u5177\u4f53\u5185\u5bb9\u8bf7\u53c2\u8003 \u8ba1\u7b97\u5bfc\u8bba \u8bfe\u7a0b\uff09  \n**        \u5468\u671f\u4e8c**\uff1a \u7406\u6027\u8ba4\u8bc6\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\uff1b  \uff08\u5177\u4f53\u5185\u5bb9\u8bf7\u53c2\u8003 \u8ba1\u7b97\u5bfc\u8bba \u8bfe\u7a0b\uff09  \n**        \u5468\u671f\u4e09**\uff1a \u5b66\u4f1a\u4f7f\u7528\u2014\u2014\u51fd\u6570\uff1b   \n**        \u5468\u671f\u56db**\uff1a \u5b66\u4e60\u4f7f\u7528C\u7a0b\u5e8f\u4e2d\u7684\u590d\u6742\u6210\u5206\uff08\u6307\u9488\u3001\u7ed3\u6784\u4f53\u3001\u94fe\u8868\u7b49\uff09\uff1b\n\n    \u4e4b\u6240\u4ee5\u79f0\u4e3a\u201c\u8fed\u4ee3\u5468\u671f\u201d\uff0c\u662f\u56e0\u4e3a**\u6211\u4eec\u5e0c\u671b\u5728\u6bcf\u4e2a\u5468\u671f\u4e2d\uff0c\u540c\u5b66\u4eec\u90fd\u80fd\u591f\u7f16\u5199\u51fa\u5b8c\u6574\u3001\u53ef\u8fd0\u884c\u3001\u80fd\u89e3\u51b3\u95ee\u9898\u7684\u8ba1\u7b97\u673a\u7a0b\u5e8f\uff0c\u800c\u4e0d\u662f\u4ec5\u4ec5\u5b66\u4e60\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u7684\u67d0\u4e2a\u90e8\u5206\uff01**\u6240\u4ee5\uff0c\u5b66\u4e60\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u8fc7\u7a0b\uff0c\u5e94\u8be5\u662f\u4e00\u4e2a**\u201c\u5728\u5b9e\u6218\u4e2d\u8fdb\u9636\u201d\u7684\u8fc7\u7a0b\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u201c\u77e5\u8bc6\u5806\u780c\u201d\u7684\u8fc7\u7a0b**\u3002\u5e0c\u671b\u8fd9\u4e2a\u8fed\u4ee3\u8fdb\u9636\u7684\u5b66\u4e60\u8fc7\u7a0b\u53ef\u4ee5\u5e2e\u52a9\u5927\u5bb6\u987a\u5229\u8fbe\u6210\u5b66\u4e60\u76ee\u6807\u3002  \n\n## Syllabus\n\n  1. C\u7a0b\u5e8f\u8bbe\u8ba1\u5b66\u4e60\u6307\u5bfc ------------ \u7b2c 1 \u5468\n  2. \u6570\u7ec4\u4e0e\u5b57\u7b26\u4e32 -------------------- \u7b2c 2 \u5468\n  3. C\u7a0b\u5e8f\u4e2d\u7684\u51fd\u6570 ------------------ \u7b2c 3 \u5468\n  4. \u51fd\u6570\u7684\u5d4c\u5957\u4e0e\u9012\u5f52 -------------- \u7b2c 4 \u5468\n  5. C\u7a0b\u5e8f\u4e2d\u7684\u6307\u9488 ------------------ \u7b2c 5 \u5468\n  6. \u6307\u9488\u4e0e\u6570\u7ec4 ----------------------- \u7b2c 6 \u5468\n  7. \u6307\u9488\u4e0e\u51fd\u6570 ----------------------- \u7b2c 7 \u5468\n  8. \u7ed3\u6784\u4f53\u4e0e\u94fe\u8868 -------------------- \u7b2c 8 \u5468\n  9. \u8f7b\u53e9\u9762\u5411\u5bf9\u8c61\u4e4b\u95e8 -------------- \u7b2c 8 \u5468  \n\n",
        "name": "C\u7a0b\u5e8f\u8bbe\u8ba1",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Peking University"
        ],
        "url": "https://www.coursera.org/course/spc",
        "video_url": ""
    },
    {
        "date": "2015-07-20",
        "desc": "Learn topresent datato an observer in a way that yields insight and understanding. The first week focuses on theinfrastructure for data visualization. It introduces elementary graphics programming, focusing primarily on two-dimensional vector graphics and the programming platforms for graphics. This infrastructure will also include lessons on thehuman side of visualization, studying human perception and cognition to gain a better understanding of the target of the data visualization.The second week will utilize the knowledge of graphics programming and human perception in thedesign and construction of visualizations, starting with simple charts and graphs and incorporating animation and user interactivity. The third week expands the data visualization vocabulary with more sophisticated methods, includinghierarchical layouts and networks. The final week focuses on visualization of database and data mining processes, with methods specifically focused onvisualization of unstructured information, such as text, and systems for visual analytics that provide decision support.SyllabusThis course will be broken up into 4 weekly modules covering the following topics:Week 1:Visualization Infrastructure (graphics programming and human perception)Week 2:Basic Visualization (charts, graphs, animation, interactivity)Week 3:Visualizing Relationships (hierarchies, networks)Week 4:Visualizing Information (text, databases)",
        "desc_html": "Learn to **present data** to an observer in a way that yields insight and\nunderstanding. The first week focuses on the **infrastructure for data\nvisualization**. It introduces elementary graphics programming, focusing\nprimarily on two-dimensional vector graphics and the programming platforms for\ngraphics. This infrastructure will also include lessons on the **human side of\nvisualization**, studying human perception and cognition to gain a better\nunderstanding of the target of the data visualization.\n\nThe second week will utilize the knowledge of graphics programming and human\nperception in the **design and construction of visualizations**, starting with\nsimple charts and graphs and incorporating animation and user interactivity.\nThe third week expands the data visualization vocabulary with more\nsophisticated methods, including **hierarchical layouts and networks**. The\nfinal week focuses on visualization of database and data mining processes,\nwith methods specifically focused on **visualization of unstructured\ninformation**, such as text, and systems for visual analytics that provide\ndecision support.\n\n## Syllabus\n\nThis course will be broken up into 4 weekly modules covering the following\ntopics:\n\n**Week 1: **Visualization Infrastructure (graphics programming and human perception)\n\n**Week 2: **Basic Visualization (charts, graphs, animation, interactivity)\n\n**Week 3: **Visualizing Relationships (hierarchies, networks)\n\n**Week 4: **Visualizing Information (text, databases)\n\n",
        "name": "Data Visualization",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of Illinois at Urbana-Champaign"
        ],
        "url": "https://www.coursera.org/course/datavisualization",
        "video_url": ""
    },
    {
        "date": "2015-07-15",
        "desc": "CSAP.1x\u00a0 covers the material of AP Computer Science A which is equivalent to a first-semester, college-level course in computer science. This highly interactive course will introduce students to the fundamental concepts of computer science. The course will be structured to encourage students to think computationally and enjoy problem solving. New York City\u2019s companies, museums, art and architecture will be used as examples to emphasize the ubiquitous role of computing and programming concepts in the world around us.The course will delve into object- oriented problem solving and design using the Java\u00a0 programming language. \u00a0Students will have access to practice problems that will help them learn to program without spending hours on finding and fixing syntax errors.\u00a0 These will include online multiple-choice questions in the style of those on the AP exam, mixed-up code that the user drags into the correct order, fill in the blank code and audio tours of the code.Topics include problem solving, \u00a0programming design strategies and\u00a0 data structures, algorithms, role of computation in real-world applications like smart phones, google glass and robots. This material may be used for self-study and as a preview by students and teachers considering the September 2015 offering of the course.\u00a0Video lectures for this course will be available in May 2015.\u00a0\u00a0Ancillary material including labs will be added over the Summer of 2015. All of the course will be available September 1, 2015This is a self-paced course - you may take CSAP.1x on your schedule.Learn more about our High School and AP* Exam Preparation Courses* Advanced Placement and AP are registered trademarks of the College Board, which was not involved in the production of, and does not endorse, these offerings.",
        "desc_html": "CSAP.1x\u00a0 covers the material of AP Computer Science A which is equivalent to a\nfirst-semester, college-level course in computer science. This highly\ninteractive course will introduce students to the fundamental concepts of\ncomputer science. The course will be structured to encourage students to think\ncomputationally and enjoy problem solving. New York City\u2019s companies, museums,\nart and architecture will be used as examples to emphasize the ubiquitous role\nof computing and programming concepts in the world around us.  \n  \nThe course will delve into object- oriented problem solving and design using\nthe Java\u00a0 programming language. \u00a0Students will have access to practice\nproblems that will help them learn to program without spending hours on\nfinding and fixing syntax errors.\u00a0 These will include online multiple-choice\nquestions in the style of those on the AP exam, mixed-up code that the user\ndrags into the correct order, fill in the blank code and audio tours of the\ncode.  \n  \nTopics include problem solving, \u00a0programming design strategies and\u00a0 data\nstructures, algorithms, role of computation in real-world applications like\nsmart phones, google glass and robots. This material may be used for self-\nstudy and as a preview by students and teachers considering the September 2015\noffering of the course.\u00a0Video lectures for this course will be available in\nMay 2015.\u00a0\u00a0Ancillary material including labs will be added over the Summer of\n2015. All of the course will be available September 1, 2015  \n  \nThis is a self-paced course - you may take CSAP.1x on your schedule.  \n  \nLearn more about our High School and AP* Exam Preparation Courses  \n  \n* Advanced Placement and AP are registered trademarks of the College Board, which was not involved in the production of, and does not endorse, these offerings. \n\n",
        "name": "CS.2x: Preparing for the AP* Computer Science A Exam \u2014 Part 2",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Cooper Union"
        ],
        "url": "https://www.edx.org/course/preparing-ap-computer-science-exam-part-cooper-union-cs-2x",
        "video_url": "https://www.youtube.com/embed/C652YjGIy88?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-07-10",
        "desc": "When presented with a problem from a scientific domain, a Computer Scientist goes through a set of steps in order to provide a solution for the problem. These steps include: (1) understanding the problem; (2) formulating the problem mathematically; (3) designing an algorithm; (4) implementing the algorithm; and (5) solving the original scientific problem. This course will train students in how to employ algorithmic thinking by following these five steps to solve real-world problems.&nbsp;Understanding the problem entails holding conversations with domain experts to understand the parameters of the problem, what data they can provide to the computer program, what answers they expect, etc. Formulating the problem mathematically is basically the step of turning the problem from an English description to a mathematical description that is amenable to further computational analyses.&nbsp;While the course emphasizes implementing the algorithms and solving the original problems that gave rise to the need for these algorithms in the first place, much of this two-part course (part 1 is availablehere) will be devoted to the third step, namely, algorithm design. Here, the course will introduce students to different algorithm design strategies, as well as mathematical tools for reasoning about the correctness and efficiency of algorithms. &nbsp;SyllabusOur course syllabus can be viewed atwww.codeskulptor.org/coursera/algorithmicthinking.html.",
        "desc_html": "When presented with a problem from a scientific domain, a Computer Scientist\ngoes through a set of steps in order to provide a solution for the problem.\nThese steps include: (1) understanding the problem; (2) formulating the\nproblem mathematically; (3) designing an algorithm; (4) implementing the\nalgorithm; and (5) solving the original scientific problem. This course will\ntrain students in how to employ algorithmic thinking by following these five\nsteps to solve real-world problems.\n\n  \n\nUnderstanding the problem entails holding conversations with domain experts to\nunderstand the parameters of the problem, what data they can provide to the\ncomputer program, what answers they expect, etc. Formulating the problem\nmathematically is basically the step of turning the problem from an English\ndescription to a mathematical description that is amenable to further\ncomputational analyses.\n\n  \n\nWhile the course emphasizes implementing the algorithms and solving the\noriginal problems that gave rise to the need for these algorithms in the first\nplace, much of this two-part course (part 1 is available\n[here](https://www.coursera.org/course/algorithmicthink1)) will be devoted to\nthe third step, namely, algorithm design. Here, the course will introduce\nstudents to different algorithm design strategies, as well as mathematical\ntools for reasoning about the correctness and efficiency of algorithms.  \n\n## Syllabus\n\nOur course syllabus can be viewed at [www.codeskulptor.org/coursera/algorithmi\ncthinking.html](http://www.codeskulptor.org/coursera/algorithmicthinking.html)\n.\n\n",
        "name": "Algorithmic Thinking (Part 2)",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Rice University"
        ],
        "url": "https://www.coursera.org/course/algorithmicthink2",
        "video_url": ""
    },
    {
        "date": "2015-07-06",
        "desc": "A key challenge of mobile platforms is that the apps installed on a device increase the number of potential security vulnerabilities. Mistakes in app development or cloud services can lead to vulnerabilities that cause users data to be stolen, charges to user accounts, and spread of malware to a user\u2019s friends. Ensuring that mobile cloud application developers are aware of potential vulnerabilities and avoid introducing them into their code is an essential part of building a more secure app ecosystem.The course is designed to help students understand how to write more secure mobile cloud applications for Android. Students will be introduced to specific vulnerabilities that have affected well-known apps and be given a wide view of app threats on Android. Developers will also be introduced to the secure coding techniques that can be used to help prevent the introduction of app and cloud service vulnerabilities.The Mobile Cloud Computing with Android (MoCCA) SpecializationThis is the6th courseof the six-courseMobile Cloud Computing with Android (MoCCA) Specialization. It has been designed as part of a Coursera Specialization designed to help learners create complex, cloud-based Android Applications, and includes a final \u201ccapstone\u201d project for those who earn Verified Certificates across all six courses.Note:We are proud to announce that the MoCCA specialization has already reached hundreds of thousands of learners around the globe. In its last iteration, we worked with Google to provide Nexus tablets, feedback from the Google App team, and the potential to be featured in the Google Play store to top course completers.This time around, we are providing more flexibility for all of you busy learners. We are running the Programming Mobile Applications courses in more digestible one-month-long sections, each with a meaningful mini-project at the end. Additionally, we will be re-offering the courses more frequently. For example, new sessions of my two introductory courses will be launched on a monthly basis, so that you can find a convenient time to join us or pick up where you left off if you didn\u2019t quite finish before.For previous MoCCA students:If you have already earned a Verified Certificate in the previous version of this course, \"Pattern-Oriented Software Architectures: Programming Mobile Services for Android Handheld Systems\u201d offered in May 2014, you do not need to retake this course to continue towards the Specialization certificate and final project in 2015. Please consult theSpecializations Help Centeror contact theCoursera support teamif you are not sure whether you qualify.This MOOC and five others, taught by Dr. Adam Porter from the University of Maryland and Dr. Jules White from Vanderbilt University, have been designed to complement each other as part of the first trans-institution sequence of MOOCs taught on the Coursera platform, structured as follows:The first two courses by Dr. Adam Porter, of the University of Maryland, areProgramming Mobile Applications for Android Handheld Systems Part 1andPart 2. They focus on the design and programming of user-facing applications. &nbsp;The third and fourth courses by Dr. Douglas Schmidt, of Vanderbilt University, areProgramming Mobile Services for Android Handheld Systems: ConcurrencyandCommunication. They focus on middleware systems programming topics, such as synchronous and asynchronous concurrency models, background service processing, structured data management, local inter-process communication and networking, and integration with cloud-based services. &nbsp;The fifth and sixth courses by Dr. Jules White, of Vanderbilt University, areProgramming Cloud Services for Android Handheld Systems: SpringandSecurity. &nbsp;They focus on how to connect Android mobile devices to cloud computing and data storage resources, essentially turning a device into an extension of powerful cloud-based services on popular cloud computing platforms, such as Google App Engine and Amazon EC2.The final \u201ccapstone\u201d project will require students to develop a complex mobile cloud computing application from the ground up.Some of the programming assignments and the iRemember integrative project for these MOOCs will be coordinated. &nbsp;If you just want to take some of the MOOCs in this sequence or take them all in different order you\u2019re certainly welcome to do so, and you\u2019ll still learn a lot. However, if you take all the MOOCs in this sequence in the order presented you\u2019ll gain a deeper, end-to-end understanding of handheld systems, their applications and services, as well as their integration into the cloud.SyllabusThe course is organized into the sections outlined below.Module 1: Android App Security and RisksPart 1: Traditional App AccountsPart 2: Mobile vs. Traditional App AccountsPart 3: App Account Mapping to Linux UsersPart 4: Apps Lie &amp; StealPart 5: How Android Protects AppsPart 6: What Android Doesn't ProtectPart 7: Avoid Storing Sensitive Data in Public LocationsPart 8: Risks of Insecure File PermissionsModule 2: Building More Secure Android AppsPart 0: The Challenge of Secure CodingPart 1: Security Vulnerability WalkthroughPart 2: Principles of Secure AbstractionsPart 3: Avoid Coupling Data &amp; Security StatePart 4: Build Abstractions that are Hard to Use InsecurelyPart 5: Bound &amp; Strongly Type Security StatePart 6: Avoid Conditional Logic in Secure PathwaysPart 7: Prevent Secure Pathways from Being Broken at RuntimePart 8: Privilege Escalation ConceptsPart 9: Privilege Escalation ScenarioPart 10: Privilege Escalation Code WalkthroughPart 11: Privilege Escalation FixesPart 12: User Interface AttacksPart 13: Cross-platform User Interface AttacksModule 3: Secure HTTP CommunicationPart 1: Man in the Middle Attacks Public Key InfrastructurePart 2: HTTPSPart 3: Challenges of Storing Secrets on MobilePart 4: WebView Security Issues &amp; Best PracticesModule 4: What was I Saying: Keeping Track of SessionsPart 1: SessionsPart 2: Spring Security OverviewPart 3: Spring Security Configuration in JavaPart 4: Building a Custom UserDetailsServicePart 5: Setting up a custom UserDetailsServicePart 6: The PrincipalPart 7: Spring Security Role AnnotationsPart 8: More Complex Expression-based Pre Post Authorize AnnotationsPart 9: Spring Security Controller Code WalkthroughPart 10: Spring Security Controller Test Code WalkthroughModule 5: Authenticating Mobile Clients with OAuthPart 1: Stateful Sessions with Cookies Why They Aren't Ideal for MobilePart 2: Stateless Sessions with TokensPart 3: OAuth 2.0Part 4: Spring Security OAuth 2.0Part 5: A Spring OAuth 2.0 Secured ServicePart 6: A Retrofit Oauth 2.0 Client for Password Grants",
        "desc_html": "A key challenge of mobile platforms is that the apps installed on a device\nincrease the number of potential security vulnerabilities. Mistakes in app\ndevelopment or cloud services can lead to vulnerabilities that cause users\ndata to be stolen, charges to user accounts, and spread of malware to a user\u2019s\nfriends. Ensuring that mobile cloud application developers are aware of\npotential vulnerabilities and avoid introducing them into their code is an\nessential part of building a more secure app ecosystem.\n\nThe course is designed to help students understand how to write more secure\nmobile cloud applications for Android. Students will be introduced to specific\nvulnerabilities that have affected well-known apps and be given a wide view of\napp threats on Android. Developers will also be introduced to the secure\ncoding techniques that can be used to help prevent the introduction of app and\ncloud service vulnerabilities.\n\n**The Mobile Cloud Computing with Android (MoCCA) Specialization**\n\nThis is the **6th course** of the six-course [Mobile Cloud Computing with\nAndroid (MoCCA) Specialization](https://www.coursera.org/specialization/mobile\ncloudcomputing/2). It has been designed as part of a Coursera Specialization\ndesigned to help learners create complex, cloud-based Android Applications,\nand includes a final \u201ccapstone\u201d project for those who earn Verified\nCertificates across all six courses.\n\n**Note: **We are proud to announce that the MoCCA specialization has already reached hundreds of thousands of learners around the globe. In its last iteration, we worked with Google to provide Nexus tablets, feedback from the Google App team, and the potential to be featured in the Google Play store to top course completers.\n\nThis time around, we are providing more flexibility for all of you busy\nlearners. We are running the Programming Mobile Applications courses in more\ndigestible one-month-long sections, each with a meaningful mini-project at the\nend. Additionally, we will be re-offering the courses more frequently. For\nexample, new sessions of my two introductory courses will be launched on a\nmonthly basis, so that you can find a convenient time to join us or pick up\nwhere you left off if you didn\u2019t quite finish before.\n\n**For previous MoCCA students:** If you have already earned a Verified Certificate in the previous version of this course, \"Pattern-Oriented Software Architectures: Programming Mobile Services for Android Handheld Systems\u201d offered in May 2014, you do not need to retake this course to continue towards the Specialization certificate and final project in 2015. Please consult the [Specializations Help Center](https://courserahelp.zendesk.com/hc/en-us/articles/201223289-Specializations) or contact the [Coursera support team](https://courserahelp.zendesk.com/hc/en-us/requests/new?ticket_form_id=19009) if you are not sure whether you qualify.\n\nThis MOOC and five others, taught by Dr. Adam Porter from the University of\nMaryland and Dr. Jules White from Vanderbilt University, have been designed to\ncomplement each other as part of the first trans-institution sequence of MOOCs\ntaught on the Coursera platform, structured as follows:\n\n  * The first two courses by Dr. Adam Porter, of the University of Maryland, are [Programming Mobile Applications for Android Handheld Systems Part 1](https://www.coursera.org/course/androidpart1) and [Part 2](https://www.coursera.org/course/androidpart2). They focus on the design and programming of user-facing applications.  \n\n  * The third and fourth courses by Dr. Douglas Schmidt, of Vanderbilt University, are [Programming Mobile Services for Android Handheld Systems: Concurrency](https://www.coursera.org/course/posaconcurrency) and [Communication](https://www.coursera.org/course/posacommunication). They focus on middleware systems programming topics, such as synchronous and asynchronous concurrency models, background service processing, structured data management, local inter-process communication and networking, and integration with cloud-based services.  \n\n  * The fifth and sixth courses by Dr. Jules White, of Vanderbilt University, are [Programming Cloud Services for Android Handheld Systems: Spring](https://www.coursera.org/course/mobilecloudprogram) and [Security](https://www.coursera.org/course/mobilecloudsecurity).  They focus on how to connect Android mobile devices to cloud computing and data storage resources, essentially turning a device into an extension of powerful cloud-based services on popular cloud computing platforms, such as Google App Engine and Amazon EC2. \n\n  * The final \u201ccapstone\u201d project will require students to develop a complex mobile cloud computing application from the ground up.\n\nSome of the programming assignments and the iRemember integrative project for\nthese MOOCs will be coordinated.  \n\nIf you just want to take some of the MOOCs in this sequence or take them all\nin different order you\u2019re certainly welcome to do so, and you\u2019ll still learn a\nlot. However, if you take all the MOOCs in this sequence in the order\npresented you\u2019ll gain a deeper, end-to-end understanding of handheld systems,\ntheir applications and services, as well as their integration into the cloud.\n\n## Syllabus\n\nThe course is organized into the sections outlined below.\n\n  * Module 1: Android App Security and Risks\n\n    * Part 1: Traditional App Accounts\n\n    * Part 2: Mobile vs. Traditional App Accounts\n\n    * Part 3: App Account Mapping to Linux Users\n\n    * Part 4: Apps Lie & Steal\n\n    * Part 5: How Android Protects Apps\n\n    * Part 6: What Android Doesn't Protect\n\n    * Part 7: Avoid Storing Sensitive Data in Public Locations\n\n    * Part 8: Risks of Insecure File Permissions\n\n  * Module 2: Building More Secure Android Apps\n\n    * Part 0: The Challenge of Secure Coding\n\n    * Part 1: Security Vulnerability Walkthrough\n\n    * Part 2: Principles of Secure Abstractions\n\n    * Part 3: Avoid Coupling Data & Security State\n\n    * Part 4: Build Abstractions that are Hard to Use Insecurely\n\n    * Part 5: Bound & Strongly Type Security State\n\n    * Part 6: Avoid Conditional Logic in Secure Pathways\n\n    * Part 7: Prevent Secure Pathways from Being Broken at Runtime\n\n    * Part 8: Privilege Escalation Concepts\n\n    * Part 9: Privilege Escalation Scenario\n\n    * Part 10: Privilege Escalation Code Walkthrough\n\n    * Part 11: Privilege Escalation Fixes\n\n    * Part 12: User Interface Attacks\n\n    * Part 13: Cross-platform User Interface Attacks\n\n  * Module 3: Secure HTTP Communication\n\n    * Part 1: Man in the Middle Attacks Public Key Infrastructure\n\n    * Part 2: HTTPS\n\n    * Part 3: Challenges of Storing Secrets on Mobile\n\n    * Part 4: WebView Security Issues & Best Practices\n\n  * Module 4: What was I Saying: Keeping Track of Sessions\n\n    * Part 1: Sessions\n\n    * Part 2: Spring Security Overview\n\n    * Part 3: Spring Security Configuration in Java\n\n    * Part 4: Building a Custom UserDetailsService\n\n    * Part 5: Setting up a custom UserDetailsService\n\n    * Part 6: The Principal\n\n    * Part 7: Spring Security Role Annotations\n\n    * Part 8: More Complex Expression-based Pre Post Authorize Annotations\n\n    * Part 9: Spring Security Controller Code Walkthrough\n\n    * Part 10: Spring Security Controller Test Code Walkthrough\n\n  * Module 5: Authenticating Mobile Clients with OAuth\n\n    * Part 1: Stateful Sessions with Cookies Why They Aren't Ideal for Mobile\n\n    * Part 2: Stateless Sessions with Tokens\n\n    * Part 3: OAuth 2.0\n\n    * Part 4: Spring Security OAuth 2.0\n\n    * Part 5: A Spring OAuth 2.0 Secured Service\n\n    * Part 6: A Retrofit Oauth 2.0 Client for Password Grants\n\n",
        "name": "Programming Cloud Services for Android Handheld Systems: Security",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Vanderbilt University"
        ],
        "url": "https://www.coursera.org/course/mobilecloudsecurity",
        "video_url": ""
    },
    {
        "date": "2015-06-08",
        "desc": "This course will cover themajor techniques for mining and analyzing text datato discover interesting patterns, extract useful knowledge, and support decision making, with an emphasis on statistical approaches that can be generally applied to arbitrary text data in any natural language with no or minimum human effort.Detailed analysis of text data requiresunderstanding of natural language text, which is known to be a difficult task for computers. However, a number ofstatistical approacheshave been shown to work well for the \"shallow\" butrobust analysis of text datafor pattern finding and knowledge discovery. You will learn the basicconcepts, principles, and major algorithms in text miningand their potential applications.SyllabusThis course will be covering the following topics:Overview of text analytics and applicationsExtending a search engine to support text analytics (text categorization, text clustering, text summarization)Topic mining and analysis with statistical topic modelsOpinion mining and summarizationIntegrative analysis of text and structured data",
        "desc_html": "This course will cover the **major techniques for mining and analyzing text\ndata** to discover interesting patterns, extract useful knowledge, and support\ndecision making, with an emphasis on statistical approaches that can be\ngenerally applied to arbitrary text data in any natural language with no or\nminimum human effort.\n\nDetailed analysis of text data requires **understanding of natural language\ntext**, which is known to be a difficult task for computers. However, a number\nof **statistical approaches** have been shown to work well for the \"shallow\"\nbut **robust analysis of text data** for pattern finding and knowledge\ndiscovery. You will learn the basic **concepts, principles, and major\nalgorithms in text mining** and their potential applications.\n\n## Syllabus\n\nThis course will be covering the following topics:\n\n  * Overview of text analytics and applications\n  * Extending a search engine to support text analytics (text categorization, text clustering, text summarization)\n  * Topic mining and analysis with statistical topic models\n  * Opinion mining and summarization\n  * Integrative analysis of text and structured data\n\n",
        "name": "Text Mining and Analytics",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of Illinois at Urbana-Champaign"
        ],
        "url": "https://www.coursera.org/course/textanalytics",
        "video_url": ""
    },
    {
        "date": "2015-06-01",
        "desc": "Cryptography is an indispensable tool for protecting information in computer systems. &nbsp;This course is a continuation ofCrypto Iand explains the inner workings of public-key systems and cryptographic protocols. &nbsp; Students will learn how to reason about the security of cryptographic constructions and how to apply this knowledge to real-world applications. The course begins with constructions for digital signatures and their applications. &nbsp; We will then discuss protocols for user authentication and zero-knowledge protocols. &nbsp; &nbsp;Next we will turn to privacy applications of cryptography supporting anonymous credentials and private database lookup. &nbsp;We will conclude with more advanced topics including multi-party computation and elliptic curve cryptography. &nbsp;Throughout the course students will be exposed to many exciting open problems in the field. &nbsp; The course will include written homeworks and optional programming labs. &nbsp;The material is self-contained, but the course assumes knowledge of the topics covered inCrypto Ias well as a basic understanding of discrete probability theory.",
        "desc_html": "Cryptography is an indispensable tool for protecting information in computer\nsystems.  This course is a continuation of [Crypto\nI](https://www.coursera.org/course/crypto) and explains the inner workings of\npublic-key systems and cryptographic protocols.   Students will learn how to\nreason about the security of cryptographic constructions and how to apply this\nknowledge to real-world applications. The course begins with constructions for\ndigital signatures and their applications.   We will then discuss protocols\nfor user authentication and zero-knowledge protocols.    Next we will turn to\nprivacy applications of cryptography supporting anonymous credentials and\nprivate database lookup.  We will conclude with more advanced topics including\nmulti-party computation and elliptic curve cryptography.  Throughout the\ncourse students will be exposed to many exciting open problems in the field.\nThe course will include written homeworks and optional programming labs.  The\nmaterial is self-contained, but the course assumes knowledge of the topics\ncovered in [Crypto I](https://www.coursera.org/course/crypto) as well as a\nbasic understanding of discrete probability theory.\n\n",
        "name": "Cryptography II",
        "provider": "Coursera",
        "rating": "5",
        "reviews": "1",
        "university": [
            "Stanford University"
        ],
        "url": "https://www.coursera.org/course/crypto2",
        "video_url": ""
    },
    {
        "date": "2015-06-01",
        "desc": "This course is specifically designed to be a first programming course using the popular Python programming language. The pace of the course is designed to lead to mastery of each of the topics in the class. We will use simple data analysis as the programming exercises through the course. Understanding how to process data is valuable for everyone regardless of your career. This course might kindle an interest in more advanced programming courses or courses in web design and development or just provide skills when you are faced with a bunch of data that you need to analyze.&nbsp;You can do the programming assignments for the class using a web browser or using your personal computer. All required software for the course is free.&nbsp;SyllabusWeek One: Introduction - Why we program?Week Two: Variables and ExpressionsWeek Three: Conditional codeWeek Four: FunctionsWeek Five: Loops and IterationWeek Six: StringsWeek Seven: FilesWeek Eight: ListsWeek Nine: DictionariesWeek Ten: TuplesOptional Topic: Regular Expressions",
        "desc_html": "This course is specifically designed to be a first programming course using\nthe popular Python programming language. The pace of the course is designed to\nlead to mastery of each of the topics in the class. We will use simple data\nanalysis as the programming exercises through the course. Understanding how to\nprocess data is valuable for everyone regardless of your career. This course\nmight kindle an interest in more advanced programming courses or courses in\nweb design and development or just provide skills when you are faced with a\nbunch of data that you need to analyze. You can do the programming assignments\nfor the class using a web browser or using your personal computer. All\nrequired software for the course is free.\n\n## Syllabus\n\nWeek One: Introduction - Why we program?  \nWeek Two: Variables and Expressions  \nWeek Three: Conditional code  \nWeek Four: Functions  \nWeek Five: Loops and Iteration  \nWeek Six: Strings  \nWeek Seven: Files  \nWeek Eight: Lists  \nWeek Nine: Dictionaries  \nWeek Ten: Tuples  \nOptional Topic: Regular Expressions  \n  \n  \n\n",
        "name": "Programming for Everybody (Python)",
        "provider": "Coursera",
        "rating": "4.6666666666667",
        "reviews": "18",
        "university": [
            "University of Michigan"
        ],
        "url": "https://www.coursera.org/course/pythonlearn",
        "video_url": ""
    },
    {
        "date": "2015-06-01",
        "desc": "This MOOC describes by example how to connect Android mobile devices to clouds via the use of object-oriented design techniques, Java programming language features,&nbsp;Jetty&nbsp;middleware,&nbsp;Java Servlets, the&nbsp;Java Spring Framework, and&nbsp;cloud computing platforms, such as&nbsp;Google App Engine. Although there will be 10 weeks of lecture material, the required core of the course is six weeks long and can be completed flexibly within the ten week schedule to provide flexibility for students during the summer.An extended case study project will be used throughout the required core of the MOOC to showcase architectures for communicating with the cloud using HTTP, server-side processing of mobile data using servlets and the Java Spring Framework, and scalable storage of data using no-SQL databases and other platforms. Due to the importance of building secure and scalable mobile/cloud platforms, this MOOC will not only show you how to program handheld systems that talk to the cloud, but how to do so securely, scalably, and efficiently. Security and scalability topics will be woven into discussions of cloud service creation so that students learn, from the start, how to create robust cloud services for mobile devices.Four weeks of optional lecture material will also be provided for students who would like to gain a deeper understanding of the patterns and frameworks for building cloud infrastructure building. This material will be presented in the context of the open-source&nbsp;JAWS&nbsp;web server, which is implemented in C++ as part of the&nbsp;ACE&nbsp;open-source object-oriented concurrent and networked programming toolkit.Although the cloud service topics in this course will be taught in the context of connecting mobile devices to the cloud, the concepts are broader and will give students the ability to create the cloud services to support large-scale web applications, such as social networking applications; cloud services for embedded systems, such as the Internet of Things and Industrial Internet; and wearable computing devices, such as Google Glass.The Mobile Cloud Computing with Android (MoCCA) SpecializationThis is the5th course&nbsp;of the six-course&nbsp;Mobile Cloud Computing with Android (MoCCA) Specialization. It has been designed as part of a Coursera Specialization designed to help learners create complex, cloud-based Android Applications, and includes a final \u201ccapstone\u201d project for those who earn Verified Certificates across all six courses.Note:&nbsp;We are proud to announce that the MoCCA specialization has already reached hundreds of thousands of learners around the globe. In its last iteration, we worked with Google to provide Nexus tablets, feedback from the Google App team, and the potential to be featured in the Google Play store to top course completers.This time around, we are providing more flexibility for all of you busy learners. We are running the Programming Mobile Applications courses in more digestible one-month-long sections, each with a meaningful mini-project at the end. Additionally, we will be re-offering the courses more frequently. For example, new sessions of my two introductory courses will be launched on a monthly basis, so that you can find a convenient time to join us or pick up where you left off if you didn\u2019t quite finish before.For previous MoCCA students:&nbsp;If you have already earned a Verified Certificate in the previous version of this course, \"Pattern-Oriented Software Architectures: Programming Mobile Services for Android Handheld Systems\u201d offered in May 2014, you do not need to retake this course to continue towards the Specialization certificate and final project in 2015. Please consult the&nbsp;Specializations Help Center&nbsp;or contact the&nbsp;Coursera support team&nbsp;if you are not sure whether you qualify.This MOOC and five others, taught by Dr. Adam Porter from the University of Maryland and Dr. Jules White from Vanderbilt University, have been designed to complement each other as part of the first trans-institution sequence of MOOCs taught on the Coursera platform, structured as follows:The first two courses by Dr. Adam Porter, of the University of Maryland, are&nbsp;Programming Mobile Applications for Android Handheld Systems Part 1&nbsp;and&nbsp;Part 2. They focus on the design and programming of user-facing applications. &nbsp;The third and fourth courses by Dr. Douglas Schmidt, of Vanderbilt University, are&nbsp;Programming Mobile Services for Android Handheld Systems: Concurrency&nbsp;and&nbsp;Communication. They focus on middleware systems programming topics, such as synchronous and asynchronous concurrency models, background service processing, structured data management, local inter-process communication and networking, and integration with cloud-based services. &nbsp;The fifth and sixth courses by Dr. Jules White, of Vanderbilt University, are&nbsp;Programming Cloud Services for Android Handheld Systems: Spring&nbsp;and&nbsp;Security. &nbsp;They focus on how to connect Android mobile devices to cloud computing and data storage resources, essentially turning a device into an extension of powerful cloud-based services on popular cloud computing platforms, such as Google App Engine and Amazon EC2.The final \u201ccapstone\u201d project will require students to develop a complex mobile cloud computing application from the ground up.Some of the programming assignments and the iRemember integrative project for these MOOCs will be coordinated. &nbsp;If you just want to take some of the MOOCs in this sequence or take them all in different order you\u2019re certainly welcome to do so, and you\u2019ll still learn a lot. However, if you take all the MOOCs in this sequence in the order presented you\u2019ll gain a deeper, end-to-end understanding of handheld systems, their applications and services, as well as their integration into the cloud.SyllabusThe course is organized into the sections outlined below.Section 1: Talking to the Cloud with HTTPModule 1: The HTTP ProtocolIntroductionWhat are Communication Protocols?Intro to HTTPWhy HTTP?What is a cloud service?HTTP Request MethodsHTTP Request AnatomyURLs Query ParametersMime Types Content Type HeaderRequest Body EncodingHTTP Response AnatomyHTTP Response CodesCookiesModule 2: Designing Applications with HTTP CommunicationBuilding Cloud Services on HTTPProtocol Layering / HTTP Design MethodologiesRESTHTTP PollingPush MessagingSection 2: Building Java Cloud ServicesModule 1: Java ServletsWhat are Servlets?A First Cloud Service with a ServletWeb.xmlVideo Servlet Code WalkthroughVideo Servlet Test Walkthrough with HttpClientSecurely Handling Client Data Avoiding Injection AttacksModule 2: Better Abstractions for Building Java Cloud ServicesIntro to Java AnnotationsHTTP to Object MarshallingIntro to JSONThe Spring Dispatcher Servlet and the Controller AbstractionIntro to Spring ControllersAccepting Client Data with RequestParam AnnotationsAccepting Client Data with PathVar AnnotationsAccepting Client Data with RequestBody Annotations and JSONHandling Multipart DataGenerating Responses with the ResponseBody AnnotationCustom Marshalling with Jackson Annotations Serializers/DeserializersSpring Boot Application StructureSpring Controller Code WalkthroughSpring Controller Test Code WalkthroughModule 3: Better Client-side Communication AbstractionsIntroduction to RetrofitRetrofit Client Code WalkthroughAndroid Retrofit Client Code WalkthroughModule 4: Building Loosely Coupled and Extensible Java ServicesSpring Dependency Injection Auto-wiringSpring Configuration AnnotationsSpring Dependency Injection Controller Code WalkthroughSpring Dependency Injection Controller Test Code WalkthroughSection 3: Building Database-driven Java Cloud ServicesModule 1: Persistent ObjectsObject to DB MappingJPAEntitiesRepositoriesUnderstanding SQL Injection AttacksSpring Data Code WalkthroughModule 2: RESTful Services for Persistent ObjectsSpring Data RESTSpring Data REST Code WalkthroughSection 4: Restricting Service Access with User AccountsModule 1: Secure HTTP CommunicationMan in the Middle Attacks Public Key InfrastructureHTTPSModule 2: What was I Saying: Keeping Track of SessionsSessionsSpring Security OverviewSpring Security Configuration in JavaBuilding a Custom UserDetailsServiceSetting up a custom UserDetailsServiceThe PrincipalSpring Security Role AnnotationsMore Complex Expression-based Pre Post Authorize AnnotationsSpring Security Controller Code WalkthroughSpring Security Controller Test Code WalkthroughModule 3: Authenticating Mobile ClientsStateful Sessions with Cookies Why They Aren't Ideal for MobileStateless Sessions with TokensOAuth 2.0Spring Security OAuth 2.0A Spring OAuth 2.0 Secured ServiceA Retrofit Oauth 2.0 Client for Password GrantsSection 5: Deploying to the Cloud ScalingModule 1: General Scaling StrategiesStateless vs. Stateful ApplicationsHorizontal ScalingAuto-scaling HorizontallyCachingOffloading to Cloud Provider ServicesAsynchronous IO in ControllersModule 2: Scaling Up Data StorageNoSQL DatabasesOptimizing for Key-based LookupsOptimizing for Reads vs. WritesContention ShardingMongo DBSpring Data Mongo DBDatabase as a ServiceAmazon DynamoSpring Data Dynamo DBApp Engine Big TableModule 3: Automating Packaging DeploymentDeploying to Infrastructure as a ServiceDeploying to Amazon EC2Packaging Web Applications into WAR filesAdapting Spring Boot Applications for Google App EngineDeploying to App EngineModule 4: Performance TestingIntro to Cloud Service Performance TestingApache JMeterBuilding Realistic TestsSection 6: Patterns and Frameworks for Concurrent and Networked Server Software [Optional Material]Module 1: Introduction to the Web Server Case StudyApplying Patterns and Frameworks to Concurrent and Networked SoftwareOverview of JAWS Web Server Case Study: Part 1Overview of JAWS Web Server Case Study: Part 2Overview of JAWS Web Server Case Study: Part 3Module 2: Patterns and Frameworks for Service Access and CommunicationAccidental Complexities with the Sockets APIThe Wrapper Facade PatternACE C++ Socket Wrapper FacadesApplying the ACE Wrapper Facades to a Web Client and ServerModule 3: Patterns and Frameworks for Synchronous Event Handling, Connections, and Service InitializationThe Reactor and Acceptor-Connector PatternsThe ACE Reactor FrameworkApplying the ACE Reactor to JAWSThe ACE Acceptor-Connector Framework and Applying it to JAWSPatterns and Frameworks for Service Configuration and ActiviationThe Component Configurator PatternThe ACE Service Configurator FrameworkApplying the ACE Service Configurator to JAWSApplying the Activator Pattern to JAWSPatterns and Frameworks for Concurrency and SynchronizationThe Active Object PatternThe ACE Task FrameworkApplying ACE Task and Acceptor-Connector to JAWSThe Half-Sync/Half-Async PatternImplementing Half-Sync/Half-Async Using ACEThe Monitor Object PatternApplying the Monitor Object and Synchronization Patterns to JAWSThe Leader/Followers PatternApplying the Leader/Followers Pattern and ACE_TP_Reactor to JAWSPatterns and Frameworks for Asynchronous Event HandlingThe Proactor patternThe ACE Proactor FrameworkApplying the ACE Proactor Framework to JAWSThe Asynchronous Completion Token Pattern and Applying it to JAWSSummaryEvaluating Patterns and Frameworks for Concurrent and Networked Software",
        "desc_html": "This MOOC describes by example how to connect Android mobile devices to clouds\nvia the use of object-oriented design techniques, Java programming language\nfeatures, [Jetty](http://www.eclipse.org/jetty/) middleware, [Java\nServlets](http://www.oracle.com/technetwork/java/index-jsp-135475.html), the\n[Java Spring Framework](http://projects.spring.io/spring-framework/), and\n[cloud computing platforms](http://en.wikipedia.org/wiki/Cloud_computing),\nsuch as [Google App Engine](https://developers.google.com/appengine/).\nAlthough there will be 10 weeks of lecture material, the required core of the\ncourse is six weeks long and can be completed flexibly within the ten week\nschedule to provide flexibility for students during the summer.\n\nAn extended case study project will be used throughout the required core of\nthe MOOC to showcase architectures for communicating with the cloud using\nHTTP, server-side processing of mobile data using servlets and the Java Spring\nFramework, and scalable storage of data using no-SQL databases and other\nplatforms. Due to the importance of building secure and scalable mobile/cloud\nplatforms, this MOOC will not only show you how to program handheld systems\nthat talk to the cloud, but how to do so securely, scalably, and efficiently.\nSecurity and scalability topics will be woven into discussions of cloud\nservice creation so that students learn, from the start, how to create robust\ncloud services for mobile devices.\n\nFour weeks of optional lecture material will also be provided for students who\nwould like to gain a deeper understanding of the patterns and frameworks for\nbuilding cloud infrastructure building. This material will be presented in the\ncontext of the open-source [JAWS](http://www.dre.vanderbilt.edu/JAWS/) web\nserver, which is implemented in C++ as part of the\n[ACE](http://www.dre.vanderbilt.edu/ACE/) open-source object-oriented\nconcurrent and networked programming toolkit.\n\nAlthough the cloud service topics in this course will be taught in the context\nof connecting mobile devices to the cloud, the concepts are broader and will\ngive students the ability to create the cloud services to support large-scale\nweb applications, such as social networking applications; cloud services for\nembedded systems, such as the Internet of Things and Industrial Internet; and\nwearable computing devices, such as Google Glass.\n\n**The Mobile Cloud Computing with Android (MoCCA) Specialization**\n\nThis is the **5th course** of the six-course [Mobile Cloud Computing with\nAndroid (MoCCA) Specialization](https://www.coursera.org/specialization/mobile\ncloudcomputing/2). It has been designed as part of a Coursera Specialization\ndesigned to help learners create complex, cloud-based Android Applications,\nand includes a final \u201ccapstone\u201d project for those who earn Verified\nCertificates across all six courses.\n\n**Note: **We are proud to announce that the MoCCA specialization has already reached hundreds of thousands of learners around the globe. In its last iteration, we worked with Google to provide Nexus tablets, feedback from the Google App team, and the potential to be featured in the Google Play store to top course completers.\n\nThis time around, we are providing more flexibility for all of you busy\nlearners. We are running the Programming Mobile Applications courses in more\ndigestible one-month-long sections, each with a meaningful mini-project at the\nend. Additionally, we will be re-offering the courses more frequently. For\nexample, new sessions of my two introductory courses will be launched on a\nmonthly basis, so that you can find a convenient time to join us or pick up\nwhere you left off if you didn\u2019t quite finish before.\n\n**For previous MoCCA students:** If you have already earned a Verified Certificate in the previous version of this course, \"Pattern-Oriented Software Architectures: Programming Mobile Services for Android Handheld Systems\u201d offered in May 2014, you do not need to retake this course to continue towards the Specialization certificate and final project in 2015. Please consult the [Specializations Help Center](https://courserahelp.zendesk.com/hc/en-us/articles/201223289-Specializations) or contact the [Coursera support team](https://courserahelp.zendesk.com/hc/en-us/requests/new?ticket_form_id=19009) if you are not sure whether you qualify.\n\nThis MOOC and five others, taught by Dr. Adam Porter from the University of\nMaryland and Dr. Jules White from Vanderbilt University, have been designed to\ncomplement each other as part of the first trans-institution sequence of MOOCs\ntaught on the Coursera platform, structured as follows:\n\n  * The first two courses by Dr. Adam Porter, of the University of Maryland, are [Programming Mobile Applications for Android Handheld Systems Part 1](https://www.coursera.org/course/androidpart1) and [Part 2](https://www.coursera.org/course/androidpart2). They focus on the design and programming of user-facing applications.  \n\n  * The third and fourth courses by Dr. Douglas Schmidt, of Vanderbilt University, are [Programming Mobile Services for Android Handheld Systems: Concurrency](https://www.coursera.org/course/posaconcurrency) and [Communication](https://www.coursera.org/course/posacommunication). They focus on middleware systems programming topics, such as synchronous and asynchronous concurrency models, background service processing, structured data management, local inter-process communication and networking, and integration with cloud-based services.  \n\n  * The fifth and sixth courses by Dr. Jules White, of Vanderbilt University, are [Programming Cloud Services for Android Handheld Systems: Spring](https://www.coursera.org/course/mobilecloudprogram) and [Security](https://www.coursera.org/course/mobilecloudsecurity).  They focus on how to connect Android mobile devices to cloud computing and data storage resources, essentially turning a device into an extension of powerful cloud-based services on popular cloud computing platforms, such as Google App Engine and Amazon EC2.\n\n  * The final \u201ccapstone\u201d project will require students to develop a complex mobile cloud computing application from the ground up.\n\nSome of the programming assignments and the iRemember integrative project for\nthese MOOCs will be coordinated.  \n\nIf you just want to take some of the MOOCs in this sequence or take them all\nin different order you\u2019re certainly welcome to do so, and you\u2019ll still learn a\nlot. However, if you take all the MOOCs in this sequence in the order\npresented you\u2019ll gain a deeper, end-to-end understanding of handheld systems,\ntheir applications and services, as well as their integration into the cloud.\n\n## Syllabus\n\nThe course is organized into the sections outlined below.\n\n**Section 1: Talking to the Cloud with HTTP**  \n\n  * Module 1: The HTTP Protocol\n    * Introduction\n    * What are Communication Protocols?\n    * Intro to HTTP\n    * Why HTTP?\n    * What is a cloud service?\n    * HTTP Request Methods\n    * HTTP Request Anatomy\n    * URLs Query Parameters\n    * Mime Types Content Type Header\n    * Request Body Encoding\n    * HTTP Response Anatomy\n    * HTTP Response Codes\n    * Cookies\n  * Module 2: Designing Applications with HTTP Communication\n    * Building Cloud Services on HTTP\n    * Protocol Layering / HTTP Design Methodologies\n    * REST\n    * HTTP Polling\n    * Push Messaging\n**Section 2: Building Java Cloud Services**\n\n  * Module 1: Java Servlets\n    * What are Servlets?\n    * A First Cloud Service with a Servlet\n    * Web.xml\n    * Video Servlet Code Walkthrough\n    * Video Servlet Test Walkthrough with HttpClient\n    * Securely Handling Client Data Avoiding Injection Attacks\n  * Module 2: Better Abstractions for Building Java Cloud Services\n    * Intro to Java Annotations\n    * HTTP to Object Marshalling\n    * Intro to JSON\n    * The Spring Dispatcher Servlet and the Controller Abstraction\n    * Intro to Spring Controllers\n    * Accepting Client Data with RequestParam Annotations\n    * Accepting Client Data with PathVar Annotations\n    * Accepting Client Data with RequestBody Annotations and JSON\n    * Handling Multipart Data\n    * Generating Responses with the ResponseBody Annotation\n    * Custom Marshalling with Jackson Annotations Serializers/Deserializers\n    * Spring Boot Application Structure\n    * Spring Controller Code Walkthrough\n    * Spring Controller Test Code Walkthrough\n  * Module 3: Better Client-side Communication Abstractions\n    * Introduction to Retrofit\n    * Retrofit Client Code Walkthrough\n    * Android Retrofit Client Code Walkthrough\n  * Module 4: Building Loosely Coupled and Extensible Java Services\n    * Spring Dependency Injection Auto-wiring\n    * Spring Configuration Annotations\n    * Spring Dependency Injection Controller Code Walkthrough\n    * Spring Dependency Injection Controller Test Code Walkthrough\n**Section 3: Building Database-driven Java Cloud Services**\n\n  * Module 1: Persistent Objects\n    * Object to DB Mapping\n    * JPA\n    * Entities\n    * Repositories\n    * Understanding SQL Injection Attacks\n    * Spring Data Code Walkthrough\n  * Module 2: RESTful Services for Persistent Objects\n    * Spring Data REST\n    * Spring Data REST Code Walkthrough\n**Section 4: Restricting Service Access with User Accounts**\n\n  * Module 1: Secure HTTP Communication\n    * Man in the Middle Attacks Public Key Infrastructure\n    * HTTPS\n  * Module 2: What was I Saying: Keeping Track of Sessions\n    * Sessions\n    * Spring Security Overview\n    * Spring Security Configuration in Java\n    * Building a Custom UserDetailsService\n    * Setting up a custom UserDetailsService\n    * The Principal\n    * Spring Security Role Annotations\n    * More Complex Expression-based Pre Post Authorize Annotations\n    * Spring Security Controller Code Walkthrough\n    * Spring Security Controller Test Code Walkthrough\n  * Module 3: Authenticating Mobile Clients\n    * Stateful Sessions with Cookies Why They Aren't Ideal for Mobile\n    * Stateless Sessions with Tokens\n    * OAuth 2.0\n    * Spring Security OAuth 2.0\n    * A Spring OAuth 2.0 Secured Service\n    * A Retrofit Oauth 2.0 Client for Password Grants\n**Section 5: Deploying to the Cloud Scaling**\n\n  * Module 1: General Scaling Strategies\n    * Stateless vs. Stateful Applications\n    * Horizontal Scaling\n    * Auto-scaling Horizontally\n    * Caching\n    * Offloading to Cloud Provider Services\n    * Asynchronous IO in Controllers\n  * Module 2: Scaling Up Data Storage\n    * NoSQL Databases\n    * Optimizing for Key-based Lookups\n    * Optimizing for Reads vs. Writes\n    * Contention Sharding\n    * Mongo DB\n    * Spring Data Mongo DB\n    * Database as a Service\n    * Amazon Dynamo\n    * Spring Data Dynamo DB\n    * App Engine Big Table\n  * Module 3: Automating Packaging Deployment\n    * Deploying to Infrastructure as a Service\n    * Deploying to Amazon EC2\n    * Packaging Web Applications into WAR files\n    * Adapting Spring Boot Applications for Google App Engine\n    * Deploying to App Engine\n  * Module 4: Performance Testing\n    * Intro to Cloud Service Performance Testing\n    * Apache JMeter\n    * Building Realistic Tests\n**Section 6: Patterns and Frameworks for Concurrent and Networked Server Software [Optional Material]**\n\n  * Module 1: Introduction to the Web Server Case Study\n    * Applying Patterns and Frameworks to Concurrent and Networked Software\n    * Overview of JAWS Web Server Case Study: Part 1\n    * Overview of JAWS Web Server Case Study: Part 2\n    * Overview of JAWS Web Server Case Study: Part 3\n  * Module 2: Patterns and Frameworks for Service Access and Communication\n    * Accidental Complexities with the Sockets API\n    * The Wrapper Facade Pattern\n    * ACE C++ Socket Wrapper Facades\n    * Applying the ACE Wrapper Facades to a Web Client and Server\n  * Module 3: Patterns and Frameworks for Synchronous Event Handling, Connections, and Service Initialization\n    * The Reactor and Acceptor-Connector Patterns\n    * The ACE Reactor Framework\n    * Applying the ACE Reactor to JAWS\n    * The ACE Acceptor-Connector Framework and Applying it to JAWS\n  * Patterns and Frameworks for Service Configuration and Activiation\n    * The Component Configurator Pattern\n    * The ACE Service Configurator Framework\n    * Applying the ACE Service Configurator to JAWS\n    * Applying the Activator Pattern to JAWS\n  * Patterns and Frameworks for Concurrency and Synchronization\n    * The Active Object Pattern\n    * The ACE Task Framework\n    * Applying ACE Task and Acceptor-Connector to JAWS\n    * The Half-Sync/Half-Async Pattern\n    * Implementing Half-Sync/Half-Async Using ACE\n    * The Monitor Object Pattern\n    * Applying the Monitor Object and Synchronization Patterns to JAWS\n    * The Leader/Followers Pattern\n    * Applying the Leader/Followers Pattern and ACE_TP_Reactor to JAWS\n  * Patterns and Frameworks for Asynchronous Event Handling\n    * The Proactor pattern\n    * The ACE Proactor Framework\n    * Applying the ACE Proactor Framework to JAWS\n    * The Asynchronous Completion Token Pattern and Applying it to JAWS\n  * Summary\n    * Evaluating Patterns and Frameworks for Concurrent and Networked Software\n\n",
        "name": "Programming Cloud Services for Android Handheld Systems: Spring",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Vanderbilt University"
        ],
        "url": "https://www.coursera.org/course/mobilecloudprogram",
        "video_url": ""
    },
    {
        "date": "2015-05-29",
        "desc": "When presented with a problem from a scientific domain, a Computer Scientist goes through a set of steps in order to provide a solution for the problem. These steps include: (1) understanding the problem; (2) formulating the problem mathematically; (3) designing an algorithm; (4) implementing the algorithm; and (5) solving the original scientific problem. This course will train students in how to employ algorithmic thinking by following these five steps to solve real-world problems.&nbsp;Understanding the problem entails holding conversations with domain experts to understand the parameters of the problem, what data they can provide to the computer program, what answers they expect, etc. Formulating the problem mathematically is basically the step of turning the problem from an English description to a mathematical description that is amenable to further computational analyses.&nbsp;While the course emphasizes implementing the algorithms and solving the original problems that gave rise to the need for these algorithms in the first place, much of this two-part course (part 2 is availablehere) will be devoted to the third step, namely, algorithm design. Here, the course will introduce students to different algorithm design strategies, as well as mathematical tools for reasoning about the correctness and efficiency of algorithms. &nbsp;SyllabusOur course syllabus can be viewed atwww.codeskulptor.org/coursera/algorithmicthinking.html.",
        "desc_html": "When presented with a problem from a scientific domain, a Computer Scientist\ngoes through a set of steps in order to provide a solution for the problem.\nThese steps include: (1) understanding the problem; (2) formulating the\nproblem mathematically; (3) designing an algorithm; (4) implementing the\nalgorithm; and (5) solving the original scientific problem. This course will\ntrain students in how to employ algorithmic thinking by following these five\nsteps to solve real-world problems.\n\n  \n\nUnderstanding the problem entails holding conversations with domain experts to\nunderstand the parameters of the problem, what data they can provide to the\ncomputer program, what answers they expect, etc. Formulating the problem\nmathematically is basically the step of turning the problem from an English\ndescription to a mathematical description that is amenable to further\ncomputational analyses.\n\n  \n\nWhile the course emphasizes implementing the algorithms and solving the\noriginal problems that gave rise to the need for these algorithms in the first\nplace, much of this two-part course (part 2 is available\n[here](https://www.coursera.org/course/algorithmicthink2)) will be devoted to\nthe third step, namely, algorithm design. Here, the course will introduce\nstudents to different algorithm design strategies, as well as mathematical\ntools for reasoning about the correctness and efficiency of algorithms.  \n\n## Syllabus\n\nOur course syllabus can be viewed at [www.codeskulptor.org/coursera/algorithmi\ncthinking.html](http://www.codeskulptor.org/coursera/algorithmicthinking.html)\n.\n\n",
        "name": "Algorithmic Thinking (Part 1)",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Rice University"
        ],
        "url": "https://www.coursera.org/course/algorithmicthink1",
        "video_url": ""
    },
    {
        "date": "2015-05-25",
        "desc": "This\n  course introduces software defined networking, an emerging paradigm in\n  computer networking that allows a logically centralized software program to\n  control the behavior of an entire network. &nbsp;Separating\n  a network's control logic from the underlying physical routers and switches\n  that forward traffic allows network operators to write high-level control\n  programs that specify the behavior of an entire network, in contrast to\n  conventional networks, whereby network operators must codify functionality in\n  terms of low-level device configuration. &nbsp;Logically\n  centralized network control makes it possible for operators to specify more\n  complex tasks that involve integrating many disjoint network functions (e.g.,\n  security, resource control, prioritization) into a single control framework,\n  allowing network operators to create more sophisticated policies, and making\n  network configurations easier to configure, manage, troubleshoot, and\n  debug.&nbsp;&nbsp;SyllabusThis course will cover 8 modules (one per week).Module 1: History and evolution of SDNModule 2: Control and data plane separationModule 3: Control PlaneModule 4: Network VirtualizationModule 5: Data PlaneModule 6: Programming SDNsModules 7: Verification and DebuggingModule 8: Use Cases and Looking Forward",
        "desc_html": "This course introduces software defined networking, an emerging paradigm in\ncomputer networking that allows a logically centralized software program to\ncontrol the behavior of an entire network.  \n\nSeparating a network's control logic from the underlying physical routers and\nswitches that forward traffic allows network operators to write high-level\ncontrol programs that specify the behavior of an entire network, in contrast\nto conventional networks, whereby network operators must codify functionality\nin terms of low-level device configuration.  \n\nLogically centralized network control makes it possible for operators to\nspecify more complex tasks that involve integrating many disjoint network\nfunctions (e.g., security, resource control, prioritization) into a single\ncontrol framework, allowing network operators to create more sophisticated\npolicies, and making network configurations easier to configure, manage,\ntroubleshoot, and debug.\n\n\n\n## Syllabus\n\nThis course will cover 8 modules (one per week).\n\nModule 1: History and evolution of SDN\n\nModule 2: Control and data plane separation\n\nModule 3: Control Plane\n\nModule 4: Network Virtualization\n\nModule 5: Data Plane\n\nModule 6: Programming SDNs\n\nModules 7: Verification and Debugging\n\nModule 8: Use Cases and Looking Forward\n\n>\n\n",
        "name": "Software Defined Networking",
        "provider": "Coursera",
        "rating": "4",
        "reviews": "2",
        "university": [
            "Georgia Institute of Technology"
        ],
        "url": "https://www.coursera.org/course/sdn",
        "video_url": ""
    },
    {
        "date": "2015-05-13",
        "desc": "CSAP.1x\u00a0 covers the material of AP Computer Science A which is equivalent to a first-semester, college-level course in computer science. This highly interactive course will introduce students to the fundamental concepts of computer science. The course will be structured to encourage students to think computationally and enjoy problem solving. New York City\u2019s companies, museums, art and architecture will be used as examples to emphasize the ubiquitous role of computing and programming concepts in the world around us.The course will delve into object- oriented problem solving and design using the Java\u00a0 programming language. \u00a0Students will have access to practice problems that will help them learn to program without spending hours on finding and fixing syntax errors.\u00a0 These will include online multiple-choice questions in the style of those on the AP exam, mixed-up code that the user drags into the correct order, fill in the blank code and audio tours of the code.Topics include problem solving, \u00a0programming design strategies and\u00a0 data structures, algorithms, role of computation in real-world applications like smart phones, google glass and robots. This material may be used for self-study and as a preview by students and teachers considering the September 2015 offering of the course.\u00a0Video lectures for this course will be available in May 2015.\u00a0\u00a0Ancillary material including labs will be added over the Summer of 2015. All of the course will be available September 1, 2015This is a self-paced course - you may take CSAP.1x on your schedule.Learn more about our High School and AP* Exam Preparation Courses* Advanced Placement and AP are registered trademarks of the College Board, which was not involved in the production of, and does not endorse, these offerings.",
        "desc_html": "CSAP.1x\u00a0 covers the material of AP Computer Science A which is equivalent to a\nfirst-semester, college-level course in computer science. This highly\ninteractive course will introduce students to the fundamental concepts of\ncomputer science. The course will be structured to encourage students to think\ncomputationally and enjoy problem solving. New York City\u2019s companies, museums,\nart and architecture will be used as examples to emphasize the ubiquitous role\nof computing and programming concepts in the world around us.  \n  \nThe course will delve into object- oriented problem solving and design using\nthe Java\u00a0 programming language. \u00a0Students will have access to practice\nproblems that will help them learn to program without spending hours on\nfinding and fixing syntax errors.\u00a0 These will include online multiple-choice\nquestions in the style of those on the AP exam, mixed-up code that the user\ndrags into the correct order, fill in the blank code and audio tours of the\ncode.  \n  \nTopics include problem solving, \u00a0programming design strategies and\u00a0 data\nstructures, algorithms, role of computation in real-world applications like\nsmart phones, google glass and robots. This material may be used for self-\nstudy and as a preview by students and teachers considering the September 2015\noffering of the course.\u00a0Video lectures for this course will be available in\nMay 2015.\u00a0\u00a0Ancillary material including labs will be added over the Summer of\n2015. All of the course will be available September 1, 2015  \n  \nThis is a self-paced course - you may take CSAP.1x on your schedule.  \n  \nLearn more about our High School and AP* Exam Preparation Courses  \n  \n* Advanced Placement and AP are registered trademarks of the College Board, which was not involved in the production of, and does not endorse, these offerings. \n\n",
        "name": "CS.1x: Preparing for the AP* Computer Science A Exam \u2014 Part 1",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Cooper Union"
        ],
        "url": "https://www.edx.org/course/preparing-ap-computer-science-exam-part-cooper-union-cs-1x",
        "video_url": "https://www.youtube.com/embed/C652YjGIy88?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-05-04",
        "desc": "En este curso se introducen los principios b\u00e1sicos de cualquier\n  sistema autom\u00e1tico de detecci\u00f3n y reconocimiento de objetos en im\u00e1genes. A lo\n  largo del curso se analizan diferentes m\u00e9todos de representaci\u00f3n y\n  clasificaci\u00f3n que permiten abordar casos de aplicaci\u00f3n de complejidad\n  creciente.El curso est\u00e1 orientado tanto a estudiantes universitarios de alg\u00fan\n  grado relacionado con la inform\u00e1tica, la ingenier\u00eda o las matem\u00e1ticas, como a\n  otros estudiantes con conocimientos de programaci\u00f3n, interesados en aprender\n  c\u00f3mo utilizar t\u00e9cnicas de visi\u00f3n por computador para extraer informaci\u00f3n de\n  las im\u00e1genes. El curso les ofrece los conocimientos y herramientas necesarios\n  para que sean capaces de desarrollar sus propios sistemas de detecci\u00f3n y\n  reconocimiento de objetos en m\u00faltiples aplicaciones.El contenido del curso se estructura a partir de un esquema b\u00e1sico de\n  detecci\u00f3n y reconocimiento de objetos que sirve de gu\u00eda para ir introduciendo\n  tanto los diferentes m\u00e9todos de extracci\u00f3n de caracter\u00edsticas y\n  representaci\u00f3n de la imagen como diferentes alternativas para clasificar una\n  imagen y para localizar todas las instancias de un objeto en la imagen. El\n  temario del curso incluye conceptos b\u00e1sicos de formaci\u00f3n de la imagen, la\n  convoluci\u00f3n y su aplicaci\u00f3n a la detecci\u00f3n de contornos, caracter\u00edsticas de\n  regiones, descriptores de imagen (Local Binary Pattern,Histogram of Oriented Gradients, caracter\u00edsticas deHaar) y\n  varios m\u00e9todos de clasificaci\u00f3n (clasificador lineal,Support Vector Machine,Adaboost,Random Forest,Convolutional Neural Network).Losobjetivosdel curso son:dise\u00f1ar, a partir de un esquema b\u00e1sico com\u00fan, soluciones adaptadas para diferentes problemas de detecci\u00f3n y reconocimiento de objetos en una imagen,conocer lasprincipales t\u00e9cnicas para la descripci\u00f3n y clasificaci\u00f3n de una imagen,conocer lasherramientasque permiten eldesarrollo de aplicaciones reales de detecci\u00f3n y reconocimiento de objetos.SyllabusSemana 1: Introducci\u00f3n a la detecci\u00f3n de objetosFormaci\u00f3n de la imagenCaracter\u00edsticas de p\u00edxelCaracter\u00edsticas de regionesCaracter\u00edsticas espaciales: correlaci\u00f3n,\n  convoluci\u00f3nSemana 2: Esquema b\u00e1sico de clasificaci\u00f3nDescriptor: Local Binary Pattern\n  (LBP)Clasificaci\u00f3n: Clasificador linealAprendizaje y testEvaluaci\u00f3nSemana 3: Esquema b\u00e1sico de detecci\u00f3nGeneraci\u00f3n de candidatos: Sliding windowRefinamiento de detecciones:Non Maximal Suppression, Mean ShiftEvaluaci\u00f3nSemana 4: Ejemplo de detector (I)Descriptor:Histogram of\n  Oriented Gradients (HOG)Clasificaci\u00f3n: Support Vector Machine (SVM)Semana 5: Ejemplo de detector (II)Descriptor: filtros de HaarImagen integralClasificaci\u00f3n:AdaboostClasificaci\u00f3n:Random ForestCascadas de clasificadoresSemana 6: T\u00e9cnicas avanzadasModelos de detecci\u00f3nConvolutional\n  Neural NetworksDetecci\u00f3n multimodalGeneraci\u00f3n de candidatos avanzadaCaptura de datosVisi\u00f3n hist\u00f3rica",
        "desc_html": "En este curso se introducen los principios b\u00e1sicos de cualquier sistema\nautom\u00e1tico de detecci\u00f3n y reconocimiento de objetos en im\u00e1genes. A lo largo\ndel curso se analizan diferentes m\u00e9todos de representaci\u00f3n y clasificaci\u00f3n que\npermiten abordar casos de aplicaci\u00f3n de complejidad creciente.\n\nEl curso est\u00e1 orientado tanto a estudiantes universitarios de alg\u00fan grado\nrelacionado con la inform\u00e1tica, la ingenier\u00eda o las matem\u00e1ticas, como a otros\nestudiantes con conocimientos de programaci\u00f3n, interesados en aprender c\u00f3mo\nutilizar t\u00e9cnicas de visi\u00f3n por computador para extraer informaci\u00f3n de las\nim\u00e1genes. El curso les ofrece los conocimientos y herramientas necesarios para\nque sean capaces de desarrollar sus propios sistemas de detecci\u00f3n y\nreconocimiento de objetos en m\u00faltiples aplicaciones.\n\nEl contenido del curso se estructura a partir de un esquema b\u00e1sico de\ndetecci\u00f3n y reconocimiento de objetos que sirve de gu\u00eda para ir introduciendo\ntanto los diferentes m\u00e9todos de extracci\u00f3n de caracter\u00edsticas y representaci\u00f3n\nde la imagen como diferentes alternativas para clasificar una imagen y para\nlocalizar todas las instancias de un objeto en la imagen. El temario del curso\nincluye conceptos b\u00e1sicos de formaci\u00f3n de la imagen, la convoluci\u00f3n y su\naplicaci\u00f3n a la detecci\u00f3n de contornos, caracter\u00edsticas de regiones,\ndescriptores de imagen (_Local Binary Pattern_, _Histogram of Oriented\nGradients_, caracter\u00edsticas de _Haar_) y varios m\u00e9todos de clasificaci\u00f3n\n(clasificador lineal, _Support Vector Machine_, _Adaboost_, _Random Forest_,\n_Convolutional Neural Network_).\n\n  \n\nLos **objetiv********os** del curso son:  \n\n  * _dise\u00f1ar_, a partir de un esquema b\u00e1sico com\u00fan, soluciones adaptadas para diferentes problemas de detecci\u00f3n y reconocimiento de objetos en una imagen,\n  * conocer las _principales t\u00e9cnicas para la descripci\u00f3n y clasificaci\u00f3n de una imagen_,\n  * conocer las _herramientas_ que permiten el _desarrollo de aplicaciones reales de detecci\u00f3n y reconocimiento de objetos_.\n  \n  \n\n## Syllabus\n\n**Semana 1: Introducci\u00f3n a la detecci\u00f3n de objetos**   \n\n  * Formaci\u00f3n de la imagen  \n\n  * Caracter\u00edsticas de p\u00edxel  \n\n  * Caracter\u00edsticas de regiones  \n\n  * Caracter\u00edsticas espaciales: correlaci\u00f3n, convoluci\u00f3n  \n\n  \n\n**Semana 2: Esquema b\u00e1sico de clasificaci\u00f3n**   \n\n  * Descriptor_: Local Binary Pattern (LBP)_  \n\n  * Clasificaci\u00f3n: Clasificador lineal  \n\n  * Aprendizaje y test  \n\n  * Evaluaci\u00f3n  \n\n  \n\n**Semana 3: Esquema b\u00e1sico de detecci\u00f3n**   \n\n  * Generaci\u00f3n de candidatos: S_liding window_  \n\n  * Refinamiento de detecciones: _Non Maximal Suppression, Mean Shift_  \n\n  * Evaluaci\u00f3n  \n\n  \n\n**Semana 4: Ejemplo de detector (I)**   \n\n  * Descriptor: _Histogram of Oriented Gradients (HOG)_  \n\n  * Clasificaci\u00f3n: S_upport Vector Machine (SVM)_  \n\n  \n\n**Semana 5: Ejemplo de detector (II)**   \n\n  * Descriptor: filtros de Haar  \n\n  * Imagen integral  \n\n  * Clasificaci\u00f3n: _Adaboost_  \n\n  * Clasificaci\u00f3n: _Random Forest_  \n\n  * Cascadas de clasificadores  \n\n  \n\n**Semana 6: T\u00e9cnicas avanzadas**   \n\n  * Modelos de detecci\u00f3n  \n\n  * _Convolutional Neural Networks_  \n\n  * Detecci\u00f3n multimodal  \n\n  * Generaci\u00f3n de candidatos avanzada  \n\n  * Captura de datos  \n\n  * Visi\u00f3n hist\u00f3rica  \n\n  \n\n",
        "name": "Detecci\u00f3n de objetos",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Universitat Aut\u00f2noma de Barcelona (Autonomous University of Barcelona)"
        ],
        "url": "https://www.coursera.org/course/deteccionobjetos",
        "video_url": ""
    },
    {
        "date": "2015-04-27",
        "desc": "This MOOC describes by example how to apply patterns and frameworks to alleviate the complexity of developing concurrent software for mobile devices via the use of object-oriented design techniques. Apatterndescribes a reusable solution to a common problem that arises within a particular context. Aframeworkis an integrated set of components that collaborate to provide a reusable architecture for a family of related apps or services. &nbsp;Frameworks can also be viewed as concrete realizations of patterns that facilitate direct reuse of detailed design and source code.This MOOC will cover fundamental techniques, patterns, and data management issues of communicating with remote services. In particular, this MOOC course will cover Android mechanisms for interacting with remote services using HTTP and data marshalling with JSON. Remote interaction models, ranging from request on demand, polling, push, and sockets will be discussed. Students that complete this MOOC will have a solid understanding of how to build Android applications and services that can interact with remote services, synchronize data stored in local content providers with remote repositories, handle data marshaling, and perform error handling. Hands-on programming projects will require students to develop Android applications that interact with REST-based services.The Mobile Cloud Computing with Android (MoCCA) SpecializationThis is the fourth course of the six-courseMobile Cloud Computing with Android (MoCCA) Specialization. It has been designed as part of a Coursera Specialization designed to help learners create complex, cloud-based Android Applications, and includes a final \u201ccapstone\u201d project for those who earn Verified Certificates across all six courses.Note: We are proud to announce that the MoCCA specialization has already reached hundreds of thousands of learners around the globe. In its last iteration, we worked with Google to provide Nexus tablets, feedback from the Google App team, and the potential to be featured in the Google Play store to top course completers.This time around, we are providing more flexibility for all of you busy learners. We are running the Programming Mobile Applications courses in more digestible one-month-long sections, each with a meaningful mini-project at the end. Additionally, we will be re-offering the courses more frequently. For example, new sessions of my two introductory courses will be launched on a monthly basis, so that you can find a convenient time to join us or pick up where you left off if you didn\u2019t quite finish before.For previous MoCCA students: If you have already earned a Verified Certificate in the previous version of this course, \"Pattern-Oriented Software Architectures: Programming Mobile Services for Android Handheld Systems\u201d offered in May 2014, you do not need to retake this course to continue towards the Specialization certificate and final project in 2015. Please consult theSpecializations Help Centeror contact theCoursera support teamif you are not sure whether you qualify.This MOOC and five others, taught by Dr. Adam Porter from the University of Maryland and Dr. Jules White from Vanderbilt University, have been designed to complement each other as part of the first trans-institution sequence of MOOCs taught on the Coursera platform, structured as follows:The first two courses by Dr. Adam Porter, of the University of Maryland, areProgramming Mobile Applications for Android Handheld Systems Part 1andPart 2. They focus on the design and programming of user-facing applications. &nbsp;The third and fourth courses by Dr. Douglas Schmidt, of Vanderbilt University, areProgramming Mobile Services for Android Handheld Systems: ConcurrencyandCommunication. They focus on middleware systems programming topics, such as synchronous and asynchronous concurrency models, background service processing, structured data management, local inter-process communication and networking, and integration with cloud-based services. &nbsp;The fifth and sixth courses by Dr. Jules White, of Vanderbilt University, areProgramming Cloud Services for Android Handheld Systems: SpringandSecurity. &nbsp;They focus on how to connect Android mobile devices to cloud computing and data storage resources, essentially turning a device into an extension of powerful cloud-based services on popular cloud computing platforms, such as Google App Engine and Amazon EC2.The final \u201ccapstone\u201d project will require students to develop a complex mobile cloud computing application from the ground up.Some of the programming assignments for these MOOCs will be coordinated. &nbsp;If you just want to take some of the MOOCs in this sequence or take them all in different order you\u2019re certainly welcome to do so, and you\u2019ll still learn a lot. However, if you take all the MOOCs in this sequence in the order presented you\u2019ll gain a deeper, end-to-end understanding of handheld systems, their applications and services, as well as their integration into the cloud.SyllabusSection 0:Part 1: Overview of Android Activity and Service ComponentsPart 2: Overview of Android Content Provider and Broadcast Receiver ComponentsSection 1: Android Services and Local IPCPart 1: Overview of Started and Bound ServicesPart 2: Programming Started ServicesPart 3: Android IntentServicePart 4: Activity and Service CommunicationPart 5: Service to Activity Communication Using Android MessengerPart 6: Programming Bound Services with MessengersPart 7: Overview of AIDLPart 8: Programming Bound Services with AIDLSection 2: Android Networking, Remote IPC, and Content ProvidersPart 1: Overview of Android Network Programming with SocketsPart 2: Overview of the HTTP Protocol and JSONPart 3: Designing Android Applications with HTTP CommunicationPart 4: Overview of Content ProvidersPart 5: Advanced Content Provider InteractionsSection 3: Communication Patterns in AndroidPart 1: Activating Services on Demand with the Activator PatternPart 2: Passing Commands to Services with the Command Processor PatternPart 3: Automating Marshaling and Demarshaling of Data with the Proxy PatternPart 4: Supporting Object-Oriented Remote Method Calls with the Broker PatternPart 5: Decoupling Producers from Consumers with the Publisher-Subscriber PatternSection 4: Case Study ApplicationsPart 1: The Acronym ApplicationPart 2: The Concurrent Downloads ApplicationPart 3: The Potlatch ApplicationThroughout this MOOC we'll focus on pattern-oriented software architecture, with an emphasis on concurrent programming in the context of Android middleware systems programming mechanisms, such as synchronous and asynchronous concurrency models, background service processing, storage and retrieval of structured data, and local inter-process communication (IPC) and networking. We illustrate by example how key pattern and framework concepts and relationships are applied in Android Services, Content Providers, Broadcast Receivers, and various secure local and remote IPC mechanisms from both an application and infrastructure perspective. Many code examples are shown throughout using Java, with case study projects used to reify the key points throughout all the modules in this section.",
        "desc_html": "This MOOC describes by example how to apply patterns and frameworks to\nalleviate the complexity of developing concurrent software for mobile devices\nvia the use of object-oriented design techniques. A\n[pattern](http://en.wikipedia.org/wiki/Software_design_pattern) describes a\nreusable solution to a common problem that arises within a particular context.\nA [framework](http://en.wikipedia.org/wiki/Software_framework) is an\nintegrated set of components that collaborate to provide a reusable\narchitecture for a family of related apps or services.  Frameworks can also be\nviewed as concrete realizations of patterns that facilitate direct reuse of\ndetailed design and source code.\n\nThis MOOC will cover fundamental techniques, patterns, and data management\nissues of communicating with remote services. In particular, this MOOC course\nwill cover Android mechanisms for interacting with remote services using HTTP\nand data marshalling with JSON. Remote interaction models, ranging from\nrequest on demand, polling, push, and sockets will be discussed. Students that\ncomplete this MOOC will have a solid understanding of how to build Android\napplications and services that can interact with remote services, synchronize\ndata stored in local content providers with remote repositories, handle data\nmarshaling, and perform error handling. Hands-on programming projects will\nrequire students to develop Android applications that interact with REST-based\nservices.\n\n**The Mobile Cloud Computing with Android (MoCCA) Specialization**\n\nThis is the fourth course of the six-course [Mobile Cloud Computing with\nAndroid (MoCCA) Specialization](https://www.coursera.org/specialization/mobile\ncloudcomputing/2). It has been designed as part of a Coursera Specialization\ndesigned to help learners create complex, cloud-based Android Applications,\nand includes a final \u201ccapstone\u201d project for those who earn Verified\nCertificates across all six courses.\n\nNote: We are proud to announce that the MoCCA specialization has already\nreached hundreds of thousands of learners around the globe. In its last\niteration, we worked with Google to provide Nexus tablets, feedback from the\nGoogle App team, and the potential to be featured in the Google Play store to\ntop course completers.\n\nThis time around, we are providing more flexibility for all of you busy\nlearners. We are running the Programming Mobile Applications courses in more\ndigestible one-month-long sections, each with a meaningful mini-project at the\nend. Additionally, we will be re-offering the courses more frequently. For\nexample, new sessions of my two introductory courses will be launched on a\nmonthly basis, so that you can find a convenient time to join us or pick up\nwhere you left off if you didn\u2019t quite finish before.\n\nFor previous MoCCA students: If you have already earned a Verified Certificate\nin the previous version of this course, \"Pattern-Oriented Software\nArchitectures: Programming Mobile Services for Android Handheld Systems\u201d\noffered in May 2014, you do not need to retake this course to continue towards\nthe Specialization certificate and final project in 2015. Please consult the\n[Specializations Help Center](https://courserahelp.zendesk.com/hc/en-\nus/articles/201223289-Specializations) or contact the [Coursera support\nteam](https://courserahelp.zendesk.com/hc/en-\nus/requests/new?ticket_form_id=19009) if you are not sure whether you qualify.\n\nThis MOOC and five others, taught by Dr. Adam Porter from the University of\nMaryland and Dr. Jules White from Vanderbilt University, have been designed to\ncomplement each other as part of the first trans-institution sequence of MOOCs\ntaught on the Coursera platform, structured as follows:\n\n  * The first two courses by Dr. Adam Porter, of the University of Maryland, are [Programming Mobile Applications for Android Handheld Systems Part 1](https://www.coursera.org/course/androidpart1) and [Part 2](https://www.coursera.org/course/androidpart2). They focus on the design and programming of user-facing applications.  \n\n  * The third and fourth courses by Dr. Douglas Schmidt, of Vanderbilt University, are [Programming Mobile Services for Android Handheld Systems: Concurrency](https://www.coursera.org/course/posaconcurrency) and [Communication](https://www.coursera.org/course/posacommunication). They focus on middleware systems programming topics, such as synchronous and asynchronous concurrency models, background service processing, structured data management, local inter-process communication and networking, and integration with cloud-based services.  \n\n  * The fifth and sixth courses by Dr. Jules White, of Vanderbilt University, are [Programming Cloud Services for Android Handheld Systems: Spring](https://www.coursera.org/course/mobilecloudprogram) and [Security](https://www.coursera.org/course/mobilecloudsecurity).  They focus on how to connect Android mobile devices to cloud computing and data storage resources, essentially turning a device into an extension of powerful cloud-based services on popular cloud computing platforms, such as Google App Engine and Amazon EC2. \n\n  * The final \u201ccapstone\u201d project will require students to develop a complex mobile cloud computing application from the ground up.\n\nSome of the programming assignments for these MOOCs will be coordinated.  \n\nIf you just want to take some of the MOOCs in this sequence or take them all\nin different order you\u2019re certainly welcome to do so, and you\u2019ll still learn a\nlot. However, if you take all the MOOCs in this sequence in the order\npresented you\u2019ll gain a deeper, end-to-end understanding of handheld systems,\ntheir applications and services, as well as their integration into the cloud.\n\n## Syllabus\n\n  * Section 0: \n\n    * Part 1: Overview of Android Activity and Service Components\n\n    * Part 2: Overview of Android Content Provider and Broadcast Receiver Components\n\n  * Section 1: Android Services and Local IPC\n\n    * Part 1: Overview of Started and Bound Services\n\n    * Part 2: Programming Started Services \n\n    * Part 3: Android IntentService\n\n    * Part 4: Activity and Service Communication\n\n    * Part 5: Service to Activity Communication Using Android Messenger\n\n    * Part 6: Programming Bound Services with Messengers \n\n    * Part 7: Overview of AIDL\n\n    * Part 8: Programming Bound Services with AIDL\n\n  * Section 2: Android Networking, Remote IPC, and Content Providers \n\n    * Part 1: Overview of Android Network Programming with Sockets\n\n    * Part 2: Overview of the HTTP Protocol and JSON\n\n    * Part 3: Designing Android Applications with HTTP Communication\n\n    * Part 4: Overview of Content Providers\n\n    * Part 5: Advanced Content Provider Interactions\n\n  * Section 3: Communication Patterns in Android\n\n    * Part 1: Activating Services on Demand with the Activator Pattern \n\n    * Part 2: Passing Commands to Services with the Command Processor Pattern \n\n    * Part 3: Automating Marshaling and Demarshaling of Data with the Proxy Pattern \n\n    * Part 4: Supporting Object-Oriented Remote Method Calls with the Broker Pattern \n\n    * Part 5: Decoupling Producers from Consumers with the Publisher-Subscriber Pattern \n\n  * Section 4: Case Study Applications\n\n    * Part 1: The Acronym Application\n\n    * Part 2: The Concurrent Downloads Application\n\n    * Part 3: The Potlatch Application\n\nThroughout this MOOC we'll focus on pattern-oriented software architecture,\nwith an emphasis on concurrent programming in the context of Android\nmiddleware systems programming mechanisms, such as synchronous and\nasynchronous concurrency models, background service processing, storage and\nretrieval of structured data, and local inter-process communication (IPC) and\nnetworking. We illustrate by example how key pattern and framework concepts\nand relationships are applied in Android Services, Content Providers,\nBroadcast Receivers, and various secure local and remote IPC mechanisms from\nboth an application and infrastructure perspective. Many code examples are\nshown throughout using Java, with case study projects used to reify the key\npoints throughout all the modules in this section.  \n\n",
        "name": "Programming Mobile Services for Android Handheld Systems: Communication",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Vanderbilt University"
        ],
        "url": "https://www.coursera.org/course/posacommunication",
        "video_url": ""
    },
    {
        "date": "2015-04-27",
        "desc": "Discover thebasic concepts of cluster analysis, and then study a set of typical clustering methodologies, algorithms, and applications. This includespartitioning methodssuch as k-means,hierarchical methodssuch as BIRCH,density-based methodssuch as DBSCAN/OPTICS, probabilistic models, and the EM algorithm. Learn clustering and methods for clustering high dimensional data, streaming data, graph data, and networked data. Explore concepts and methods for constraint-based clustering and semi-supervised clustering. Finally, seeexamples of cluster analysis in applications.SyllabusThis course will be covering the following topics:Basic concept and introductionPartitioning methodsHierarchical methodsDensity-based methodsProbabilistic models and EM algorithmSpectral clusteringClustering high dimensional dataClustering streaming dataClustering graph data and network dataConstraint-based clustering and semi-supervised clusteringApplication examples of cluster analysis",
        "desc_html": "Discover the **basic concepts of cluster analysis**, and then study a set of\ntypical clustering methodologies, algorithms, and applications. This includes\n**partitioning methods** such as k-means, **hierarchical methods** such as\nBIRCH, **density-based methods** such as DBSCAN/OPTICS, probabilistic models,\nand the EM algorithm. Learn clustering and methods for clustering high\ndimensional data, streaming data, graph data, and networked data. Explore\nconcepts and methods for constraint-based clustering and semi-supervised\nclustering. Finally, see **examples of cluster analysis in applications**.\n\n## Syllabus\n\nThis course will be covering the following topics:\n\n  * Basic concept and introduction\n  * Partitioning methods\n  * Hierarchical methods\n  * Density-based methods\n  * Probabilistic models and EM algorithm\n  * Spectral clustering\n  * Clustering high dimensional data\n  * Clustering streaming data\n  * Clustering graph data and network data\n  * Constraint-based clustering and semi-supervised clustering\n  * Application examples of cluster analysis\n\n",
        "name": "Cluster Analysis in Data Mining",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of Illinois at Urbana-Champaign"
        ],
        "url": "https://www.coursera.org/course/clusteranalysis",
        "video_url": ""
    },
    {
        "date": "2015-04-20",
        "desc": "In the PH525 case studies, we will explore the data analysis of an experimental protocol in depth, using various open source software, including R and Bioconductor. We will explain how to start with raw data, and perform the standard processing and normalization steps to get to the point where one can investigate relevant biological questions. Throughout the case studies, we will make use of exploratory plots to get a general overview of the shape of the data and the result of the experiment.We will learn the basic steps involved in finding genetic variants in DNA re-sequencing datasets, from read alignment to calling and aggregating variant data across many samples.This class was supported in part by NIH grant R25GM114818.This course is part of a larger set of 8 total courses:PH525.1x:\u00a0Statistics and R for the Life SciencesPH525.2x:\u00a0Introduction to Linear Models and Matrix AlgebraPH525.3x:\u00a0Advanced Statistics for the Life SciencesPH525.4x:\u00a0Introduction to BioconductorPH525.5x:\u00a0Case study: RNA-seq data analysisPH525.6x: Case study: Variant Discovery and GenotypingPH525.7x:\u00a0Case study: ChIP-seq data analysisPH525.8x:\u00a0Case study: DNA methylation data analysisHarvardX pursues the science of learning. By registering as an online learner in an HX course, you will also participate in research about learning. Read our research statement to learn more.",
        "desc_html": "In the PH525 case studies, we will explore the data analysis of an\nexperimental protocol in depth, using various open source software, including\nR and Bioconductor. We will explain how to start with raw data, and perform\nthe standard processing and normalization steps to get to the point where one\ncan investigate relevant biological questions. Throughout the case studies, we\nwill make use of exploratory plots to get a general overview of the shape of\nthe data and the result of the experiment.  \n  \nWe will learn the basic steps involved in finding genetic variants in DNA re-\nsequencing datasets, from read alignment to calling and aggregating variant\ndata across many samples.  \n  \nThis class was supported in part by NIH grant R25GM114818.  \n  \nThis course is part of a larger set of 8 total courses:PH525.1x:\u00a0Statistics\nand R for the Life Sciences  \n  \nPH525.2x:\u00a0Introduction to Linear Models and Matrix Algebra  \n  \nPH525.3x:\u00a0Advanced Statistics for the Life Sciences  \n  \nPH525.4x:\u00a0Introduction to Bioconductor  \n  \nPH525.5x:\u00a0Case study: RNA-seq data analysis  \n  \nPH525.6x: Case study: Variant Discovery and Genotyping  \n  \nPH525.7x:\u00a0Case study: ChIP-seq data analysis  \n  \nPH525.8x:\u00a0Case study: DNA methylation data analysis  \nHarvardX pursues the science of learning. By registering as an online learner\nin an HX course, you will also participate in research about learning. Read\nour research statement to learn more.\n\n",
        "name": "PH525.6x: Case study: Variant Discovery and Genotyping",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Harvard University"
        ],
        "url": "https://www.edx.org/course/case-study-variant-discovery-genotyping-harvardx-ph525-6x",
        "video_url": "https://www.youtube.com/embed/nwFyIxc4AE0?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-04-20",
        "desc": "In the PH525 case studies, we will explore the data analysis of an experimental protocol in depth, using various open source software, including R and Bioconductor. We will explain how to start with raw data, and perform the standard processing and normalization steps to get to the point where one can investigate relevant biological questions. Throughout the case studies, we will make use of exploratory plots to get a general overview of the shape of the data and the result of the experiment.We will learn the basic steps in analyzing DNA methylation data, including reading the raw data, normalization, and finding regions of differential methylation across multiple samples.This class was supported in part by NIH grant R25GM114818.This course is part of a larger set of 8 total courses:PH525.1x:\u00a0Statistics and R for the Life SciencesPH525.2x:\u00a0Introduction to Linear Models and Matrix AlgebraPH525.3x:\u00a0Advanced Statistics for the Life SciencesPH525.4x:\u00a0Introduction to BioconductorPH525.5x:\u00a0Case study: RNA-seq data analysisPH525.6x: Case study: Variant Discovery and GenotypingPH525.7x:\u00a0Case study: ChIP-seq data analysisPH525.8x:\u00a0Case study: DNA methylation data analysisHarvardX pursues the science of learning. By registering as an online learner in an HX course, you will also participate in research about learning. Read our research statement to learn more.",
        "desc_html": "In the PH525 case studies, we will explore the data analysis of an\nexperimental protocol in depth, using various open source software, including\nR and Bioconductor. We will explain how to start with raw data, and perform\nthe standard processing and normalization steps to get to the point where one\ncan investigate relevant biological questions. Throughout the case studies, we\nwill make use of exploratory plots to get a general overview of the shape of\nthe data and the result of the experiment.  \n  \nWe will learn the basic steps in analyzing DNA methylation data, including\nreading the raw data, normalization, and finding regions of differential\nmethylation across multiple samples.  \n  \nThis class was supported in part by NIH grant R25GM114818.  \n  \nThis course is part of a larger set of 8 total courses:PH525.1x:\u00a0Statistics\nand R for the Life Sciences  \n  \nPH525.2x:\u00a0Introduction to Linear Models and Matrix Algebra  \n  \nPH525.3x:\u00a0Advanced Statistics for the Life Sciences  \n  \nPH525.4x:\u00a0Introduction to Bioconductor  \n  \nPH525.5x:\u00a0Case study: RNA-seq data analysis  \n  \nPH525.6x: Case study: Variant Discovery and Genotyping  \n  \nPH525.7x:\u00a0Case study: ChIP-seq data analysis  \n  \nPH525.8x:\u00a0Case study: DNA methylation data analysis  \n  \nHarvardX pursues the science of learning. By registering as an online learner\nin an HX course, you will also participate in research about learning. Read\nour research statement to learn more.\n\n",
        "name": "PH525.8x: Case study: DNA methylation data analysis",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Harvard University"
        ],
        "url": "https://www.edx.org/course/case-study-dna-methylation-data-analysis-harvardx-ph525-8x",
        "video_url": "https://www.youtube.com/embed/nwFyIxc4AE0?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-04-20",
        "desc": "In the PH525 case studies, we will explore the data analysis of an experimental protocol in depth, using various open source software, including R and Bioconductor. We will explain how to start with raw data, and perform the standard processing and normalization steps to get to the point where one can investigate relevant biological questions. Throughout the case studies, we will make use of exploratory plots to get a general overview of the shape of the data and the result of the experiment.We will learn the basic steps for analyzing ChIP-seq datasets, from read alignment, to peak calling, and assessing differential binding patterns across multiple samples.This class was supported in part by NIH grant R25GM114818.This course is part of a larger set of 8 total courses:PH525.1x:\u00a0Statistics and R for the Life SciencesPH525.2x:\u00a0Introduction to Linear Models and Matrix AlgebraPH525.3x:\u00a0Advanced Statistics for the Life SciencesPH525.4x:\u00a0Introduction to BioconductorPH525.5x:\u00a0Case study: RNA-seq data analysisPH525.6x: Case study: Variant Discovery and GenotypingPH525.7x:\u00a0Case study: ChIP-seq data analysisPH525.8x:\u00a0Case study: DNA methylation data analysisHarvardX pursues the science of learning. By registering as an online learner in an HX course, you will also participate in research about learning. Read our research statement to learn more.",
        "desc_html": "In the PH525 case studies, we will explore the data analysis of an\nexperimental protocol in depth, using various open source software, including\nR and Bioconductor. We will explain how to start with raw data, and perform\nthe standard processing and normalization steps to get to the point where one\ncan investigate relevant biological questions. Throughout the case studies, we\nwill make use of exploratory plots to get a general overview of the shape of\nthe data and the result of the experiment.  \n  \nWe will learn the basic steps for analyzing ChIP-seq datasets, from read\nalignment, to peak calling, and assessing differential binding patterns across\nmultiple samples.  \n  \nThis class was supported in part by NIH grant R25GM114818.  \n  \nThis course is part of a larger set of 8 total courses:PH525.1x:\u00a0Statistics\nand R for the Life Sciences  \n  \nPH525.2x:\u00a0Introduction to Linear Models and Matrix Algebra  \n  \nPH525.3x:\u00a0Advanced Statistics for the Life Sciences  \n  \nPH525.4x:\u00a0Introduction to Bioconductor  \n  \nPH525.5x:\u00a0Case study: RNA-seq data analysis  \n  \nPH525.6x: Case study: Variant Discovery and Genotyping  \n  \nPH525.7x:\u00a0Case study: ChIP-seq data analysis  \n  \nPH525.8x:\u00a0Case study: DNA methylation data analysis  \nHarvardX pursues the science of learning. By registering as an online learner\nin an HX course, you will also participate in research about learning. Read\nour research statement to learn more.\n\n",
        "name": "PH525.7x: Case study: ChIP-seq data analysis",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Harvard University"
        ],
        "url": "https://www.edx.org/course/case-study-chip-seq-data-analysis-harvardx-ph525-7x",
        "video_url": "https://www.youtube.com/embed/nwFyIxc4AE0?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-04-14",
        "desc": "Machine learning aims to extract knowledge from data, relying on fundamental concepts in computer science, statistics, probability and optimization. Learning algorithms enable a wide range of applications, from everyday tasks such as product recommendations and spam filtering to bleeding edge applications like self-driving cars and personalized medicine. In the age of &lsquo;Big Data,&rsquo; with datasets rapidly growing in size and complexity and cloud computing becoming more pervasive, machine learning techniques are fast becoming a core component of large-scale data processing pipelines.&nbsp;This course introduces the underlying statistical and algorithmic principles required to develop scalable real-world machine learning pipelines. We present an integrated view of data processing by highlighting the various components of these pipelines, including exploratory data analysis, feature extraction, supervised learning, and model evaluation. You will gain hands-on experience applying these principles using Apache Spark, a cluster computing system well-suited for large-scale machine learning tasks. You will implement scalable algorithms for fundamental statistical models (linear regression, logistic regression, matrix factorization, principal component analysis) while tackling key problems from various domains: online advertising, personalized recommendation, and cognitive neuroscience.&nbsp;This self-assessment document provides a short quiz, as well as online resources that review the relevant background material.&nbsp;The production of this course would not have been possible without the generous contribution of databricks",
        "desc_html": "Machine learning aims to extract knowledge from data, relying on fundamental\nconcepts in computer science, statistics, probability and optimization.\nLearning algorithms enable a wide range of applications, from everyday tasks\nsuch as product recommendations and spam filtering to bleeding edge\napplications like self-driving cars and personalized medicine. In the age of\n'Big Data,' with datasets rapidly growing in size and complexity and cloud\ncomputing becoming more pervasive, machine learning techniques are fast\nbecoming a core component of large-scale data processing pipelines.  \n  \nThis course introduces the underlying statistical and algorithmic principles\nrequired to develop scalable real-world machine learning pipelines. We present\nan integrated view of data processing by highlighting the various components\nof these pipelines, including exploratory data analysis, feature extraction,\nsupervised learning, and model evaluation. You will gain hands-on experience\napplying these principles using Apache Spark, a cluster computing system well-\nsuited for large-scale machine learning tasks. You will implement scalable\nalgorithms for fundamental statistical models (linear regression, logistic\nregression, matrix factorization, principal component analysis) while tackling\nkey problems from various domains: online advertising, personalized\nrecommendation, and cognitive neuroscience.  \n  \nThis self-assessment document provides a short quiz, as well as online\nresources that review the relevant background material.  \n  \n  \nThe production of this course would not have been possible without the\ngenerous contribution of databricks\n\n",
        "name": "CS190.1x: Scalable Machine Learning",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of California, Berkeley"
        ],
        "url": "https://www.edx.org/course/scalable-machine-learning-uc-berkeleyx-cs190-1x",
        "video_url": ""
    },
    {
        "date": "2015-04-13",
        "desc": "Les microcontr\u00f4leurs sont devenus assez simples \u00e0 mettre en\noeuvre, gr\u00e2ce en particulier \u00e0 des environnements de d\u00e9veloppement comme\nl'Arduino. Mais seule une compr\u00e9hension en profondeur permet de tirer parti au\nmaximum de leur potentiel dans de nombreuses applications, tant dans le cadre\nd'un hobby que dans un cadre industriel.SyllabusRappel d'\u00e9lectricit\u00e9 et \u00e9lectroniqueSyst\u00e8mes logiques et architectureMachines binairesProgrammation en CEntr\u00e9es-sortiesApplicationsMise au pointTimers, interruptionsSignaux analogiquesAffichagesCommunicationsRobotique",
        "desc_html": "Les microcontr\u00f4leurs sont devenus assez simples \u00e0 mettre en oeuvre, gr\u00e2ce en\nparticulier \u00e0 des environnements de d\u00e9veloppement comme l'Arduino. Mais seule\nune compr\u00e9hension en profondeur permet de tirer parti au maximum de leur\npotentiel dans de nombreuses applications, tant dans le cadre d'un hobby que\ndans un cadre industriel.  \n  \n\n## Syllabus\n\n  * Rappel d'\u00e9lectricit\u00e9 et \u00e9lectronique\n  * Syst\u00e8mes logiques et architecture\n  * Machines binaires\n  * Programmation en C\n  * Entr\u00e9es-sorties\n  * Applications\n  * Mise au point \n  * Timers, interruptions\n  * Signaux analogiques\n  * Affichages\n  * Communications\n  * Robotique \n\n",
        "name": "Comprendre les Microcontr\u00f4leurs",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne"
        ],
        "url": "https://www.coursera.org/course/microcontroleurs",
        "video_url": ""
    },
    {
        "date": "2015-04-07",
        "desc": "EX101x is for all of those struggling with data analysis. That crazy spreadsheet from your boss? Megabytes of sensor data to analyze? Looking for a smart way visualize your data in order to make sense out of it? We\u2019ve got you covered!Using video lectures and hands-on exercises, we will teach you techniques and best practices that will boost your data analysis skills.We will take a deep dive into data analysis with spreadsheets: PivotTables, VLOOKUPS, Named ranges, what-if analyses, making great graphs - all those will be covered in the first weeks of the course. After, we will investigate the quality of the spreadsheet model, and especially how to make sure your spreadsheet remains error-free and robust.Finally, once we have mastered spreadsheets, we will demonstrate other ways to store and analyze data. We will also look into how Python, a programming language, can help us with analyzing and manipulating data in spreadsheets.EX101x will be created using Excel 2013, but the course can be followed using another spreadsheet program as well.The goal of this course is it to help you to overcome data analysis challenges in your work, research or studies. Therefore we encourage you to participate actively and to raise real data analysis problems that you face in our discussion forums.Want to stay up to date with the latest news on EX101x and behind the scenes footage? We have a Twitter account -> @EX101xLICENSEThe course materials of this course are Copyright Delft University of Technology and are licensed under a Creative Commons Attribution-NonCommercial-ShareAlike (CC-BY-NC-SA) 4.0 International License.",
        "desc_html": "EX101x is for all of those struggling with data analysis. That crazy\nspreadsheet from your boss? Megabytes of sensor data to analyze? Looking for a\nsmart way visualize your data in order to make sense out of it? We\u2019ve got you\ncovered!  \nUsing video lectures and hands-on exercises, we will teach you techniques and\nbest practices that will boost your data analysis skills.  \nWe will take a deep dive into data analysis with spreadsheets: PivotTables,\nVLOOKUPS, Named ranges, what-if analyses, making great graphs - all those will\nbe covered in the first weeks of the course. After, we will investigate the\nquality of the spreadsheet model, and especially how to make sure your\nspreadsheet remains error-free and robust.  \nFinally, once we have mastered spreadsheets, we will demonstrate other ways to\nstore and analyze data. We will also look into how Python, a programming\nlanguage, can help us with analyzing and manipulating data in spreadsheets.  \nEX101x will be created using Excel 2013, but the course can be followed using\nanother spreadsheet program as well.  \nThe goal of this course is it to help you to overcome data analysis challenges\nin your work, research or studies. Therefore we encourage you to participate\nactively and to raise real data analysis problems that you face in our\ndiscussion forums.  \nWant to stay up to date with the latest news on EX101x and behind the scenes\nfootage? We have a Twitter account -> @EX101xLICENSEThe course materials of\nthis course are Copyright Delft University of Technology and are licensed\nunder a Creative Commons Attribution-NonCommercial-ShareAlike (CC-BY-NC-SA)\n4.0 International License.\n\n",
        "name": "EX101x: Data analysis to the MAX()",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Delft University of Technology"
        ],
        "url": "https://www.edx.org/course/data-analysis-max-delftx-ex101x",
        "video_url": "https://www.youtube.com/embed/RRKez9BR-94?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-04-06",
        "desc": "Hardware is the root of computation and communication. It is the enabler of any software, algorithm, or communication protocols. All the computation will eventually be carried out by hardware, namely the processor or the circuits.In this course, we will study security and trust from the hardware perspective. We will start with a short survey of the roles of hardware in security and trust. With all types of dedicated hardware/circuits, known as co-processors, being developed to speed up application specific computations, hardware\u2019s role changes from the enabler to an enhancer. Nowadays, hardware becomes the enforcer for secure systems because it is used to ensure that only the authenticated user and software can access the processor. However, current hardware design flow does not have security as a key design objective. Consequently, we will conduct several case studies where hardware turns into the weakest link in secure systems.Then we will review the fundamentals of digital logic design and use this as an example to analyze the source of security vulnerabilities and demonstrate how these vulnerabilities can become legitimate security threats. We conclude with the basic principles and practical methods of design for security and trust, as well as a study of the associated design cost. &nbsp;Next, we introduce physical attacks to popular digital systems such as smart cards and FPGA-based systems. We will focus on side-channel attacks, which have been demonstrated many times to be able to successfully reveal the secret cryptographic keys stored in the secure systems. These attacks include power analysis, timing attacks, and electromagnetic attacks. Standard countermeasures to these attacks will also be introduced.Finally we will learn the new hardware security primitives that can help us to build secure systems. We will see how the trust platform module (TPM) works; what is a silicon physical unclonable function (PUF) and why it is useful for system security; what is a hardware Trojan horse and the security threats it brings to the system; why counterfeiting becomes a serious problem for hardware design intellectual property protection.Upon completing the course, students will understand the vulnerabilities in current digital system design flow and the physical attacks to these systems. They will learn that security starts from hardware design and be familiar with the tools and skills to build secure and trusted hardware.SyllabusTrust in digital system designVulnerability in combinational logicVulnerability in sequential logic and finite state machineHardware Trojan HorseCircuit obfuscationSide-channel attacksPower analysisTiming attacksElectroMagnetic analysis &nbsp;&nbsp;&nbsp;&nbsp;Physical attacksFault injection attackSmart card securityField Programmable Gate Array (FPGA) securityEmerging hardware security topicsTrust Platform Modules (TPM)Physical Unclonable Functions (PUF)True Random Number Generators (TRNG)RFID tagCounterfeitingIntellectual property protection",
        "desc_html": "Hardware is the root of computation and communication. It is the enabler of\nany software, algorithm, or communication protocols. All the computation will\neventually be carried out by hardware, namely the processor or the circuits.  \n\nIn this course, we will study security and trust from the hardware\nperspective. We will start with a short survey of the roles of hardware in\nsecurity and trust. With all types of dedicated hardware/circuits, known as\nco-processors, being developed to speed up application specific computations,\nhardware\u2019s role changes from the enabler to an enhancer. Nowadays, hardware\nbecomes the enforcer for secure systems because it is used to ensure that only\nthe authenticated user and software can access the processor. However, current\nhardware design flow does not have security as a key design objective.\nConsequently, we will conduct several case studies where hardware turns into\nthe weakest link in secure systems.\n\nThen we will review the fundamentals of digital logic design and use this as\nan example to analyze the source of security vulnerabilities and demonstrate\nhow these vulnerabilities can become legitimate security threats. We conclude\nwith the basic principles and practical methods of design for security and\ntrust, as well as a study of the associated design cost.  \n\nNext, we introduce physical attacks to popular digital systems such as smart\ncards and FPGA-based systems. We will focus on side-channel attacks, which\nhave been demonstrated many times to be able to successfully reveal the secret\ncryptographic keys stored in the secure systems. These attacks include power\nanalysis, timing attacks, and electromagnetic attacks. Standard\ncountermeasures to these attacks will also be introduced.\n\nFinally we will learn the new hardware security primitives that can help us to\nbuild secure systems. We will see how the trust platform module (TPM) works;\nwhat is a silicon physical unclonable function (PUF) and why it is useful for\nsystem security; what is a hardware Trojan horse and the security threats it\nbrings to the system; why counterfeiting becomes a serious problem for\nhardware design intellectual property protection.\n\nUpon completing the course, students will understand the vulnerabilities in\ncurrent digital system design flow and the physical attacks to these systems.\nThey will learn that security starts from hardware design and be familiar with\nthe tools and skills to build secure and trusted hardware.\n\n  \n\n## Syllabus\n\n**Trust in digital system design**  \n\n  * Vulnerability in combinational logic\n\n  * Vulnerability in sequential logic and finite state machine\n\n  * Hardware Trojan Horse \n\n  * Circuit obfuscation\n\n**Side-channel attacks**  \n\n  * Power analysis\n\n  * Timing attacks\n\n  * ElectroMagnetic analysis     \n\n**Physical attacks**  \n\n  * Fault injection attack\n\n  * Smart card security\n\n  * Field Programmable Gate Array (FPGA) security \n\n**Emerging hardware security topics**  \n\n  * Trust Platform Modules (TPM)\n\n  * Physical Unclonable Functions (PUF)\n\n  * True Random Number Generators (TRNG)\n\n  * RFID tag\n\n  * Counterfeiting\n\n  * Intellectual property protection\n\n",
        "name": "Hardware Security",
        "provider": "Coursera",
        "rating": "2",
        "reviews": "1",
        "university": [
            "University of Maryland, College Park"
        ],
        "url": "https://www.coursera.org/course/hardwaresec",
        "video_url": ""
    },
    {
        "date": "2015-04-06",
        "desc": "In the PH525 case studies, we will explore the data analysis of an experimental protocol in depth, using various open source software, including R and Bioconductor. We will explain how to start with raw data, and perform the standard processing and normalization steps to get to the point where one can investigate relevant biological questions. Throughout the case studies, we will make use of exploratory plots to get a general overview of the shape of the data and the result of the experiment.We will learn the basic steps for analyzing an RNA-seq dataset for an organism with a well-defined genome and curated gene annotation. This will include read alignment, inferring presence of isoforms, counting reads in genes, exploring sample distances, differential expression analysis, and creating visual summaries.This class was supported in part by NIH grant R25GM114818.This course is part of a larger set of 8 total courses:PH525.1x:\u00a0Statistics and R for the Life SciencesPH525.2x:\u00a0Introduction to Linear Models and Matrix AlgebraPH525.3x:\u00a0Advanced Statistics for the Life SciencesPH525.4x:\u00a0Introduction to BioconductorPH525.5x:\u00a0Case study: RNA-seq data analysisPH525.6x: Case study: Variant Discovery and GenotypingPH525.7x:\u00a0Case study: ChIP-seq data analysisPH525.8x:\u00a0Case study: DNA methylation data analysisHarvardX pursues the science of learning. By registering as an online learner in an HX course, you will also participate in research about learning. Read our research statement to learn more.",
        "desc_html": "In the PH525 case studies, we will explore the data analysis of an\nexperimental protocol in depth, using various open source software, including\nR and Bioconductor. We will explain how to start with raw data, and perform\nthe standard processing and normalization steps to get to the point where one\ncan investigate relevant biological questions. Throughout the case studies, we\nwill make use of exploratory plots to get a general overview of the shape of\nthe data and the result of the experiment.  \n  \nWe will learn the basic steps for analyzing an RNA-seq dataset for an organism\nwith a well-defined genome and curated gene annotation. This will include read\nalignment, inferring presence of isoforms, counting reads in genes, exploring\nsample distances, differential expression analysis, and creating visual\nsummaries.  \n  \nThis class was supported in part by NIH grant R25GM114818.  \n  \nThis course is part of a larger set of 8 total courses:PH525.1x:\u00a0Statistics\nand R for the Life Sciences  \n  \nPH525.2x:\u00a0Introduction to Linear Models and Matrix Algebra  \n  \nPH525.3x:\u00a0Advanced Statistics for the Life Sciences  \n  \nPH525.4x:\u00a0Introduction to Bioconductor  \n  \nPH525.5x:\u00a0Case study: RNA-seq data analysis  \n  \nPH525.6x: Case study: Variant Discovery and Genotyping  \n  \nPH525.7x:\u00a0Case study: ChIP-seq data analysis  \n  \nPH525.8x:\u00a0Case study: DNA methylation data analysis  \nHarvardX pursues the science of learning. By registering as an online learner\nin an HX course, you will also participate in research about learning. Read\nour research statement to learn more.\n\n",
        "name": "PH525.5x: Case study: RNA-seq data analysis",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Harvard University"
        ],
        "url": "https://www.edx.org/course/case-study-rna-seq-data-analysis-harvardx-ph525-5x",
        "video_url": "https://www.youtube.com/embed/nwFyIxc4AE0?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-04-03",
        "desc": "Robotic Vision&nbsp;introduces you to the field of computer vision and the mathematics and algorithms that underpin it.You&rsquo;ll learn how to interpret images to determine the color, size, shape and position of objects in the scene.We&rsquo;ll work with you to build an intelligent vision system that can recognise objects of different colours and shapes.&nbsp;Combined with the&nbsp;Introduction to Robotics&nbsp;MOOC, this course is based on a 13 week undergraduate course&nbsp;Introduction to Robotics&nbsp;at the&nbsp;Queensland University of Technology.&nbsp;If you have completed the Robot Project in&nbsp;Introduction to Robotics, you will be able to combine this with the vision system you will develop in this course (optional).&nbsp;Course OutcomesBy the end of this course you should be able to:describe and explain the utility of vision as a sensor for robots and evaluate the challenges inherent in visual information.describe the underlying principles of common image processing techniques and the circumstances where they are applicable, the rationale for reducing image pixels to features and the principles image region segmentation and feature extraction.describe the mathematical and geometric principles underlying the formation of images.describe the principles of continuous spectra, trichromatic vision and the separation of chrominance and luminance information.demonstrate the software skills to import images from a variety of sources into MATLAB and perform a number of image processing and feature extraction algorithms using MATLAB.apply the mathematical and algorithmic and control principles of computer vision to implement a working vision system (applies to optional project).integrate the robot and vision into a functional system in which the desired object is recognised and the robot moves to it (applies to optional project).&nbsp;Pathways through the courseYou can follow three paths through the MOOC:You can audit the course: Register and have access to all the content, lectures, quizzes and programming assignments which you can view at your leisure. You do not necessarily have to submit the assessments. You will not receive a certificate at the end of the course.To receive a certificate of completion you should register for the course, study all the content and successfully complete at least four assessable quizzes and four programming assignments.An additional option is to complete a robot building project which will be peer assessed.&nbsp;WorkloadYou should spend about 4&ndash;8 hours per week on this course. Depending on your level of skill with&nbsp;MATLAB&nbsp;and programming in general, your studies might include:2 hours viewing the lecture videos and completing the self-assessment quizzes;30 minutes for each of six weekly assessable quizzes2 hours for each of six weekly programming assignments;1&ndash;2 hours building the robot or vision system (optional project) or doing further research and/or communicating on forums.&nbsp;Time required for the last two items will depend on your level of skill with MATLAB and programming in general.&nbsp;Certificate of Achievement&nbsp;Throughout the course you will be asked to complete quizzes and programming exercises. These will be automatically marked. If you pass 4 quizzes and 4 programming assignments you will receive a Certificate of Achievement. The programming assignments will consist of several MATLAB tasks and will be based on the lecture content for that week.&nbsp;The robot project will be peer assessed but doesn&rsquo;t count towards the Certificate of Completion.&nbsp;Assumed knowledgeTo complete the MOOC you should know some basic programming (either of MATLAB or of an object-oriented programming language) and some of the following areas of maths: matrices, vectors and spaces, eigenvalues and eigenvectors. Below are links to these topics on the&nbsp;Khan Academy. We believe this knowledge will be necessary to complete the course, and recommend that you view these before Week 1 begins, but you might prefer to watch them on an &lsquo;as needed&rsquo; basis after you view our content.&nbsp;VectorsMatrices:basic matrix operations including multiplication and inversionzero and identity matricesvector transformations with matricesfamiliarity with the concepts of&nbsp;eigenvalues and eigenvectors.&nbsp;Note:&nbsp;A free version of MATLAB will be available for the duration of the course. Also, Professor Corke&rsquo;s textbook (not essential) will be available at a significant discount.&nbsp;RequirementsHardwareComputer:&nbsp;You will need a computer that is capable of running MATLAB. For System Requirements, visit the&nbsp;MathWorks&rsquo; System Requirements page.SoftwareMATLAB. This is a proprietary technical computing and visualisation package developed by The Mathworks Inc. It is widely used in the engineering industry, in scientific research and for undergraduate education. MATLAB is a core part of the course and is available for free to students studying this course. It is used to illustrate techniques in the lectures (via screencasts) and also for the assignment (you need to write programs and submit them for automatic grading). A free MATLAB licence and software for installation will be available when you enrol in the course.Open source toolboxes for MATLAB. These will also be available from the course site.OtherTextbook&nbsp;(optional). Access to the textbook written by Professor Peter Corke (2011),&nbsp;Robotics, Vision and Control: Fundamental Algorithms in MATLAB&nbsp;(Springer) is optional, but considered beneficial.&nbsp;Progress through the Course&nbsp;The course content will be released weekly (Midnight Sundays UTC). Each week you will go through the video materials in two lectures. The videos are interspersed with non-assessed quiz questions and exercises to check your understanding. After the two lectures you will be presented with two assessable tasks: a quiz and a programming activity. (You will need to pass four of the six quizzes, and four of the six programming tasks to receive a&nbsp;Certificate of Completion.) Finally, an optional &ndash; but exciting &ndash; activity is to build your own robot vision system. Throughout the course you will also be encouraged to take part in discussion forums.Syllabus&nbsp;Week 1This week we will look at how robots sense the world around them. We will explore the sense of vision, what this means for robots, and learn how to get an image into MATLAB where we can begin to process it. The skills you&rsquo;ll learn and the tools we&rsquo;ll use will be essential for the MATLAB assignments and the project.Lecture 1: Robot VisionLecture 2: Getting images into a computer&nbsp;Week 2This week we will discuss how to process images with simple arithmetic and logical operations to perform operations such as thresholding, green screening and change detection. Then we look at operations that allow us to blur or find edges within images, find distinctive patterns or select only objects of particular shapes.&nbsp;Lecture 3: Image processingLecture 4: Spatial operators&nbsp;Week 3This week we&rsquo;ll ask the question &ldquo;How can a robot know what it&rsquo;s looking at?&rdquo; We will see how robots can extract simple meaning from an image, describing objects in terms of their size, shape and position. Then we look at color, its importance in image processing, and how we can describe and select objects based on their color.Lecture 5: Feature extractionLecture 6: What is color?&nbsp;Week 4So far we&rsquo;ve assumed the existence of an image. This week we will learn how images are formed by cameras. The first lecture presents a simple geometric approach to understanding this, while the second lecture uses homogeneous coordinates to express this process in terms of matrices and vectors which we can calculate easily using MATLAB.Lecture 7: Image formationLecture 8: Image geometry&nbsp;Week 5This week we will how humans perceive the 3D nature of the world using binocular vision, how stereo displays and TVs work, and how we can mimic this in a computer to extract a 3D model of the world from two images. Then we followup on lecture 4 and discuss advanced image processing techniques for selecting shapes, rotating and scaling images, and finding dominant lines and points within an image.Lecture 9: 3D visionLecture 10: Advanced image processing operations&nbsp;Week 6In this final week we discuss the way that an image changes as the camera moves. Then we invert this and compute how the camera should move so that the image changes in the way we want, a technique commonly known as visual servoing.Lecture 11: Vision and motion&nbsp;",
        "desc_html": "Robotic Vision introduces you to the field of computer vision and the\nmathematics and algorithms that underpin it.You'll learn how to interpret\nimages to determine the color, size, shape and position of objects in the\nscene.We'll work with you to build an intelligent vision system that can\nrecognise objects of different colours and shapes.\n\n\n\nCombined with the Introduction to Robotics MOOC, this course is based on a 13\nweek undergraduate course Introduction to Robotics at the [Queensland\nUniversity of Technology](http://www.qut.edu.au/).\n\n\n\nIf you have completed the Robot Project in Introduction to Robotics, you will\nbe able to combine this with the vision system you will develop in this course\n(optional).\n\n\n\n**Course Outcomes**\n\nBy the end of this course you should be able to:\n\n  * describe and explain the utility of vision as a sensor for robots and evaluate the challenges inherent in visual information.\n  * describe the underlying principles of common image processing techniques and the circumstances where they are applicable, the rationale for reducing image pixels to features and the principles image region segmentation and feature extraction.\n  * describe the mathematical and geometric principles underlying the formation of images.\n  * describe the principles of continuous spectra, trichromatic vision and the separation of chrominance and luminance information.\n  * demonstrate the software skills to import images from a variety of sources into MATLAB and perform a number of image processing and feature extraction algorithms using MATLAB.\n  * apply the mathematical and algorithmic and control principles of computer vision to implement a working vision system (applies to optional project).\n  * integrate the robot and vision into a functional system in which the desired object is recognised and the robot moves to it (applies to optional project).\n\n\n\n**Pathways through the course**\n\nYou can follow three paths through the MOOC:\n\n  1. You can audit the course: Register and have access to all the content, lectures, quizzes and programming assignments which you can view at your leisure. You do not necessarily have to submit the assessments. You will not receive a certificate at the end of the course.\n  2. To receive a certificate of completion you should register for the course, study all the content and successfully complete at least four assessable quizzes and four programming assignments.\n  3. An additional option is to complete a robot building project which will be peer assessed.\n\n\n\n**Workload**\n\nYou should spend about 4-8 hours per week on this course. Depending on your\nlevel of skill with MATLAB and programming in general, your studies might\ninclude:\n\n  * 2 hours viewing the lecture videos and completing the self-assessment quizzes;\n  * 30 minutes for each of six weekly assessable quizzes\n  * 2 hours for each of six weekly programming assignments;\n  * 1-2 hours building the robot or vision system (optional project) or doing further research and/or communicating on forums.\n\n** **\n\nTime required for the last two items will depend on your level of skill with\nMATLAB and programming in general.\n\n\n\n**Certificate of Achievement **\n\nThroughout the course you will be asked to complete quizzes and programming\nexercises. These will be automatically marked. If you pass 4 quizzes and 4\nprogramming assignments you will receive a Certificate of Achievement. The\nprogramming assignments will consist of several MATLAB tasks and will be based\non the lecture content for that week.\n\n\n\nThe robot project will be peer assessed but doesn't count towards the\nCertificate of Completion.\n\n\n\n**Assumed knowledge**\n\nTo complete the MOOC you should know some basic programming (either of MATLAB\nor of an object-oriented programming language) and some of the following areas\nof maths: matrices, vectors and spaces, eigenvalues and eigenvectors. Below\nare links to these topics on the [Khan Academy](https://www.khanacademy.org/).\nWe believe this knowledge will be necessary to complete the course, and\nrecommend that you view these before Week 1 begins, but you might prefer to\nwatch them on an 'as needed' basis after you view our content.\n\n\n\n  * [Vectors](https://www.khanacademy.org/math/linear-algebra/vectors_and_spaces/vectors/v/vector-introduction-linear-algebra)\n  * [Matrices](https://www.khanacademy.org/math/precalculus/precalc-matrices): \n    * basic matrix operations including multiplication and inversion\n    * zero and identity matrices\n    * vector transformations with matrices\n    * familiarity with the concepts of [eigenvalues and eigenvectors](https://www.khanacademy.org/math/linear-algebra/alternate_bases/eigen_everything/v/linear-algebra-introduction-to-eigenvalues-and-eigenvectors).\n\n** **\n\nNote: A free version of MATLAB will be available for the duration of the\ncourse. Also, Professor Corke's textbook (not essential) will be available at\na significant discount.\n\n\n\n**Requirements** **Hardware**\n\n  1. Computer: You will need a computer that is capable of running MATLAB. For System Requirements, visit the [MathWorks' System Requirements page](http://au.mathworks.com/support/sysreq/current_release/).\n\n**Software**\n\n  1. MATLAB. This is a proprietary technical computing and visualisation package developed by The Mathworks Inc. It is widely used in the engineering industry, in scientific research and for undergraduate education. MATLAB is a core part of the course and is available for free to students studying this course. It is used to illustrate techniques in the lectures (via screencasts) and also for the assignment (you need to write programs and submit them for automatic grading). A free MATLAB licence and software for installation will be available when you enrol in the course.\n  2. Open source toolboxes for MATLAB. These will also be available from the course site.\n\n**Other**\n\n  1. Textbook (optional). Access to the textbook written by Professor Peter Corke (2011), Robotics, Vision and Control: Fundamental Algorithms in MATLAB (Springer) is optional, but considered beneficial.\n\n\n\n**Progress through the Course **\n\nThe course content will be released weekly (Midnight Sundays UTC). Each week\nyou will go through the video materials in two lectures. The videos are\ninterspersed with non-assessed quiz questions and exercises to check your\nunderstanding. After the two lectures you will be presented with two\nassessable tasks: a quiz and a programming activity. (You will need to pass\nfour of the six quizzes, and four of the six programming tasks to receive a\nCertificate of Completion.) Finally, an optional - but exciting - activity is\nto build your own robot vision system. Throughout the course you will also be\nencouraged to take part in discussion forums.\n\n## Syllabus\n\n\n\n**Week 1**\n\nThis week we will look at how robots sense the world around them. We will\nexplore the sense of vision, what this means for robots, and learn how to get\nan image into MATLAB where we can begin to process it. The skills you'll learn\nand the tools we'll use will be essential for the MATLAB assignments and the\nproject.\n\n  * Lecture 1: Robot Vision\n  * Lecture 2: Getting images into a computer\n\n\n\n**Week 2**\n\nThis week we will discuss how to process images with simple arithmetic and\nlogical operations to perform operations such as thresholding, green screening\nand change detection. Then we look at operations that allow us to blur or find\nedges within images, find distinctive patterns or select only objects of\nparticular shapes.\n\n  * Lecture 3: Image processing\n  * Lecture 4: Spatial operators\n\n\n\n**Week 3**\n\nThis week we'll ask the question \"How can a robot know what it's looking at?\"\nWe will see how robots can extract simple meaning from an image, describing\nobjects in terms of their size, shape and position. Then we look at color, its\nimportance in image processing, and how we can describe and select objects\nbased on their color.\n\n  * Lecture 5: Feature extraction\n  * Lecture 6: What is color?\n\n\n\n**Week 4**\n\nSo far we've assumed the existence of an image. This week we will learn how\nimages are formed by cameras. The first lecture presents a simple geometric\napproach to understanding this, while the second lecture uses homogeneous\ncoordinates to express this process in terms of matrices and vectors which we\ncan calculate easily using MATLAB.\n\n  * Lecture 7: Image formation\n  * Lecture 8: Image geometry\n\n\n\n**Week 5**\n\nThis week we will how humans perceive the 3D nature of the world using\nbinocular vision, how stereo displays and TVs work, and how we can mimic this\nin a computer to extract a 3D model of the world from two images. Then we\nfollowup on lecture 4 and discuss advanced image processing techniques for\nselecting shapes, rotating and scaling images, and finding dominant lines and\npoints within an image.\n\n  * Lecture 9: 3D vision\n  * Lecture 10: Advanced image processing operations\n\n\n\n**Week 6**\n\nIn this final week we discuss the way that an image changes as the camera\nmoves. Then we invert this and compute how the camera should move so that the\nimage changes in the way we want, a technique commonly known as visual\nservoing.\n\n  * Lecture 11: Vision and motion\n\n\n\n",
        "name": "Robotic Vision",
        "provider": "EdCast",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Queensland University of Technology"
        ],
        "url": "https://moocs.qut.edu.au/learn/robotic-vision-april-2015",
        "video_url": "https://www.youtube.com/embed/aGClkyVXrYw?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-04-01",
        "desc": "Data scienceis the profession of the\nfuture, because organizations that are unable to use (big) data in a smart way\nwill not survive. It is not sufficient to focus on data storage and data\nanalysis. The data scientist also needs to relate data to process analysis.Process\nmining bridges the gap between traditional model-based process analysis (e.g.,\nsimulation and other business process management techniques) and data-centric\nanalysis techniques such as machine learning and data mining.Process mining\nseeks the confrontation between event data (i.e., observed behavior) and\nprocess models (hand-made or discovered automatically). This technology has\nbecome available only recently, but it can be applied to any type of operational\nprocesses (organizations and systems). Example applications include: analyzing\ntreatment processes in hospitals, improving customer service processes in a\nmultinational, understanding the browsing behavior of customers using a booking\nsite, analyzing failures of a baggage handling system, and improving the user\ninterface of an X-ray machine. All of these applications have in common that\ndynamic behavior needs to be related to process models. Hence, we refer to this\nas \"data science in action\".The course explains the key analysis\ntechniques in process mining. Participants will learn various process discovery\nalgorithms. These can be used to automatically learn process models from raw\nevent data. Various other process analysis techniques that use event data will\nbe presented. Moreover, the course will provideeasy-to-use software,real-life\ndata sets, andpractical skillstodirectly apply the theoryin a variety of\napplication domains.SyllabusThis course starts with an overview\nof approaches and technologies that use event data to support decision making\nand business process (re)design. Then the course focuses onprocess mining as a\nbridge between data mining and business process modeling. The course is at an\nintroductory level with various practical assignments.The course covers the three main\ntypes of process mining.&nbsp;The first type of process mining isdiscovery. A\ndiscovery technique takes an event log and produces a process model without\nusing any a-priori information. An example is the Alpha-algorithm that takes an\nevent log and produces a process model (a Petri net) explaining the behavior recorded in the log.&nbsp;The second type of process mining isconformance. Here, an existing process\nmodel is compared with an event log of the same process. Conformance checking\ncan be used to check if reality, as recorded in the log, conforms to the model\nand vice versa.The third type of process mining isenhancement. Here, the idea\nis to extend or improve an existing process model using information about the\nactual process recorded in some event log.Whereas conformance checking\nmeasures the alignment between model and reality, this third type of process\nmining aims at changing or extending the a-priori model.An example is the\nextension of a process model with performance information, e.g., showingbottlenecks. Process mining techniques can be used in an offline, but also\nonline setting. The latter is known as operational support. An example is the\ndetection of non-conformance at the moment the deviation actually takes place.\nAnother example is timepredictionfor running cases, i.e., given a partially\nexecuted case the remaining processing time is estimated based on historic information\nof similar cases.Process mining provides not only a\nbridge between data mining and business process management;it also helps to\naddress the classical divide between \"business\" and \"IT\".\nEvidence-based business process management based on process mining helps to\ncreate a common ground for business process improvement and information systems\ndevelopment.The course uses many examples using\nreal-life event logs to illustrate the concepts and algorithms.After taking\nthis course, one is able to run process mining projects and have a good\nunderstanding of the Business Process Intelligence field.After taking this course you should:- have a good understanding ofBusiness Process Intelligencetechniques (in particular process mining),- understand the role ofBig Datain today\u2019s society,- be able torelate process mining techniques to other analysis techniquessuch as simulation, business intelligence, data mining, machine learning, and verification,- be able to apply basic process discovery techniques to learn a process model from an event log (both manually and using tools),- be able to apply basicconformance checkingtechniques to compare event logs and process models (both manually and using tools),- be able toextend a process modelwith information extracted from the event log (e.g., show bottlenecks),- have a good understanding of thedata needed to start a process mining project,- be able to characterize thequestionsthat can be answered based on such event data,- explain how process mining can also be used foroperational support (prediction and recommendation), and- be able toconduct process mining projectsin a structured manner.",
        "desc_html": "**Data science** is the profession of the future, because organizations that are unable to use (big) data in a smart way will not survive. It is not sufficient to focus on data storage and data analysis. The data scientist also needs to relate data to process analysis. **Process mining bridges the gap between traditional model-based process analysis (e.g., simulation and other business process management techniques) and data-centric analysis techniques such as machine learning and data mining.** Process mining seeks the confrontation between event data (i.e., observed behavior) and process models (hand-made or discovered automatically). This technology has become available only recently, but it can be applied to any type of operational processes (organizations and systems). Example applications include: analyzing treatment processes in hospitals, improving customer service processes in a multinational, understanding the browsing behavior of customers using a booking site, analyzing failures of a baggage handling system, and improving the user interface of an X-ray machine. All of these applications have in common that dynamic behavior needs to be related to process models. Hence, we refer to this as \"data science in action\".\n\nThe course explains the key analysis techniques in process mining.\nParticipants will learn various process discovery algorithms. These can be\nused to automatically learn process models from raw event data. Various other\nprocess analysis techniques that use event data will be presented. Moreover,\nthe course will provide **easy-to-use software**, **real-life data sets**, and\n**practical skills** to **directly apply the theory** in a variety of\napplication domains.\n\n## Syllabus\n\nThis course starts with an overview of approaches and technologies that use\nevent data to support decision making and business process (re)design. Then\nthe course focuses on **process mining as a bridge between data mining and\nbusiness process modeling**. The course is at an introductory level with\nvarious practical assignments.\n\nThe course covers the three main types of process mining.\n\n  1. The first type of process mining is **discovery**. A discovery technique takes an event log and produces a process model without using any a-priori information. An example is the Alpha-algorithm that takes an event log and produces a process model (a Petri net) explaining the behavior recorded in the log. \n  2. The second type of process mining is **conformance**. Here, an existing process model is compared with an event log of the same process. Conformance checking can be used to check if reality, as recorded in the log, conforms to the model and vice versa.\n  3. The third type of process mining is **enhancement**. Here, the idea is to extend or improve an existing process model using information about the actual process recorded in some event log. **Whereas conformance checking measures the alignment between model and reality, this third type of process mining aims at changing or extending the a-priori model.** An example is the extension of a process model with performance information, e.g., showing _bottlenecks_. Process mining techniques can be used in an offline, but also online setting. The latter is known as operational support. An example is the detection of non-conformance at the moment the deviation actually takes place. Another example is time _prediction _for running cases, i.e., given a partially executed case the remaining processing time is estimated based on historic information of similar cases.\n\nProcess mining provides not only a bridge between data mining and business\nprocess management; **it also helps to address the classical divide between\n\"business\" and \"IT\"**. Evidence-based business process management based on\nprocess mining helps to create a common ground for business process\nimprovement and information systems development.\n\n**The course uses many examples using real-life event logs to illustrate the concepts and algorithms.** After taking this course, one is able to run process mining projects and have a good understanding of the Business Process Intelligence field.\n\nAfter taking this course you should:\n\n\\- have a good understanding of **Business Process Intelligence** techniques\n(in particular process mining),\n\n\\- understand the role of **Big Data** in today\u2019s society,\n\n\\- be able to **relate process mining techniques to other analysis\ntechniques** such as simulation, business intelligence, data mining, machine\nlearning, and verification,\n\n\\- be able to apply basic process discovery techniques to learn a process\nmodel from an event log (both manually and using tools),\n\n\\- be able to apply basic **conformance checking **techniques to compare event\nlogs and process models (both manually and using tools),\n\n\\- be able to **extend a process model** with information extracted from the\nevent log (e.g., show bottlenecks),\n\n\\- have a good understanding of the **data needed to start a process mining\nproject**,\n\n\\- be able to characterize the **questions **that can be answered based on\nsuch event data,\n\n\\- explain how process mining can also be used for **operational support\n(prediction and recommendation)**, and\n\n\\- be able to **conduct process mining projects** in a structured manner.\n\n",
        "name": "Process Mining: Data science in Action",
        "provider": "Coursera",
        "rating": "3.5",
        "reviews": "2",
        "university": [
            "Eindhoven University of Technology"
        ],
        "url": "https://www.coursera.org/course/procmin",
        "video_url": ""
    },
    {
        "date": "2015-04-01",
        "desc": "This is an introductory course to learn programming with Java. This course is designed taking into account the subset and recommendations of the College Board in order to prepare learners for the Advanced Placement (AP) Computer Science A exam. It is comprised of three 5-week parts.Part 1 introduces programming on the basis of familiar concepts, like calculators and games. In a gentle way, it introduces to powerful concepts like functional abstraction and object encapsulation.Part 2 will focus on how to write \u201cgood\u201d programs, where \u201cgood\u201d is to be understood from several perspectives: correctness, efficiency, software engineering techniques, and ethics.Part 3 will deal with fundamental data structures, such as sequences, and algorithms on them, such as searching and sorting.Emphasis is put on immediate feedback and on having a fun experience. Programming knowledge is not only useful to be able to program today\u2019s devices such as computers and smartphones. It also opens the door to computational thinking, i.e. the application of computing techniques to every-day processes.Please click here to see the course syllabus.",
        "desc_html": "This is an introductory course to learn programming with Java. This course is\ndesigned taking into account the subset and recommendations of the College\nBoard in order to prepare learners for the Advanced Placement (AP) Computer\nScience A exam. It is comprised of three 5-week parts.  \n  \nPart 1 introduces programming on the basis of familiar concepts, like\ncalculators and games. In a gentle way, it introduces to powerful concepts\nlike functional abstraction and object encapsulation.  \n  \nPart 2 will focus on how to write \u201cgood\u201d programs, where \u201cgood\u201d is to be\nunderstood from several perspectives: correctness, efficiency, software\nengineering techniques, and ethics.  \n  \nPart 3 will deal with fundamental data structures, such as sequences, and\nalgorithms on them, such as searching and sorting.  \n  \nEmphasis is put on immediate feedback and on having a fun experience.\nProgramming knowledge is not only useful to be able to program today\u2019s devices\nsuch as computers and smartphones. It also opens the door to computational\nthinking, i.e. the application of computing techniques to every-day processes.  \n  \nPlease click here to see the course syllabus.\n\n",
        "name": "IT.1.1x: Introduction to Programming with Java - Part 1: Starting to Program in Java",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Universidad Carlos iii de Madrid"
        ],
        "url": "https://www.edx.org/course/introduction-programming-java-part-1-uc3mx-it-1-1x",
        "video_url": ""
    },
    {
        "date": "2015-03-31",
        "desc": "Android es la plataforma libre desarrollada por Google, ampliamente utilizada en multitud de dispositivos como m\u00f3viles, tabletas, TV, wearables o sistemas empotrados. Su expansi\u00f3n ha sido espectacular, superando en la actualidad al S.O. Microsoft Windows. Tras realizar este curso conocer\u00e1s los fundamentos del desarrollo de aplicaciones en Android y podr\u00e1s realizar sencillas aplicaciones, que incluyan los aspectos m\u00e1s importantes y novedosos de esta plataforma.A lo largo del curso se desarrolla una aplicaci\u00f3n de ejemplo, \"Mis Lugares Favoritos\", que nos permitir\u00e1 almacenar fotograf\u00eda, posici\u00f3n geogr\u00e1fica, valoraci\u00f3n y otros datos de los locales que m\u00e1s nos gustan. El curso se introducen los siguientes aspectos: repaso de Java, visi\u00f3n general de Android, entorno de desarrollo (Eclipse), Interfaz de usuario (vistas, Layouts, recursos, barra de acciones, preferencias, ListView, Fragments...), actividades, intenciones, seguridad, posicionamiento, mapas y bases de datos.",
        "desc_html": "Android es la plataforma libre desarrollada por Google, ampliamente utilizada\nen multitud de dispositivos como m\u00f3viles, tabletas, TV, wearables o sistemas\nempotrados. Su expansi\u00f3n ha sido espectacular, superando en la actualidad al\nS.O. Microsoft Windows. Tras realizar este curso conocer\u00e1s los fundamentos del\ndesarrollo de aplicaciones en Android y podr\u00e1s realizar sencillas\naplicaciones, que incluyan los aspectos m\u00e1s importantes y novedosos de esta\nplataforma.A lo largo del curso se desarrolla una aplicaci\u00f3n de ejemplo, \"Mis\nLugares Favoritos\", que nos permitir\u00e1 almacenar fotograf\u00eda, posici\u00f3n\ngeogr\u00e1fica, valoraci\u00f3n y otros datos de los locales que m\u00e1s nos gustan. El\ncurso se introducen los siguientes aspectos: repaso de Java, visi\u00f3n general de\nAndroid, entorno de desarrollo (Eclipse), Interfaz de usuario (vistas,\nLayouts, recursos, barra de acciones, preferencias, ListView, Fragments...),\nactividades, intenciones, seguridad, posicionamiento, mapas y bases de datos.\n\n",
        "name": "AIP201x: Android: Introducci\u00f3n a la programaci\u00f3n",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Universitat Polit\u00e8cnica de Val\u00e8ncia"
        ],
        "url": "https://www.edx.org/course/android-introduccion-la-programacion-upvalenciax-aip201x",
        "video_url": "https://www.youtube.com/embed/bmy9l9nyVYM?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-03-30",
        "desc": "Digital images and videos are everywhere these days \u2013 in thousands of\nscientific (e.g., astronomical, bio-medical), consumer, industrial, and\nartistic applications. Moreover they come in a wide range of the\nelectromagnetic spectrum - from visible light and infrared to gamma rays and\nbeyond. The ability to process image and video signals is therefore an\nincredibly important skill to master for engineering/science students, software\ndevelopers, and practicing scientists.\u00a0\u00a0\nDigital image and video processing continues to enable the multimedia\ntechnology revolution we are experiencing today. Some important examples of\nimage and video processing include the removal of degradations images suffer\nduring acquisition (e.g., removing blur from a picture of a fast moving car),\nand the compression and transmission of images and videos (if you watch videos\nonline, or share photos via a social media website, you use this everyday!),\nfor economical storage and efficient transmission.This course will cover the fundamentals of image and video processing.\u00a0 We will provide a mathematical framework to describe and analyze images and videos as two- and three-dimensional signals in the spatial, spatio-temporal, and frequency domains. In this class not only will you learn the theory behind fundamental processing tasks including image/video enhancement, recovery, and compression - but you will also learn how to perform these key processing tasks in practice using state-of-the-art techniques and tools. We will introduce and use a wide variety of such tools \u2013 from optimization toolboxes to statistical techniques. Emphasis on the special role sparsity plays in modern image and video processing will also be given.\u00a0 In all cases, example images and videos pertaining to specific application domains will be utilized.SyllabusIntroduction,\nImage and Video Processing vs Image and Video Analysis vs Computer Vision, the\nelectromagnetic spectrum, applications of image and video processing2D and 3D\nsignals and systems, linear and shift invariant systems (convolution)2D and 3D\nFourier transform, 2D and 3D discrete-Fourier transform, uniform samplingMotion\nestimation and its applicationsImage and\nvideo enhancement (e.g., edge detection, noise filtering, histogram\nequalization, inpainting)Image\nrecovery (restoration, super-resolution)Video\nrecovery (restoration, super-resolution)Lossless\ncompressionImage\ncompression techniques and standardsVideo\ncompression techniques and standardsImage and\nvideo analysis (e.g., 2D and 3D segmentation, clustering)Sparsity-based\nadvances in image and video processing",
        "desc_html": "Digital images and videos are everywhere these days \u2013 in thousands of\nscientific (e.g., astronomical, bio-medical), consumer, industrial, and\nartistic applications. Moreover they come in a wide range of the\nelectromagnetic spectrum - from visible light and infrared to gamma rays and\nbeyond. The ability to process image and video signals is therefore an\nincredibly important skill to master for engineering/science students,\nsoftware developers, and practicing scientists.\u00a0\u00a0 Digital image and video\nprocessing continues to enable the multimedia technology revolution we are\nexperiencing today. Some important examples of image and video processing\ninclude the removal of degradations images suffer during acquisition (e.g.,\nremoving blur from a picture of a fast moving car), and the compression and\ntransmission of images and videos (if you watch videos online, or share photos\nvia a social media website, you use this everyday!), for economical storage\nand efficient transmission.\n\nThis course will cover the fundamentals of image and video processing.\u00a0 We\nwill provide a mathematical framework to describe and analyze images and\nvideos as two- and three-dimensional signals in the spatial, spatio-temporal,\nand frequency domains. In this class not only will you learn the theory behind\nfundamental processing tasks including image/video enhancement, recovery, and\ncompression - but you will also learn how to perform these key processing\ntasks in practice using state-of-the-art techniques and tools. We will\nintroduce and use a wide variety of such tools \u2013 from optimization toolboxes\nto statistical techniques. Emphasis on the special role sparsity plays in\nmodern image and video processing will also be given.\u00a0 In all cases, example\nimages and videos pertaining to specific application domains will be utilized.  \n  \n\n## Syllabus\n\n  * Introduction, Image and Video Processing vs Image and Video Analysis vs Computer Vision, the electromagnetic spectrum, applications of image and video processing\n  * 2D and 3D signals and systems, linear and shift invariant systems (convolution)\n  * 2D and 3D Fourier transform, 2D and 3D discrete-Fourier transform, uniform sampling  \n\n  * Motion estimation and its applications\n  * Image and video enhancement (e.g., edge detection, noise filtering, histogram equalization, inpainting)\n  * Image recovery (restoration, super-resolution)\n  * Video recovery (restoration, super-resolution)\n  * Lossless compression\n  * Image compression techniques and standards\n  * Video compression techniques and standards\n  * Image and video analysis (e.g., 2D and 3D segmentation, clustering)\n  * Sparsity-based advances in image and video processing\n\n",
        "name": "Fundamentals of Digital Image and Video Processing",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Northwestern University"
        ],
        "url": "https://www.coursera.org/course/digital",
        "video_url": ""
    },
    {
        "date": "2015-03-27",
        "desc": "This two-part course (part 1 is availablehere) is designed to help students with very little or no computing background learn the basics of building simple interactive applications. Our language of choice, Python, is an easy-to learn, high-level computer language that is used in many of the computational courses offered on Coursera. To make learning Python easy, we have developed a new browser-based programming environment that makes developing interactive applications in Python simple. These applications will involve windows whose contents are graphical and respond to buttons, the keyboard and the mouse.The primary method for learning the course material will be to work through multiple \"mini-projects\" in Python. To make this class enjoyable, these projects will include building fun games such as Pong, Blackjack, and Asteroids. When you\u2019ve finished our course, we can\u2019t promise that you will be a professional programmer, but we think that you will learn a lot about programming in Python and have fun while you\u2019re doing it.SyllabusOur course syllabus can be seen atwww.codeskulptor.org/coursera/interactivepython.html.",
        "desc_html": "This two-part course (part 1 is available\n[here](https://www.coursera.org/course/interactivepython1)) is designed to\nhelp students with very little or no computing background learn the basics of\nbuilding simple interactive applications. Our language of choice, Python, is\nan easy-to learn, high-level computer language that is used in many of the\ncomputational courses offered on Coursera. To make learning Python easy, we\nhave developed a new browser-based programming environment that makes\ndeveloping interactive applications in Python simple. These applications will\ninvolve windows whose contents are graphical and respond to buttons, the\nkeyboard and the mouse.\n\nThe primary method for learning the course material will be to work through\nmultiple \"mini-projects\" in Python. To make this class enjoyable, these\nprojects will include building fun games such as Pong, Blackjack, and\nAsteroids. When you\u2019ve finished our course, we can\u2019t promise that you will be\na professional programmer, but we think that you will learn a lot about\nprogramming in Python and have fun while you\u2019re doing it.\n\n## Syllabus\n\nOur course syllabus can be seen at [www.codeskulptor.org/coursera/interactivep\nython.html](http://www.codeskulptor.org/coursera/interactivepython.html).\n\n",
        "name": "An Introduction to Interactive Programming in Python (Part 2)",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Rice University"
        ],
        "url": "https://www.coursera.org/course/interactivepython2",
        "video_url": ""
    },
    {
        "date": "2015-03-27",
        "desc": "This two-part course (part 1 is availablehere) introduces the basic mathematical and programming principles that underlie much of Computer Science. Understanding these principles is crucial to the process of creating efficient and well-structured solutions for computational problems.To get hands-on experience working with these concepts, we will use the Python programming language. The main focus of the class will be weekly mini-projects that build upon the mathematical and programming principles that are taught in the class. To keep the class fun and engaging, many of the projects will involve working with strategy-based games.After completing this course, you will have a much stronger background in Computer Science and be capable of writing Python programs that are both efficient and well-structured. You will also have a better understanding of how to approach more complex computational problems. As always, our goal is to teach these principles of computing in a fun and exciting way. We look forward to seeing you in class!SyllabusOur course syllabus can be seen atwww.codeskulptor.org/coursera/principlescomputing.html.",
        "desc_html": "This two-part course (part 1 is available\n[here](https://www.coursera.org/course/principlescomputing1)) introduces the\nbasic mathematical and programming principles that underlie much of Computer\nScience. Understanding these principles is crucial to the process of creating\nefficient and well-structured solutions for computational problems.\n\nTo get hands-on experience working with these concepts, we will use the Python\nprogramming language. The main focus of the class will be weekly mini-projects\nthat build upon the mathematical and programming principles that are taught in\nthe class. To keep the class fun and engaging, many of the projects will\ninvolve working with strategy-based games.\n\nAfter completing this course, you will have a much stronger background in\nComputer Science and be capable of writing Python programs that are both\nefficient and well-structured. You will also have a better understanding of\nhow to approach more complex computational problems. As always, our goal is to\nteach these principles of computing in a fun and exciting way. We look forward\nto seeing you in class!\n\n## Syllabus\n\nOur course syllabus can be seen at [www.codeskulptor.org/coursera/principlesco\nmputing.html](http://www.codeskulptor.org/coursera/principlescomputing.html).\n\n",
        "name": "Principles of Computing (Part 2)",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Rice University"
        ],
        "url": "https://www.coursera.org/course/principlescomputing2",
        "video_url": ""
    },
    {
        "date": "2015-03-23",
        "desc": "In this course you will learn several fundamental principles of advanced algorithm design. You'll learn the greedy algorithm design paradigm, with applications to computing good network backbones (i.e., spanning trees) and good codes for data compression. You'll learn the tricky yet widely applicable dynamic programming algorithm design paradigm, with applications to routing in the Internet and sequencing genome fragments. &nbsp;You\u2019ll learn what NP-completeness and the famous \u201cP vs. NP\u201d problem mean for the algorithm designer. &nbsp;Finally, we\u2019ll study several strategies for dealing with hard (i.e., NP-complete problems), including the design and analysis of heuristics. &nbsp;Learn how shortest-path algorithms from the 1950s (i.e., pre-ARPANET!) govern the way that your Internet traffic gets routed today; why efficient algorithms are fundamental to modern genomics; and how to make a million bucks in prize money by \u201cjust\u201d solving a math problem!SyllabusWeeks 1 and 2:The greedy algorithm design paradigm.&nbsp; Applications to optimal caching and scheduling.&nbsp; Minimum spanning trees and applications to clustering.&nbsp; The union-find data structure.&nbsp; Optimal data compression.Weeks 3 and 4:The dynamic programming design paradigm.&nbsp; Applications to the knapsack problem,&nbsp;sequence alignment, shortest-path routing, and optimal search trees.Weeks 5 and 6:Intractable problems and what to do about them.&nbsp; NP-completeness and the P vs. NP question.&nbsp; Solvable special cases. Heuristics with provable performance guarantees.&nbsp; Local search.&nbsp;Exponential-time algorithms that beat brute-force search.",
        "desc_html": "In this course you will learn several fundamental principles of advanced\nalgorithm design. You'll learn the greedy algorithm design paradigm, with\napplications to computing good network backbones (i.e., spanning trees) and\ngood codes for data compression. You'll learn the tricky yet widely applicable\ndynamic programming algorithm design paradigm, with applications to routing in\nthe Internet and sequencing genome fragments.  You\u2019ll learn what NP-\ncompleteness and the famous \u201cP vs. NP\u201d problem mean for the algorithm\ndesigner.  Finally, we\u2019ll study several strategies for dealing with hard\n(i.e., NP-complete problems), including the design and analysis of heuristics.\nLearn how shortest-path algorithms from the 1950s (i.e., pre-ARPANET!) govern\nthe way that your Internet traffic gets routed today; why efficient algorithms\nare fundamental to modern genomics; and how to make a million bucks in prize\nmoney by \u201cjust\u201d solving a math problem!\n\n## Syllabus\n\n**Weeks 1 and 2: **The greedy algorithm design paradigm.  Applications to optimal caching and scheduling.  Minimum spanning trees and applications to clustering.  The union-find data structure.  Optimal data compression.  \n  \n**Weeks 3 and 4: **The dynamic programming design paradigm.  Applications to the knapsack problem, sequence alignment, shortest-path routing, and optimal search trees.  \n  \n**Weeks 5 and 6:** Intractable problems and what to do about them.  NP-completeness and the P vs. NP question.  Solvable special cases. Heuristics with provable performance guarantees.  Local search. Exponential-time algorithms that beat brute-force search.  \n\n",
        "name": "Algorithms: Design and Analysis, Part 2",
        "provider": "Coursera",
        "rating": "4.625",
        "reviews": "8",
        "university": [
            "Stanford University"
        ],
        "url": "https://www.coursera.org/course/algo2",
        "video_url": ""
    },
    {
        "date": "2015-03-20",
        "desc": "Part II covers graph-processing algorithms, including minimum spanning tree and shortest paths algorithms, and string processing algorithms, including string sorts, tries, substring search, regular expressions, and data compression, and concludes with an overview placing the contents of the course in a larger context.",
        "desc_html": "Part II covers graph-processing algorithms, including minimum spanning tree\nand shortest paths algorithms, and string processing algorithms, including\nstring sorts, tries, substring search, regular expressions, and data\ncompression, and concludes with an overview placing the contents of the course\nin a larger context.\n\n",
        "name": "Algorithms, Part II",
        "provider": "Coursera",
        "rating": "4.8571428571429",
        "reviews": "7",
        "university": [
            "Princeton University"
        ],
        "url": "https://www.coursera.org/course/algs4partII",
        "video_url": ""
    },
    {
        "date": "2015-03-16",
        "desc": "This MOOC describes by example how to apply patterns and frameworks to alleviate the complexity of developing concurrent software for mobile devices via the use of object-oriented design techniques. Apatterndescribes a reusable solution to a common problem that arises within a particular context. Aframeworkis an integrated set of components that collaborate to provide a reusable architecture for a family of related apps or services. &nbsp;Frameworks can also be viewed as concrete realizations of patterns that facilitate direct reuse of detailed design and source code.This MOOC will cover Android's Handlers, Messages, and Runnables (HaMeR) framework and its AsyncTask framework, which simplify the development of Android applications that can run long-duration operations in background threads and then publish the results of these operations to the User Interface thread, which then performs short-duration user-facing operations. &nbsp;Some coverage of Java threads will be included to provide background on concurrent programming. Hands-on programming projects will require students to apply these two concurrency frameworks to representative Android applications.The Mobile Cloud Computing with Android (MoCCA) SpecializationThis is the third course of the six-courseMobile Cloud Computing with Android (MoCCA) Specialization. It has been designed as part of a Coursera Specialization designed to help learners create complex, cloud-based Android Applications, and includes a final \u201ccapstone\u201d project for those who earn Verified Certificates across all six courses.Note: We are proud to announce that the MoCCA specialization has already reached hundreds of thousands of learners around the globe. In its last iteration, we worked with Google to provide Nexus tablets, feedback from the Google App team, and the potential to be featured in the Google Play store to top course completers.This time around, we are providing more flexibility for all of you busy learners. We are running the Programming Mobile Applications courses in more digestible one-month-long sections, each with a meaningful mini-project at the end. Additionally, we will be re-offering the courses more frequently. For example, new sessions of my two introductory courses will be launched on a monthly basis, so that you can find a convenient time to join us or pick up where you left off if you didn\u2019t quite finish before.For previous MoCCA students: If you have already earned a Verified Certificate in the previous version of this course, \"Pattern-Oriented Software Architectures: Programming Mobile Services for Android Handheld Systems\u201d offered in May 2014, you do not need to retake this course to continue towards the Specialization certificate and final project in 2015. Please consult theSpecializations Help Centeror contact theCoursera support teamif you are not sure whether you qualify.This MOOC and five others, taught by Dr. Adam Porter from the University of Maryland and Dr. Jules White from Vanderbilt University, have been designed to complement each other as part of the first trans-institution sequence of MOOCs taught on the Coursera platform, structured as follows:The first two courses by Dr. Adam Porter, of the University of Maryland, areProgramming Mobile Applications for Android Handheld Systems Part 1andPart 2. They focus on the design and programming of user-facing applications. &nbsp;The third and fourth courses by Dr. Douglas Schmidt, of Vanderbilt University, areProgramming Mobile Services for Android Handheld Systems: ConcurrencyandCommunication. They focus on middleware systems programming topics, such as synchronous and asynchronous concurrency models, background service processing, structured data management, local inter-process communication and networking, and integration with cloud-based services. &nbsp;The fifth and sixth courses by Dr. Jules White, of Vanderbilt University, areProgramming Cloud Services for Android Handheld Systems: SpringandSecurity. &nbsp;They focus on how to connect Android mobile devices to cloud computing and data storage resources, essentially turning a device into an extension of powerful cloud-based services on popular cloud computing platforms, such as Google App Engine and Amazon EC2.The final \u201ccapstone\u201d project will require students to develop a complex mobile cloud computing application from the ground up.Some of the programming assignments for these MOOCs will be coordinated. &nbsp;If you just want to take some of the MOOCs in this sequence or take them all in different order you\u2019re certainly welcome to do so, and you\u2019ll still learn a lot. However, if you take all the MOOCs in this sequence in the order presented you\u2019ll gain a deeper, end-to-end understanding of handheld systems, their applications and services, as well as their integration into the cloud.SyllabusThe course is organized into the following sections:Section 0: Course IntroductionPart 1: Overview of Android LayersPart 2: Course Structure and TopicsPart 3: Course Prerequisites and Learning StrategiesPart 4: Overview of Patterns and FrameworksSection 1: Overview of Concurrency: Motivations, Challenges, and FundamentalsPart 1: Concurrency MotivationsPart 2: Concurrency ChallengesPart 3: Overview of Java Threads (Part 1)Part 4: Overview of Java Threads (Part 2)Section 2:Android Concurrency FrameworksPart 1: Overview of Android Concurrency Framework ClassesPart 2: Overview of Android Concurrency Framework PatternsPart 3: Overview of the Threaded Downloads ApplicationPart 4: Android LooperPart 5: Overview of Android Handler and HaMeR FrameworkPart 6: Posting and Processing Runnables with the Android HaMeR FrameworkPart 7: Sending and Handling Messages with the Android HaMeR FrameworkPart 8: The AsyncTask FrameworkPart 9: Blackbox and Whitebox Frameworks with AsyncTaskPart 10: Evaluating Android Concurrency FrameworksSection 3: Communication Patterns in AndroidPart 1: Ensuring Only One Looper Per Thread with the Thread-Specific Storage PatternPart 2: Passing Commands to Handlers with the Command Processor PatternPart 3: Passing Messages to Handlers with the Active Object PatternPart 4: Decoupling Synchronous and Synchronous Processing with the Half-Sync/Half-Async PatternSection 4: Case Study ApplicationsPart 1: The Concurrent Ping-Pong ApplicationPart 2: The PalantiriManager ApplicationPart 3: The ImageTaskGang ApplicationThroughout this MOOC we'll focus on pattern-oriented software architecture, with an emphasis on concurrent programming in the context of Android middleware systems programming mechanisms, such as synchronous and asynchronous concurrency models. We illustrate by example how key pattern and framework concepts and relationships are applied in Android from both an application and infrastructure perspective. Many code examples are shown throughout using Java, with case study projects used to reify the key points throughout all the material in this MOOC.The PDF versions of all the slides used in the course will be available online as the videos become available on the course website.",
        "desc_html": "This MOOC describes by example how to apply patterns and frameworks to\nalleviate the complexity of developing concurrent software for mobile devices\nvia the use of object-oriented design techniques. A\n[pattern](http://en.wikipedia.org/wiki/Software_design_pattern) describes a\nreusable solution to a common problem that arises within a particular context.\nA [framework](http://en.wikipedia.org/wiki/Software_framework) is an\nintegrated set of components that collaborate to provide a reusable\narchitecture for a family of related apps or services.  Frameworks can also be\nviewed as concrete realizations of patterns that facilitate direct reuse of\ndetailed design and source code.\n\nThis MOOC will cover Android's Handlers, Messages, and Runnables (HaMeR)\nframework and its AsyncTask framework, which simplify the development of\nAndroid applications that can run long-duration operations in background\nthreads and then publish the results of these operations to the User Interface\nthread, which then performs short-duration user-facing operations.  Some\ncoverage of Java threads will be included to provide background on concurrent\nprogramming. Hands-on programming projects will require students to apply\nthese two concurrency frameworks to representative Android applications.\n\n**The Mobile Cloud Computing with Android (MoCCA) Specialization**\n\nThis is the third course of the six-course [Mobile Cloud Computing with\nAndroid (MoCCA) Specialization](https://www.coursera.org/specialization/mobile\ncloudcomputing/2). It has been designed as part of a Coursera Specialization\ndesigned to help learners create complex, cloud-based Android Applications,\nand includes a final \u201ccapstone\u201d project for those who earn Verified\nCertificates across all six courses.\n\nNote: We are proud to announce that the MoCCA specialization has already\nreached hundreds of thousands of learners around the globe. In its last\niteration, we worked with Google to provide Nexus tablets, feedback from the\nGoogle App team, and the potential to be featured in the Google Play store to\ntop course completers.\n\nThis time around, we are providing more flexibility for all of you busy\nlearners. We are running the Programming Mobile Applications courses in more\ndigestible one-month-long sections, each with a meaningful mini-project at the\nend. Additionally, we will be re-offering the courses more frequently. For\nexample, new sessions of my two introductory courses will be launched on a\nmonthly basis, so that you can find a convenient time to join us or pick up\nwhere you left off if you didn\u2019t quite finish before.\n\nFor previous MoCCA students: If you have already earned a Verified Certificate\nin the previous version of this course, \"Pattern-Oriented Software\nArchitectures: Programming Mobile Services for Android Handheld Systems\u201d\noffered in May 2014, you do not need to retake this course to continue towards\nthe Specialization certificate and final project in 2015. Please consult the\n[Specializations Help Center](https://courserahelp.zendesk.com/hc/en-\nus/articles/201223289-Specializations) or contact the [Coursera support\nteam](https://courserahelp.zendesk.com/hc/en-\nus/requests/new?ticket_form_id=19009) if you are not sure whether you qualify.\n\nThis MOOC and five others, taught by Dr. Adam Porter from the University of\nMaryland and Dr. Jules White from Vanderbilt University, have been designed to\ncomplement each other as part of the first trans-institution sequence of MOOCs\ntaught on the Coursera platform, structured as follows:\n\n  * The first two courses by Dr. Adam Porter, of the University of Maryland, are [Programming Mobile Applications for Android Handheld Systems Part 1](https://www.coursera.org/course/androidpart1) and [Part 2](https://www.coursera.org/course/androidpart2). They focus on the design and programming of user-facing applications.  \n\n  * The third and fourth courses by Dr. Douglas Schmidt, of Vanderbilt University, are [Programming Mobile Services for Android Handheld Systems: Concurrency](https://www.coursera.org/course/posaconcurrency) and [Communication](https://www.coursera.org/course/posacommunication). They focus on middleware systems programming topics, such as synchronous and asynchronous concurrency models, background service processing, structured data management, local inter-process communication and networking, and integration with cloud-based services.  \n\n  * The fifth and sixth courses by Dr. Jules White, of Vanderbilt University, are [Programming Cloud Services for Android Handheld Systems: Spring](https://www.coursera.org/course/mobilecloudprogram) and [Security](https://www.coursera.org/course/mobilecloudsecurity).  They focus on how to connect Android mobile devices to cloud computing and data storage resources, essentially turning a device into an extension of powerful cloud-based services on popular cloud computing platforms, such as Google App Engine and Amazon EC2. \n\n  * The final \u201ccapstone\u201d project will require students to develop a complex mobile cloud computing application from the ground up.\n\nSome of the programming assignments for these MOOCs will be coordinated.  \n\nIf you just want to take some of the MOOCs in this sequence or take them all\nin different order you\u2019re certainly welcome to do so, and you\u2019ll still learn a\nlot. However, if you take all the MOOCs in this sequence in the order\npresented you\u2019ll gain a deeper, end-to-end understanding of handheld systems,\ntheir applications and services, as well as their integration into the cloud.  \n\n## Syllabus\n\nThe course is organized into the following sections:\n\n  * Section 0: Course Introduction\n    * Part 1: Overview of Android Layers\n    * Part 2: Course Structure and Topics\n    * Part 3: Course Prerequisites and Learning Strategies\n    * Part 4: Overview of Patterns and Frameworks\n  * Section 1: Overview of Concurrency: Motivations, Challenges, and Fundamentals\n    * Part 1: Concurrency Motivations\n    * Part 2: Concurrency Challenges\n    * Part 3: Overview of Java Threads (Part 1)\n    * Part 4: Overview of Java Threads (Part 2)\n  * Section 2:Android Concurrency Frameworks\n    * Part 1: Overview of Android Concurrency Framework Classes \n    * Part 2: Overview of Android Concurrency Framework Patterns\n    * Part 3: Overview of the Threaded Downloads Application\n    * Part 4: Android Looper\n    * Part 5: Overview of Android Handler and HaMeR Framework\n    * Part 6: Posting and Processing Runnables with the Android HaMeR Framework\n    * Part 7: Sending and Handling Messages with the Android HaMeR Framework\n    * Part 8: The AsyncTask Framework\n    * Part 9: Blackbox and Whitebox Frameworks with AsyncTask\n    * Part 10: Evaluating Android Concurrency Frameworks\n  * Section 3: Communication Patterns in Android\n    * Part 1: Ensuring Only One Looper Per Thread with the Thread-Specific Storage Pattern\n    * Part 2: Passing Commands to Handlers with the Command Processor Pattern\n    * Part 3: Passing Messages to Handlers with the Active Object Pattern\n    * Part 4: Decoupling Synchronous and Synchronous Processing with the Half-Sync/Half-Async Pattern\n  * Section 4: Case Study Applications\n    * Part 1: The Concurrent Ping-Pong Application\n    * Part 2: The PalantiriManager Application\n    * Part 3: The ImageTaskGang Application\n\nThroughout this MOOC we'll focus on pattern-oriented software architecture,\nwith an emphasis on concurrent programming in the context of Android\nmiddleware systems programming mechanisms, such as synchronous and\nasynchronous concurrency models. We illustrate by example how key pattern and\nframework concepts and relationships are applied in Android from both an\napplication and infrastructure perspective. Many code examples are shown\nthroughout using Java, with case study projects used to reify the key points\nthroughout all the material in this MOOC.\n\nThe PDF versions of all the slides used in the course will be available online\nas the videos become available on the course website.\n\n",
        "name": "Programming Mobile Services for Android Handheld Systems: Concurrency",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Vanderbilt University"
        ],
        "url": "https://www.coursera.org/course/posaconcurrency",
        "video_url": ""
    },
    {
        "date": "2015-03-16",
        "desc": "Cloud computing systems today, whether open-source or used inside companies, are built using a common set ofcore techniques, algorithms, and design philosophies\u2014all centered around distributed systems. Learn about such fundamental distributed computing \"concepts\" for cloud computing.Some of these concepts include:Clouds, MapReduce, key-value storesClassical precursorsWidely-used algorithmsClassical algorithmsScalabilityTrending areasAnd more!Understand&nbsp;how these techniques work&nbsp;inside today\u2019s most widely-used cloud computing systems. Get your hands dirty using these concepts with provided homework exercises. In the&nbsp;optional programming track, implement some of these concepts in template assignments provided in C++ programming language.You will also watch interviews with leading managers and researchers, from both industry and academia.SyllabusThis course will be broken up into 5 weekly modules covering the following topics:Week 1:Leader Election, Mutual ExclusionWeek 2:Concurrency Control, Replication ControlWeek 3:Stream Processing, Graph Processing, Structure of Networks, SchedulingWeek 4:Distributed File Systems, Distributed Shared Memory, Sensor NetworksWeek 5:Security, Datacenter Outage Studies, Wrap-up",
        "desc_html": "Cloud computing systems today, whether open-source or used inside companies,\nare built using a common set of **core techniques, algorithms, and design\nphilosophies**\u2014all centered around distributed systems. Learn about such\nfundamental distributed computing \"concepts\" for cloud computing.\n\nSome of these concepts include:\n\n  * Clouds, MapReduce, key-value stores\n  * Classical precursors\n  * Widely-used algorithms\n  * Classical algorithms \n  * Scalability\n  * Trending areas\n  * And more!\n\nUnderstand **how these techniques work** inside today\u2019s most widely-used cloud\ncomputing systems. Get your hands dirty using these concepts with provided\nhomework exercises. In the **optional programming track**, implement some of\nthese concepts in template assignments provided in C++ programming language.  \n\nYou will also watch interviews with leading managers and researchers, from\nboth industry and academia.\n\n## Syllabus\n\nThis course will be broken up into 5 weekly modules covering the following\ntopics:  \n\n**Week 1: **Leader Election, Mutual Exclusion\n\n**Week 2: **Concurrency Control, Replication Control\n\n**Week 3: **Stream Processing, Graph Processing, Structure of Networks, Scheduling\n\n**Week 4: **Distributed File Systems, Distributed Shared Memory, Sensor Networks\n\n**Week 5: **Security, Datacenter Outage Studies, Wrap-up\n\n",
        "name": "Cloud Computing Concepts: Part 2",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of Illinois at Urbana-Champaign"
        ],
        "url": "https://www.coursera.org/course/cloudcomputing2",
        "video_url": ""
    },
    {
        "date": "2015-03-16",
        "desc": "This course explores the development of web application architectures from an engineering perspective.&nbsp; We will consider the fundamental design patterns and philosophies associated with modern web application architectures, along with their major components. &nbsp;By the end of this course, I expect you to be able to:Design, develop and deploy a modern web application.&nbsp;This course isnotabout how to build a pretty web page, it's about how to build and deploy the full stack of protocols and technologies associated with a complete web app. &nbsp;That said, it is not possible for you to become an expert in this area in a few weeks. My goal, rather, is to put you on the right path by providing a solid foundation and framework for understanding web applications, allowing you to dig deeper and learn more on your own. The next bullet points describe how we're going to do this.Understand the major architectural components in web apps, and how they fit together.&nbsp;Modern web apps are complex. &nbsp;A typical application has a database along with numerous scripts on one end of the web stack, a web server in the middle that delivers information over the Internet, and a user's browser on the other end of the web stack. &nbsp;Even getting started in trying to understand these components can be overwhelming. Consider just the programming languages involved in a typical web stack: from the database (SQL), to the web server (scripting language), to the browser (JavaScript, HTML, CSS), we're dealing with five different programming languages, not to mention the protocols they're operating over\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u2013&nbsp;and you need to know a little about them too! We'll introduce a number of software design patterns throughout the course that are aimed at helping you to manage this complexity.Use Ruby on Rails.&nbsp;We're going to learn about web apps through the Ruby on Rails framework.&nbsp;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRails is a framework for creating web\napplications that is built on top of the Ruby programming language.&nbsp;I believe this is one of the best frameworks\nfor learning about web applications, and it's also proving highly successful as\na platform for commercial offerings.&nbsp;\nThat said, there are many other frameworks available, and the concepts\nyou will learn using Rails are transferable to these other frameworks.Better understand modern software engineering\npractice.&nbsp;We\u2019ll be using the latest tools and practices in\nsoftware development, source code control, testing, and application\ndeployment.&nbsp;This will include exposure\nto agile development practices, the numerous tools that software engineers are expected to know how to use, and the cloud-based resources that are\nbecoming increasingly important in web applications.&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;Syllabus&nbsp;Week One&nbsp;\u2013&nbsp;Module 1: Introduction and Background&nbsp;&nbsp; Lecture 1: Historical Perspective&nbsp; Lecture 2: What is a Web Application?&nbsp; Lecture 3: Web 1.0, 2.0, 3.0 Application Architectures&nbsp; Lecture 4: Design Patterns&nbsp; Lecture 5: Setting up Your Development EnvironmentWeek Two&nbsp;\u2013&nbsp;Module 2: Ruby on Rails&nbsp;&nbsp;Lecture 1:&nbsp;Rails Overview&nbsp; Lecture 2: Your First Rails App&nbsp; Lecture 3: The Blog App&nbsp;\u2013 Iteration 1&nbsp; Lecture 4: Rails Philosophy&nbsp; Lecture 5: Version Control&nbsp; Lecture 6: Git and RailsWeek Three&nbsp;\u2013&nbsp;Module 3: Database Interactions&nbsp;&nbsp;Lecture 1:&nbsp;Relational Databases&nbsp; Lecture 2: Databases in Rails&nbsp; Lecture 3: The Active Record Design Pattern&nbsp; Lecture 4:&nbsp;The Blog App&nbsp;\u2013 Iteration 2 (Associations)&nbsp; Lecture 5:&nbsp;The Blog App&nbsp;\u2013 Iteration 3 (Validations)Week Four&nbsp;\u2013&nbsp;Module 4: The Ruby Programming Language&nbsp; Lecture 1: Ruby Background&nbsp; Lecture 2: Classes and Inheritance&nbsp; Lecture 3: Objects and Variables&nbsp; Lecture 4:&nbsp;Strings, Regular Expressions and Symbols&nbsp; Lecture 5:&nbsp;Expressions and Control Structures&nbsp; Lecture 6: Collections, Blocks and IteratorsWeek Five \u2013&nbsp;Module 5: Middleware&nbsp; Lecture 1: What is Middleware?&nbsp; Lecture 2: The Hypertext Transfer Protocol (HTTP)&nbsp;\u2013&nbsp;Introduction&nbsp; Lecture 3: HTTP \u2013 Request&nbsp; Lecture 4:&nbsp;HTTP&nbsp;\u2013&nbsp;Response&nbsp; Lecture 5:&nbsp;The Model-View-Controller (MVC) Design Pattern&nbsp; Lecture 6:&nbsp;Rails Controllers&nbsp;\u2013&nbsp;Request Handling&nbsp; Lecture 7:&nbsp;Rails Controllers&nbsp;\u2013&nbsp;Response&nbsp; Lecture 8:&nbsp;MVC Implementation in Rails&nbsp; Lecture 9:&nbsp;The Blog App&nbsp;\u2013&nbsp;Iteration 4Week Six \u2013&nbsp;Module 6: Presentation/User Interface&nbsp; Lecture 1: Introduction and Background&nbsp; Lecture 2: HTML&nbsp;\u2013&nbsp;Basic Syntax&nbsp; Lecture 3: HTML \u2013 Document Structure&nbsp; Lecture 4:&nbsp;HTML \u2013 Forms&nbsp; Lecture 5: Dynamic Content&nbsp; Lecture 6: Cascading Style Sheets (CSS)&nbsp; Lecture 7: JavaScript and jQuery&nbsp; Lecture 8: Ajax&nbsp; Lecture 9:&nbsp;The Blog App&nbsp;\u2013&nbsp;Iteration 5",
        "desc_html": "**This course explores the development of web application architectures from an engineering perspective.**  We will consider the fundamental design patterns and philosophies associated with modern web application architectures, along with their major components.  By the end of this course, I expect you to be able to:  \n\n  * ******************Design, develop and deploy a modern web application. ** This course is _not_ about how to build a pretty web page, it's about how to build and deploy the full stack of protocols and technologies associated with a complete web app.  That said, it is not possible for you to become an expert in this area in a few weeks. My goal, rather, is to put you on the right path by providing a solid foundation and framework for understanding web applications, allowing you to dig deeper and learn more on your own. The next bullet points describe how we're going to do this.\n  * **Understand the major architectural components in web apps, and how they fit together.**  Modern web apps are complex.  A typical application has a database along with numerous scripts on one end of the web stack, a web server in the middle that delivers information over the Internet, and a user's browser on the other end of the web stack.  Even getting started in trying to understand these components can be overwhelming. Consider just the programming languages involved in a typical web stack: from the database (SQL), to the web server (scripting language), to the browser (JavaScript, HTML, CSS), we're dealing with five different programming languages, not to mention the protocols they're operating over \u2013 and you need to know a little about them too! We'll introduce a number of software design patterns throughout the course that are aimed at helping you to manage this complexity.\n  * **Use Ruby on Rails.**  We're going to learn about web apps through the Ruby on Rails framework.  Rails is a framework for creating web applications that is built on top of the Ruby programming language. I believe this is one of the best frameworks for learning about web applications, and it's also proving highly successful as a platform for commercial offerings.  That said, there are many other frameworks available, and the concepts you will learn using Rails are transferable to these other frameworks.\n  * **Better understand modern software engineering practice.  **We\u2019ll be using the latest tools and practices in software development, source code control, testing, and application deployment. This will include exposure to agile development practices, the numerous tools that software engineers are expected to know how to use, and the cloud-based resources that are becoming increasingly important in web applications.      \n\n## Syllabus\n\n** Week One \u2013 Module 1: Introduction and Background **  \n  Lecture 1: Historical Perspective  \n  Lecture 2: What is a Web Application?  \n  Lecture 3: Web 1.0, 2.0, 3.0 Application Architectures  \n  Lecture 4: Design Patterns  \n  Lecture 5: Setting up Your Development Environment  \n**Week Two \u2013 Module 2: Ruby on Rails**  \n  Lecture 1: Rails Overview  \n  Lecture 2: Your First Rails App  \n  Lecture 3: The Blog App \u2013 Iteration 1  \n  Lecture 4: Rails Philosophy  \n  Lecture 5: Version Control  \n  Lecture 6: Git and Rails  \n**Week Three \u2013 Module 3: Database Interactions**  \n  Lecture 1: Relational Databases  \n  Lecture 2: Databases in Rails  \n  Lecture 3: The Active Record Design Pattern  \n  Lecture 4: The Blog App \u2013 Iteration 2 (Associations)  \n  Lecture 5: The Blog App \u2013 Iteration 3 (Validations)  \n**Week Four \u2013 Module 4: The Ruby Programming Language**  \n  Lecture 1: Ruby Background  \n  Lecture 2: Classes and Inheritance  \n  Lecture 3: Objects and Variables  \n  Lecture 4: Strings, Regular Expressions and Symbols  \n  Lecture 5: Expressions and Control Structures  \n  Lecture 6: Collections, Blocks and Iterators  \n**Week Five \u2013 Module 5: Middleware**  \n  Lecture 1: What is Middleware?  \n  Lecture 2: The Hypertext Transfer Protocol (HTTP) \u2013 Introduction\n\n  Lecture 3: HTTP \u2013 Request\n\n  Lecture 4: HTTP \u2013 Response  \n  Lecture 5: The Model-View-Controller (MVC) Design Pattern  \n  Lecture 6: Rails Controllers \u2013 Request Handling  \n  Lecture 7: Rails Controllers \u2013 Response  \n  Lecture 8: MVC Implementation in Rails  \n  Lecture 9: The Blog App \u2013 Iteration 4  \n**Week Six \u2013 Module 6: Presentation/User Interface  \n**  Lecture 1: Introduction and Background  \n  Lecture 2: HTML \u2013 Basic Syntax\n\n  Lecture 3: HTML \u2013 Document Structure\n\n  Lecture 4: HTML \u2013 Forms\n\n  Lecture 5: Dynamic Content\n\n  Lecture 6: Cascading Style Sheets (CSS)\n\n  Lecture 7: JavaScript and jQuery\n\n  Lecture 8: Ajax\n\n  Lecture 9: The Blog App \u2013 Iteration 5  \n\n",
        "name": "Web Application Architectures",
        "provider": "Coursera",
        "rating": "3.5",
        "reviews": "6",
        "university": [
            "University of New Mexico"
        ],
        "url": "https://www.coursera.org/course/webapplications",
        "video_url": ""
    },
    {
        "date": "2015-03-16",
        "desc": "Recent years have seen a dramatic growth of natural language text data, including web pages, news articles, scientific literature, emails, enterprise documents, and social media such as blog articles, forum posts, product reviews, and tweets.Text data are uniquein that they are usually generated directly by humans rather than a computer system or sensors, and are thus especially valuable for discovering knowledge about people\u2019s opinions and preferences, in addition to many other kinds of knowledge that we encode in text.This course will cover search engine technologies, which play an important role in any data mining applications involving text data for two reasons. First, while the raw data may be large for any particular problem, it is often a relatively small subset of the data that are relevant, and a search engine is anessential toolfor quickly discovering a small subset ofrelevant text datain a large text collection. Second, search engines are needed to help analystsinterpret any patterns discoveredin the data by allowing them to examine the relevant original text data to make sense of any discovered pattern. You will learn the basicconcepts, principles, and the major techniques in text retrieval, which is the underlying science of search engines.SyllabusThis course will be covering the following topics:Introduction to text data miningBasic concepts in text retrievalInformation retrieval modelsImplementation of a search engineEvaluation of search enginesAdvanced search engine technologies",
        "desc_html": "Recent years have seen a dramatic growth of natural language text data,\nincluding web pages, news articles, scientific literature, emails, enterprise\ndocuments, and social media such as blog articles, forum posts, product\nreviews, and tweets. **Text data are unique** in that they are usually\ngenerated directly by humans rather than a computer system or sensors, and are\nthus especially valuable for discovering knowledge about people\u2019s opinions and\npreferences, in addition to many other kinds of knowledge that we encode in\ntext.\n\nThis course will cover search engine technologies, which play an important\nrole in any data mining applications involving text data for two reasons.\nFirst, while the raw data may be large for any particular problem, it is often\na relatively small subset of the data that are relevant, and a search engine\nis an **essential tool** for quickly discovering a small subset of **relevant\ntext data** in a large text collection. Second, search engines are needed to\nhelp analysts **interpret any patterns discovered** in the data by allowing\nthem to examine the relevant original text data to make sense of any\ndiscovered pattern. You will learn the basic **concepts, principles, and the\nmajor techniques in text retrieval**, which is the underlying science of\nsearch engines.\n\n## Syllabus\n\nThis course will be covering the following topics:\n\n  * Introduction to text data mining\n  * Basic concepts in text retrieval\n  * Information retrieval models\n  * Implementation of a search engine\n  * Evaluation of search engines\n  * Advanced search engine technologies\n\n",
        "name": "Text Retrieval and Search Engines",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of Illinois at Urbana-Champaign"
        ],
        "url": "https://www.coursera.org/course/textretrieval",
        "video_url": ""
    },
    {
        "date": "2015-03-10",
        "desc": "We use our smartphones to communicate, to organize our lives, to find information, and to entertain ourselves. \u00a0All this is possible because a smartphone contains a powerful computer processor, which is the subject of this course. \u00a0The course starts by moving step by step through the fundamental layers of computing technology, from binary numbers to application software, and then covers advanced performance techniques and the details of actual smartphone processors. Learn about:Digital logicComputer organizationInstruction setsApplication SoftwareAdvanced performance techniquesActual smartphone processors",
        "desc_html": "We use our smartphones to communicate, to organize our lives, to find\ninformation, and to entertain ourselves. \u00a0All this is possible because a\nsmartphone contains a powerful computer processor, which is the subject of\nthis course. \u00a0The course starts by moving step by step through the fundamental\nlayers of computing technology, from binary numbers to application software,\nand then covers advanced performance techniques and the details of actual\nsmartphone processors. Learn about:  \n  \nDigital logic  \nComputer organization  \nInstruction sets  \nApplication Software  \nAdvanced performance techniques  \nActual smartphone processors\n\n",
        "name": "ENGRI1210x: The Computing Technology Inside Your Smartphone",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Cornell University"
        ],
        "url": "https://www.edx.org/course/computing-technology-inside-smartphone-cornellx-engri1210x",
        "video_url": "https://www.youtube.com/embed/X8X_NjnvXeg?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-03-09",
        "desc": "\u8bfe\u7a0b\u4ecb\u7ecd\u89c6\u9891\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u91cc\u3002\u672c\u8bfe\u7a0b\u7684\u91cd\u70b9\u5728\u4e8e\u8ba1\u7b97\u673a\u5185\u90e8\u7684\u4e3b\u8981\u90e8\u4ef6\u4ee5\u53ca\u5404\u90e8\u4ef6\u4e4b\u95f4\u7684\u8054\u7cfb\uff0c\u4e3b\u8981\u5185\u5bb9\u5305\u62ec\uff1a\u51af\u00b7\u8bfa\u4f9d\u66fc\u8ba1\u7b97\u673a\u7ed3\u6784\u7684\u8981\u70b9\uff0c\u8ba1\u7b97\u673a\u6267\u884c\u6307\u4ee4\u7684\u5de5\u4f5c\u8fc7\u7a0b\uff0c\u5f53\u524d\u6d41\u884c\u7684\u6307\u4ee4\u7cfb\u7edf\u7684\u5206\u6790\u5bf9\u6bd4\uff0c\u9ad8\u7ea7\u8bed\u8a00\u3001\u6c47\u7f16\u8bed\u8a00\u548c\u673a\u5668\u8bed\u8a00\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u8ba1\u7b97\u673a\u91c7\u7528\u7684\u4e3b\u8981\u7b97\u672f\u548c\u903b\u8f91\u8fd0\u7b97\u65b9\u6cd5\u53ca\u5176\u5b9e\u73b0\uff0c\u5fae\u5904\u7406\u5668\u3001\u5b58\u50a8\u7cfb\u7edf\u548c\u8f93\u5165\u8f93\u51fa\u7cfb\u7edf\u7684\u57fa\u672c\u539f\u7406\u548c\u5173\u952e\u6280\u672f\u7b49\u3002\u672c\u8bfe\u7a0b\u5f3a\u8c03\u8ba1\u7b97\u673a\u8f6f\u4ef6\u548c\u786c\u4ef6\u7684\u8854\u63a5\u4e92\u52a8\uff0c\u6ce8\u91cd\u57fa\u4e8e\u771f\u5b9e\u7cfb\u7edf\u5206\u6790\u57fa\u672c\u6982\u5ff5\uff0c\u662f\u8ba1\u7b97\u673a\u53ca\u76f8\u5173\u4e13\u4e1a\u672c\u79d1\u751f\u4e86\u89e3\u548c\u638c\u63e1\u8ba1\u7b97\u673a\u7cfb\u7edf\u6574\u4f53\u6846\u67b6\u7684\u57fa\u7840\u6027\u8bfe\u7a0b\u3002Syllabus\u7b2c\u4e00\u8bb2&nbsp; \u8ba1\u7b97\u673a\u57fa\u672c\u7ed3\u6784\uff08Basic Components of a Computer\uff09\u5185\u5bb9\u8981\u70b9\uff1a\u51af\u00b7\u8bfa\u4f0a\u66fc\u7ed3\u6784\uff0c\u8ba1\u7b97\u673a\u6267\u884c\u6307\u4ee4\u7684\u8fc7\u7a0b\u7b2c\u4e8c\u8bb2&nbsp; \u6307\u4ee4\u7cfb\u7edf\u4f53\u7cfb\u7ed3\u6784\uff08Instruction Set Architecture\uff09\u5185\u5bb9\u8981\u70b9\uff1ax86 ISA\uff0cMIPS ISA\u7b2c\u4e09\u8bb2&nbsp; \u7b97\u672f\u903b\u8f91\u5355\u5143\uff08Arithmetic Logic Unit\uff09\u5185\u5bb9\u8981\u70b9\uff1a\u903b\u8f91\u8fd0\u7b97\uff0c\u4e8c\u8fdb\u5236\u52a0\u51cf\u6cd5\u8fd0\u7b97\uff0cALU\u7684\u5b9e\u73b0\u7b2c\u56db\u8bb2&nbsp; \u4e58\u6cd5\u5668\u548c\u9664\u6cd5\u5668\uff08Multiplier and Divider\uff09\u5185\u5bb9\u8981\u70b9\uff1a\u4e58\u6cd5\u8fd0\u7b97\uff0c\u4e58\u6cd5\u5668\u7684\u5b9e\u73b0\uff0c\u9664\u6cd5\u8fd0\u7b97\uff0c\u9664\u6cd5\u5668\u7684\u5b9e\u73b0\u7b2c\u4e94\u8bb2&nbsp; \u5355\u5468\u671f\u5904\u7406\u5668\uff08Single Cycle Processor\uff09\u5185\u5bb9\u8981\u70b9\uff1a\u63a7\u5236\u5668\uff0c\u6570\u636e\u901a\u8def\u7b2c\u516d\u8bb2&nbsp; \u6d41\u6c34\u7ebf\u5904\u7406\u5668\uff08Pipelined Processor\uff09\u5185\u5bb9\u8981\u70b9\uff1a\u6d41\u6c34\u7ebf\uff0c\u76f8\u5173\u548c\u5192\u9669\u7b2c\u4e03\u8bb2&nbsp; \u5b58\u50a8\u5c42\u6b21\u7ed3\u6784\uff08Memory Hierarchy\uff09\u5185\u5bb9\u8981\u70b9\uff1a\u9ad8\u901f\u7f13\u5b58\uff0c\u4e3b\u5b58\u7b2c\u516b\u8bb2&nbsp; \u4e2d\u65ad\u4e0e\u5f02\u5e38\uff08Interruption and Exception\uff09\u5185\u5bb9\u8981\u70b9\uff1a\u4e2d\u65ad\u4e0e\u5f02\u5e38\u7684\u5f02\u540c\uff0c\u4e2d\u65ad\u5904\u7406\u7684\u8fc7\u7a0b\u7b2c\u4e5d\u8bb2&nbsp; \u8f93\u5165\u8f93\u51fa\u8bbe\u5907\uff08Input/Output Devices\uff09\u5185\u5bb9\u8981\u70b9\uff1a\u57fa\u672c\u7684\u8f93\u5165\u8f93\u51fa\u63a7\u5236\u65b9\u5f0f\uff0c\u5e38\u7528\u7684\u8f93\u5165\u8f93\u51fa\u8bbe\u5907\u7c7b\u578b",
        "desc_html": "\u8bfe\u7a0b\u4ecb\u7ecd\u89c6\u9891\u53ef\u4ee5\u8bbf\u95ee[\u8fd9\u91cc](http://video.study.163.com/edu-\nvideo/nos/mp4/2014/07/25/538020_hd.mp4)\u3002\n\n\u672c\u8bfe\u7a0b\u7684\u91cd\u70b9\u5728\u4e8e\u8ba1\u7b97\u673a\u5185\u90e8\u7684\u4e3b\u8981\u90e8\u4ef6\u4ee5\u53ca\u5404\u90e8\u4ef6\u4e4b\u95f4\u7684\u8054\u7cfb\uff0c\u4e3b\u8981\u5185\u5bb9\u5305\u62ec\uff1a\u51af\u00b7\u8bfa\u4f9d\u66fc\u8ba1\u7b97\u673a\u7ed3\u6784\u7684\u8981\u70b9\uff0c\u8ba1\u7b97\u673a\u6267\u884c\u6307\u4ee4\u7684\u5de5\u4f5c\u8fc7\u7a0b\uff0c\u5f53\u524d\u6d41\u884c\u7684\u6307\u4ee4\u7cfb\u7edf\u7684\u5206\u6790\u5bf9\u6bd4\uff0c\n\u9ad8\u7ea7\u8bed\u8a00\u3001\u6c47\u7f16\u8bed\u8a00\u548c\u673a\u5668\u8bed\u8a00\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u8ba1\u7b97\u673a\u91c7\u7528\u7684\u4e3b\u8981\u7b97\u672f\u548c\u903b\u8f91\u8fd0\u7b97\u65b9\u6cd5\u53ca\u5176\u5b9e\u73b0\uff0c\u5fae\u5904\u7406\u5668\u3001\u5b58\u50a8\u7cfb\u7edf\u548c\u8f93\u5165\u8f93\u51fa\u7cfb\u7edf\u7684\u57fa\u672c\u539f\u7406\u548c\u5173\u952e\u6280\u672f\u7b49\u3002\u672c\u8bfe\u7a0b\u5f3a\u8c03\u8ba1\u7b97\u673a\n\u8f6f\u4ef6\u548c\u786c\u4ef6\u7684\u8854\u63a5\u4e92\u52a8\uff0c\u6ce8\u91cd\u57fa\u4e8e\u771f\u5b9e\u7cfb\u7edf\u5206\u6790\u57fa\u672c\u6982\u5ff5\uff0c\u662f\u8ba1\u7b97\u673a\u53ca\u76f8\u5173\u4e13\u4e1a\u672c\u79d1\u751f\u4e86\u89e3\u548c\u638c\u63e1\u8ba1\u7b97\u673a\u7cfb\u7edf\u6574\u4f53\u6846\u67b6\u7684\u57fa\u7840\u6027\u8bfe\u7a0b\u3002\n\n## Syllabus\n\n**\u7b2c\u4e00\u8bb2  \u8ba1\u7b97\u673a\u57fa\u672c\u7ed3\u6784\uff08Basic Components of a Computer\uff09**  \n\u5185\u5bb9\u8981\u70b9\uff1a\u51af\u00b7\u8bfa\u4f0a\u66fc\u7ed3\u6784\uff0c\u8ba1\u7b97\u673a\u6267\u884c\u6307\u4ee4\u7684\u8fc7\u7a0b\n\n**\u7b2c\u4e8c\u8bb2  \u6307\u4ee4\u7cfb\u7edf\u4f53\u7cfb\u7ed3\u6784\uff08Instruction Set Architecture\uff09**  \n\u5185\u5bb9\u8981\u70b9\uff1ax86 ISA\uff0cMIPS ISA\n\n**\u7b2c\u4e09\u8bb2  \u7b97\u672f\u903b\u8f91\u5355\u5143\uff08Arithmetic Logic Unit\uff09**  \n\u5185\u5bb9\u8981\u70b9\uff1a\u903b\u8f91\u8fd0\u7b97\uff0c\u4e8c\u8fdb\u5236\u52a0\u51cf\u6cd5\u8fd0\u7b97\uff0cALU\u7684\u5b9e\u73b0\n\n**\u7b2c\u56db\u8bb2  \u4e58\u6cd5\u5668\u548c\u9664\u6cd5\u5668\uff08Multiplier and Divider\uff09**  \n\u5185\u5bb9\u8981\u70b9\uff1a\u4e58\u6cd5\u8fd0\u7b97\uff0c\u4e58\u6cd5\u5668\u7684\u5b9e\u73b0\uff0c\u9664\u6cd5\u8fd0\u7b97\uff0c\u9664\u6cd5\u5668\u7684\u5b9e\u73b0  \n\n**\u7b2c\u4e94\u8bb2  \u5355\u5468\u671f\u5904\u7406\u5668\uff08Single Cycle Processor\uff09**  \n\u5185\u5bb9\u8981\u70b9\uff1a\u63a7\u5236\u5668\uff0c\u6570\u636e\u901a\u8def  \n\n**\u7b2c\u516d\u8bb2  \u6d41\u6c34\u7ebf\u5904\u7406\u5668\uff08Pipelined Processor\uff09**  \n\u5185\u5bb9\u8981\u70b9\uff1a\u6d41\u6c34\u7ebf\uff0c\u76f8\u5173\u548c\u5192\u9669  \n\n**\u7b2c\u4e03\u8bb2  \u5b58\u50a8\u5c42\u6b21\u7ed3\u6784\uff08Memory Hierarchy\uff09**  \n\u5185\u5bb9\u8981\u70b9\uff1a\u9ad8\u901f\u7f13\u5b58\uff0c\u4e3b\u5b58  \n\n**\u7b2c\u516b\u8bb2  \u4e2d\u65ad\u4e0e\u5f02\u5e38\uff08Interruption and Exception\uff09**  \n\u5185\u5bb9\u8981\u70b9\uff1a\u4e2d\u65ad\u4e0e\u5f02\u5e38\u7684\u5f02\u540c\uff0c\u4e2d\u65ad\u5904\u7406\u7684\u8fc7\u7a0b  \n\n**\u7b2c\u4e5d\u8bb2  \u8f93\u5165\u8f93\u51fa\u8bbe\u5907\uff08Input/Output Devices\uff09**  \n\u5185\u5bb9\u8981\u70b9\uff1a\u57fa\u672c\u7684\u8f93\u5165\u8f93\u51fa\u63a7\u5236\u65b9\u5f0f\uff0c\u5e38\u7528\u7684\u8f93\u5165\u8f93\u51fa\u8bbe\u5907\u7c7b\u578b  \n\n",
        "name": "\u8ba1\u7b97\u673a\u7ec4\u6210 Computer Organization",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Peking University"
        ],
        "url": "https://www.coursera.org/course/pkuco",
        "video_url": ""
    },
    {
        "date": "2015-03-09",
        "desc": "If you are having difficulty viewing this video in mainland China, you can also find it&nbsp;here.\u8bfe\u7a0b\u4ecb\u7ecd\u89c6\u9891\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u4e2d\u56fd\u7f51\u7ad9\u89c2\u770b\u3002\u672c\u8bfe\u7a0b\u9002\u7528\u4e8e\u7ffb\u8bd1\u7855\u58eb\u4e13\u4e1a\u7814\u7a76\u751f\u3001\u5916\u8bed\u4e13\u4e1a\u9ad8\u5e74\u7ea7\u672c\u79d1\u751f\u3001\u7ffb\u8bd1\u5de5\u4f5c\u8005\u4ee5\u53ca\u5916\u8bed\u7231\u597d\u8005\u7b49\u3002\u73b0\u4ee3\u8bed\u8a00\u670d\u52a1\u884c\u4e1a\u8981\u6c42\u4ece\u4e1a\u4eba\u5458\u5fc5\u987b\u5177\u6709\u5229\u7528\u8ba1\u7b97\u673a\u53ca\u7f51\u7edc\u6765\u4f7f\u7528\u5404\u7c7b\u6280\u672f\u8f85\u52a9\u5de5\u5177\u5e2e\u52a9\u5176\u5de5\u4f5c\u7684\u80fd\u529b\uff0c\u800c\u4e0d\u662f\u4ec5\u4ec5\u5b66\u4f1a\u51e0\u6b3e\u72ed\u4e49\u7684\u8ba1\u7b97\u673a\u8f85\u52a9\u7ffb\u8bd1\u8f6f\u4ef6\u3002\u672c\u8bfe\u7a0b\u4e3b\u8981\u8bb2\u6388\u8ba1\u7b97\u673a\u8f85\u52a9\u7ffb\u8bd1\u6280\u672f\u7684\u57fa\u7840\u6982\u5ff5\uff0c\u5b66\u4e60\u591a\u79cd\u8ba1\u7b97\u673a\u8f85\u52a9\u7ffb\u8bd1\u5de5\u5177\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u953b\u70bc\u5b66\u751f\u5728\u6280\u672f\u73af\u5883\u4e0b\u4ece\u4e8b\u7ffb\u8bd1\u5de5\u4f5c\u7b49\u5404\u7c7b\u8bed\u8a00\u670d\u52a1\u5de5\u4f5c\u7684\u80fd\u529b\uff0c\u5e2e\u52a9\u5b66\u751f\u7406\u89e3\u4fe1\u606f\u5316\u65f6\u4ee3\u7684\u8bed\u8a00\u670d\u52a1\u5de5\u4f5c\u3002\u8bfe\u7a0b\u5b8c\u6574\u6db5\u76d6\u73b0\u4ee3\u8bed\u8a00\u670d\u52a1\u7684\u57fa\u672c\u60c5\u51b5\u4ecb\u7ecd\u3001\u7ffb\u8bd1\u6280\u672f\u57fa\u672c\u6982\u5ff5\u3001\u8bed\u8a00\u670d\u52a1\u9879\u76ee\u6267\u884c\u8fc7\u7a0b\u7684\u4fe1\u606f\u73af\u5883\u4e0e\u4fe1\u606f\u6280\u672f\u3001\u5982\u4f55\u5229\u7528\u7535\u5b50\u8f9e\u5178\u3001\u7f51\u7edc\u8d44\u6e90\u53ca\u8bed\u6599\u5e93\u5de5\u5177\u8f85\u52a9\u7ffb\u8bd1\u5de5\u4f5c\u3001\u72ed\u4e49\u548c\u5e7f\u4e49\u7684\u8ba1\u7b97\u673a\u8f85\u52a9\u7ffb\u8bd1\u5de5\u5177\u539f\u7406\u53ca\u5b9e\u6218\u6f14\u7ec3\u3001\u7ffb\u8bd1\u5185\u5bb9\u8d28\u91cf\u8bc4\u5b9a\u3001\u591a\u4eba\u534f\u540c\u7ffb\u8bd1\u9879\u76ee\u3001\u7ffb\u8bd1\u7ba1\u7406\u7b49\u591a\u65b9\u9762\u7684\u5185\u5bb9\u3002\u4f5c\u4e3a\u7ffb\u8bd1\u7c7b\u4e13\u4e1a\u5b66\u751f\u7684\u5fc5\u4fee\u8bfe\u7a0b\uff0c\u672c\u8bfe\u7a0b\u9002\u5408\u8bed\u8a00\u7c7b\u4e13\u4e1a\u5b66\u751f\u5b66\u4e60\u3002\u901a\u8fc7\u8bfe\u7a0b\u7684\u5b66\u4e60\uff0c\u6709\u52a9\u4e8e\u5b66\u4e60\u8005\u4e86\u89e3\u73b0\u4ee3\u8bed\u8a00\u670d\u52a1\u884c\u4e1a\uff0c\u589e\u5f3a\u5404\u7c7b\u8ba1\u7b97\u673a\u8f85\u52a9\u7ffb\u8bd1\u5de5\u5177\u7684\u4f7f\u7528\u6280\u80fd\uff0c\u63d0\u9ad8\u5305\u62ec\u7ffb\u8bd1\u5de5\u4f5c\u5728\u5185\u7684\u5404\u7c7b\u8bed\u8a00\u670d\u52a1\u5de5\u4f5c\u7684\u6548\u7387\u3002\u8be5\u8bfe\u7a0b\u662f\u201c\u5317\u5927-\u5fb7\u7a3b\u7f51\u7edc\u516c\u5f00\u8bfe\u7a0b\u201d\u4e2d\u7684\u4e00\u95e8\uff0c\u7531\u5317\u4eac\u5927\u5b66\u4e0e\u5fb7\u7a3b\u6559\u80b2\u8054\u5408\u63d0\u4f9b\u3002\u672c\u8bfe\u7a0b\u540c\u65f6\u53d7\u5230\u201c\u8bed\u8a00\u80fd\u529b\u534f\u540c\u521b\u65b0\u8ba1\u5212\u201d\u8d44\u52a9\u548c\u652f\u6301\u3002This course is suitable for postgraduate students who major in Translation and Interpreting, undergraduate students majoring in foreign language, translators and language enthusiasts.Those who work in modern language service industry are required to be capable of using computers and Internet to aid their translation job by adapting a variety of efficient tools, rather than just using word processor tools and several basic computer-aided translation software.This course teaches the basic concepts of computer-aided translation technology, helps students learn to use a variety of computer-aided translation tools, enhances their ability to engage in various kinds of language service in such a technical environment, and helps them understand what the modern language service industry looks like.This course covers introduction to modern language services industry, basic principles and concepts of translation technology, information technology used in the process of language translation, how to use electronic dictionaries, Internet resources and corpus tools, practice of different computer-aided translation tools, translation quality assessment, basic concepts of machine translation, globalization, localization and so on. As a compulsory course for students majoring in Translation and Interpreting, this course is also suitable for students with or without language major background. By learning this course, students can better understand modern language service industry and their work efficiency will be improved for them to better deliver translation service.The course is one of the PKU-DeTao MOOCs, which is a joint effort by Peking University and DeTao Masters Academy.Syllabus\u5bfc\u8a00\uff1a\u8bfe\u7a0b\u5b66\u4e60\u6307\u5357 L0: Learning Guide&nbsp;&nbsp;&nbsp; 0.1 \u8bfe\u7a0b\u6982\u89c8 Course Overview&nbsp;&nbsp;&nbsp; 0.2 \u672c\u8bfe\u7a0b\u5b66\u4e60\u6307\u5357 Learning Guide&nbsp;&nbsp;&nbsp; 0.3 \u672c\u5b66\u671f\u8bfe\u7a0b\u5185\u5bb9\u7b80\u4ecb Introduction to CATMOOC 2014&nbsp;&nbsp;&nbsp; 0.4 \u8bfe\u7a0b\u52a9\u6559 Teaching Assistant Introduction\u7b2c\u4e00\u8bfe \u65b0\u65f6\u4ee3\u7684\u8bed\u8a00\u670d\u52a1 L1: Language Service of the New Age&nbsp;&nbsp;&nbsp; 1.1 \u7ffb\u8bd1\u6280\u672f\u6982\u8981 Translation Technology Overview&nbsp;&nbsp;&nbsp; 1.2 \u4fe1\u606f\u5316\u65f6\u4ee3\u7684\u8bed\u8a00\u670d\u52a1 Language Service in the Information Age&nbsp;&nbsp;&nbsp; 1.3 \u4fe1\u606f\u6280\u672f\u4e0e\u7ffb\u8bd1\u6280\u672f\u6982\u8981 Information Tech &amp; Translation Tech&nbsp;&nbsp;&nbsp; \u6280\u672f\u4e13\u9898\uff1a\u5149\u5b66\u5b57\u7b26\u8bc6\u522b Introduction to OCR\u7b2c\u4e8c\u8bfe \u4e92\u8054\u7f51\u641c\u7d22\u5f15\u64ce/\u4fe1\u606f\u670d\u52a1\u4e0e\u7ffb\u8bd1\u5b9e\u8df5 L2: Internet Service and Translation Practice&nbsp;&nbsp;&nbsp; 2.1 \u4e92\u8054\u7f51\u4fe1\u606f\u8d44\u6e90\u6982\u8981 Overview of the Information Resources on the Internet&nbsp;&nbsp;&nbsp; 2.2 \u641c\u7d22\u5f15\u64ce\u5728\u7ffb\u8bd1\u4e2d\u7684\u4f5c\u7528Use of Search Engines in Translation&nbsp;&nbsp;&nbsp; 2.3 \u5b66\u672f\u6570\u636e\u5e93\u52a9\u529b\u7ffb\u8bd1 Academic Database Facilitates Translation&nbsp;&nbsp;&nbsp; \u6280\u672f\u4e13\u9898\uff1a\u641c\u7d22\u5f15\u64ce\u4e2d\u7684\u8bf1\u5bfc\u8bcd Special Subject-Inducing Words in Search Engines\u7b2c\u4e09\u8bfe \u8bed\u6599\u5e93\u4e0e\u7ffb\u8bd1\u7814\u7a76 L3: An Introduction to Corpus-based Translation&nbsp;&nbsp;&nbsp; 3.1 \u672c\u7ae0\u5b66\u4e60\u5bfc\u8a00 Introduction&nbsp;&nbsp;&nbsp; 3.2 \u8bed\u6599\u5e93\u7684\u4ea7\u751f\u4e0e\u53d1\u5c55 Emergence and Development of Corpus&nbsp;&nbsp;&nbsp; 3.3 \u8bed\u6599\u5e93\u7684\u6982\u5ff5\u65b9\u6cd5\u4e0e\u7ffb\u8bd1\u7814\u7a76 Concepts and Methods of Corpus and Translation Research&nbsp;&nbsp;&nbsp; 3.4 \u8bed\u6599\u5e93\u652f\u6301\u7684\u7ffb\u8bd1\u7814\u7a76 Translation Research Supported by Corpus&nbsp;&nbsp;&nbsp; 3.5 \u8bed\u6599\u5e93\u5728\u7ffb\u8bd1\u4e2d\u7684\u4f5c\u7528 Role of Corpus in Translation&nbsp;&nbsp;&nbsp; \u6280\u672f\u4e13\u9898\uff1aBYU\u8bed\u6599\u5e93 Special Subject-BYU Corpus\u7b2c\u56db\u8bfe \u7535\u5b50\u4e66\u8bcd\u5178\u3001\u5de5\u5177\u4e66\u4e0e\u7ffb\u8bd1\u5b9e\u8df5 L4: Electronic Dictionaries, Reference Books for Translation Practice&nbsp;&nbsp;&nbsp; 4.1 \u7535\u5b50\u5de5\u5177\u4e66\u7efc\u8ff0_Overview of E-Reference Books&nbsp;&nbsp;&nbsp; 4.2 \u5e38\u7528\u7535\u5b50\u5de5\u5177\u4e66\u4ecb\u7ecd_Introduction to Some Commonly-used E-Reference Books&nbsp;&nbsp;&nbsp; 4.3 \u7535\u5b50\u5de5\u5177\u4e66\u5728\u7ffb\u8bd1\u5b9e\u8df5\u5e94\u7528\u4e2d\u7684\u539f\u5219\u548c\u6280\u5de7_Rules and Techniques on How to Use E-Reference Books in Translation&nbsp;&nbsp;&nbsp; \u6280\u672f\u4e13\u9898\uff1a\u4f7f\u7528Sketch Engine\u81ea\u5efa\u8bed\u6599\u5e93 Establish Your Own Corpus with Sketch Engine\u7b2c\u4e94\u8bfe \u7ffb\u8bd1\u8bb0\u5fc6\u7814\u7a76 L5: Research on Translation Memory&nbsp;&nbsp;&nbsp; 5.1 \u7ffb\u8bd1\u8bb0\u5fc6\u7684\u7f18\u8d77 Origin of Translation Memory&nbsp;&nbsp;&nbsp; 5.2 \u7ffb\u8bd1\u8bb0\u5fc6\u7684\u82e5\u5e72\u5173\u952e\u95ee\u9898\u7814\u7a76\u4e4b\u4e00 Research on Several Key Problems of Translation Memory-Part1&nbsp;&nbsp;&nbsp; 5.3 \u7ffb\u8bd1\u8bb0\u5fc6\u7684\u82e5\u5e72\u5173\u952e\u95ee\u9898\u7814\u7a76\u4e4b\u4e8c Research on Several Key Problems of Translation Memory-Part2&nbsp;&nbsp;&nbsp; 5.4 \u7ffb\u8bd1\u8bb0\u5fc6\u5de5\u5177\u7684\u4f18\u7f3a\u70b9 Advantages and Disadvantages of Translation Meomory Tools&nbsp;&nbsp;&nbsp; \u6280\u672f\u4e13\u9898\uff1a\u5b57\u5e55\u7ffb\u8bd1 Subtitling Translation\u7b2c\u516d\u8bfe \u7ffb\u8bd1\u8bb0\u5fc6\u8f6f\u4ef6\u5b9e\u6218 L6: Practice of Translation Memory Software:SDL Trados Studio 2011&nbsp;&nbsp;&nbsp; 6.1 \u8f6f\u4ef6\u5feb\u901f\u5165\u95e8 Quick Guide&nbsp;&nbsp;&nbsp; 6.2 \u8f6f\u4ef6\u91cd\u8981\u529f\u80fd\u5256\u6790 Main Features of SDL Trados Studio 2014&nbsp;&nbsp;&nbsp; 6.3 \u8f6f\u4ef6\u4f7f\u7528\u7b54\u7591\u6c47\u603b Q&amp;A\u7b2c\u4e03\u8bfe \u7ffb\u8bd1\u5b9e\u8df5\u4e2d\u7684\u672f\u8bed\u7ba1\u7406 L7: Terminology and Terminology Management in Translation Practice&nbsp;&nbsp;&nbsp; 7.1 \u672f\u8bed\u7814\u7a76\u6982\u8981 Overview of Terminology Research&nbsp;&nbsp;&nbsp; 7.2 \u672f\u8bed\u7f16\u7e82\u4e0e\u672f\u8bed\u4f7f\u7528\u89c4\u5219 Terminology Compilation and Terminology in Translation Practice&nbsp;&nbsp;&nbsp; 7.3 \u672f\u8bed\u4e2d\u7684\u6982\u5ff5\u8868\u8fbe Concept Expression in Terminology&nbsp;&nbsp;&nbsp; 7.4 \u7ffb\u8bd1\u5b9e\u8df5\u4e2d\u7684\u672f\u8bed\u5e93\u5efa\u8bbe\u4e0e\u7ba1\u7406 Terminology Databse Construction and Management in Translation Practice&nbsp;&nbsp;&nbsp; \u6280\u672f\u4e13\u9898\uff1aSDL Multiterm 2011 \u672f\u8bed\u7ba1\u7406\u8f6f\u4ef6\u5b9e\u6218 Terminology Management Software SDL Trados MultiTerm 2011\u7b2c\u516b\u8bfe \u8ba1\u7b97\u673a\u8f85\u52a9\u7ffb\u8bd1\u8f6f\u4ef6\u9879\u76ee\u5b9e\u6218 L8: Computer-Aided Translation Tools in Practice&nbsp;&nbsp;&nbsp; 8.1 \u672c\u5468\u8bfe\u7a0b\u5bfc\u5b66 Introduction to this Week's Lecture&nbsp;&nbsp;&nbsp; 8.2 CAT \u8f6f\u4ef6\u5b66\u4e60\u89c6\u9891 Learning CAT Software&nbsp;&nbsp;&nbsp; 8.3 CAT \u8f6f\u4ef6\u9879\u76ee\u5b9e\u6218\u6f14\u7ec3 CAT Software in Practice&nbsp;&nbsp;&nbsp; 8.4 \u8f6f\u4ef6\u7ade\u8d5b\u8bfe\u5802\u7b54\u8fa9\u5b9e\u5f55 Live Video of Class Presentation\u7b2c\u4e5d\u8bfe \u7ffb\u8bd1\u670d\u52a1\u3001\u672c\u5730\u5316\u670d\u52a1\u4e0e\u8d28\u91cf\u63a7\u5236 L9: Translation Services, Localization Services and Quality Assurance&nbsp;&nbsp;&nbsp; 9.1 \u7ffb\u8bd1\u670d\u52a1\u4e0e\u9879\u76ee\u7ba1\u7406 Translation Services and Project Management&nbsp;&nbsp;&nbsp; 9.2 \u7ffb\u8bd1\u9879\u76ee\u6848\u4f8b\u5206\u6790 Translation Project Case Analysis&nbsp;&nbsp;&nbsp; 9.3 \u7ffb\u8bd1\u8d28\u91cf\u95ee\u9898\u8ba8\u8bba Discussion on Questions in Translation Quality&nbsp;&nbsp;&nbsp; 9.4 \u7ffb\u8bd1\u8d28\u91cf\u6807\u51c6\u4e0e\u5ba1\u67e5\u8f6f\u4ef6 Translation Quality Standards and Quality Checking Software&nbsp;&nbsp;&nbsp; \u6280\u672f\u4e13\u9898\uff1aXbench \u8d28\u91cf\u68c0\u67e5\u5de5\u5177 Special Subject-Xbench as QA Tool\u7b2c\u5341\u8bfe \u673a\u5668\u7ffb\u8bd1\u4e0e\u672c\u5730\u5316\u5de5\u7a0b\u6982\u8bba\uff08\u4e0a\uff09L10: Overview of Machine Translation and Localization Engineering Part A&nbsp;&nbsp;&nbsp; 10.1 \u673a\u5668\u7ffb\u8bd1\u7684\u5e94\u7528\u73b0\u72b6 the Application Status of Machine Translation&nbsp;&nbsp;&nbsp; 10.2 \u673a\u5668\u7ffb\u8bd1\u7684\u5386\u53f2\u4e0e\u6311\u6218 the History of Machine Translation and Its Challlenges&nbsp;&nbsp;&nbsp; 10.3 \u673a\u5668\u7ffb\u8bd1\u7684\u4e3b\u8981\u65b9\u6cd5 Major Methods of Machine Translation&nbsp;&nbsp;&nbsp; 10.4 \u673a\u5668\u7ffb\u8bd1\u4e0eCAT\u5de5\u5177 Machine Translation and CAT Software&nbsp;&nbsp;&nbsp; \u6280\u672f\u4e13\u9898\uff1a\u4f7f\u7528Beyond Compare \u6bd4\u8f83\u6587\u4ef6\u5939\u6216\u6587\u4ef6\u4e4b\u95f4\u7684\u5f02\u540c Special Subject-the Comparison Feature of Beyond Compareare\u7b2c\u5341\u4e00\u8bfe \u673a\u5668\u7ffb\u8bd1\u4e0e\u672c\u5730\u5316\u5de5\u7a0b\u6982\u8bba\uff08\u4e0b\uff09L11: Overview of Machine Translation and Localization Engineering Part B&nbsp;&nbsp;&nbsp; 11.1 \u672c\u5730\u5316\u5de5\u7a0b\u7684\u6982\u5ff5\u53ca\u5176\u8303\u7574 Concep and Scope of Localization Engineering&nbsp;&nbsp;&nbsp; 11.2 \u8f6f\u4ef6\u672c\u5730\u5316\u5de5\u7a0b\u6982\u8981 Overview of Localization Engineering&nbsp;&nbsp;&nbsp; 11.3 \u672c\u5730\u5316\u5de5\u4f5c\u89c4\u8303 Job Specification of Localization&nbsp;&nbsp;&nbsp; 11.4 \u672c\u5730\u5316\u884c\u4e1a\u4eba\u624d\u57f9\u517b Talent Training in Localization Industry&nbsp;&nbsp;&nbsp; \u6280\u672f\u4e13\u9898\uff1aCHM\u6587\u4ef6\u672c\u5730\u5316\u7ffb\u8bd1\u9879\u76ee\u5b9e\u8df5-\u9ad8\u5fd7\u519b\u8001\u5e08 Special Subject- A Real Localization Project of CHM Files by Mr. Gao",
        "desc_html": "If you are having difficulty viewing this video in mainland China, you can\nalso find it [here](http://video.study.163.com/edu-\nvideo/nos/mp4/2014/01/21/331978_hd.mp4).\n\n\u8bfe\u7a0b\u4ecb\u7ecd\u89c6\u9891\u4e5f\u53ef\u4ee5[\u8bbf\u95ee\u4e2d\u56fd\u7f51\u7ad9](http://video.study.163.com/edu-\nvideo/nos/mp4/2014/01/21/331978_hd.mp4)\u89c2\u770b\u3002\n\n\u672c\u8bfe\u7a0b\u9002\u7528\u4e8e\u7ffb\u8bd1\u7855\u58eb\u4e13\u4e1a\u7814\u7a76\u751f\u3001\u5916\u8bed\u4e13\u4e1a\u9ad8\u5e74\u7ea7\u672c\u79d1\u751f\u3001\u7ffb\u8bd1\u5de5\u4f5c\u8005\u4ee5\u53ca\u5916\u8bed\u7231\u597d\u8005\u7b49\u3002\n\n\u73b0\u4ee3\u8bed\u8a00\u670d\u52a1\u884c\u4e1a\u8981\u6c42\u4ece\u4e1a\u4eba\u5458\u5fc5\u987b\u5177\u6709\u5229\u7528\u8ba1\u7b97\u673a\u53ca\u7f51\u7edc\u6765\u4f7f\u7528\u5404\u7c7b\u6280\u672f\u8f85\u52a9\u5de5\u5177\u5e2e\u52a9\u5176\u5de5\u4f5c\u7684\u80fd\u529b\uff0c\u800c\u4e0d\u662f\u4ec5\u4ec5\u5b66\u4f1a\u51e0\u6b3e\u72ed\u4e49\u7684\u8ba1\u7b97\u673a\u8f85\u52a9\u7ffb\u8bd1\u8f6f\u4ef6\u3002\n\n\u672c\u8bfe\u7a0b\u4e3b\u8981\u8bb2\u6388\u8ba1\u7b97\u673a\u8f85\u52a9\u7ffb\u8bd1\u6280\u672f\u7684\u57fa\u7840\u6982\u5ff5\uff0c\u5b66\u4e60\u591a\u79cd\u8ba1\u7b97\u673a\u8f85\u52a9\u7ffb\u8bd1\u5de5\u5177\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u953b\u70bc\u5b66\u751f\u5728\u6280\u672f\u73af\u5883\u4e0b\u4ece\u4e8b\u7ffb\u8bd1\u5de5\u4f5c\u7b49\u5404\u7c7b\u8bed\u8a00\u670d\u52a1\u5de5\u4f5c\u7684\u80fd\u529b\uff0c\u5e2e\u52a9\u5b66\u751f\u7406\u89e3\u4fe1\u606f\n\u5316\u65f6\u4ee3\u7684\u8bed\u8a00\u670d\u52a1\u5de5\u4f5c\u3002\n\n\u8bfe\u7a0b\u5b8c\u6574\u6db5\u76d6\u73b0\u4ee3\u8bed\u8a00\u670d\u52a1\u7684\u57fa\u672c\u60c5\u51b5\u4ecb\u7ecd\u3001\u7ffb\u8bd1\u6280\u672f\u57fa\u672c\u6982\u5ff5\u3001\u8bed\u8a00\u670d\u52a1\u9879\u76ee\u6267\u884c\u8fc7\u7a0b\u7684\u4fe1\u606f\u73af\u5883\u4e0e\u4fe1\u606f\u6280\u672f\u3001\u5982\u4f55\u5229\u7528\u7535\u5b50\u8f9e\u5178\u3001\u7f51\u7edc\u8d44\u6e90\u53ca\u8bed\u6599\u5e93\u5de5\u5177\u8f85\u52a9\u7ffb\u8bd1\u5de5\u4f5c\u3001\u72ed\u4e49\n\u548c\u5e7f\u4e49\u7684\u8ba1\u7b97\u673a\u8f85\u52a9\u7ffb\u8bd1\u5de5\u5177\u539f\u7406\u53ca\u5b9e\u6218\u6f14\u7ec3\u3001\u7ffb\u8bd1\u5185\u5bb9\u8d28\u91cf\u8bc4\u5b9a\u3001\u591a\u4eba\u534f\u540c\u7ffb\u8bd1\u9879\u76ee\u3001\u7ffb\u8bd1\u7ba1\u7406\u7b49\u591a\u65b9\u9762\u7684\u5185\u5bb9\u3002\u4f5c\u4e3a\u7ffb\u8bd1\u7c7b\u4e13\u4e1a\u5b66\u751f\u7684\u5fc5\u4fee\u8bfe\u7a0b\uff0c\u672c\u8bfe\u7a0b\u9002\u5408\u8bed\u8a00\u7c7b\u4e13\u4e1a\u5b66\u751f\n\u5b66\u4e60\u3002\u901a\u8fc7\u8bfe\u7a0b\u7684\u5b66\u4e60\uff0c\u6709\u52a9\u4e8e\u5b66\u4e60\u8005\u4e86\u89e3\u73b0\u4ee3\u8bed\u8a00\u670d\u52a1\u884c\u4e1a\uff0c\u589e\u5f3a\u5404\u7c7b\u8ba1\u7b97\u673a\u8f85\u52a9\u7ffb\u8bd1\u5de5\u5177\u7684\u4f7f\u7528\u6280\u80fd\uff0c\u63d0\u9ad8\u5305\u62ec\u7ffb\u8bd1\u5de5\u4f5c\u5728\u5185\u7684\u5404\u7c7b\u8bed\u8a00\u670d\u52a1\u5de5\u4f5c\u7684\u6548\u7387\u3002\n\n\u8be5\u8bfe\u7a0b\u662f\u201c\u5317\u5927-\u5fb7\u7a3b\u7f51\u7edc\u516c\u5f00\u8bfe\u7a0b\u201d\u4e2d\u7684\u4e00\u95e8\uff0c\u7531\u5317\u4eac\u5927\u5b66\u4e0e\u5fb7\u7a3b\u6559\u80b2\u8054\u5408\u63d0\u4f9b\u3002\n\n\u672c\u8bfe\u7a0b\u540c\u65f6\u53d7\u5230\u201c\u8bed\u8a00\u80fd\u529b\u534f\u540c\u521b\u65b0\u8ba1\u5212\u201d\u8d44\u52a9\u548c\u652f\u6301\u3002\n\nThis course is suitable for postgraduate students who major in Translation and\nInterpreting, undergraduate students majoring in foreign language, translators\nand language enthusiasts.\n\nThose who work in modern language service industry are required to be capable\nof using computers and Internet to aid their translation job by adapting a\nvariety of efficient tools, rather than just using word processor tools and\nseveral basic computer-aided translation software.\n\nThis course teaches the basic concepts of computer-aided translation\ntechnology, helps students learn to use a variety of computer-aided\ntranslation tools, enhances their ability to engage in various kinds of\nlanguage service in such a technical environment, and helps them understand\nwhat the modern language service industry looks like.\n\nThis course covers introduction to modern language services industry, basic\nprinciples and concepts of translation technology, information technology used\nin the process of language translation, how to use electronic dictionaries,\nInternet resources and corpus tools, practice of different computer-aided\ntranslation tools, translation quality assessment, basic concepts of machine\ntranslation, globalization, localization and so on. As a compulsory course for\nstudents majoring in Translation and Interpreting, this course is also\nsuitable for students with or without language major background. By learning\nthis course, students can better understand modern language service industry\nand their work efficiency will be improved for them to better deliver\ntranslation service.\n\nThe course is one of the PKU-DeTao MOOCs, which is a joint effort by Peking\nUniversity and DeTao Masters Academy.\n\n## Syllabus\n\n**\u5bfc\u8a00\uff1a\u8bfe\u7a0b\u5b66\u4e60\u6307\u5357 L0: Learning Guide**  \n\n  *     0.1 \u8bfe\u7a0b\u6982\u89c8 Course Overview\n  *     0.2 \u672c\u8bfe\u7a0b\u5b66\u4e60\u6307\u5357 Learning Guide\n  *     0.3 \u672c\u5b66\u671f\u8bfe\u7a0b\u5185\u5bb9\u7b80\u4ecb Introduction to CATMOOC 2014\n  *     0.4 \u8bfe\u7a0b\u52a9\u6559 Teaching Assistant Introduction\n**  \n\u7b2c\u4e00\u8bfe \u65b0\u65f6\u4ee3\u7684\u8bed\u8a00\u670d\u52a1 L1: Language Service of the New Age**  \n\n  *     1.1 \u7ffb\u8bd1\u6280\u672f\u6982\u8981 Translation Technology Overview\n  *     1.2 \u4fe1\u606f\u5316\u65f6\u4ee3\u7684\u8bed\u8a00\u670d\u52a1 Language Service in the Information Age\n  *     1.3 \u4fe1\u606f\u6280\u672f\u4e0e\u7ffb\u8bd1\u6280\u672f\u6982\u8981 Information Tech & Translation Tech\n  *     \u6280\u672f\u4e13\u9898\uff1a\u5149\u5b66\u5b57\u7b26\u8bc6\u522b Introduction to OCR\n**  \n\u7b2c\u4e8c\u8bfe \u4e92\u8054\u7f51\u641c\u7d22\u5f15\u64ce/\u4fe1\u606f\u670d\u52a1\u4e0e\u7ffb\u8bd1\u5b9e\u8df5 L2: Internet Service and Translation Practice**  \n\n  *     2.1 \u4e92\u8054\u7f51\u4fe1\u606f\u8d44\u6e90\u6982\u8981 Overview of the Information Resources on the Internet\n  *     2.2 \u641c\u7d22\u5f15\u64ce\u5728\u7ffb\u8bd1\u4e2d\u7684\u4f5c\u7528Use of Search Engines in Translation\n  *     2.3 \u5b66\u672f\u6570\u636e\u5e93\u52a9\u529b\u7ffb\u8bd1 Academic Database Facilitates Translation\n  *     \u6280\u672f\u4e13\u9898\uff1a\u641c\u7d22\u5f15\u64ce\u4e2d\u7684\u8bf1\u5bfc\u8bcd Special Subject-Inducing Words in Search Engines\n**  \n\u7b2c\u4e09\u8bfe \u8bed\u6599\u5e93\u4e0e\u7ffb\u8bd1\u7814\u7a76 L3: An Introduction to Corpus-based Translation**  \n\n  *     3.1 \u672c\u7ae0\u5b66\u4e60\u5bfc\u8a00 Introduction\n  *     3.2 \u8bed\u6599\u5e93\u7684\u4ea7\u751f\u4e0e\u53d1\u5c55 Emergence and Development of Corpus\n  *     3.3 \u8bed\u6599\u5e93\u7684\u6982\u5ff5\u65b9\u6cd5\u4e0e\u7ffb\u8bd1\u7814\u7a76 Concepts and Methods of Corpus and Translation Research\n  *     3.4 \u8bed\u6599\u5e93\u652f\u6301\u7684\u7ffb\u8bd1\u7814\u7a76 Translation Research Supported by Corpus\n  *     3.5 \u8bed\u6599\u5e93\u5728\u7ffb\u8bd1\u4e2d\u7684\u4f5c\u7528 Role of Corpus in Translation\n  *     \u6280\u672f\u4e13\u9898\uff1aBYU\u8bed\u6599\u5e93 Special Subject-BYU Corpus\n**  \n\u7b2c\u56db\u8bfe \u7535\u5b50\u4e66\u8bcd\u5178\u3001\u5de5\u5177\u4e66\u4e0e\u7ffb\u8bd1\u5b9e\u8df5 L4: Electronic Dictionaries, Reference Books for\nTranslation Practice**  \n\n  *     4.1 \u7535\u5b50\u5de5\u5177\u4e66\u7efc\u8ff0_Overview of E-Reference Books\n  *     4.2 \u5e38\u7528\u7535\u5b50\u5de5\u5177\u4e66\u4ecb\u7ecd_Introduction to Some Commonly-used E-Reference Books\n  *     4.3 \u7535\u5b50\u5de5\u5177\u4e66\u5728\u7ffb\u8bd1\u5b9e\u8df5\u5e94\u7528\u4e2d\u7684\u539f\u5219\u548c\u6280\u5de7_Rules and Techniques on How to Use E-Reference Books in Translation\n  *     \u6280\u672f\u4e13\u9898\uff1a\u4f7f\u7528Sketch Engine\u81ea\u5efa\u8bed\u6599\u5e93 Establish Your Own Corpus with Sketch Engine\n  \n**\u7b2c\u4e94\u8bfe \u7ffb\u8bd1\u8bb0\u5fc6\u7814\u7a76 L5: Research on Translation Memory**  \n\n  *     5.1 \u7ffb\u8bd1\u8bb0\u5fc6\u7684\u7f18\u8d77 Origin of Translation Memory\n  *     5.2 \u7ffb\u8bd1\u8bb0\u5fc6\u7684\u82e5\u5e72\u5173\u952e\u95ee\u9898\u7814\u7a76\u4e4b\u4e00 Research on Several Key Problems of Translation Memory-Part1\n  *     5.3 \u7ffb\u8bd1\u8bb0\u5fc6\u7684\u82e5\u5e72\u5173\u952e\u95ee\u9898\u7814\u7a76\u4e4b\u4e8c Research on Several Key Problems of Translation Memory-Part2\n  *     5.4 \u7ffb\u8bd1\u8bb0\u5fc6\u5de5\u5177\u7684\u4f18\u7f3a\u70b9 Advantages and Disadvantages of Translation Meomory Tools\n  *     \u6280\u672f\u4e13\u9898\uff1a\u5b57\u5e55\u7ffb\u8bd1 Subtitling Translation\n  \n**\u7b2c\u516d\u8bfe \u7ffb\u8bd1\u8bb0\u5fc6\u8f6f\u4ef6\u5b9e\u6218 L6: Practice of Translation Memory Software:SDL Trados Studio 2011**  \n\n  *     6.1 \u8f6f\u4ef6\u5feb\u901f\u5165\u95e8 Quick Guide\n  *     6.2 \u8f6f\u4ef6\u91cd\u8981\u529f\u80fd\u5256\u6790 Main Features of SDL Trados Studio 2014\n  *     6.3 \u8f6f\u4ef6\u4f7f\u7528\u7b54\u7591\u6c47\u603b Q&A\n  \n**\u7b2c\u4e03\u8bfe \u7ffb\u8bd1\u5b9e\u8df5\u4e2d\u7684\u672f\u8bed\u7ba1\u7406 L7: Terminology and Terminology Management in Translation Practice**  \n\n  *     7.1 \u672f\u8bed\u7814\u7a76\u6982\u8981 Overview of Terminology Research\n  *     7.2 \u672f\u8bed\u7f16\u7e82\u4e0e\u672f\u8bed\u4f7f\u7528\u89c4\u5219 Terminology Compilation and Terminology in Translation Practice\n  *     7.3 \u672f\u8bed\u4e2d\u7684\u6982\u5ff5\u8868\u8fbe Concept Expression in Terminology\n  *     7.4 \u7ffb\u8bd1\u5b9e\u8df5\u4e2d\u7684\u672f\u8bed\u5e93\u5efa\u8bbe\u4e0e\u7ba1\u7406 Terminology Databse Construction and Management in Translation Practice\n  *     \u6280\u672f\u4e13\u9898\uff1aSDL Multiterm 2011 \u672f\u8bed\u7ba1\u7406\u8f6f\u4ef6\u5b9e\u6218 Terminology Management Software SDL Trados MultiTerm 2011\n  \n**\u7b2c\u516b\u8bfe \u8ba1\u7b97\u673a\u8f85\u52a9\u7ffb\u8bd1\u8f6f\u4ef6\u9879\u76ee\u5b9e\u6218 L8: Computer-Aided Translation Tools in Practice**  \n\n  *     8.1 \u672c\u5468\u8bfe\u7a0b\u5bfc\u5b66 Introduction to this Week's Lecture\n  *     8.2 CAT \u8f6f\u4ef6\u5b66\u4e60\u89c6\u9891 Learning CAT Software\n  *     8.3 CAT \u8f6f\u4ef6\u9879\u76ee\u5b9e\u6218\u6f14\u7ec3 CAT Software in Practice\n  *     8.4 \u8f6f\u4ef6\u7ade\u8d5b\u8bfe\u5802\u7b54\u8fa9\u5b9e\u5f55 Live Video of Class Presentation\n  \n**\u7b2c\u4e5d\u8bfe \u7ffb\u8bd1\u670d\u52a1\u3001\u672c\u5730\u5316\u670d\u52a1\u4e0e\u8d28\u91cf\u63a7\u5236 L9: Translation Services, Localization Services and Quality Assurance**  \n\n  *     9.1 \u7ffb\u8bd1\u670d\u52a1\u4e0e\u9879\u76ee\u7ba1\u7406 Translation Services and Project Management\n  *     9.2 \u7ffb\u8bd1\u9879\u76ee\u6848\u4f8b\u5206\u6790 Translation Project Case Analysis\n  *     9.3 \u7ffb\u8bd1\u8d28\u91cf\u95ee\u9898\u8ba8\u8bba Discussion on Questions in Translation Quality\n  *     9.4 \u7ffb\u8bd1\u8d28\u91cf\u6807\u51c6\u4e0e\u5ba1\u67e5\u8f6f\u4ef6 Translation Quality Standards and Quality Checking Software\n  *     \u6280\u672f\u4e13\u9898\uff1aXbench \u8d28\u91cf\u68c0\u67e5\u5de5\u5177 Special Subject-Xbench as QA Tool\n  \n**\u7b2c\u5341\u8bfe \u673a\u5668\u7ffb\u8bd1\u4e0e\u672c\u5730\u5316\u5de5\u7a0b\u6982\u8bba\uff08\u4e0a\uff09L10: Overview of Machine Translation and Localization Engineering Part A**  \n\n  *     10.1 \u673a\u5668\u7ffb\u8bd1\u7684\u5e94\u7528\u73b0\u72b6 the Application Status of Machine Translation\n  *     10.2 \u673a\u5668\u7ffb\u8bd1\u7684\u5386\u53f2\u4e0e\u6311\u6218 the History of Machine Translation and Its Challlenges\n  *     10.3 \u673a\u5668\u7ffb\u8bd1\u7684\u4e3b\u8981\u65b9\u6cd5 Major Methods of Machine Translation\n  *     10.4 \u673a\u5668\u7ffb\u8bd1\u4e0eCAT\u5de5\u5177 Machine Translation and CAT Software\n  *     \u6280\u672f\u4e13****\u9898\uff1a\u4f7f\u7528Beyond Compare \u6bd4\u8f83\u6587\u4ef6\u5939\u6216\u6587\u4ef6\u4e4b\u95f4\u7684\u5f02\u540c Special Subject-the Comparison Feature of Beyond Compareare\n  \n**\u7b2c\u5341\u4e00\u8bfe \u673a\u5668\u7ffb\u8bd1\u4e0e\u672c\u5730\u5316\u5de5\u7a0b\u6982\u8bba\uff08\u4e0b\uff09L11: Overview of Machine Translation and Localization Engineering Part B**  \n\n  *     11.1 \u672c\u5730\u5316\u5de5\u7a0b\u7684\u6982\u5ff5\u53ca\u5176\u8303\u7574 Concep and Scope of Localization Engineering\n  *     11.2 \u8f6f\u4ef6\u672c\u5730\u5316\u5de5\u7a0b\u6982\u8981 Overview of Localization Engineering\n  *     11.3 \u672c\u5730\u5316\u5de5\u4f5c\u89c4\u8303 Job Specification of Localization\n  *     11.4 \u672c\u5730\u5316\u884c\u4e1a\u4eba\u624d\u57f9\u517b Talent Training in Localization Industry\n  *     \u6280\u672f\u4e13\u9898\uff1aCHM\u6587\u4ef6\u672c\u5730\u5316\u7ffb\u8bd1\u9879\u76ee\u5b9e\u8df5-\u9ad8\u5fd7\u519b\u8001\u5e08 Special Subject- A Real Localization Project of CHM Files by Mr. Gao\n\n",
        "name": "\u8ba1\u7b97\u673a\u8f85\u52a9\u7ffb\u8bd1\u539f\u7406\u4e0e\u5b9e\u8df5 Principles and Practice of Computer-Aided Translation",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Peking University"
        ],
        "url": "https://www.coursera.org/course/catmooc",
        "video_url": ""
    },
    {
        "date": "2015-03-09",
        "desc": "Historically, cryptography was used to ensure private communication between two people with some prior relationship. More recently, its scope has expanded to include things as diverse as data integrity, secure internet-wide communication, electronic cash, secure distributed computation, and more.Cryptography has also become ubiquitous. Perhaps unknowingly, we have all encountered applications of cryptography in our daily lives---whether by logging in using a password, making a web purchase over a secure connection, or applying a software update that is digitally signed.This course will introduce you to the foundations of modern cryptography, with an eye toward practical applications. We will learn the importance of carefully defining security; of relying on a set of well-studied \u201chardness assumptions\u201d (e.g., the hardness of factoring large numbers); and of the possibility of proving security of complicated constructions based on low-level primitives. We will not only cover these ideas in theory, but will also explore their real-world impact. You will learn about cryptographic primitives in wide use today, and see how these can be combined to develop modern protocols for secure communication.SyllabusIntroduction and MotivationClassical Encryption SchemesPrinciples of Modern CryptographyPerfect Secrecy and Its LimitationsPrivate-Key EncryptionComputational SecurityPseudorandom Generators and Stream CiphersPseudorandom Functions and Block CiphersModes of EncryptionSecurity against Chosen-Ciphertext Attacks and Padding-Oracle AttacksMessage AuthenticationSecrecy vs. IntegrityMessage Authentication CodesCBC-MACAuthenticated EncryptionHash FunctionsSecurity RequirementsHMACAdditional Applications of Hash FunctionsNumber Theory and Mathematical BackgroundThe Public-Key RevolutionKey Distribution and Key ManagementDiffie-Hellman Key ExchangePublic-Key EncryptionDefinitions of SecurityHybrid Encryption and the KEM/DEM ParadigmEl Gamal Encryption and DHIESRSA Encryption and the RSA PKCS #1 StandardDigital SignaturesSignatures vs. MACsRSA-Based Signatures and the RSA PKCS #1 StandardDSA/ECDSAPublic-Key Infrastructures",
        "desc_html": "Historically, cryptography was used to ensure private communication between\ntwo people with some prior relationship. More recently, its scope has expanded\nto include things as diverse as data integrity, secure internet-wide\ncommunication, electronic cash, secure distributed computation, and more.\n\nCryptography has also become ubiquitous. Perhaps unknowingly, we have all\nencountered applications of cryptography in our daily lives---whether by\nlogging in using a password, making a web purchase over a secure connection,\nor applying a software update that is digitally signed.\n\nThis course will introduce you to the foundations of modern cryptography, with\nan eye toward practical applications. We will learn the importance of\ncarefully defining security; of relying on a set of well-studied \u201chardness\nassumptions\u201d (e.g., the hardness of factoring large numbers); and of the\npossibility of proving security of complicated constructions based on low-\nlevel primitives. We will not only cover these ideas in theory, but will also\nexplore their real-world impact. You will learn about cryptographic primitives\nin wide use today, and see how these can be combined to develop modern\nprotocols for secure communication.\n\n## Syllabus\n\n**Introduction and Motivation**  \n\n  * Classical Encryption Schemes\n\n  * Principles of Modern Cryptography\n\n**Perfect Secrecy and Its Limitations**  \n\n**Private-Key Encryption**\n\n  * Computational Security\n\n  * Pseudorandom Generators and Stream Ciphers\n\n  * Pseudorandom Functions and Block Ciphers\n\n  * Modes of Encryption\n\n  * Security against Chosen-Ciphertext Attacks and Padding-Oracle Attacks\n\n**Message Authentication**  \n\n  * Secrecy vs. Integrity\n\n  * Message Authentication Codes\n\n  * CBC-MAC\n\n  * Authenticated Encryption\n\n**Hash Functions**  \n\n  * Security Requirements\n\n  * HMAC\n\n  * Additional Applications of Hash Functions\n\n**Number Theory and Mathematical Background**  \n\n**The Public-Key Revolution**\n\n  * Key Distribution and Key Management\n\n  * Diffie-Hellman Key Exchange\n\n**Public-Key Encryption**  \n\n  * Definitions of Security\n\n  * Hybrid Encryption and the KEM/DEM Paradigm\n\n  * El Gamal Encryption and DHIES\n\n  * RSA Encryption and the RSA PKCS #1 Standard\n\n**Digital Signatures**  \n\n  * Signatures vs. MACs\n\n  * RSA-Based Signatures and the RSA PKCS #1 Standard\n\n  * DSA/ECDSA\n\n  * Public-Key Infrastructures\n\n",
        "name": "Cryptography",
        "provider": "Coursera",
        "rating": "4",
        "reviews": "1",
        "university": [
            "University of Maryland, College Park"
        ],
        "url": "https://www.coursera.org/course/cryptography",
        "video_url": ""
    },
    {
        "date": "2015-03-09",
        "desc": "Computer programs are everywhere: from coffee machines and MP3 players, to spaceships and medical robots. But just like astronomy is more than simply using telescopes, Computer Science is more than simply using computers. It\u2019s about programming computers to tell them precisely what to do. Coding is an invaluable skill that helps people think computationally, and hence effectively solve problems within and outside computer science. It is also creative and fun, allowing you, for instance, to build computer games to play with your friends.This course will introduce you to computer programming withScratch, one of the easiest to use programming languages. You will create computer programs by plugging graphical coding blocks together, for example to create animations, build games and construct interactive stories.But this course is much more than an introduction to Scratch. It will teach you how to think like a programmer, a computer scientist, a software engineer! It will introduce you to the fundamental principles of computing, and prompt you to think around topics like algorithm design, user interaction, code reusability and generalisation of solutions.You will learn all this through in-depth, hands-on examples, interviews with computing experts, fun quizzes and creative projects. By the end of this course you will be equipped with a solid understanding of the foundations of computing, allowing you to move to different programming languages or take a more advanced programming course in the future.NOTE: This course is also given in Spanish:&nbsp;https://www.coursera.org/course/aprogramarSyllabusWeek 1: Your first computer programWeek 2: Code gone loopyWeek 3: Remixing gamesWeek 4: Reusing your codeWeek 5: Think like a software engineer",
        "desc_html": "Computer programs are everywhere: from coffee machines and MP3 players, to\nspaceships and medical robots. But just like astronomy is more than simply\nusing telescopes, Computer Science is more than simply using computers. It\u2019s\nabout programming computers to tell them precisely what to do. Coding is an\ninvaluable skill that helps people think computationally, and hence\neffectively solve problems within and outside computer science. It is also\ncreative and fun, allowing you, for instance, to build computer games to play\nwith your friends.\n\nThis course will introduce you to computer programming with\n[Scratch](http://scratch.mit.edu/), one of the easiest to use programming\nlanguages. You will create computer programs by plugging graphical coding\nblocks together, for example to create animations, build games and construct\ninteractive stories.\n\nBut this course is much more than an introduction to Scratch. It will teach\nyou how to think like a programmer, a computer scientist, a software engineer!\nIt will introduce you to the fundamental principles of computing, and prompt\nyou to think around topics like algorithm design, user interaction, code\nreusability and generalisation of solutions.\n\nYou will learn all this through in-depth, hands-on examples, interviews with\ncomputing experts, fun quizzes and creative projects. By the end of this\ncourse you will be equipped with a solid understanding of the foundations of\ncomputing, allowing you to move to different programming languages or take a\nmore advanced programming course in the future.\n\n![ScratchCat-Small](https://d396qusza40orc.cloudfront.net/codeyourself\n/ScratchCat-Small.png)  \n\nNOTE: This course is also given in Spanish:\n<https://www.coursera.org/course/aprogramar>\n\n## Syllabus\n\n  * Week 1: Your first computer program\n\n  * Week 2: Code gone loopy\n\n  * Week 3: Remixing games\n\n  * Week 4: Reusing your code\n\n  * Week 5: Think like a software engineer  \n\n",
        "name": "Code Yourself! An Introduction to Programming",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of Edinburgh",
            "Universidad ORT Uruguay"
        ],
        "url": "https://www.coursera.org/course/codeyourself",
        "video_url": ""
    },
    {
        "date": "2015-03-09",
        "desc": "Los programas de computadora est\u00e1n en todas partes: desde m\u00e1quinas de caf\u00e9 y reproductores MP3 hasta naves espaciales y robots para aplicaciones m\u00e9dicas. Pero as\u00ed como la astronom\u00eda es m\u00e1s que usar telescopios, la ciencia de la computaci\u00f3n es m\u00e1s que usar computadoras, es programarlas para decirles exactamente qu\u00e9 deben hacer. Programar es una habilidad muy \u00fatil que te ayudar\u00e1 a pensar en forma computacional, para resolver problemas de computaci\u00f3n y de tu vida cotidiana. Adem\u00e1s, es una actividad creativa y divertida que te permitir\u00e1, por ejemplo, construir juegos de computadora para disfrutarlos junto a tus amigos y amigas.Este curso te acercar\u00e1 a la programaci\u00f3n de computadoras utilizandoScratch, uno de los&nbsp; lenguajes de programaci\u00f3n m\u00e1s f\u00e1ciles de usar. Moviendo y encastrando bloques podr\u00e1s crear programas tales como animaciones, juegos e historias interactivas.Pero \u00a1A Programar! es mucho m\u00e1s que una introducci\u00f3n a Scratch. \u00a1Te ense\u00f1ar\u00e1 a pensar como programador/a, como cient\u00edfico/a de la computaci\u00f3n, como ingeniero/a de software! Te presentar\u00e1 los principios fundamentales de la computaci\u00f3n, llev\u00e1ndote a reflexionar en torno a temas tales como el dise\u00f1o de algoritmos, la interacci\u00f3n con el usuario/a, la reutilizaci\u00f3n del c\u00f3digo y el modelado de problemas. Aprender\u00e1s todo esto a trav\u00e9s de ejemplos pr\u00e1cticos detallados, entrevistas con personas expertas en computaci\u00f3n, divertidos cuestionarios y proyectos creativos. Al final del curso tendr\u00e1s un s\u00f3lido conocimiento de los fundamentos de la computaci\u00f3n, que te permitir\u00e1 avanzar hacia otros lenguajes de programaci\u00f3n o tomar cursos de programaci\u00f3n m\u00e1s avanzados.NOTA: Este curso tambi\u00e9n se imparte en ingl\u00e9s:&nbsp;https://www.coursera.org/course/codeyourselfSyllabusSemana 1: Tu primer programaSemana 2: \u00a1Repetir, repetir, repetir!Semana 3: Reinventar juegosSemana 4: Reutilizando tu c\u00f3digoSemana 5: Pensando como ingeniero/a de software",
        "desc_html": "Los programas de computadora est\u00e1n en todas partes: desde m\u00e1quinas de caf\u00e9 y\nreproductores MP3 hasta naves espaciales y robots para aplicaciones m\u00e9dicas.\nPero as\u00ed como la astronom\u00eda es m\u00e1s que usar telescopios, la ciencia de la\ncomputaci\u00f3n es m\u00e1s que usar computadoras, es programarlas para decirles\nexactamente qu\u00e9 deben hacer. Programar es una habilidad muy \u00fatil que te\nayudar\u00e1 a pensar en forma computacional, para resolver problemas de\ncomputaci\u00f3n y de tu vida cotidiana. Adem\u00e1s, es una actividad creativa y\ndivertida que te permitir\u00e1, por ejemplo, construir juegos de computadora para\ndisfrutarlos junto a tus amigos y amigas.  \n\nEste curso te acercar\u00e1 a la programaci\u00f3n de computadoras utilizando\n[Scratch](http://scratch.mit.edu), uno de los  lenguajes de programaci\u00f3n m\u00e1s\nf\u00e1ciles de usar. Moviendo y encastrando bloques podr\u00e1s crear programas tales\ncomo animaciones, juegos e historias interactivas.  \n\nPero \u00a1A Programar! es mucho m\u00e1s que una introducci\u00f3n a Scratch. \u00a1Te ense\u00f1ar\u00e1 a\npensar como programador/a, como cient\u00edfico/a de la computaci\u00f3n, como\ningeniero/a de software! Te presentar\u00e1 los principios fundamentales de la\ncomputaci\u00f3n, llev\u00e1ndote a reflexionar en torno a temas tales como el dise\u00f1o de\nalgoritmos, la interacci\u00f3n con el usuario/a, la reutilizaci\u00f3n del c\u00f3digo y el\nmodelado de problemas. Aprender\u00e1s todo esto a trav\u00e9s de ejemplos pr\u00e1cticos\ndetallados, entrevistas con personas expertas en computaci\u00f3n, divertidos\ncuestionarios y proyectos creativos. Al final del curso tendr\u00e1s un s\u00f3lido\nconocimiento de los fundamentos de la computaci\u00f3n, que te permitir\u00e1 avanzar\nhacia otros lenguajes de programaci\u00f3n o tomar cursos de programaci\u00f3n m\u00e1s\navanzados.\n\n![ScratchCat-Small](https://d396qusza40orc.cloudfront.net/codeyourself\n/ScratchCat-Small.png)\n\nNOTA: Este curso tambi\u00e9n se imparte en ingl\u00e9s:\n<https://www.coursera.org/course/codeyourself>\n\n## Syllabus\n\n  * Semana 1: Tu primer programa\n\n  * Semana 2: \u00a1Repetir, repetir, repetir!\n\n  * Semana 3: Reinventar juegos\n\n  * Semana 4: Reutilizando tu c\u00f3digo\n\n  * Semana 5: Pensando como ingeniero/a de software  \n\n",
        "name": "\u00a1A Programar! Una introducci\u00f3n a la programaci\u00f3n",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of Edinburgh",
            "Universidad ORT Uruguay"
        ],
        "url": "https://www.coursera.org/course/aprogramar",
        "video_url": ""
    },
    {
        "date": "2015-03-04",
        "desc": "Optimization technology is ubiquitous in our society. It schedules planes and their crews, coordinates the production of steel, and organizes the transportation of iron ore from the mines to the ports. Optimization clears the day-ahead and real-time markets to deliver electricity to millions of people. It organizes kidney exchanges and cancer treatments and helps scientists understand the fundamental fabric of life, control complex chemical reactions, and design drugs that may benefit billions of individuals.This class is an introduction to discrete optimization and exposes students to some of the most fundamental concepts and algorithms in the field. It covers constraint programming, local search, and mixed-integer programming from their foundations to their applications for complex practical problems in areas such as scheduling, vehicle&nbsp;routing, supply-chain optimization, and resource allocation.An introductory lecture to the course can viewedhere.SyllabusThe course has an open format. &nbsp;At the start of the course all of the assignments and lectures are available and each student is free to design their own plan of study and proceed at their own pace. &nbsp;The assessments in the course consist of five programming tasks where students experience the challenges of real world optimization problems such as selecting the most profitable locations of retail stores (facility location) and the design of package delivery routes (vehicle routing). &nbsp;The class community is an important aspect of this course and students are encouraged to collaborate and help each other in the completion of the assignments.",
        "desc_html": "Optimization technology is ubiquitous in our society. It schedules planes and\ntheir crews, coordinates the production of steel, and organizes the\ntransportation of iron ore from the mines to the ports. Optimization clears\nthe day-ahead and real-time markets to deliver electricity to millions of\npeople. It organizes kidney exchanges and cancer treatments and helps\nscientists understand the fundamental fabric of life, control complex chemical\nreactions, and design drugs that may benefit billions of individuals.  \n  \nThis class is an introduction to discrete optimization and exposes students to\nsome of the most fundamental concepts and algorithms in the field. It covers\nconstraint programming, local search, and mixed-integer programming from their\nfoundations to their applications for complex practical problems in areas such\nas scheduling, vehicle routing, supply-chain optimization, and resource\nallocation.  \n  \nAn introductory lecture to the course can viewed\n[here](http://youtu.be/2IbJf4oXOxU).\n\n## Syllabus\n\nThe course has an open format.  At the start of the course all of the\nassignments and lectures are available and each student is free to design\ntheir own plan of study and proceed at their own pace.  The assessments in the\ncourse consist of five programming tasks where students experience the\nchallenges of real world optimization problems such as selecting the most\nprofitable locations of retail stores (facility location) and the design of\npackage delivery routes (vehicle routing).  The class community is an\nimportant aspect of this course and students are encouraged to collaborate and\nhelp each other in the completion of the assignments.\n\n",
        "name": "Discrete Optimization",
        "provider": "Coursera",
        "rating": "4",
        "reviews": "6",
        "university": [
            "University of Melbourne"
        ],
        "url": "https://www.coursera.org/course/optimization",
        "video_url": ""
    },
    {
        "date": "2015-03-04",
        "desc": "6.00.2x is aimed at students with some prior programming experience in Python and a rudimentary knowledge of computational complexity. We have chosen to focus on breadth rather than depth. The goal is to provide students with a brief introduction to many topics, so that they will have an idea of what\u2019s possible when the time comes later in their career to think about how to use computation to accomplish some goal. That said, it is not a \u201ccomputation appreciation\u201d course. Students will spend a considerable amount of time writing programs to implement the concepts covered in the course. Topics covered include plotting, stochastic programs, probability and statistics, random walks, Monte Carlo simulations, modeling data, optimization problems, and clustering.",
        "desc_html": "6.00.2x is aimed at students with some prior programming experience in Python\nand a rudimentary knowledge of computational complexity. We have chosen to\nfocus on breadth rather than depth. The goal is to provide students with a\nbrief introduction to many topics, so that they will have an idea of what\u2019s\npossible when the time comes later in their career to think about how to use\ncomputation to accomplish some goal. That said, it is not a \u201ccomputation\nappreciation\u201d course. Students will spend a considerable amount of time\nwriting programs to implement the concepts covered in the course. Topics\ncovered include plotting, stochastic programs, probability and statistics,\nrandom walks, Monte Carlo simulations, modeling data, optimization problems,\nand clustering.\n\n",
        "name": "6.00.2x: Introduction to Computational Thinking and Data Science",
        "provider": "edX",
        "rating": "4",
        "reviews": "2",
        "university": [
            "Massachusetts Institute of Technology"
        ],
        "url": "https://www.edx.org/course/introduction-computational-thinking-data-mitx-6-00-2x-0",
        "video_url": "https://www.youtube.com/embed/ww2BdhILIio?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-03-03",
        "desc": "This course is presented in Mandarin.Data structures play a central role in computer science and are the cornerstones of efficient algorithms. Knowledge in this area has been at the kernel of related curriculums. This course aims at exploring the principles and methods in the design and implementation of various data structures and providing students with main tools and skills for algorithm design and performance analysis. Topics covered by this course range from fundamental data structures to recent research results.\u6570\u636e\u7ed3\u6784\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u5173\u952e\u5185\u5bb9\uff0c\u4e5f\u662f\u6784\u5efa\u9ad8\u6548\u7b97\u6cd5\u7684\u5fc5\u8981\u57fa\u7840\u3002\u5176\u8986\u76d6\u7684\u77e5\u8bc6\uff0c\u5728\u76f8\u5173\u4e13\u4e1a\u7684\u8bfe\u7a0b\u4f53\u7cfb\u4e2d\u59cb\u7ec8\u5904\u4e8e\u6838\u5fc3\u4f4d\u7f6e\u3002\u672c\u8bfe\u7a0b\u65e8\u5728\u56f4\u7ed5\u5404\u7c7b\u6570\u636e\u7ed3\u6784\u7684\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\uff0c\u63ed\u793a\u5176\u4e2d\u7684\u89c4\u5f8b\u539f\u7406\u4e0e\u65b9\u6cd5\u6280\u5de7\uff1b\u540c\u65f6\u9488\u5bf9\u7b97\u6cd5\u8bbe\u8ba1\u53ca\u5176\u6027\u80fd\u5206\u6790\uff0c\u4f7f\u5b66\u751f\u4e86\u89e3\u5e76\u638c\u63e1\u4e3b\u8981\u7684\u5957\u8def\u4e0e\u624b\u6cd5\u3002\u8bb2\u6388\u7684\u4e3b\u9898\u4ece\u57fa\u7840\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4e00\u76f4\u5ef6\u4f38\u81f3\u65b0\u8fd1\u7684\u7814\u7a76\u6210\u679c\u3002",
        "desc_html": "This course is presented in Mandarin.  \n  \nData structures play a central role in computer science and are the\ncornerstones of efficient algorithms. Knowledge in this area has been at the\nkernel of related curriculums. This course aims at exploring the principles\nand methods in the design and implementation of various data structures and\nproviding students with main tools and skills for algorithm design and\nperformance analysis. Topics covered by this course range from fundamental\ndata structures to recent research results.  \n  \n\u6570\u636e\u7ed3\u6784\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u5173\u952e\u5185\u5bb9\uff0c\u4e5f\u662f\u6784\u5efa\u9ad8\u6548\u7b97\u6cd5\u7684\u5fc5\u8981\u57fa\u7840\u3002\u5176\u8986\u76d6\u7684\u77e5\u8bc6\uff0c\u5728\u76f8\u5173\u4e13\u4e1a\u7684\u8bfe\u7a0b\u4f53\u7cfb\u4e2d\u59cb\u7ec8\u5904\u4e8e\u6838\u5fc3\u4f4d\u7f6e\u3002\u672c\u8bfe\u7a0b\u65e8\u5728\u56f4\u7ed5\u5404\u7c7b\u6570\u636e\u7ed3\u6784\u7684\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\uff0c\u63ed\n\u793a\u5176\u4e2d\u7684\u89c4\u5f8b\u539f\u7406\u4e0e\u65b9\u6cd5\u6280\u5de7\uff1b\u540c\u65f6\u9488\u5bf9\u7b97\u6cd5\u8bbe\u8ba1\u53ca\u5176\u6027\u80fd\u5206\u6790\uff0c\u4f7f\u5b66\u751f\u4e86\u89e3\u5e76\u638c\u63e1\u4e3b\u8981\u7684\u5957\u8def\u4e0e\u624b\u6cd5\u3002\u8bb2\u6388\u7684\u4e3b\u9898\u4ece\u57fa\u7840\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4e00\u76f4\u5ef6\u4f38\u81f3\u65b0\u8fd1\u7684\u7814\u7a76\u6210\u679c\u3002\n\n",
        "name": "30240184x: Data Structures \u2022 \u6570\u636e\u7ed3\u6784",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Tsinghua University"
        ],
        "url": "https://www.edx.org/course/data-structures-shu-ju-jie-gou-tsinghuax-30240184x-0",
        "video_url": "https://www.youtube.com/embed/13AKQjGCKE8?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-03-03",
        "desc": "In the last decade, the amount of data available to organizations has reached unprecedented levels. Data is transforming business, social interactions, and the future of our society. In this course, you will learn how to use data and analytics to give an edge to your career and your life. We will examine real world examples of how analytics have been used to significantly improve a business or industry. These examples include Moneyball, eHarmony, the Framingham Heart Study, Twitter, IBM Watson, and Netflix. Through these examples and many more, we will teach you the following analytics methods: linear regression, logistic regression, trees, text analytics, clustering, visualization, and optimization. We will be using the statistical software R to build models and work with data. The contents of this course are essentially the same as those of the corresponding MIT class (The Analytics Edge). It is a challenging class, but it will enable you to apply analytics to real-world applications.",
        "desc_html": "In the last decade, the amount of data available to organizations has reached\nunprecedented levels. Data is transforming business, social interactions, and\nthe future of our society. In this course, you will learn how to use data and\nanalytics to give an edge to your career and your life. We will examine real\nworld examples of how analytics have been used to significantly improve a\nbusiness or industry. These examples include Moneyball, eHarmony, the\nFramingham Heart Study, Twitter, IBM Watson, and Netflix. Through these\nexamples and many more, we will teach you the following analytics methods:\nlinear regression, logistic regression, trees, text analytics, clustering,\nvisualization, and optimization. We will be using the statistical software R\nto build models and work with data. The contents of this course are\nessentially the same as those of the corresponding MIT class (The Analytics\nEdge). It is a challenging class, but it will enable you to apply analytics to\nreal-world applications.\n\n",
        "name": "15.071x: The Analytics Edge",
        "provider": "edX",
        "rating": "4.6",
        "reviews": "10",
        "university": [
            "Massachusetts Institute of Technology"
        ],
        "url": "https://www.edx.org/course/analytics-edge-mitx-15-071x-0",
        "video_url": "https://www.youtube.com/embed/1BMSOBCe07k?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-03-03",
        "desc": "Computing is an art. Computing is also, for most people, magic; this course will enable you to see what lies beyond the apparent magic, and to discover the science behind computing.Information Technology is everywhere. Every aspect of human activity depends on it. All IT processes, whether they drive mobile phones, the Internet, transportation systems, enterprise systems, publishing, social networks or any other application, rely on software. In this course we lift the hood and explain how to write this software. If you do not just want to be a consumer of IT services but understand how they work, and contribute to them yourself, this course is for you.The core skill is programming; not just the ability to piece together a few \u201clines of code\u201d, but writing quality programs, which will do their job right, and meet the evolving needs of their users. Anyone can write a program; this course teaches to write good programs.The course starts from the basics of computing and takes you through a tour of modern object-oriented programming, including classes, objects, control structures, inheritance, polymorphism, and genericity.Throughout the course, you will have the opportunity to learn the principles of programming as well as the techniques for designing correct and reliable programs by using the Eiffel programming language and notation. You will be trying out example problems, provide your solution, and see it immediately compiled and tested from within your browser.Beyond programming, you will also get a glimpse at theoretical computer science, the set of mathematical techniques that underlie computation and makes today\u2019s IT-based world possible. You should expect to devote five hours weekly to the course. Remember that you can only learn programming in depth by writing programs, so the more you practice the better.The textbook for the course is: Introduction to Programming Well Using Objects and Contracts, by Bertrand Meyer (Springer, revised printing, 2013).In this second edition of the course we specifically focus on helping students with little or no programming experience. To this end, we have improved the introductory material about the Eiffel language, and we have implemented a progressive hint system students can use to get guidance on how to solve the programming exercises.Previous edition course evaluation:Overall course rating (1: worst grade, 6: best grade):Grade Resp. \u00a0 %Resp1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 0%2\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1%3\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 8\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 11%4\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 20\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 27%5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 31\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 42%6\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 13\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 18%Total respondents: 73Average: 4.64",
        "desc_html": "Computing is an art. Computing is also, for most people, magic; this course\nwill enable you to see what lies beyond the apparent magic, and to discover\nthe science behind computing.  \n  \nInformation Technology is everywhere. Every aspect of human activity depends\non it. All IT processes, whether they drive mobile phones, the Internet,\ntransportation systems, enterprise systems, publishing, social networks or any\nother application, rely on software. In this course we lift the hood and\nexplain how to write this software. If you do not just want to be a consumer\nof IT services but understand how they work, and contribute to them yourself,\nthis course is for you.  \n  \nThe core skill is programming; not just the ability to piece together a few\n\u201clines of code\u201d, but writing quality programs, which will do their job right,\nand meet the evolving needs of their users. Anyone can write a program; this\ncourse teaches to write good programs.  \n  \nThe course starts from the basics of computing and takes you through a tour of\nmodern object-oriented programming, including classes, objects, control\nstructures, inheritance, polymorphism, and genericity.  \n  \nThroughout the course, you will have the opportunity to learn the principles\nof programming as well as the techniques for designing correct and reliable\nprograms by using the Eiffel programming language and notation. You will be\ntrying out example problems, provide your solution, and see it immediately\ncompiled and tested from within your browser.  \n  \nBeyond programming, you will also get a glimpse at theoretical computer\nscience, the set of mathematical techniques that underlie computation and\nmakes today\u2019s IT-based world possible. You should expect to devote five hours\nweekly to the course. Remember that you can only learn programming in depth by\nwriting programs, so the more you practice the better.  \n  \nThe textbook for the course is: Introduction to Programming Well Using Objects\nand Contracts, by Bertrand Meyer (Springer, revised printing, 2013).  \n  \nIn this second edition of the course we specifically focus on helping students\nwith little or no programming experience. To this end, we have improved the\nintroductory material about the Eiffel language, and we have implemented a\nprogressive hint system students can use to get guidance on how to solve the\nprogramming exercises.  \n  \nPrevious edition course evaluation:  \n  \nOverall course rating (1: worst grade, 6: best grade):  \n  \nGrade Resp. \u00a0 %Resp  \n1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 0%  \n2\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1%  \n3\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 8\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 11%  \n4\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 20\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 27%  \n5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 31\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 42%  \n6\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 13\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 18%  \n  \nTotal respondents: 73  \nAverage: 4.64\n\n",
        "name": "CAMSx: Computing: Art, Magic, Science",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "ETH Zurich"
        ],
        "url": "https://www.edx.org/course/computing-art-magic-science-ethx-camsx-0",
        "video_url": "https://www.youtube.com/embed/jBLysJSWnlM?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-03-02",
        "desc": "\u8bfe\u7a0b\u4ecb\u7ecd\u89c6\u9891\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u91cc\u3002\u3010\u8bfe\u7a0b\u7b80\u4ecb\u3011\u7b2c\u4e8c\u6b21MOOC\u5f00\u8bfe\u4ecb\u7ecd\u5982\u679c\u5c06\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u770b\u4f5c\u884c\u8d70\u6c5f\u6e56\u7684\u6b66\u4fa0\uff0c\u90a3\u4e48\u5404\u79cd\u8f6f\u4ef6\u5f00\u53d1\u6280\u672f\u5c31\u662f\u6b66\u4fa0\u8d56\u4ee5\u508d\u8eab\u7684\u6b66\u672f\u79d8\u7c4d\u3002\u6709\u7684\u79d8\u7c4d\u4ee5\u6613\u5b66\u7075\u5de7\u89c1\u957f\uff0c\u7ec3\u4e60\u8005\u5f88\u5feb\u638c\u63e1\uff0c\u5e76\u6709\u7acb\u7aff\u89c1\u5f71\u7684\u529f\u6548\uff0c\u4f46\u5931\u4e4b\u539a\u91cd\u6301\u4e45\uff0c\u6709\u7684\u79d8\u7c4d\u521d\u5b66\u4e4d\u7ec3\u987f\u663e\u56f0\u96be\uff0c\u867d\u51a5\u601d\u82e6\u89e3\u4ecd\u4e0d\u5f97\u8981\u9886\uff0c\u9700\u575a\u6301\u4e0d\u65ad\u7684\u5185\u529f\u4fee\u70bc\u65b9\u6210\u6b63\u679c\uff0c\u5374\u662f\u6210\u4e3a\u6b66\u6797\u5927\u4fa0\u5fc5\u5907\u7684\u81f3\u5b9d\uff0c\u672c\u8bfe\u7a0b\u6709\u4e9b\u7c7b\u4f3c\u4e8e\u540e\u8005\u3002\u300a\u9762\u5411\u5bf9\u8c61\u6280\u672f\u9ad8\u7ea7\u8bfe\u7a0b\u300b\u6df1\u5165\u3001\u7cfb\u7edf\u3001\u5b8c\u6574\u5730\u8bb2\u89e3\u5f53\u4eca\u4e3b\u6d41\u7684\u9762\u5411\u5bf9\u8c61\u8f6f\u4ef6\u5f00\u53d1\u65b9\u6cd5\u7684\u5206\u6790\u3001\u8bbe\u8ba1\u3001\u5b9e\u73b0\u53ca\u91cd\u6784\u65b9\u6cd5\uff0c\u6df1\u5165\u8bb2\u89e3UML\u8bed\u8a00\u7684\u9ad8\u7ea7\u6280\u672f\u7ec6\u8282\uff0c\u4ee5\u53ca\u8fd1\u5e74\u6765\u9762\u5411\u5bf9\u8c61\u65b9\u6cd5\u6700\u65b0\u7684\u53d1\u5c55\u8d8b\u52bf\uff0c\u96c6\u767e\u5bb6\u4e4b\u6240\u8a00\uff0c\u5e76\u7ed3\u5408\u4e3b\u8bb2\u8005\u6700\u65b0\u7684\u7814\u7a76\u6210\u679c\uff0c\u5e76\u901a\u8fc7\u5927\u91cf\u3001\u4e30\u5bcc\u3001\u5b8c\u6574\u3001\u4e0d\u540c\u9886\u57df\u3001\u5e94\u7528\u4e0d\u540c\u6280\u672f\u7684\u6848\u4f8b\u5c06\u5176\u4e2d\u7684\u5173\u952e\u77e5\u8bc6\u70b9\u4e32\u8054\u8d77\u6765\uff0c\u4fbf\u4e8e\u7406\u89e3\u548c\u5e94\u7528\u3002\u672c\u8bfe\u7a0b\u5e76\u4e0d\u62d8\u9650\u4e8e\u67d0\u4e00\u7279\u5b9a\u7684\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u8bed\u8a00\u7684\u7f16\u7a0b\u6280\u5de7\uff0c\u4f46\u5374\u5305\u542b\u4e86\u57fa\u4e8e\u5f53\u524d\u4e3b\u6d41\u7684\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8bed\u8a00\u7684\u591a\u9879\u5b8c\u6574\u6848\u4f8b\u3002\u672c\u8bfe\u7a0b\u5f15\u5bfc\u9009\u8bfe\u540c\u5b66\u4ece\u66f4\u4e3a\u62bd\u8c61\u548c\u5171\u6027\u7684\u6a21\u578b\u89d2\u5ea6\u63cf\u8ff0\u73b0\u5b9e\u4e16\u754c\u548c\u8f6f\u4ef6\u4e16\u754c,\u5373\u6784\u5efa\u5206\u6790\u4e0e\u8bbe\u8ba1\u6a21\u578b\uff0c\u4e4b\u540e\u518d\u5c06\u5176\u843d\u5b9e\u5230\u8f6f\u4ef6\u7f16\u7a0b\u5b9e\u73b0\u3002\u8fd9\u79cd\u5de5\u7a0b\u5316\u7684\u7406\u5ff5\u5bf9\u4e8e\u5f00\u53d1\u5927\u578b\u3001\u590d\u6742\u3001\u56f0\u96be\u3001\u6538\u5173\u8f6f\u4ef6\u7cfb\u7edf\u662f\u975e\u5e38\u5fc5\u8981\u7684\uff0c\u4e5f\u662f\u4f5c\u4e3a\u9ad8\u7ea7\u7a0b\u5e8f\u5458\u3001\u7cfb\u7edf\u5206\u6790\u5e08\u3001\u8f6f\u4ef6\u67b6\u6784\u5e08\u7b49\u9ad8\u7ea7\u8f6f\u4ef6\u6280\u672f\u804c\u4f4d\u6240\u5fc5\u9700\u5177\u6709\u7684\u7d20\u8d28\u3002\u4f5c\u4e3a\u4e00\u95e8\u9762\u5411\u5e7f\u5927\u53d7\u4f17\u7684\u4e2d\u6587MOOC\u8bfe\u7a0b\uff0c\u672c\u6b21\u8bfe\u7a0b\u529b\u6c42\u5411\u4e0d\u540c\u9700\u6c42\u548c\u80cc\u666f\u7684\u670b\u53cb\u5448\u73b0\u4e2d\u534e\u6587\u5316\u6c1b\u56f4\u3001\u751f\u52a8\u6709\u8da3\u7684\u6848\u4f8b\u3001\u8de8\u4e13\u4e1a\u7684\u5e7f\u9614\u7684\u89c6\u91ce\u3001\u4ee5\u53ca\u6df1\u5165\u5b9e\u7528\u7684\u6280\u672f\u7efc\u5408\u3002\u540c\u65f6\u4f5c\u4e3a\u4e00\u95e8\u4f20\u6388\u8f6f\u4ef6\u4e13\u95e8\u77e5\u8bc6\u7684MOOC\u8bfe\u7a0b\uff0c\u672c\u6b21\u8bfe\u7a0b\u5c06\u4e3a\u5177\u6709\u7f16\u7a0b\u80fd\u529b\u7684\u540c\u5b66\u5e26\u6765\u6709\u8da3\u7684\u8f6f\u4ef6\u5f00\u53d1\u9879\u76ee\u4f5c\u4e1a\uff0c\u5728\u5b9e\u9645\u7684\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u611f\u53d7\u5b66\u4ee5\u81f4\u7528\u7684\u5feb\u4e50\uff0c\u4f53\u4f1a\u9762\u5411\u5bf9\u8c61\u65b9\u6cd5\u5b66\u7684\u6df1\u523b\u5185\u6db5\u3002\u672c\u6b21\u8bfe\u7a0b\u4ecd\u5c06\u9080\u8bf7\u9762\u5411\u5bf9\u8c61\u9886\u57df\u8457\u540d\u5b66\u8005\u5317\u4eac\u5927\u5b66\u4fe1\u606f\u79d1\u5b66\u6280\u672f\u5b66\u9662\u90b5\u7ef4\u5fe0\u6559\u6388\u548c\u9ebb\u5fd7\u6bc5\u526f\u6559\u6388\u8bb2\u89e3\u67d0\u4e9b\u7ae0\u8282\uff0c\u5e76\u5bf9\u9762\u5411\u5bf9\u8c61\u65b9\u6cd5\u5b66\u4e2d\u7684\u67d0\u4e9b\u5173\u952e\u95ee\u9898\u8fdb\u884c\u8ba8\u8bba\u3002Syllabus\u7b2c1\u5468\uff1a \u7eea\u8bba:\u8f6f\u4ef6\u5f00\u53d1\u65b9\u6cd5\u7684\u6f14\u5316\u4e0e\u6700\u65b0\u8d8b\u52bf\u4ecb\u7ecd\u8d2f\u7a7f\u4e8e\u8bfe\u7a0b\u59cb\u7ec8\u7684\u57fa\u672c\u6982\u5ff5\uff1a\u7cfb\u7edf\u3001\u6a21\u578b\u3001\u65b9\u6cd5\u5b66\u3001\u65b9\u6cd5\u3001\u8bed\u8a00\u7b49\uff0c\u56de\u987e\u8f6f\u4ef6\u5f00\u53d1\u65b9\u6cd5\u5b66\u7684\u5386\u53f2\u3001\u73b0\u72b6\uff0c\u5e76\u5c55\u671b\u672a\u6765\u7b2c2\u5468\uff1a \u9762\u5411\u5bf9\u8c61\u6280\u672f\u6982\u8bba\u8bb2\u8ff0\u9762\u5411\u5bf9\u8c61\u65b9\u6cd5\u5b66\u4e2d\u7684\u539f\u5219\u4e0e\u53d1\u5c55\u5386\u53f2\u4ee5\u53ca\u95ee\u9898\u7b2c3\u5468\uff1a\u9762\u5411\u5bf9\u8c61\u5206\u6790\u4e0e\u8bbe\u8ba1\u5f15\u4f8b\uff08\u7a7a\u6218\u6e38\u620f\uff09\u4ee5\u4e00\u4e2a\u5b8c\u6574\u7684\u6848\u4f8b\u793a\u8303\u5b8c\u6574\u7684\u9762\u5411\u5bf9\u8c61\u7684\u9700\u6c42\u5206\u6790\u3001\u7cfb\u7edf\u5206\u6790\u548c\u7cfb\u7edf\u8bbe\u8ba1\u7684\u8fc7\u7a0b\u548c\u6a21\u578b\u3002\u7b2c4\u5468\uff1a\u9762\u5411\u5bf9\u8c61\u7684\u9700\u6c42\u5206\u6790\uff1aUsecace\u56fe\u4ecb\u7ecd\u9762\u5411\u5bf9\u8c61\u9700\u6c42\u5206\u6790\u6a21\u578b\u7684\u8bed\u4e49\u4e0e\u5efa\u7acb\u8fc7\u7a0b\uff0c\u793a\u4f8b\uff0c\u5e76\u8ba8\u8bba\u5176\u4e2d\u7684\u6df1\u5165\u8bdd\u9898\u7b2c5\u5468\uff1a\u9762\u5411\u5bf9\u8c61\u7684\u7cfb\u7edf\u5206\u6790\uff1a\u7c7b\u56fe\u4ecb\u7ecd\u7c7b\u56fe\u7684\u8bed\u4e49\u4e0e\u5efa\u7acb\u8fc7\u7a0b\uff0c\u793a\u4f8b\uff0c\u5e76\u8ba8\u8bba\u5176\u4e2d\u7684\u6df1\u5165\u8bdd\u9898\u7b2c6\u5468\uff1a\u9762\u5411\u5bf9\u8c61\u7684\u7cfb\u7edf\u5206\u6790\uff1a\u4ea4\u4e92\u56fe\u4ecb\u7ecd\u4ea4\u4e92\u56fe\u7684\u8bed\u4e49\u4e0e\u5efa\u7acb\u8fc7\u7a0b\uff0c\u793a\u4f8b\uff0c\u5e76\u8ba8\u8bba\u5176\u4e2d\u7684\u6df1\u5165\u8bdd\u9898\u7b2c7\u5468\uff1a\u9762\u5411\u5bf9\u8c61\u7684\u7cfb\u7edf\u5206\u6790\uff1a\u72b6\u6001\u56fe\u4ecb\u7ecd\u72b6\u6001\u56fe\u7684\u8bed\u4e49\u4e0e\u5efa\u7acb\u8fc7\u7a0b\uff0c\u793a\u4f8b\uff0c\u5e76\u8ba8\u8bba\u5176\u4e2d\u7684\u6df1\u5165\u8bdd\u9898\u7b2c8\u5468\uff1a\u9762\u5411\u5bf9\u8c61\u7684\u7cfb\u7edf\u8bbe\u8ba1\uff1a\u6982\u8ff0\u4e0e\u95ee\u9898\u57df\u90e8\u5206\u7684\u8bbe\u8ba1\u4ecb\u7ecd\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u7684\u8303\u56f4\u754c\u5b9a\u3001\u6982\u8981\u4e0e\u7ec4\u6210\u90e8\u5206\uff0c\u4ee5\u53ca\u5176\u4e2d\u95ee\u9898\u57df\u90e8\u5206\u7684\u8bbe\u8ba1\u65b9\u6cd5\u4e0e\u7b56\u7565\u7b2c9\u5468\uff1a\u9762\u5411\u5bf9\u8c61\u7684\u7cfb\u7edf\u8bbe\u8ba1\uff1a\u63a7\u5236\u9a71\u52a8\u90e8\u5206\u7684\u8bbe\u8ba1\u4ecb\u7ecd\u63a7\u5236\u9a71\u52a8\u90e8\u5206\u7684\u8bbe\u8ba1\u65b9\u6cd5\u4e0e\u7b56\u7565\u4e0e\u6848\u4f8b\u7b2c10\u5468\uff1a\u9762\u5411\u5bf9\u8c61\u7684\u7cfb\u7edf\u8bbe\u8ba1\uff1a\u4eba\u673a\u4ea4\u4e92\u90e8\u5206\u4e0e\u6570\u636e\u7ba1\u7406\u90e8\u5206\u7684\u8bbe\u8ba1\u4ecb\u7ecd\u4eba\u673a\u4ea4\u4e92\u90e8\u5206\u4e0e\u6570\u636e\u7ba1\u7406\u90e8\u5206\u7684\u8bbe\u8ba1\u65b9\u6cd5\u4e0e\u7b56\u7565\u4e0e\u6848\u4f8b\u7b2c11\u5468\uff1a\u9762\u5411\u5bf9\u8c61\u7684\u7cfb\u7edf\u8bbe\u8ba1\uff1a\u6784\u4ef6\u4e0e\u90e8\u7f72\u7684\u8bbe\u8ba1\u4ecb\u7ecd\u6784\u4ef6\u4e0e\u90e8\u7f72\u5206\u4e0e\u6570\u636e\u7ba1\u7406\u90e8\u5206\u7684\u8bbe\u8ba1\u65b9\u6cd5\u4e0e\u7b56\u7565\u4e0e\u6848\u4f8b\u7b2c12\u5468\uff1a\u9762\u5411\u5bf9\u8c61\u5206\u6790\u4e0e\u8bbe\u8ba1\u5b8c\u6574\u6848\u4f8b\u4ecb\u7ecd\u5404\u79cd\u7c7b\u578b\u7684\u9762\u5411\u5bf9\u8c61\u5206\u6790\u4e0e\u8bbe\u8ba1\u5b8c\u6574\u6848\u4f8b",
        "desc_html": "\u8bfe\u7a0b\u4ecb\u7ecd\u89c6\u9891\u53ef\u4ee5\u8bbf\u95ee[\u8fd9\u91cc](http://video.study.163.com/edu-\nvideo/nos/mp4/2014/01/23/332113_hd.mp4)\u3002\n\n  * \u3010\u8bfe\u7a0b\u7b80\u4ecb\u3011\u7b2c\u4e8c\u6b21MOOC\u5f00\u8bfe\u4ecb\u7ecd\n\n_\u5982\u679c\u5c06\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u770b\u4f5c\u884c\u8d70\u6c5f\u6e56\u7684\u6b66\u4fa0\uff0c\u90a3\u4e48\u5404\u79cd\u8f6f\u4ef6\u5f00\u53d1\u6280\u672f\u5c31\u662f\u6b66\u4fa0\u8d56\u4ee5\u508d\u8eab\u7684\u6b66\u672f\u79d8\u7c4d\u3002\u6709\u7684\u79d8\u7c4d\u4ee5\u6613\u5b66\u7075\u5de7\u89c1\u957f\uff0c\u7ec3\u4e60\u8005\u5f88\u5feb\u638c\u63e1\uff0c\u5e76\u6709\u7acb\u7aff\u89c1\u5f71\u7684\u529f\u6548\uff0c\u4f46\u5931\u4e4b\u539a\n\u91cd\u6301\u4e45\uff0c\u6709\u7684\u79d8\u7c4d\u521d\u5b66\u4e4d\u7ec3\u987f\u663e\u56f0\u96be\uff0c\u867d\u51a5\u601d\u82e6\u89e3\u4ecd\u4e0d\u5f97\u8981\u9886\uff0c\u9700\u575a\u6301\u4e0d\u65ad\u7684\u5185\u529f\u4fee\u70bc\u65b9\u6210\u6b63\u679c\uff0c\u5374\u662f\u6210\u4e3a\u6b66\u6797\u5927\u4fa0\u5fc5\u5907\u7684\u81f3\u5b9d\uff0c\u672c\u8bfe\u7a0b\u6709\u4e9b\u7c7b\u4f3c\u4e8e\u540e\u8005\u3002_\n\n\u300a\u9762\u5411\u5bf9\u8c61\u6280\u672f\u9ad8\u7ea7\u8bfe\u7a0b\u300b\u6df1\u5165\u3001\u7cfb\u7edf\u3001\u5b8c\u6574\u5730\u8bb2\u89e3\u5f53\u4eca\u4e3b\u6d41\u7684\u9762\u5411\u5bf9\u8c61\u8f6f\u4ef6\u5f00\u53d1\u65b9\u6cd5\u7684\u5206\u6790\u3001\u8bbe\u8ba1\u3001\u5b9e\u73b0\u53ca\u91cd\u6784\u65b9\u6cd5\uff0c\u6df1\u5165\u8bb2\u89e3UML\u8bed\u8a00\u7684\u9ad8\u7ea7\u6280\u672f\u7ec6\u8282\uff0c\u4ee5\u53ca\u8fd1\u5e74\u6765\u9762\u5411\u5bf9\n\u8c61\u65b9\u6cd5\u6700\u65b0\u7684\u53d1\u5c55\u8d8b\u52bf\uff0c\u96c6\u767e\u5bb6\u4e4b\u6240\u8a00\uff0c\u5e76\u7ed3\u5408\u4e3b\u8bb2\u8005\u6700\u65b0\u7684\u7814\u7a76\u6210\u679c\uff0c\u5e76\u901a\u8fc7\u5927\u91cf\u3001\u4e30\u5bcc\u3001\u5b8c\u6574\u3001\u4e0d\u540c\u9886\u57df\u3001\u5e94\u7528\u4e0d\u540c\u6280\u672f\u7684\u6848\u4f8b\u5c06\u5176\u4e2d\u7684\u5173\u952e\u77e5\u8bc6\u70b9\u4e32\u8054\u8d77\u6765\uff0c\u4fbf\u4e8e\u7406\u89e3\u548c\u5e94\n\u7528\u3002\n\n\u672c\u8bfe\u7a0b\u5e76\u4e0d\u62d8\u9650\u4e8e\u67d0\u4e00\u7279\u5b9a\u7684\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u8bed\u8a00\u7684\u7f16\u7a0b\u6280\u5de7\uff0c\u4f46\u5374\u5305\u542b\u4e86\u57fa\u4e8e\u5f53\u524d\u4e3b\u6d41\u7684\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8bed\u8a00\u7684\u591a\u9879\u5b8c\u6574\u6848\u4f8b\u3002\u672c\u8bfe\u7a0b\u5f15\u5bfc\u9009\u8bfe\u540c\u5b66\u4ece\u66f4\u4e3a\u62bd\u8c61\u548c\u5171\u6027\u7684\u6a21\u578b\u89d2\u5ea6\n\u63cf\u8ff0\u73b0\u5b9e\u4e16\u754c\u548c\u8f6f\u4ef6\u4e16\u754c,\u5373\u6784\u5efa\u5206\u6790\u4e0e\u8bbe\u8ba1\u6a21\u578b\uff0c\u4e4b\u540e\u518d\u5c06\u5176\u843d\u5b9e\u5230\u8f6f\u4ef6\u7f16\u7a0b\u5b9e\u73b0\u3002\u8fd9\u79cd\u5de5\u7a0b\u5316\u7684\u7406\u5ff5\u5bf9\u4e8e\u5f00\u53d1\u5927\u578b\u3001\u590d\u6742\u3001\u56f0\u96be\u3001\u6538\u5173\u8f6f\u4ef6\u7cfb\u7edf\u662f\u975e\u5e38\u5fc5\u8981\u7684\uff0c\u4e5f\u662f\u4f5c\u4e3a\u9ad8\u7ea7\n\u7a0b\u5e8f\u5458\u3001\u7cfb\u7edf\u5206\u6790\u5e08\u3001\u8f6f\u4ef6\u67b6\u6784\u5e08\u7b49\u9ad8\u7ea7\u8f6f\u4ef6\u6280\u672f\u804c\u4f4d\u6240\u5fc5\u9700\u5177\u6709\u7684\u7d20\u8d28\u3002\n\n\u4f5c\u4e3a\u4e00\u95e8\u9762\u5411\u5e7f\u5927\u53d7\u4f17\u7684\u4e2d\u6587MOOC\u8bfe\u7a0b\uff0c\u672c\u6b21\u8bfe\u7a0b\u529b\u6c42\u5411\u4e0d\u540c\u9700\u6c42\u548c\u80cc\u666f\u7684\u670b\u53cb\u5448\u73b0\u4e2d\u534e\u6587\u5316\u6c1b\u56f4\u3001\u751f\u52a8\u6709\u8da3\u7684\u6848\u4f8b\u3001\u8de8\u4e13\u4e1a\u7684\u5e7f\u9614\u7684\u89c6\u91ce\u3001\u4ee5\u53ca\u6df1\u5165\u5b9e\u7528\u7684\u6280\u672f\u7efc\u5408\u3002\n\n\u540c\u65f6\u4f5c\u4e3a\u4e00\u95e8\u4f20\u6388\u8f6f\u4ef6\u4e13\u95e8\u77e5\u8bc6\u7684MOOC\u8bfe\u7a0b\uff0c\u672c\u6b21\u8bfe\u7a0b\u5c06\u4e3a\u5177\u6709\u7f16\u7a0b\u80fd\u529b\u7684\u540c\u5b66\u5e26\u6765\u6709\u8da3\u7684\u8f6f\u4ef6\u5f00\u53d1\u9879\u76ee\u4f5c\u4e1a\uff0c\u5728\u5b9e\u9645\u7684\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u611f\u53d7\u5b66\u4ee5\u81f4\u7528\u7684\u5feb\u4e50\uff0c\u4f53\u4f1a\u9762\u5411\u5bf9\u8c61\u65b9\u6cd5\n\u5b66\u7684\u6df1\u523b\u5185\u6db5\u3002\n\n\u672c\u6b21\u8bfe\u7a0b\u4ecd\u5c06\u9080\u8bf7\u9762\u5411\u5bf9\u8c61\u9886\u57df\u8457\u540d\u5b66\u8005\u5317\u4eac\u5927\u5b66\u4fe1\u606f\u79d1\u5b66\u6280\u672f\u5b66\u9662\u90b5\u7ef4\u5fe0\u6559\u6388\u548c\u9ebb\u5fd7\u6bc5\u526f\u6559\u6388\u8bb2\u89e3\u67d0\u4e9b\u7ae0\u8282\uff0c\u5e76\u5bf9\u9762\u5411\u5bf9\u8c61\u65b9\u6cd5\u5b66\u4e2d\u7684\u67d0\u4e9b\u5173\u952e\u95ee\u9898\u8fdb\u884c\u8ba8\u8bba\u3002\n\n## Syllabus\n\n**\u7b2c1\u5468\uff1a \u7eea\u8bba:\u8f6f\u4ef6\u5f00\u53d1\u65b9\u6cd5\u7684\u6f14\u5316\u4e0e\u6700\u65b0\u8d8b\u52bf**   \n\u4ecb\u7ecd\u8d2f\u7a7f\u4e8e\u8bfe\u7a0b\u59cb\u7ec8\u7684\u57fa\u672c\u6982\u5ff5\uff1a\u7cfb\u7edf\u3001\u6a21\u578b\u3001\u65b9\u6cd5\u5b66\u3001\u65b9\u6cd5\u3001\u8bed\u8a00\u7b49\uff0c\u56de\u987e\u8f6f\u4ef6\u5f00\u53d1\u65b9\u6cd5\u5b66\u7684\u5386\u53f2\u3001\u73b0\u72b6\uff0c\u5e76\u5c55\u671b\u672a\u6765  \n**\u7b2c2\u5468\uff1a \u9762\u5411\u5bf9\u8c61\u6280\u672f\u6982\u8bba **  \n\u8bb2\u8ff0\u9762\u5411\u5bf9\u8c61\u65b9\u6cd5\u5b66\u4e2d\u7684\u539f\u5219\u4e0e\u53d1\u5c55\u5386\u53f2\u4ee5\u53ca\u95ee\u9898  \n**\u7b2c3\u5468\uff1a\u9762\u5411\u5bf9\u8c61\u5206\u6790\u4e0e\u8bbe\u8ba1\u5f15\u4f8b\uff08\u7a7a\u6218\u6e38\u620f\uff09 **  \n\u4ee5\u4e00\u4e2a\u5b8c\u6574\u7684\u6848\u4f8b\u793a\u8303\u5b8c\u6574\u7684\u9762\u5411\u5bf9\u8c61\u7684\u9700\u6c42\u5206\u6790\u3001\u7cfb\u7edf\u5206\u6790\u548c\u7cfb\u7edf\u8bbe\u8ba1\u7684\u8fc7\u7a0b\u548c\u6a21\u578b\u3002  \n**\u7b2c4\u5468\uff1a\u9762\u5411\u5bf9\u8c61\u7684\u9700\u6c42\u5206\u6790\uff1aUsecace\u56fe **  \n\u4ecb\u7ecd\u9762\u5411\u5bf9\u8c61\u9700\u6c42\u5206\u6790\u6a21\u578b\u7684\u8bed\u4e49\u4e0e\u5efa\u7acb\u8fc7\u7a0b\uff0c\u793a\u4f8b\uff0c\u5e76\u8ba8\u8bba\u5176\u4e2d\u7684\u6df1\u5165\u8bdd\u9898  \n**\u7b2c5\u5468\uff1a\u9762\u5411\u5bf9\u8c61\u7684\u7cfb\u7edf\u5206\u6790\uff1a\u7c7b\u56fe **  \n\u4ecb\u7ecd\u7c7b\u56fe\u7684\u8bed\u4e49\u4e0e\u5efa\u7acb\u8fc7\u7a0b\uff0c\u793a\u4f8b\uff0c\u5e76\u8ba8\u8bba\u5176\u4e2d\u7684\u6df1\u5165\u8bdd\u9898  \n**\u7b2c6\u5468\uff1a\u9762\u5411\u5bf9\u8c61\u7684\u7cfb\u7edf\u5206\u6790\uff1a\u4ea4\u4e92\u56fe**   \n\u4ecb\u7ecd\u4ea4\u4e92\u56fe\u7684\u8bed\u4e49\u4e0e\u5efa\u7acb\u8fc7\u7a0b\uff0c\u793a\u4f8b\uff0c\u5e76\u8ba8\u8bba\u5176\u4e2d\u7684\u6df1\u5165\u8bdd\u9898  \n**\u7b2c7\u5468\uff1a\u9762\u5411\u5bf9\u8c61\u7684\u7cfb\u7edf\u5206\u6790\uff1a\u72b6\u6001\u56fe **  \n\u4ecb\u7ecd\u72b6\u6001\u56fe\u7684\u8bed\u4e49\u4e0e\u5efa\u7acb\u8fc7\u7a0b\uff0c\u793a\u4f8b\uff0c\u5e76\u8ba8\u8bba\u5176\u4e2d\u7684\u6df1\u5165\u8bdd\u9898  \n**\u7b2c8\u5468\uff1a\u9762\u5411\u5bf9\u8c61\u7684\u7cfb\u7edf\u8bbe\u8ba1\uff1a\u6982\u8ff0\u4e0e\u95ee\u9898\u57df\u90e8\u5206\u7684\u8bbe\u8ba1 **  \n\u4ecb\u7ecd\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u7684\u8303\u56f4\u754c\u5b9a\u3001\u6982\u8981\u4e0e\u7ec4\u6210\u90e8\u5206\uff0c\u4ee5\u53ca\u5176\u4e2d\u95ee\u9898\u57df\u90e8\u5206\u7684\u8bbe\u8ba1\u65b9\u6cd5\u4e0e\u7b56\u7565  \n**\u7b2c9\u5468\uff1a\u9762\u5411\u5bf9\u8c61\u7684\u7cfb\u7edf\u8bbe\u8ba1\uff1a\u63a7\u5236\u9a71\u52a8\u90e8\u5206\u7684\u8bbe\u8ba1 **  \n\u4ecb\u7ecd\u63a7\u5236\u9a71\u52a8\u90e8\u5206\u7684\u8bbe\u8ba1\u65b9\u6cd5\u4e0e\u7b56\u7565\u4e0e\u6848\u4f8b  \n**\u7b2c10\u5468\uff1a\u9762\u5411\u5bf9\u8c61\u7684\u7cfb\u7edf\u8bbe\u8ba1\uff1a\u4eba\u673a\u4ea4\u4e92\u90e8\u5206\u4e0e\u6570\u636e\u7ba1\u7406\u90e8\u5206\u7684\u8bbe\u8ba1 **  \n\u4ecb\u7ecd\u4eba\u673a\u4ea4\u4e92\u90e8\u5206\u4e0e\u6570\u636e\u7ba1\u7406\u90e8\u5206\u7684\u8bbe\u8ba1\u65b9\u6cd5\u4e0e\u7b56\u7565\u4e0e\u6848\u4f8b  \n**\u7b2c11\u5468\uff1a\u9762\u5411\u5bf9\u8c61\u7684\u7cfb\u7edf\u8bbe\u8ba1\uff1a\u6784\u4ef6\u4e0e\u90e8\u7f72\u7684\u8bbe\u8ba1 **  \n\u4ecb\u7ecd\u6784\u4ef6\u4e0e\u90e8\u7f72\u5206\u4e0e\u6570\u636e\u7ba1\u7406\u90e8\u5206\u7684\u8bbe\u8ba1\u65b9\u6cd5\u4e0e\u7b56\u7565\u4e0e\u6848\u4f8b  \n**\u7b2c12\u5468\uff1a\u9762\u5411\u5bf9\u8c61\u5206\u6790\u4e0e\u8bbe\u8ba1\u5b8c\u6574\u6848\u4f8b **  \n\u4ecb\u7ecd\u5404\u79cd\u7c7b\u578b\u7684\u9762\u5411\u5bf9\u8c61\u5206\u6790\u4e0e\u8bbe\u8ba1\u5b8c\u6574\u6848\u4f8b\n\n",
        "name": "\u9762\u5411\u5bf9\u8c61\u6280\u672f\u9ad8\u7ea7\u8bfe\u7a0b\uff08The Advanced Object-Oriented Technology\uff09",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Peking University"
        ],
        "url": "https://www.coursera.org/course/aoo",
        "video_url": ""
    },
    {
        "date": "2015-03-02",
        "desc": "This course focuses on the concepts and tools behind reporting modern data analyses in a reproducible manner. Reproducible research is the idea that data analyses, and more generally, scientific claims, are published with their data and software code so that others may verify the findings and build upon them. \u00a0The need for reproducibility is increasing dramatically as data analyses become more complex, involving larger datasets and more sophisticated computations. Reproducibility allows for people to focus on the actual content of a data analysis, rather than on superficial details reported in a written summary. In addition, reproducibility makes an analysis more useful to others because the data and code that actually conducted the analysis are available. This course will focus on literate statistical analysis tools which allow one to publish data analyses in a single document that allows others to easily execute the same analysis to obtain the same results.SyllabusIn this course you will learn to write a document using R markdown, integrate live R code into a literate statistical program, compile R markdown documents using knitr and related tools, and organize a data analysis so that it is reproducible and accessible to others.",
        "desc_html": "This course focuses on the concepts and tools behind reporting modern data\nanalyses in a reproducible manner. Reproducible research is the idea that data\nanalyses, and more generally, scientific claims, are published with their data\nand software code so that others may verify the findings and build upon them.\nThe need for reproducibility is increasing dramatically as data analyses\nbecome more complex, involving larger datasets and more sophisticated\ncomputations. Reproducibility allows for people to focus on the actual content\nof a data analysis, rather than on superficial details reported in a written\nsummary. In addition, reproducibility makes an analysis more useful to others\nbecause the data and code that actually conducted the analysis are available.\nThis course will focus on literate statistical analysis tools which allow one\nto publish data analyses in a single document that allows others to easily\nexecute the same analysis to obtain the same results.\n\n## Syllabus\n\nIn this course you will learn to write a document using R markdown, integrate\nlive R code into a literate statistical program, compile R markdown documents\nusing knitr and related tools, and organize a data analysis so that it is\nreproducible and accessible to others.  \n\n",
        "name": "Reproducible Research",
        "provider": "Coursera",
        "rating": "4",
        "reviews": "2",
        "university": [
            "Johns Hopkins University"
        ],
        "url": "https://www.coursera.org/course/repdata",
        "video_url": ""
    },
    {
        "date": "2015-03-02",
        "desc": "Before you can work with data you have to get some. This course will cover the basic ways that data can be obtained. The course will cover obtaining data from the web, from APIs, from databases and from colleagues in various formats. It will also cover the basics of data cleaning and how to make data \u201ctidy\u201d. Tidy data dramatically speed downstream data analysis tasks. The course will also cover the components of a complete data set including raw data, processing instructions, codebooks, and processed data. The course will cover the basics needed for collecting, cleaning, and sharing data.Please note:&nbsp;we are offering a Chinese version of this course starting Jan 5th, running in parallel with the English version. If you are interested, please select \"Jan 5 2015 - Feb 2 2015 (\u4e2d\u6587\u7248)\" in the session drop-down list.SyllabusUpon completion of this course you will be able to obtain data from a variety of sources. You will know the principles of tidy data and data sharing. Finally, you will understand and be able to apply the basic tools for data cleaning and manipulation.",
        "desc_html": "Before you can work with data you have to get some. This course will cover the\nbasic ways that data can be obtained. The course will cover obtaining data\nfrom the web, from APIs, from databases and from colleagues in various\nformats. It will also cover the basics of data cleaning and how to make data\n\u201ctidy\u201d. Tidy data dramatically speed downstream data analysis tasks. The\ncourse will also cover the components of a complete data set including raw\ndata, processing instructions, codebooks, and processed data. The course will\ncover the basics needed for collecting, cleaning, and sharing data.  \n  \n**Please note: **we are offering a Chinese version of this course starting Jan 5th, running in parallel with the English version. If you are interested, please select \"Jan 5 2015 - Feb 2 2015 (\u4e2d\u6587\u7248)\" in the session drop-down list.  \n\n## Syllabus\n\nUpon completion of this course you will be able to obtain data from a variety\nof sources. You will know the principles of tidy data and data sharing.\nFinally, you will understand and be able to apply the basic tools for data\ncleaning and manipulation.\n\n",
        "name": "Getting and Cleaning Data",
        "provider": "Coursera",
        "rating": "2.6666666666667",
        "reviews": "12",
        "university": [
            "Johns Hopkins University"
        ],
        "url": "https://www.coursera.org/course/getdata",
        "video_url": ""
    },
    {
        "date": "2015-03-02",
        "desc": "One of the most common tasks performed by data scientists and data analysts are prediction and machine learning. This course will cover the basic components of building and applying prediction functions with an emphasis on practical applications. The course will provide basic grounding in concepts such as training and tests sets, overfitting, and error rates. The course will also introduce a range of model based and algorithmic machine learning methods including regression, classification trees, Naive Bayes, and random forests. The course will cover the complete process of building prediction functions including data collection, feature creation, algorithms, and evaluation.SyllabusUpon completion of this course you will understand the components of a machine learning algorithm. You will also know how to apply multiple basic machine learning tools. You will also learn to apply these tools to build and evaluate predictors on real data.",
        "desc_html": "One of the most common tasks performed by data scientists and data analysts\nare prediction and machine learning. This course will cover the basic\ncomponents of building and applying prediction functions with an emphasis on\npractical applications. The course will provide basic grounding in concepts\nsuch as training and tests sets, overfitting, and error rates. The course will\nalso introduce a range of model based and algorithmic machine learning methods\nincluding regression, classification trees, Naive Bayes, and random forests.\nThe course will cover the complete process of building prediction functions\nincluding data collection, feature creation, algorithms, and evaluation.\n\n## Syllabus\n\nUpon completion of this course you will understand the components of a machine\nlearning algorithm. You will also know how to apply multiple basic machine\nlearning tools. You will also learn to apply these tools to build and evaluate\npredictors on real data.\n\n",
        "name": "Practical Machine Learning",
        "provider": "Coursera",
        "rating": "3",
        "reviews": "1",
        "university": [
            "Johns Hopkins University"
        ],
        "url": "https://www.coursera.org/course/predmachlearn",
        "video_url": ""
    },
    {
        "date": "2015-03-02",
        "desc": "Pushing computation, control and storage into the \u201ccloud\u201d has been a key trend in\nnetworking in the past decade. The cloud is now \u201cdescending\u201d to the network\nedge and often diffused among the client devices in both mobile and wireline\nnetworks. The cloud is becoming the \u201cfog.\u201d Empowered by the latest chips,\nradios, and sensors, each client device today is powerful in computation, in\nstorage, in sensing and in communication. Yet client devices are still limited\nin battery power, global view of the network, and mobility support. Most\ninterestingly, the collection of many clients in a crowd presents a highly\ndistributed, under-organized, and possibly dense network.Fog Networking isan architecture that will also support the Internet of Things, IoT, such as the \u201cconnected wearables.\u201d Bold, new user interfaces are getting close to affordable price points for the mass, begging questions on the \u201carchitectural choices for the glasses and watches,\u201d from naming to billing, and from session management to resource optimization. Fog Networking leverages past experience in sensor networks, P2P and MANET research, and incorporates the latest advances in devices, network systems, and data science to reshape the \u201cbalance of power\u201d in the ecosystem of computing and networking.&nbsp;SyllabusFrom Cloud\nto FogClient-side\nmeasurementClient-side\ncontrol and configurationEdge\nanalytics and stream miningEdge\nresource poolingEdge caching\nand distributed data centerSecurity and\nprivacy in FogConsumer and\nwearable IoTIndustrial\nand building IoTConnected cars in IoTSmart grids in IoTHealthcare monitoring in IoT&nbsp;",
        "desc_html": "Pushing computation, control and storage into the \u201ccloud\u201d has been a key trend\nin networking in the past decade. The cloud is now \u201cdescending\u201d to the network\nedge and often diffused among the client devices in both mobile and wireline\nnetworks. The cloud is becoming the \u201cfog.\u201d Empowered by the latest chips,\nradios, and sensors, each client device today is powerful in computation, in\nstorage, in sensing and in communication. Yet client devices are still limited\nin battery power, global view of the network, and mobility support. Most\ninterestingly, the collection of many clients in a crowd presents a highly\ndistributed, under-organized, and possibly dense network.\n\nFog Networking isan architecture that will also support the Internet of\nThings, IoT, such as the \u201cconnected wearables.\u201d Bold, new user interfaces are\ngetting close to affordable price points for the mass, begging questions on\nthe \u201carchitectural choices for the glasses and watches,\u201d from naming to\nbilling, and from session management to resource optimization. Fog Networking\nleverages past experience in sensor networks, P2P and MANET research, and\nincorporates the latest advances in devices, network systems, and data science\nto reshape the \u201cbalance of power\u201d in the ecosystem of computing and\nnetworking.\n\n## Syllabus\n\n  1. From Cloud to Fog\n  2. Client-side measurement\n  3. Client-side control and configuration\n  4. Edge analytics and stream mining\n  5. Edge resource pooling\n  6. Edge caching and distributed data center\n  7. Security and privacy in Fog\n  8. Consumer and wearable IoT\n  9. Industrial and building IoT\n  10. Connected cars in IoT\n  11. Smart grids in IoT\n  12. Healthcare monitoring in IoT \n\n",
        "name": "Fog Networks and the Internet of Things",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Princeton University"
        ],
        "url": "https://www.coursera.org/course/fog",
        "video_url": ""
    },
    {
        "date": "2015-03-02",
        "desc": "This course covers the essential exploratory techniques for summarizing data. These techniques are typically applied before formal modeling commences and can help inform the development of more complex statistical models. Exploratory techniques are also important for eliminating or sharpening potential hypotheses about the world that can be addressed by the data. We will cover in detail the plotting systems in R as well as some of the basic principles of constructing data graphics. We will also cover some of the common multivariate statistical techniques used to visualize high-dimensional data.Please note:&nbsp;we are offering a Chinese version of this course starting Jan 5th, running in parallel with the English version. If you are interested, please select \"Jan 5 2015 - Feb 2 2015 (\u4e2d\u6587\u7248)\" in the session drop-down list.SyllabusAfter successfully completing this course you will be able to make visual representations of data using the base, lattice, and ggplot2 plotting systems in R, apply basic principles of data graphics to create rich analytic graphics from different types of datasets, construct exploratory summaries of data in support of a specific question, and create visualizations of multidimensional data using exploratory multivariate statistical techniques.",
        "desc_html": "This course covers the essential exploratory techniques for summarizing data.\nThese techniques are typically applied before formal modeling commences and\ncan help inform the development of more complex statistical models.\nExploratory techniques are also important for eliminating or sharpening\npotential hypotheses about the world that can be addressed by the data. We\nwill cover in detail the plotting systems in R as well as some of the basic\nprinciples of constructing data graphics. We will also cover some of the\ncommon multivariate statistical techniques used to visualize high-dimensional\ndata.  \n  \n**Please note: **we are offering a Chinese version of this course starting Jan 5th, running in parallel with the English version. If you are interested, please select \"Jan 5 2015 - Feb 2 2015 (\u4e2d\u6587\u7248)\" in the session drop-down list.  \n\n## Syllabus\n\nAfter successfully completing this course you will be able to make visual\nrepresentations of data using the base, lattice, and ggplot2 plotting systems\nin R, apply basic principles of data graphics to create rich analytic graphics\nfrom different types of datasets, construct exploratory summaries of data in\nsupport of a specific question, and create visualizations of multidimensional\ndata using exploratory multivariate statistical techniques.\n\n",
        "name": "Exploratory Data Analysis",
        "provider": "Coursera",
        "rating": "2.75",
        "reviews": "4",
        "university": [
            "Johns Hopkins University"
        ],
        "url": "https://www.coursera.org/course/exdata",
        "video_url": ""
    },
    {
        "date": "2015-03-02",
        "desc": "IT is in need of change for the better. In order to adapt to a digital world, a two-speed IT is needed.Despite the\nimportance of IT in today\u2019s digital world, Chief Information Officers (CIOs)\noften struggle to get their voices heard by executive committees.Faced with\nthis challenge, IT departments are being forced to reinvent themselves to adapt\ntheir companies to the fast paced evolution of technology. The Boston\nConsulting Group has developed a business approach that allows IT to shed\noff its appearance of a heavy cost centre and to adopt a new, more realistic\npersona as a quality service provider, partnering with users and the\nmanagement.SyllabusThe course will provide you with insights of three IT experts at the Boston Consulting Group and will be structured as follows:WEEK 1.&nbsp;IT and the CIO in\nthe Digital WorldThere is a gap between what we observed about IT in companies and what is actually needed. Some best practice examples will be given.1.0.&nbsp;Introduction of the WeekIntroduction of the\nlecturers and brief introduction of the next 7 videos of this week.1.1.&nbsp;The Darwinism of ITThe IT market is\ncharacterized by the creation of monopolies and the speed of its\nevolution. This complicates the CIO's role.1.2.&nbsp;Three Big Challenges for the IT\nDepartment TodayIT\ndepartments face three main challenges nowadays: a new tech-savvy generation,\nincreasing expectations from the executive committee and a more complex and\nperforming ecosystem.1.3.&nbsp;The IT Department Is a Business in\nItselfThe IT department\nhas all the components of a business. Therefore it should be managed as a\nbusiness in itself.1.4.&nbsp;The CIO: Where Do We Stand Today?The CIO\nis in a difficult position nowadays: he is not heard enough on strategic issues\nand he could risk becoming just a director of IT purchases.1.5.&nbsp;The CIO Is a Business ManagerThe CIO\nshould define a vision, cooperate with the business lines, communicate with\nthe management, handle human resources and conduct transformation.1.6.&nbsp;The CIO Sits at the Table of the\nManagersThe CIO\nshould be transparent with the business lines and update regularly the general\nmanagement.1.7.&nbsp;&nbsp;The Five Different Roles of the CIOEach of\nthe following week (2-6) focuses on a different CIO role.WEEK 2.&nbsp;Steer the Balance\nSheetThe first new role of the CIO in the digital world is to manage both the P&amp;L and the balance sheet to position IT as a business partner.2.0.&nbsp;Introduction of the WeekBrief introduction\nof the next 5 videos of this week.2.1.&nbsp;Every IT Should Have a Strategic\nPlanThe\nmaster plan is a mid-term strategic plan that should have a P&amp;L and a\nbalance sheet view. It should also be updated regularly.2.2.&nbsp;Measure How Much IT Can Spend With the\nIncome StatementThe income\nstatement breaks down the costs of IT and measures the value it creates.2.3.&nbsp;Determine Timeframes With the\nBalance SheetThe\nbalance sheet provides an overview of the IT assets and liabilities (technical\ndebt) and is essential to determine a timeframe for the vision.2.4.&nbsp;Understand the System Dynamics\"Change\ncosts\" impact future \"run costs\". A good strategy is to keep the\n\"run costs\" stable over time.2.5.&nbsp;Manage UncertaintyA budget is\nindispensable to detect overspending and underspending. Moreover, it should: come\nwith a staff plan, put controlling and reporting mechanisms in place and be\nsynchronized with the global budget.2.6.&nbsp;Key TakeawaysWEEK 3.&nbsp;Market and Sell\nProductsBeing a business partner starts with deciding what IT sells and what IT does not sell.3.0.&nbsp;Introduction of the WeekBrief introduction\nof the next 5 videos of this week.3.1.&nbsp;The Architecture to Manage Tensions\nAhead of TimeThe\narchitecture defines the IT development plan. It is composed by standards,\nguidelines, policies, etc. and it contains 3 key-elements (application, data\nand infrastructure).3.2.&nbsp;Manage the Clients' ExpectationsIT\nshould segment its clients and products in order to manage its clients\u2019\nexpectations.3.3.&nbsp;Product and Service OfferA CIO has to find the right trade-off between variety and costs. Moreover, the offer should be\ncredible and non-negotiable.3.4.&nbsp;The Catalogue to Overcome Tensions\nAbout ProductsThe\ncatalogue helps IT to find compromises with its clients. Its pricing policy\nshould be designed strategically.3.5.&nbsp;Showcase Even on Small StuffIT should\nmake its clients happy to gain their support during projects by taking care of\nproducts and services.3.6.&nbsp;Key TakeawaysWEEK 4.&nbsp;Run the FactoriesBuilding applications and running operations require the adoption of a \"factory mind-set\".4.0.&nbsp;Introduction of the WeekBrief introduction\nof the next 5 videos of this week.4.1.&nbsp;The Three Factories of the IT\nDepartmentIT is\ncomposed of three factories: infrastructure, user support and application\ndevelopment. The frontiers between these factories should be defined\nadequately.4.2.&nbsp;What Is an Efficient Factory?IT\nperformance maximization is equivalent to a minimization of the cost to value\ncreation ratio.4.3.&nbsp;Two-Speed ITThe\nfocus of industrial projects should be cost optimization while the focus of\ndigital projects should be speed.4.4.&nbsp;Project ManagementIT\nprojects are a source of tensions. 6 simple rules should be followed for project\nmanagement excellence.4.5.&nbsp;Manage the InfrastructureInfrastructure\nis very visible and costly. The CIO must formalize an infrastructure strategic plan in order to guarantee the reliability of operations while transforming IT continuously.&nbsp;4.6.&nbsp;Key TakeawaysWEEK 5.&nbsp;Manage Human\nResourcesIn a digital world, \u201cstrategic workforce management\u201d is the name of the game.5.0.&nbsp;Introduction of the WeekBrief introduction\nof the next 6 videos of this week.5.1.&nbsp;Building an IT OrganizationThree\nimportant items a CIO should keep in mind while building an IT organization\n(expectations from the business departments, the IT legacy and the company\u2019s\norganization logic) and concrete tips to help in the process.5.2.&nbsp;How to Think About an IT\nOrganizationThe IT\norganization starts with the business and is more than just the structure. Four\nequally important pillars are to be considered: centralization, boundaries,\ncontrolling and hierarchy.5.3.&nbsp;A Right Workforce Composition Is a\nMustOne of\nthe main decisions for the CIO is to determine the proportion of internal,\noutsourced and offshore resources.5.4.&nbsp;Strategic Workforce ManagementThe\nfunction of the HR strategic plan is to anticipate the mid-term needs for\nresources and its challenge is to retain talent over time.5.5.&nbsp;Outsourcing and Offshoring\nStrategiesOutsourcing and offshoring have advantages, but to achieve good results some good practices should be\nfollowed.&nbsp;5.6.&nbsp;Use Sociology to Build a Real-Life\nOrganizationA four\nstep methodology is proposed to move from a \"formal\" organizational\nstructure to the \"real-life\" organization.&nbsp;5.7.&nbsp;Key Takeaways&nbsp;WEEK 6.&nbsp;Transform or\nDisappearIn this final lecture, we will see that IT must continually transform itself to adapt to an ever-changing environment. We will take a look at how that should be done: there are rules to make this happen.6.0.&nbsp;Introduction of the WeekBrief introduction\nof the next 5 videos of this week.&nbsp;6.1.&nbsp;IT Departments Need to Change With\nthe WorldIT\ndepartments constantly need to transform themselves, even though it is a very difficult\ntask.6.2.&nbsp;Create the Conditions for ChangeThe\ntarget of the transformation should be quantified according to the type of\ntransformation. Moreover, the target should be ambitious yet realistic.6.3.&nbsp;Choose the Right Levers of ChangeThe\nambition of the change impacts the types of levers required to achieve the\nobjectives.6.4.&nbsp;Drive the TransformationThe\ntransformation plan has to be structured, communicated and its implementation\nshould be managed as a project.6.5.&nbsp;Key Takeaways",
        "desc_html": "**IT is in need of change for the better. In order to adapt to a digital world, a two-speed IT is needed.**  \n\nDespite the importance of IT in today\u2019s digital world, Chief Information\nOfficers (CIOs) often struggle to get their voices heard by executive\ncommittees.  \n\nFaced with this challenge, IT departments are being forced to reinvent\nthemselves to adapt their companies to the fast paced evolution of technology.\nThe Boston Consulting Group has developed a business approach that allows IT\nto shed off its appearance of a heavy cost centre and to adopt a new, more\nrealistic persona as a quality service provider, partnering with users and the\nmanagement.\n\n## Syllabus\n\nThe course will provide you with insights of three IT experts at the Boston\nConsulting Group and will be structured as follows:**_  \n_**\n\n**__WEEK 1. __****__IT and the CIO in the Digital World__**\n\nThere is a gap between what we observed about IT in companies and what is\nactually needed. Some best practice examples will be given.\n\n**1.0. Introduction of the Week**\n\nIntroduction of the lecturers and brief introduction of the next 7 videos of\nthis week.\n\n**1.1. The Darwinism of IT**\n\nThe IT market is characterized by the creation of monopolies and the speed of\nits evolution. This complicates the CIO's role.\n\n**1.2. Three Big Challenges for the IT Department Today**\n\nIT departments face three main challenges nowadays: a new tech-savvy\ngeneration, increasing expectations from the executive committee and a more\ncomplex and performing ecosystem.\n\n**1.3. ****The IT Department Is a Business in Itself**\n\nThe IT department has all the components of a business. Therefore it should be\nmanaged as a business in itself.\n\n**1.4. ****The CIO: Where Do We Stand Today?**\n\nThe CIO is in a difficult position nowadays: he is not heard enough on\nstrategic issues and he could risk becoming just a director of IT purchases.\n\n**1.5. ****The CIO Is a Business Manager**\n\nThe CIO should define a vision, cooperate with the business lines, communicate\nwith the management, handle human resources and conduct transformation.\n\n**1.6. ****The CIO Sits at the Table of the Managers**\n\nThe CIO should be transparent with the business lines and update regularly the\ngeneral management.\n\n**1.7.  The Five Different Roles of the CIO**\n\nEach of the following week (2-6) focuses on a different CIO role.\n\n**__WEEK 2. __****__Steer the Balance Sheet__**\n\nThe first new role of the CIO in the digital world is to manage both the P&L\nand the balance sheet to position IT as a business partner.\n\n**2.0. Introduction of the Week**\n\nBrief introduction of the next 5 videos of this week**.**\n\n**2.1. Every IT Should Have a Strategic Plan**\n\nThe master plan is a mid-term strategic plan that should have a P&L and a\nbalance sheet view. It should also be updated regularly.\n\n**2.2. Measure How Much IT Can Spend With the Income Statement**\n\nThe income statement breaks down the costs of IT and measures the value it\ncreates.\n\n**2.3. Determine Timeframes With the Balance Sheet**\n\nThe balance sheet provides an overview of the IT assets and liabilities\n(technical debt) and is essential to determine a timeframe for the vision.\n\n**2.4. Understand the System Dynamics**\n\n\"Change costs\" impact future \"run costs\". A good strategy is to keep the \"run\ncosts\" stable over time.\n\n**2.5. Manage Uncertainty**\n\nA budget is indispensable to detect overspending and underspending. Moreover,\nit should: come with a staff plan, put controlling and reporting mechanisms in\nplace and be synchronized with the global budget.\n\n**2.6. Key Takeaways**\n\n**__WEEK 3. __****__Market and Sell Products__**\n\nBeing a business partner starts with deciding what IT sells and what IT does\nnot sell.\n\n**3.0. Introduction of the Week**\n\nBrief introduction of the next 5 videos of this week.\n\n**3.1. The Architecture to Manage Tensions Ahead of Time**\n\nThe architecture defines the IT development plan. It is composed by standards,\nguidelines, policies, etc. and it contains 3 key-elements (application, data\nand infrastructure).\n\n**3.2. Manage the Clients' Expectations**\n\nIT should segment its clients and products in order to manage its clients\u2019\nexpectations.\n\n**3.3. Product and Service Offer**\n\nA CIO has to find the right trade-off between variety and costs. Moreover, the\noffer should be credible and non-negotiable.\n\n**3.4. The Catalogue to Overcome Tensions About Products**\n\nThe catalogue helps IT to find compromises with its clients. Its pricing\npolicy should be designed strategically.\n\n**3.5. Showcase Even on Small Stuff**\n\nIT should make its clients happy to gain their support during projects by\ntaking care of products and services.\n\n**3.6. Key Takeaways**\n\n**__WEEK 4. __****__Run the Factories__**\n\nBuilding applications and running operations require the adoption of a\n\"factory mind-set\".\n\n**4.0. Introduction of the Week**\n\nBrief introduction of the next 5 videos of this week.\n\n**4.1. The Three Factories of the IT Department**\n\nIT is composed of three factories: infrastructure, user support and\napplication development. The frontiers between these factories should be\ndefined adequately.\n\n**4.2. What Is an Efficient Factory?**\n\nIT performance maximization is equivalent to a minimization of the cost to\nvalue creation ratio.\n\n**4.3. Two-Speed IT******\n\nThe focus of industrial projects should be cost optimization while the focus\nof digital projects should be speed.\n\n**4.4. Project Management**\n\nIT projects are a source of tensions. 6 simple rules should be followed for\nproject management excellence.\n\n**4.5. Manage the Infrastructure******\n\nInfrastructure is very visible and costly. The CIO must formalize an\ninfrastructure strategic plan in order to guarantee the reliability of\noperations while transforming IT continuously.\n\n**4.6. Key Takeaways**\n\n**__WEEK 5. __****__Manage Human Resources__**\n\nIn a digital world, \u201cstrategic workforce management\u201d is the name of the game.\n\n**5.0. Introduction of the Week**\n\nBrief introduction of the next 6 videos of this week.\n\n**5.1. Building an IT Organization**\n\nThree important items a CIO should keep in mind while building an IT\norganization (expectations from the business departments, the IT legacy and\nthe company\u2019s organization logic) and concrete tips to help in the process.\n\n**5.2. How to Think About an IT Organization**\n\nThe IT organization starts with the business and is more than just the\nstructure. Four equally important pillars are to be considered:\ncentralization, boundaries, controlling and hierarchy.\n\n**5.3. A Right Workforce Composition Is a Must**\n\nOne of the main decisions for the CIO is to determine the proportion of\ninternal, outsourced and offshore resources.\n\n**5.4. Strategic Workforce Management**\n\nThe function of the HR strategic plan is to anticipate the mid-term needs for\nresources and its challenge is to retain talent over time.\n\n**5.5. Outsourcing and Offshoring Strategies******\n\nOutsourcing and offshoring have advantages, but to achieve good results some\ngood practices should be followed.\n\n** 5.6. Use Sociology to Build a Real-Life Organization**\n\nA four step methodology is proposed to move from a \"formal\" organizational\nstructure to the \"real-life\" organization.\n\n** 5.7. Key Takeaways **\n\n**__WEEK 6. __****__Transform or Disappear__**\n\nIn this final lecture, we will see that IT must continually transform itself\nto adapt to an ever-changing environment. We will take a look at how that\nshould be done: there are rules to make this happen.\n\n**6.0. Introduction of the Week**\n\nBrief introduction of the next 5 videos of this week.\n\n** 6.1. IT Departments Need to Change With the World**\n\nIT departments constantly need to transform themselves, even though it is a\nvery difficult task.\n\n**6.2. Create the Conditions for Change**\n\nThe target of the transformation should be quantified according to the type of\ntransformation. Moreover, the target should be ambitious yet realistic.\n\n**6.3. Choose the Right Levers of Change**\n\nThe ambition of the change impacts the types of levers required to achieve the\nobjectives.\n\n**6.4. Drive the Transformation**\n\nThe transformation plan has to be structured, communicated and its\nimplementation should be managed as a project.\n\n**6.5. Key Takeaways**\n\n",
        "name": "Transform or Disappear: The Darwinism of IT",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "\u00c9cole Centrale Paris"
        ],
        "url": "https://www.coursera.org/course/darwinismit",
        "video_url": ""
    },
    {
        "date": "2015-03-02",
        "desc": "The goals of this course are as follows:Recognize the importance of data collection, identify limitations in data collection methods, and determine how they affect the scope of inference.Use statistical software (R) to summarize data numerically and visually, and to perform data analysis.Have a conceptual understanding of the unified nature of statistical inference.Apply estimation and testing methods (confidence intervals and hypothesis tests) to analyze single variables and the relationship between two variables in order to understand natural phenomena and make data-based decisions.Model and investigate relationships between two or more variables within a regression framework.Interpret results correctly, effectively, and in context without relying on statistical jargon.Critique data-based claims and evaluate data-based decisions.Complete a research project that employs simple statistical inference and modeling techniques.SyllabusWeek 1: Unit 1 - Introduction to dataPart 1 \u2013 Designing studiesPart 2 \u2013 Exploratory data analysisPart 3 \u2013 Introduction to inference via simulationWeek 2: Unit 2 - Probability and distributionsPart 1 \u2013 Defining probabilityPart 2 \u2013 Conditional probabilityPart 3 \u2013 Normal distributionPart 4 \u2013 Binomial distributionWeek 3: Unit 3 - Foundations for inferencePart 1 \u2013 Variability in estimates and the Central Limit TheoremPart 2 \u2013 Confidence intervalsPart 3 \u2013 Hypothesis testsWeek 4: Finish up Unit 3 + MidtermPart 4 \u2013 Inference for other estimatorsPart 5 - Decision errors, significance, and confidenceWeek 5: Unit 4 - Inference for numerical variablesPart 1 \u2013 Comparing two meansPart 2 \u2013 BootstrappingPart 3 \u2013 Inference with the t-distributionPart 4 \u2013 Comparing three or more means (ANOVA)Week 6: Unit 5 - Inference for categorical variablesPart 1 \u2013 Single proportionPart 2 \u2013 Comparing two proportionsPart 3 \u2013 Inference for proportions via simulationPart 4 \u2013 Comparing three or more proportions (Chi-square)Week 7: Unit 6 - Introduction to linear regressionPart 1 \u2013 Relationship between two numerical variablesPart 2 \u2013 Linear regression with a single predictorPart 3&nbsp;\u2013&nbsp;Outliers in linear regressionPart 4 \u2013 Inference for linear regressionWeek 8: Unit 7 - Multiple linear regressionPart 1 \u2013 Regression with multiple predictorsPart 2&nbsp;\u2013&nbsp;Inference for multiple linear regressionPart 3 \u2013 Model selectionPart 4&nbsp;\u2013&nbsp;Model diagnosticsWeek 9: Review / catch-up weekBayesian vs. frequentist inferenceWeek 10: Final exam",
        "desc_html": "The goals of this course are as follows:  \n\n  1. Recognize the importance of data collection, identify limitations in data collection methods, and determine how they affect the scope of inference.\n  2. Use statistical software (R) to summarize data numerically and visually, and to perform data analysis.\n  3. Have a conceptual understanding of the unified nature of statistical inference.\n  4. Apply estimation and testing methods (confidence intervals and hypothesis tests) to analyze single variables and the relationship between two variables in order to understand natural phenomena and make data-based decisions.\n  5. Model and investigate relationships between two or more variables within a regression framework.\n  6. Interpret results correctly, effectively, and in context without relying on statistical jargon.\n  7. Critique data-based claims and evaluate data-based decisions.\n  8. Complete a research project that employs simple statistical inference and modeling techniques.\n\n## Syllabus\n\n**Week 1: Unit 1 - Introduction to data**\n\n  * Part 1 \u2013 Designing studies\n  * Part 2 \u2013 Exploratory data analysis\n  * Part 3 \u2013 Introduction to inference via simulation\n\n**Week 2: Unit 2 - Probability and distributions**\n\n  * Part 1 \u2013 Defining probability\n  * Part 2 \u2013 Conditional probability\n  * Part 3 \u2013 Normal distribution\n  * Part 4 \u2013 Binomial distribution\n\n**Week 3: Unit 3 - Foundations for inference**\n\n  * Part 1 \u2013 Variability in estimates and the Central Limit Theorem\n  * Part 2 \u2013 Confidence intervals\n  * Part 3 \u2013 Hypothesis tests\n\n**Week 4: Finish up Unit 3 + Midterm**\n\n  * Part 4 \u2013 Inference for other estimators\n  * Part 5 - Decision errors, significance, and confidence\n\n**Week 5: Unit 4 - Inference for numerical variables**\n\n  * Part 1 \u2013 Comparing two means  \n\n  * Part 2 \u2013 Bootstrapping\n  * Part 3 \u2013 Inference with the t-distribution\n  * Part 4 \u2013 Comparing three or more means (ANOVA)\n\n**Week 6: Unit 5 - Inference for categorical variables**\n\n  * Part 1 \u2013 Single proportion\n  * Part 2 \u2013 Comparing two proportions\n  * Part 3 \u2013 Inference for proportions via simulation\n  * Part 4 \u2013 Comparing three or more proportions (Chi-square)\n\n**Week 7: Unit 6 - Introduction to linear regression**\n\n  * Part 1 \u2013 Relationship between two numerical variables\n  * Part 2 \u2013 Linear regression with a single predictor\n  * Part 3 \u2013 Outliers in linear regression\n  * Part 4 \u2013 Inference for linear regression\n\n**Week 8: Unit 7 - Multiple linear regression**\n\n  * Part 1 \u2013 Regression with multiple predictors\n  * Part 2 \u2013 Inference for multiple linear regression\n  * Part 3 \u2013 Model selection\n  * Part 4 \u2013 Model diagnostics\n\n**Week 9: Review / catch-up week**\n\n  * Bayesian vs. frequentist inference\n\n**Week 10: Final exam**\n\n",
        "name": "Data Analysis and Statistical Inference",
        "provider": "Coursera",
        "rating": "5",
        "reviews": "12",
        "university": [
            "Duke University"
        ],
        "url": "https://www.coursera.org/course/statistics",
        "video_url": ""
    },
    {
        "date": "2015-03-02",
        "desc": "In this course you will get an introduction to the main tools and ideas in the data scientist's toolbox. The course gives an overview of the data, questions, and tools that data analysts and data scientists work with. There are two components to this course. The first is a conceptual introduction to the ideas behind turning data into actionable knowledge. The second is a practical introduction to the tools that will be used in the program like version control, markdown, git, GitHub, R, and RStudio.Please note:we are offering a Chinese version of this course starting December 1st, running in parallel with the English version. If you are interested, please select \"December 1 2014 - December 28 2014 (\u4e2d\u6587\u7248)\" in the session drop-down list.&nbsp;SyllabusUpon completion of this course you will be able to identify and classify data science problems. You will also have created your Github account, created your first repository, and pushed your first markdown file to your account.",
        "desc_html": "In this course you will get an introduction to the main tools and ideas in the\ndata scientist's toolbox. The course gives an overview of the data, questions,\nand tools that data analysts and data scientists work with. There are two\ncomponents to this course. The first is a conceptual introduction to the ideas\nbehind turning data into actionable knowledge. The second is a practical\nintroduction to the tools that will be used in the program like version\ncontrol, markdown, git, GitHub, R, and RStudio.\n\n**Please note:** we are offering a Chinese version of this course starting December 1st, running in parallel with the English version. If you are interested, please select \"December 1 2014 - December 28 2014 (\u4e2d\u6587\u7248)\" in the session drop-down list. \n\n## Syllabus\n\nUpon completion of this course you will be able to identify and classify data\nscience problems. You will also have created your Github account, created your\nfirst repository, and pushed your first markdown file to your account.\n\n",
        "name": "The Data Scientist\u2019s Toolbox",
        "provider": "Coursera",
        "rating": "2.304347826087",
        "reviews": "23",
        "university": [
            "Johns Hopkins University"
        ],
        "url": "https://www.coursera.org/course/datascitoolbox",
        "video_url": ""
    },
    {
        "date": "2015-03-02",
        "desc": "Statistical inference is the process of drawing conclusions about populations or scientific truths from data. There are many modes of performing inference including statistical modeling, data oriented strategies and explicit use of designs and randomization in analyses. Furthermore, there are broad theories (frequentists, Bayesian, likelihood, design based, \u2026) and numerous complexities (missing data, observed and unobserved confounding, biases) for performing inference. A practitioner can often be left in a debilitating maze of techniques, philosophies and nuance. This course presents the fundamentals of inference in a practical approach for getting things done. After taking this course, students will understand the broad directions of statistical inference and use this information for making informed choices in analyzing data.SyllabusIn this class students will learn the fundamentals of statistical inference. Students will receive a broad overview of the goals, assumptions and modes of performing statistical inference. Students will be able to perform inferential tasks in highly targeted settings and will be able to use \u00a0the skills developed as a roadmap for more complex inferential challenges.",
        "desc_html": "Statistical inference is the process of drawing conclusions about populations\nor scientific truths from data. There are many modes of performing inference\nincluding statistical modeling, data oriented strategies and explicit use of\ndesigns and randomization in analyses. Furthermore, there are broad theories\n(frequentists, Bayesian, likelihood, design based, \u2026) and numerous\ncomplexities (missing data, observed and unobserved confounding, biases) for\nperforming inference. A practitioner can often be left in a debilitating maze\nof techniques, philosophies and nuance. This course presents the fundamentals\nof inference in a practical approach for getting things done. After taking\nthis course, students will understand the broad directions of statistical\ninference and use this information for making informed choices in analyzing\ndata.\n\n## Syllabus\n\nIn this class students will learn the fundamentals of statistical inference.\nStudents will receive a broad overview of the goals, assumptions and modes of\nperforming statistical inference. Students will be able to perform inferential\ntasks in highly targeted settings and will be able to use \u00a0the skills\ndeveloped as a roadmap for more complex inferential challenges.\n\n",
        "name": "Statistical Inference",
        "provider": "Coursera",
        "rating": "1.5",
        "reviews": "2",
        "university": [
            "Johns Hopkins University"
        ],
        "url": "https://www.coursera.org/course/statinference",
        "video_url": ""
    },
    {
        "date": "2015-03-02",
        "desc": "In this course you will learn how to program in R and how to use R for effective data analysis.&nbsp;You will learn how to install and configure software necessary for a statistical programming environment and describe generic programming language concepts as they are implemented in a high-level statistical language. The course covers practical issues in statistical computing which includes programming in R, reading data into R, accessing R packages, writing R functions, debugging, profiling R code, and organizing and commenting R code. Topics in statistical data analysis will provide working examples.Please note:&nbsp;we are offering a Chinese version of this course starting December 1st, running in parallel with the English version. If you are interested, please select \"December 1 2014 - December 28 2014 (\u4e2d\u6587\u7248)\" in the session drop-down list.&nbsp;SyllabusThe course will cover the following material each week:Week 1: Overview of R, R data types and objects, reading and writing dataWeek 2: Control structures, functions, scoping rules, dates and timesWeek 3: Loop functions, debugging toolsWeek 4: Simulation, code profiling",
        "desc_html": "In this course you will learn how to program in R and how to use R for\neffective data analysis. You will learn how to install and configure software\nnecessary for a statistical programming environment and describe generic\nprogramming language concepts as they are implemented in a high-level\nstatistical language. The course covers practical issues in statistical\ncomputing which includes programming in R, reading data into R, accessing R\npackages, writing R functions, debugging, profiling R code, and organizing and\ncommenting R code. Topics in statistical data analysis will provide working\nexamples.  \n  \n**Please note:** we are offering a Chinese version of this course starting December 1st, running in parallel with the English version. If you are interested, please select \"December 1 2014 - December 28 2014 (\u4e2d\u6587\u7248)\" in the session drop-down list.   \n\n## Syllabus\n\nThe course will cover the following material each week:\n\n  * Week 1: Overview of R, R data types and objects, reading and writing data\n\n  * Week 2: Control structures, functions, scoping rules, dates and times\n\n  * Week 3: Loop functions, debugging tools\n\n  * Week 4: Simulation, code profiling\n\n",
        "name": "R Programming",
        "provider": "Coursera",
        "rating": "2.5384615384615",
        "reviews": "52",
        "university": [
            "Johns Hopkins University"
        ],
        "url": "https://www.coursera.org/course/rprog",
        "video_url": ""
    },
    {
        "date": "2015-03-02",
        "desc": "Linear models, as their name implies, relates an outcome to a set of predictors of interest using linear assumptions. \u00a0Regression models, a subset of linear models, are the most important statistical analysis tool in a data scientist\u2019s toolkit. This course covers regression analysis, least squares and inference using regression models. Special cases of the regression model, ANOVA and ANCOVA will be covered as well. Analysis of residuals and variability will be investigated. The course will cover modern thinking on model selection and novel uses of regression models including scatterplot smoothing.SyllabusIn this course students will learn how to fit regression models, how to interpret coefficients, how to investigate residuals and variability. \u00a0Students will further learn special cases of regression models including use of dummy variables and multivariable adjustment. Extensions to generalized linear models, especially considering Poisson and logistic regression will be reviewed.",
        "desc_html": "Linear models, as their name implies, relates an outcome to a set of\npredictors of interest using linear assumptions. \u00a0Regression models, a subset\nof linear models, are the most important statistical analysis tool in a data\nscientist\u2019s toolkit. This course covers regression analysis, least squares and\ninference using regression models. Special cases of the regression model,\nANOVA and ANCOVA will be covered as well. Analysis of residuals and\nvariability will be investigated. The course will cover modern thinking on\nmodel selection and novel uses of regression models including scatterplot\nsmoothing.\n\n## Syllabus\n\nIn this course students will learn how to fit regression models, how to\ninterpret coefficients, how to investigate residuals and variability.\nStudents will further learn special cases of regression models including use\nof dummy variables and multivariable adjustment. Extensions to generalized\nlinear models, especially considering Poisson and logistic regression will be\nreviewed.\n\n",
        "name": "Regression Models",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Johns Hopkins University"
        ],
        "url": "https://www.coursera.org/course/regmods",
        "video_url": ""
    },
    {
        "date": "2015-03-02",
        "desc": "A data product is the production output from a statistical analysis. Data products automate complex analysis tasks or use technology to expand the utility of a data informed model, algorithm or inference. This course covers the basics of creating data products using Shiny, R packages, and interactive graphics. The course will focus on the statistical fundamentals of creating a data product that can be used to tell a story about data to a mass audience.SyllabusStudents will learn how communicate using statistics and statistical products. Emphasis will be paid to communicating uncertainty in statistical results. Students will learn how to create simple Shiny web applications and R packages for their data products.",
        "desc_html": "A data product is the production output from a statistical analysis. Data\nproducts automate complex analysis tasks or use technology to expand the\nutility of a data informed model, algorithm or inference. This course covers\nthe basics of creating data products using Shiny, R packages, and interactive\ngraphics. The course will focus on the statistical fundamentals of creating a\ndata product that can be used to tell a story about data to a mass audience.\n\n## Syllabus\n\nStudents will learn how communicate using statistics and statistical products.\nEmphasis will be paid to communicating uncertainty in statistical results.\nStudents will learn how to create simple Shiny web applications and R packages\nfor their data products.\n\n",
        "name": "Developing Data Products",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Johns Hopkins University"
        ],
        "url": "https://www.coursera.org/course/devdataprod",
        "video_url": ""
    },
    {
        "date": "2015-02-24",
        "desc": "Seg\u00fan datos publicados por Gartner a nivel mundial, casi el 60% de los tel\u00e9fonos vendidos en 2013 fueron tel\u00e9fonos inteligentes. Alrededor del 80% de estos tel\u00e9fonos llevaban en su interior el sistema operativo Android. No cabe duda, por lo tanto, de que formarse en Android es una de las mejores inversiones que puede hacer un programador en la actualidad.Como cabr\u00eda esperar, escribir aplicaciones para dispositivos m\u00f3viles no es lo mismo que hacerlo para ordenadores de sobremesa. Las aplicaciones m\u00f3viles deben ser capaces de ejecutarse en un rango enorme de dispositivos, no solo tel\u00e9fonos, sino tambi\u00e9n relojes, pulseras, coches y televisores. Android da una respuesta satisfactoria a estos desaf\u00edos en c\u00f3digo abierto y recientemente ha a\u00f1adido plataformas como Android Wear, Android TV y Android Auto, que abren una nueva frontera de desarrollo.El objetivo de este curso es que los estudiantes aprendan los fundamentos de la programaci\u00f3n en Android mediante el desarrollo paso a paso de una aplicaci\u00f3n. Al finalizar el curso cada estudiante habr\u00e1 completado un peque\u00f1o juego casi sin darse cuenta, adquiriendo los conocimientos necesarios para utilizar los principales elementos de Android como son las actividades, los ficheros de dise\u00f1o, las intenciones, los fragmentos, los men\u00fas, los di\u00e1logos, las preferencias, etc.Esperamos que disfrutes del curso.",
        "desc_html": "Seg\u00fan datos publicados por Gartner a nivel mundial, casi el 60% de los\ntel\u00e9fonos vendidos en 2013 fueron tel\u00e9fonos inteligentes. Alrededor del 80% de\nestos tel\u00e9fonos llevaban en su interior el sistema operativo Android. No cabe\nduda, por lo tanto, de que formarse en Android es una de las mejores\ninversiones que puede hacer un programador en la actualidad.  \nComo cabr\u00eda esperar, escribir aplicaciones para dispositivos m\u00f3viles no es lo\nmismo que hacerlo para ordenadores de sobremesa. Las aplicaciones m\u00f3viles\ndeben ser capaces de ejecutarse en un rango enorme de dispositivos, no solo\ntel\u00e9fonos, sino tambi\u00e9n relojes, pulseras, coches y televisores. Android da\nuna respuesta satisfactoria a estos desaf\u00edos en c\u00f3digo abierto y recientemente\nha a\u00f1adido plataformas como Android Wear, Android TV y Android Auto, que abren\nuna nueva frontera de desarrollo.  \nEl objetivo de este curso es que los estudiantes aprendan los fundamentos de\nla programaci\u00f3n en Android mediante el desarrollo paso a paso de una\naplicaci\u00f3n. Al finalizar el curso cada estudiante habr\u00e1 completado un peque\u00f1o\njuego casi sin darse cuenta, adquiriendo los conocimientos necesarios para\nutilizar los principales elementos de Android como son las actividades, los\nficheros de dise\u00f1o, las intenciones, los fragmentos, los men\u00fas, los di\u00e1logos,\nlas preferencias, etc.  \n  \nEsperamos que disfrutes del curso.\n\n",
        "name": "Android301x: Jugando con Android - Aprende a programar tu primera App",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Universidad Aut\u00f3noma de Madrid"
        ],
        "url": "https://www.edx.org/course/jugando-con-android-aprende-programar-tu-uamx-android301x",
        "video_url": "https://www.youtube.com/embed/MFSMInZtvGQ?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-02-24",
        "desc": "To avoid disruption, businesses need to digitally transform immediately. Leaders need to accept the need for change and support changes to ensure the transformation is a success.&nbsp;In this course, you&rsquo;ll learn how to master the Digital Transformation including how cloud computing, devices, data and networks play important roles. You&rsquo;ll also hear real-life examples from businesses who have successfully completed their digital transformation.&nbsp;The growth of technology in everyday life cannot be ignored, with everything available at your fingertips. With growing customer demands, businesses must adapt new technologies, independent of the industry or size of the business.To avoid disruption, businesses need to digitally transform immediately. Leaders need to accept the need for change and support changes to ensure the transformation is a success. Digitally transforming a business can allow businesses to effectively transform existing business and capitalize on new opportunities.In this course, you&rsquo;ll learn how to master the Digital Transformation including how cloud computing, devices, data and networks play&nbsp;Target AudienceLine of Business leaders and ITStudents, young professionals and expertsProfessionals working with SAPCustomers, SAP customers&rsquo; suppliers, prospects or partnersSAP employeesThe publicSyllabusWeek 1: Digital Transformation and DisruptionWeek 2: Building Blocks and Role of LeadershipWeek 3: Industry Adaption and the Role of ITWeek 4: Examples of Digital TransformationFinal Week: Final Exam",
        "desc_html": "To avoid disruption, businesses need to digitally transform immediately.\nLeaders need to accept the need for change and support changes to ensure the\ntransformation is a success.  \nIn this course, you'll learn how to master the Digital Transformation\nincluding how cloud computing, devices, data and networks play important\nroles. You'll also hear real-life examples from businesses who have\nsuccessfully completed their digital transformation.\n\n\n\nThe growth of technology in everyday life cannot be ignored, with everything\navailable at your fingertips. With growing customer demands, businesses must\nadapt new technologies, independent of the industry or size of the business.\n\nTo avoid disruption, businesses need to digitally transform immediately.\nLeaders need to accept the need for change and support changes to ensure the\ntransformation is a success. Digitally transforming a business can allow\nbusinesses to effectively transform existing business and capitalize on new\nopportunities.\n\nIn this course, you'll learn how to master the Digital Transformation\nincluding how cloud computing, devices, data and networks play\n\n**Target Audience**\n\n  * Line of Business leaders and IT\n  * Students, young professionals and experts\n  * Professionals working with SAP\n  * Customers, SAP customers' suppliers, prospects or partners\n  * SAP employees\n  * The public\n\n## Syllabus\n\n  * Week 1: Digital Transformation and Disruption\n  * Week 2: Building Blocks and Role of Leadership\n  * Week 3: Industry Adaption and the Role of IT\n  * Week 4: Examples of Digital Transformation\n  * Final Week: Final Exam\n\n",
        "name": "Digital Transformation and Its Impact",
        "provider": "openSAP",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.sap.com/courses/dit1",
        "video_url": ""
    },
    {
        "date": "2015-02-23",
        "desc": "Computation and simulation are increasingly important in all aspects of\n    science and engineering. At the same time writing efficient computer programs\n    to take full advantage of current computers is becoming increasingly difficult.\n    Even laptops now have 4 or more processors, but using them all to solve\n    a single problem faster often requires rethinking the algorithm to introduce\n    parallelism, and then programming in a language that can express this parallelism.&nbsp;\n    Writing efficient programs also requires some knowledge of machine arithmetic,\n    computer architecture, and memory hierarchies.Although parallel computing will be covered, this isnota class\n    on the most advanced techniques for using supercomputers, which these days\n    have tens of thousands of processors and cost millions of dollars. Instead,\n    the goal is to teach tools that you can use immediately on your own laptop,\n    desktop, or a small cluster. Cloud computing will also be discussed, and\n    students who don't have a multiprocessor computer of their own will still\n    be able to do projects using Amazon Web Services at very low cost.Along the way there will also be discussion of software engineering tools\n    such as debuggers, unit testing, Makefiles, and the use of version control\n    systems. After all, your time is more valuable than computer time, and\n    a program that runs fast is totally useless if it produces the wrong results.High performanceprogrammingis also an important aspect of high\n    performance scientific computing, and so another main theme of the course\n    is the use of basic tools and techniques to improve your efficiency as\n    a computational scientist.SyllabusThe use of a variety of languages and techniques will be integrated throughout\n    the course as much as possible, rather than taught linearly. The topics\n    below will be covered at an introductory level, with the goal of learning\n    enough to feel comfortable starting to use them in your everyday work.\n    Once you've reached that level, abundant resources are available on the\n    web to learn the more advanced features that are most relevant for you.Working at the command line in Unix-like shells (e.g. Linux or a Mac OSX\n        terminal).Version control systems, particularly git, and the use of Github and Bitbucket\n        repositories.Work habits for documentation of your code and reproducibility of your\n        results.Interactive Python using IPython, and the IPython Notebook.Python scripting and its uses in scientific computing.Subtleties of computer arithmetic that can affect program correctness.How numbers are stored: binary vs. ASCII representations, efficient I/O.Fortran 90, a compiled language that is widely used in scientific computing.Makefiles for building software and checking dependencies.The high cost of data communication.&nbsp; Registers, cache, main memory,\n        and how this memory hierarchy affects code performance.&nbsp;OpenMP on top of Fortran for parallel programming of shared memory computers,\n        such as a multicore laptop.&nbsp;MPI on top of Fortran for distributed memory parallel programming,\n        such as on a cluster.Parallel computing in IPython.Debuggers, unit tests, regression tests, verification and validation of\n        computer codes.Graphics and visualization of computational results using Python.",
        "desc_html": "Computation and simulation are increasingly important in all aspects of\nscience and engineering. At the same time writing efficient computer programs\nto take full advantage of current computers is becoming increasingly\ndifficult. Even laptops now have 4 or more processors, but using them all to\nsolve a single problem faster often requires rethinking the algorithm to\nintroduce parallelism, and then programming in a language that can express\nthis parallelism.  Writing efficient programs also requires some knowledge of\nmachine arithmetic, computer architecture, and memory hierarchies.\n\nAlthough parallel computing will be covered, this is _not_ a class on the most\nadvanced techniques for using supercomputers, which these days have tens of\nthousands of processors and cost millions of dollars. Instead, the goal is to\nteach tools that you can use immediately on your own laptop, desktop, or a\nsmall cluster. Cloud computing will also be discussed, and students who don't\nhave a multiprocessor computer of their own will still be able to do projects\nusing Amazon Web Services at very low cost.\n\nAlong the way there will also be discussion of software engineering tools such\nas debuggers, unit testing, Makefiles, and the use of version control systems.\nAfter all, your time is more valuable than computer time, and a program that\nruns fast is totally useless if it produces the wrong results.\n\nHigh performance _programming_ is also an important aspect of high performance\nscientific computing, and so another main theme of the course is the use of\nbasic tools and techniques to improve your efficiency as a computational\nscientist.\n\n## Syllabus\n\nThe use of a variety of languages and techniques will be integrated throughout\nthe course as much as possible, rather than taught linearly. The topics below\nwill be covered at an introductory level, with the goal of learning enough to\nfeel comfortable starting to use them in your everyday work. Once you've\nreached that level, abundant resources are available on the web to learn the\nmore advanced features that are most relevant for you.\n\n  * Working at the command line in Unix-like shells (e.g. Linux or a Mac OSX terminal).\n  * Version control systems, particularly git, and the use of Github and Bitbucket repositories.\n  * Work habits for documentation of your code and reproducibility of your results.\n  * Interactive Python using IPython, and the IPython Notebook.\n  * Python scripting and its uses in scientific computing.\n  * Subtleties of computer arithmetic that can affect program correctness.\n  * How numbers are stored: binary vs. ASCII representations, efficient I/O.\n  * Fortran 90, a compiled language that is widely used in scientific computing.\n  * Makefiles for building software and checking dependencies.\n  * The high cost of data communication.  Registers, cache, main memory, and how this memory hierarchy affects code performance. \n  * OpenMP on top of Fortran for parallel programming of shared memory computers, such as a multicore laptop.\n  *  MPI on top of Fortran for distributed memory parallel programming, such as on a cluster.\n  * Parallel computing in IPython.\n  * Debuggers, unit tests, regression tests, verification and validation of computer codes.\n  * Graphics and visualization of computational results using Python.\n\n",
        "name": "High Performance Scientific Computing",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of Washington"
        ],
        "url": "https://www.coursera.org/course/scicomp",
        "video_url": ""
    },
    {
        "date": "2015-02-23",
        "desc": "Pr\u00e9sentation et mise en pratique en C++ des concepts de base de la programmation orient\u00e9e objet&nbsp;: objets, classes, m\u00e9thodes, encapsulation, polymorphisme, ...Bien que nous vous garantissons les bases pour programmer de fa\u00e7on autonome dans le langage C++, ce cours&nbsp; se concentre avant tout sur les concepts de programmation, plut\u00f4t que sur les d\u00e9tails du langage lui-m\u00eame.&nbsp;&nbsp;Ainsi, apr\u00e8s avoir suivi ce cours, vous devriez \u00e9galement pouvoirfacilement aborder par vous-m\u00eames de nouveaux langages deprogrammation.SyllabusIntroduction au concept de \u00abProgrammation Orient\u00e9e Objet\u00bbPrincipes d'encapsulation et d'abstractionH\u00e9ritagePolymorphisme",
        "desc_html": "Pr\u00e9sentation et mise en pratique en C++ des concepts de base de la\nprogrammation orient\u00e9e objet : objets, classes, m\u00e9thodes, encapsulation,\npolymorphisme, ...  \n  \nBien que nous vous garantissons les bases pour programmer de fa\u00e7on autonome\ndans le langage C++, ce cours  se concentre avant tout sur les concepts de\nprogrammation, plut\u00f4t que sur les d\u00e9tails du langage lui-m\u00eame.  \nAinsi, apr\u00e8s avoir suivi ce cours, vous devriez \u00e9galement pouvoir  \nfacilement aborder par vous-m\u00eames de nouveaux langages de  \nprogrammation.  \n\n## Syllabus\n\n* Introduction au concept de \u00abProgrammation Orient\u00e9e Objet\u00bb\n* Principes d'encapsulation et d'abstraction  \n\n* H\u00e9ritage\n* Polymorphisme\n\n",
        "name": "Introduction \u00e0 la programmation orient\u00e9e objet (en C++)",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne"
        ],
        "url": "https://www.coursera.org/course/intropoocpp",
        "video_url": ""
    },
    {
        "date": "2015-02-23",
        "desc": "Software is everywhere: in laptops and desktops, mobile phones, the power grid ... even our cars and thermostats. Software is increasingly the vehicle that drives our economy and our personal lives. But software\u2019s pervasiveness, and its importance, make it a target: at the root of many security compromises is vulnerable software.In this course we will look at how to build software that is secure.To start, we must know what we are up against. As such, we will examine the most prevalent software design and implementation defects.&nbsp;We will examine vulnerabilities like buffer overruns and use-after-frees that are present in programs written in low-level programming languages like C and C++, and see how these vulnerabilities can be exploited by a clever attacker. We will also look attacks on applications that are part of the worldwide web -- attacks with names like SQL injection, cross-site scripting, and session hijacking. We will also mention side-channel attacks (such as those based on the size of messages or the time taken to process a request), attacks on the human user (like phishing), and failures of design (like the use of insecure defaults). Examples of these attacks will be taken from the headlines.Having examined these defects and their role in security compromises, we will look at how to prevent them entirely, or mitigate their effects, by improving the software's design and implementation. We will see that security must appear at all phases in the development lifecycle, including requirements development, system design, implementation, and testing/validation.Finally, we will look at state-of-the-art tools and techniques for testing and otherwise verifying that software is secure. We will consider how security testing differs from functional testing (it's harder!). We will look at the art of penetration testing, which is the activity of trying to find and exploit weaknesses in a system prior to its deployment. We will also look at an emerging class of program analysis tools that can automatically identify flaws in programs by analyzing their code.At the conclusion of the course, the student will know how to \"build security in\" rather than consider it as an afterthought, and will have a plethora of skills, applicable at each phase of the development cycle, that can be used to strengthen the security of software systems.SyllabusIn addition to a brief introductory sequence, the course is broken into six units, one per week:Low-level, memory-based attacks, including stack smashing, format string attacks, stale memory access attacks, and return-oriented Programming (ROP)Defenses against memory-based attacks, including stack canaries, non-executable data (aka W+X or DEP), address space layout randomization (ASLR), memory-safety enforcement (e.g., SoftBound), control-flow Integrity (CFI)Web security, covering attacks like SQL injection, Cross-site scripting (XSS), Cross-site request forgery (CSRF), and Session hijacking, and defenses that have in common the idea of input validationSecure design, covering ideas like threat modeling and security design principles, including organizing ideas like favor simplicity, trust with reluctance, and defend in depth; we present&nbsp;real-world examples of good and bad designsAutomated code review with static analysis and symbolic execution, presenting foundations and tradeoffs and using static taint analysis and whitebox fuzz testing as detailed examplesPenetration testing, presenting an overview of goals, techniques, and tools of the trade",
        "desc_html": "Software is everywhere: in laptops and desktops, mobile phones, the power grid\n... even our cars and thermostats. Software is increasingly the vehicle that\ndrives our economy and our personal lives. But software\u2019s pervasiveness, and\nits importance, make it a target: at the root of many security compromises is\nvulnerable software.  \n\nIn this course we will look at how to build software that is secure.\n\nTo start, we must know what we are up against. As such, we will examine the\nmost prevalent software design and implementation defects.\n\nWe will examine vulnerabilities like buffer overruns and use-after-frees that\nare present in programs written in low-level programming languages like C and\nC++, and see how these vulnerabilities can be exploited by a clever attacker.\nWe will also look attacks on applications that are part of the worldwide web\n-- attacks with names like SQL injection, cross-site scripting, and session\nhijacking. We will also mention side-channel attacks (such as those based on\nthe size of messages or the time taken to process a request), attacks on the\nhuman user (like phishing), and failures of design (like the use of insecure\ndefaults). Examples of these attacks will be taken from the headlines.\n\nHaving examined these defects and their role in security compromises, we will\nlook at how to prevent them entirely, or mitigate their effects, by improving\nthe software's design and implementation. We will see that security must\nappear at all phases in the development lifecycle, including requirements\ndevelopment, system design, implementation, and testing/validation.\n\nFinally, we will look at state-of-the-art tools and techniques for testing and\notherwise verifying that software is secure. We will consider how security\ntesting differs from functional testing (it's harder!). We will look at the\nart of penetration testing, which is the activity of trying to find and\nexploit weaknesses in a system prior to its deployment. We will also look at\nan emerging class of program analysis tools that can automatically identify\nflaws in programs by analyzing their code.  \n\nAt the conclusion of the course, the student will know how to \"build security\nin\" rather than consider it as an afterthought, and will have a plethora of\nskills, applicable at each phase of the development cycle, that can be used to\nstrengthen the security of software systems.\n\n## Syllabus\n\nIn addition to a brief introductory sequence, the course is broken into six\nunits, one per week:\n\n  * **Low-level, memory-based attacks**, including stack smashing, format string attacks, stale memory access attacks, and return-oriented Programming (ROP)\n  * **Defenses against memory-based attacks**, including stack canaries, non-executable data (aka W+X or DEP), address space layout randomization (ASLR), memory-safety enforcement (e.g., SoftBound), control-flow Integrity (CFI)\n  * **Web security**, covering attacks like SQL injection, Cross-site scripting (XSS), Cross-site request forgery (CSRF), and Session hijacking, and defenses that have in common the idea of input validation\n  * **Secure design**, covering ideas like threat modeling and security design principles, including organizing ideas like favor simplicity, trust with reluctance, and defend in depth; we present real-world examples of good and bad designs  \n\n  * **Automated code review with static analysis and symbolic execution**, presenting foundations and tradeoffs and using static taint analysis and whitebox fuzz testing as detailed examples  \n\n  * **Penetration testing**, presenting an overview of goals, techniques, and tools of the trade\n\n",
        "name": "Software Security",
        "provider": "Coursera",
        "rating": "4.25",
        "reviews": "4",
        "university": [
            "University of Maryland, College Park"
        ],
        "url": "https://www.coursera.org/course/softwaresec",
        "video_url": ""
    },
    {
        "date": "2015-02-23",
        "desc": "The Beginning Game\nProgramming with C# course is all about learning how to develop video games\nusing the C# programming language. Why use C# instead of C++, Java,\nActionScript, or some other programming language you may have heard of? First,\nusing C# lets us use the Microsoft XNA and open-source MonoGame frameworks,\nwhich help us quickly develop games for Windows, Android, iOS, Mac OS, and\nothers. Second, the Unity game engine is very popular with indie game\ndevelopers, and C# is one of the programming languages you can use in the Unity\nenvironment. And finally, C# is a really good language for learning how to\nprogram.That learning how to program\ncomment is important because this course doesn't assume you have any previous programming\nexperience. Don't worry if you've never written code before; we'll start at the\nvery beginning and work our way up to building a small, complete game by the\nend of the course. Throughout the course you'll learn core programming concepts\nthat apply to lots of programming languages, including C#, and you'll also\nlearn how to apply those concepts when you develop games: drawing all the\nentities in the game world, updating the game world based on user input and\nsimple physics, playing music and sound effects in your games, and so on.Computer programming is really fun in general,\nand programming games is even better!SyllabusWeek One: Introduction to the course, the Visual Studio environment, and the Microsoft XNA framework. Writing your first C# program and starting to learn about data types.Student Work: Programming Assignment 1Week Two: Classes and objects, the core of object-oriented programming (which works great for games!). Writing your first XNA programs.Student Work: Programming Assignment 2, Programming Assignment 1 Peer EvaluationWeek Three: Strings and what we can do with them. Selection, how to implement it, and why it's so useful in game development.Student Work: Programming Assignment 3, Programming Assignment 2 Peer EvaluationWeek Four: No new topicsStudent Work: Project Increment 1, Programming Assignment 3 Peer EvaluationWeek Five: Mouse and 360 controller input in XNA. Arrays and collection classes to store multiple pieces of information.Student Work: Programming Assignment 4, Project Increment 1 Peer EvaluationWeek Six: No new topicsStudent Work: Project Increment 2, Programming Assignment 4 Peer EvaluationWeek Seven: Iteration - the various ways we can do multiple things in our code.Student Work: Programming Assignment 5, Project Increment 2 Peer EvaluationWeek Eight: No new topicsStudent Work: Project Increment 3, Programming Assignment 5 Peer EvaluationWeek Nine: Class design and implementation in more detail. How are all those useful classes we've been using actually coded?Student Work: Programming Assignment 6, Project Increment 3 Peer EvaluationWeek Ten: No new topicsStudent Work: Project Increment 4, Programming Assignment 6 Peer EvaluationWeek Eleven: Adding music and sound effects to your games. Keyboard input and text output in XNA.Student Work: Project Increment 5, Project Increment 4 Peer EvaluationWeek Twelve: The optional project as a great way to review for the Final Exam.Student Work: Final Exam, Project Increment 5 Peer Evaluation",
        "desc_html": "The Beginning Game Programming with C# course is all about learning how to\ndevelop video games using the C# programming language. Why use C# instead of\nC++, Java, ActionScript, or some other programming language you may have heard\nof? First, using C# lets us use the Microsoft XNA and open-source MonoGame\nframeworks, which help us quickly develop games for Windows, Android, iOS, Mac\nOS, and others. Second, the Unity game engine is very popular with indie game\ndevelopers, and C# is one of the programming languages you can use in the\nUnity environment. And finally, C# is a really good language for learning how\nto program.\n\nThat learning how to program comment is important because this course doesn't\nassume you have any previous programming experience. Don't worry if you've\nnever written code before; we'll start at the very beginning and work our way\nup to building a small, complete game by the end of the course. Throughout the\ncourse you'll learn core programming concepts that apply to lots of\nprogramming languages, including C#, and you'll also learn how to apply those\nconcepts when you develop games: drawing all the entities in the game world,\nupdating the game world based on user input and simple physics, playing music\nand sound effects in your games, and so on.\n\nComputer programming is really fun in general, and programming games is even\nbetter!  \n\n## Syllabus\n\n  \n  \nWeek One: Introduction to the course, the Visual Studio environment, and the\nMicrosoft XNA framework. Writing your first C# program and starting to learn\nabout data types.  \nStudent Work: Programming Assignment 1  \n  \nWeek Two: Classes and objects, the core of object-oriented programming (which\nworks great for games!). Writing your first XNA programs.  \nStudent Work: Programming Assignment 2, Programming Assignment 1 Peer\nEvaluation  \n  \nWeek Three: Strings and what we can do with them. Selection, how to implement\nit, and why it's so useful in game development.  \nStudent Work: Programming Assignment 3, Programming Assignment 2 Peer\nEvaluation  \n  \nWeek Four: No new topics  \nStudent Work: Project Increment 1, Programming Assignment 3 Peer Evaluation  \n  \nWeek Five: Mouse and 360 controller input in XNA. Arrays and collection\nclasses to store multiple pieces of information.  \nStudent Work: Programming Assignment 4, Project Increment 1 Peer Evaluation  \n  \nWeek Six: No new topics  \nStudent Work: Project Increment 2, Programming Assignment 4 Peer Evaluation  \n  \nWeek Seven: Iteration - the various ways we can do multiple things in our\ncode.  \nStudent Work: Programming Assignment 5, Project Increment 2 Peer Evaluation  \n  \nWeek Eight: No new topics  \nStudent Work: Project Increment 3, Programming Assignment 5 Peer Evaluation  \n  \nWeek Nine: Class design and implementation in more detail. How are all those\nuseful classes we've been using actually coded?  \nStudent Work: Programming Assignment 6, Project Increment 3 Peer Evaluation  \n  \nWeek Ten: No new topics  \nStudent Work: Project Increment 4, Programming Assignment 6 Peer Evaluation  \n  \nWeek Eleven: Adding music and sound effects to your games. Keyboard input and\ntext output in XNA.  \nStudent Work: Project Increment 5, Project Increment 4 Peer Evaluation  \n  \nWeek Twelve: The optional project as a great way to review for the Final Exam.  \nStudent Work: Final Exam, Project Increment 5 Peer Evaluation  \n  \n\n",
        "name": "Beginning Game Programming with C#",
        "provider": "Coursera",
        "rating": "3.5",
        "reviews": "6",
        "university": [
            "University of Colorado System"
        ],
        "url": "https://www.coursera.org/course/gameprogramming",
        "video_url": ""
    },
    {
        "date": "2015-02-23",
        "desc": "This course presents a wide ranging discussion of informatics and analytics in sport contexts. There are some introductory ideas for those new to this field of study and practice. One of the features of the course will be the contributions experts in the field will make. The course has some exciting global connections to energise and develop.Considerable emphasis will be placed on connecting with each other during the course. One of the key features of this course will be the encouragement of self-organising networks of discussion and sharing.The course is planned as a non-linear course. Participants are invited to pursue their interests in whatever content and conversation they choose within the four themes in the course: introduction to informatics and analytics; pattern recognition; performance monitoring; and sharing data. Each of these themes will provide an opportunity for structured attention during the course.This is an important time for those interested in the observation and analysis of sport performance. This course aims to contribute to the vibrant discussion of theory and practice in informatics and analytics in sport and through its invitational approach aspires to create an open access resource that contributes to ongoing discussion.Course objectives include:explore the relationships between informatics and analytics in sport contextsencourage open sharing of experiences of and practices in informatics and analytics in sportinvestigate pattern recognition in data with a supervised learning taskshare technological innovation in the monitoring of performanceconsider how analytics data are shared with different audiences with specific consideration of visualisation techniques",
        "desc_html": "This course presents a wide ranging discussion of informatics and analytics in\nsport contexts. There are some introductory ideas for those new to this field\nof study and practice. One of the features of the course will be the\ncontributions experts in the field will make. The course has some exciting\nglobal connections to energise and develop.\n\nConsiderable emphasis will be placed on connecting with each other during the\ncourse. One of the key features of this course will be the encouragement of\nself-organising networks of discussion and sharing.\n\nThe course is planned as a non-linear course. Participants are invited to\npursue their interests in whatever content and conversation they choose within\nthe four themes in the course: introduction to informatics and analytics;\npattern recognition; performance monitoring; and sharing data. Each of these\nthemes will provide an opportunity for structured attention during the course.\n\nThis is an important time for those interested in the observation and analysis\nof sport performance. This course aims to contribute to the vibrant discussion\nof theory and practice in informatics and analytics in sport and through its\ninvitational approach aspires to create an open access resource that\ncontributes to ongoing discussion.\n\nCourse objectives include:\n\n  * explore the relationships between informatics and analytics in sport contexts\n  * encourage open sharing of experiences of and practices in informatics and analytics in sport\n  * investigate pattern recognition in data with a supervised learning task\n  * share technological innovation in the monitoring of performance\n  * consider how analytics data are shared with different audiences with specific consideration of visualisation techniques\n\n",
        "name": "Sport Informatics and Analytics",
        "provider": "Canvas.net",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of Canberra"
        ],
        "url": "https://www.canvas.net/browse/ucanberra/courses/sport-informatics-and-analytics",
        "video_url": ""
    },
    {
        "date": "2015-02-23",
        "desc": "Organizations use their data for decision support and to build data-intensive products and services, such as recommendation, prediction, and diagnostic systems. The collection of skills required by organizations to support these functions has been grouped under the term Data Science. This course will attempt to articulate the expected output of Data Scientists and then teach students how to use PySpark (part of Apache Spark)&nbsp; to deliver against these expectations. The course assignments include Log Mining, Textual Entity Recognition, Collaborative Filtering exercises that teach students how to manipulate data sets using parallel processing with PySpark.&nbsp;This course covers advanced undergraduate-level material. It requires a programming background and experience with Python (or the ability to learn it quickly). All exercises will use PySpark (part of Apache Spark), but previous experience with Spark or distributed computing is NOT required. Students should take this Python mini-quiz before the course and take this Python mini-course if they need to learn Python or refresh their Python knowledge.&nbsp;&nbsp;The production of this course would not have been possible without the generous contribution of databricks",
        "desc_html": "Organizations use their data for decision support and to build data-intensive\nproducts and services, such as recommendation, prediction, and diagnostic\nsystems. The collection of skills required by organizations to support these\nfunctions has been grouped under the term Data Science. This course will\nattempt to articulate the expected output of Data Scientists and then teach\nstudents how to use PySpark (part of Apache Spark)  to deliver against these\nexpectations. The course assignments include Log Mining, Textual Entity\nRecognition, Collaborative Filtering exercises that teach students how to\nmanipulate data sets using parallel processing with PySpark.  \n  \nThis course covers advanced undergraduate-level material. It requires a\nprogramming background and experience with Python (or the ability to learn it\nquickly). All exercises will use PySpark (part of Apache Spark), but previous\nexperience with Spark or distributed computing is NOT required. Students\nshould take this Python mini-quiz before the course and take this Python mini-\ncourse if they need to learn Python or refresh their Python knowledge.  \n  \n  \nThe production of this course would not have been possible without the\ngenerous contribution of databricks\n\n",
        "name": "CS100.1x: Introduction to Big Data with Apache Spark",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Harvard University"
        ],
        "url": "https://www.edx.org/course/introduction-big-data-apache-spark-uc-berkeleyx-cs100-1x",
        "video_url": ""
    },
    {
        "date": "2015-02-23",
        "desc": "This course provides a rich introduction to the booming technology field of Geographic Information Systems, known as GIS. The GIS industry is exploding at double-digit employment and income numbers and promises employment opportunities well into the future. Students will learn the fundamentals of GIS and how to build digital maps using open source software that allows free unlimited use for private or commercial applications. All data and software required is included in the course.Topics covered in this course include GIS, cartography, remote sensing, and spatial analysis through a series of lectures and hands-on computer-based exercises. This course is designed to be used as a stand-alone course to complement other disciplines or as an entry level course into a geospatial program. Course content is based upon the United States Department of Labor&rsquo;s Geospatial Technology Competency Model for entry level geospatial occupations, including Geospatial or GIS Technicians and Technologists.Learning Outcomes/CompetenciesDescribe the fundamental concepts of Geographic Information Science and Technology.Demonstrate proficiency in the basic functions of geospatial software.Demonstrate awareness of fundamental remote sensing and spatial analysis techniques.Demonstrate basic proficiency in map creation and design principles, including thematic map display, employment of map projections, and cartographic design.Demonstrate proficiency in the creation and acquisition of spatial data.CreditStudents have the option to receive continuing education credit from a regionally accredited college.",
        "desc_html": "This course provides a rich introduction to the booming technology field of\nGeographic Information Systems, known as GIS. The GIS industry is exploding at\ndouble-digit employment and income numbers and promises employment\nopportunities well into the future. Students will learn the fundamentals of\nGIS and how to build digital maps using open source software that allows free\nunlimited use for private or commercial applications. All data and software\nrequired is included in the course.\n\nTopics covered in this course include GIS, cartography, remote sensing, and\nspatial analysis through a series of lectures and hands-on computer-based\nexercises. This course is designed to be used as a stand-alone course to\ncomplement other disciplines or as an entry level course into a geospatial\nprogram. Course content is based upon the United States Department of Labor's\nGeospatial Technology Competency Model for entry level geospatial occupations,\nincluding Geospatial or GIS Technicians and Technologists.\n\n**Learning Outcomes/Competencies**\n\n  * Describe the fundamental concepts of Geographic Information Science and Technology.\n  * Demonstrate proficiency in the basic functions of geospatial software.\n  * Demonstrate awareness of fundamental remote sensing and spatial analysis techniques.\n  * Demonstrate basic proficiency in map creation and design principles, including thematic map display, employment of map projections, and cartographic design.\n  * Demonstrate proficiency in the creation and acquisition of spatial data.\n\n**Credit**\n\nStudents have the option to receive continuing education credit from a\nregionally accredited college.\n\n",
        "name": "Introduction to Geospatial Technology Using QGIS",
        "provider": "Canvas.net",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Del Mar College"
        ],
        "url": "https://www.canvas.net/browse/delmarcollege/courses/cn-1681-intro-qgis",
        "video_url": ""
    },
    {
        "date": "2015-02-16",
        "desc": "This course is the second in a two-part series that begins withBioinformatics Algorithms (Part 1). &nbsp;It will build upon the biological and computational material covered in the first course to cover additional topics in modern computational biology.The format for this course will be the same as that of Part 1. Each chapter of course material will cover a single biological question and slowly build the algorithmic knowledge required to address this challenge. &nbsp;Along the way, coding challenges and exercises (many of which ask you to apply your skills to real&nbsp;genetic data) will be directly integrated into the text at the exact moment they are needed.SyllabusThe course will be based on six \"chapters\" covering the following central questions, with the algorithmic ideas that we will use to solve them in parentheses:Which Animal Gave Us SARS? (Evolutionary Trees)How Do We Locate Disease-Causing Mutations? (Combinatorial Pattern Matching)How Did Yeast Become Such a Good Wine Brewer? (Clustering Algorithms)Why Do We Still Not Have an HIV Vaccine?&nbsp;(Hldden Markov Models)Was T. rex Just a Big Chicken? (Computational Proteomics)What Genetic Characteristics Do Human Populations Share? (Principal Components Analysis)The grading for the course will be based on several weekly programming challenges, as well as a comprehension quiz at the end of each chapter.",
        "desc_html": "This course is the second in a two-part series that begins with\n[Bioinformatics Algorithms (Part\n1)](http://coursera.org/course/bioinformatics).  It will build upon the\nbiological and computational material covered in the first course to cover\nadditional topics in modern computational biology.\n\nThe format for this course will be the same as that of Part 1. Each chapter of\ncourse material will cover a single biological question and slowly build the\nalgorithmic knowledge required to address this challenge.  Along the way,\ncoding challenges and exercises (many of which ask you to apply your skills to\nreal genetic data) will be directly integrated into the text at the exact\nmoment they are needed.\n\n## Syllabus\n\nThe course will be based on six \"chapters\" covering the following central\nquestions, with the algorithmic ideas that we will use to solve them in\nparentheses:  \n\n  * Which Animal Gave Us SARS? (_Evolutionary Trees)_  \n\n  * How Do We Locate Disease-Causing Mutations? (_Combinatorial Pattern Matching_)\n  * How Did Yeast Become Such a Good Wine Brewer? (___Clustering Algorithms_)\n  * Why Do We Still Not Have an HIV Vaccine? (_Hldden Markov Models)_\n  * Was T. rex Just a Big Chicken? (_Computational Proteomics_)\n  * What Genetic Characteristics Do Human Populations Share? (_Principal Components Analysis_)\nThe grading for the course will be based on several weekly programming\nchallenges, as well as a comprehension quiz at the end of each chapter.  \n\n",
        "name": "Bioinformatics Algorithms (Part 2)",
        "provider": "Coursera",
        "rating": "5",
        "reviews": "1",
        "university": [
            "University of California, San Diego"
        ],
        "url": "https://www.coursera.org/course/bioinformatics2",
        "video_url": ""
    },
    {
        "date": "2015-02-16",
        "desc": "This course has been developed in two parts (Part 1&nbsp;and&nbsp;Part 2), which will cover the fundamental programming principles, software architecture and user experience considerations underlying handheld software applications and their development environments, enabling course completers to build their own Android applications and experienced engineers to master a powerful set of development skills.Most students will need to have taken Part 1 before attempting Part 2. While Part 1 focuses on the basic Android Platform and components, Part 2 will focus on more advanced components and concepts provided by the Android platform:notifying users about important eventshandling concurrencyacquiring data over the network&nbsp;leveraging multimedia and graphicsincorporating touch and gestures into your appsworking with sensorsTo bring these concepts alive, the course will involve in-\u00addepth, hands-\u00adon examples of applications implemented with the Android Platform. Students will apply what they learn, also using the Android Platform, in laboratory projects and in a large course project.Mobile Cloud Computing with Android (MoCCA) Specialization: New and ImprovedWe are proud to announce that the MoCCA specialization has already reached hundreds of thousands of learners around the globe.&nbsp;In its last iteration, we worked with Google to provide Nexus tablets, feedback from the Google App team, and the potential to be featured in the Google Play store to top course completers.This time around, we are providing more flexibility for all of you busy learners. We are running the Programming Mobile Applications courses in more digestible one-month-long sections, each with a meaningful mini-project at the end. Additionally, we will be re-offering the courses more frequently. Now, you can find a convenient time to join us or pick up where you left off if you didn\u2019t quite finish before.Note:&nbsp;To participate in the final project, you must earn Verified Certificates for all courses in the sequence.&nbsp;Learners who purchase Full Access to the entire series will also receive&nbsp;two years of unlimited retries while these courses are offered.For previous MoCCA students:&nbsp;If you have&nbsp;already&nbsp;completed my previous version of this course, \"Programming Mobile Applications for Android Handheld Systems\u201d offered in January and September 2014, you do&nbsp;not&nbsp;need to retake this course to continue towards the Specialization certificate and final project in 2015.&nbsp;Please consult the&nbsp;Specializations Help Center&nbsp;or contact the&nbsp;Coursera support team&nbsp;if you are not sure whether you qualify.What is the MoCCA Specialization?This course has been designed as part of a Coursera Specialization designed to help learners create complex, cloud-based Android Applications, called the&nbsp;Mobile Cloud Computing with Android (MoCCA) Specialization.&nbsp;The other four courses are led respectively by Drs. Douglas Schmidt and Jules White of Vanderbilt University, and some of the programming assignments and the course project for these courses will be coordinated.Course 3:&nbsp;Programming Mobile Services for Android Handheld Systems: ConcurrencyCourse 4:&nbsp;Programming Mobile Services for Android Handheld Systems: CommunicationDr. Douglas Schmidt, Associate Chair of Computer Science and Engineering and Professor of Computer Science, Vanderbilt UniversityThe third and fourth courses in the sequence focus on systems programming topics, such as middleware services and background processing.&nbsp;Course 5:&nbsp;Programming Cloud Services for Android Handheld Systems: SpringCourse 6:&nbsp;Programming Cloud Services for Android Handheld Systems: SecurityDr. C. Jules White, Assistant Professor of Computer Science, Vanderbilt UniversityThe fifth and sixth courses in the sequence will focus on connecting Android mobile devices to cloud computing and data storage resources, essentially turning a device into an extension of powerful cloud-based services on popular cloud computing platforms, such as Google App Engine and Amazon EC2.Although each of these courses stands alone, those who do choose to complete the entire MoCCA sequence will gain a much more detailed, end-to-end understanding of handheld systems and their applications.SyllabusWeek #5:Objective:In this lesson, I dive deeper in Android, focusing on advanced some of the advanced capabilities it provides. I discuss using User Notifications to interact with the user, listening for and responding to events using the BroadcastReceiver class. There is also a lecture dealing with using Alarms to run code at pre-scheduled times.By the end of this lesson, you shouldunderstand how the key technologies discussed this week are used to support more advanced Android applications.Lecture #10 \u2013 User NotificationsLecture #11 \u2013 The BroadcastReceiver ClassLecture #12 - AlarmsLab #5 \u2013 Tweet app: Students build an app that displays Twitter data. The app will use BroadcastReceivers and User Notifications to apprise the user of the app\u2019s behavior and state.Week #6:Objective:In this lesson, I discuss how to handle concurrency with Threads, AsyncTask &amp; Handlers. There is also a lecture explaining how to access and process data over the network.By the end of this lesson, you shouldunderstand how the key technologies discussed this week are used to support more advanced Android applications.Lecture #13 \u2013 Threads, AsyncTask &amp; HandlersLecture #14 - NetworkingLab #6 \u2013 Display Tweet Data: Students build an app that downloads and displays Tweet data. The app uses an AsyncTask for downloading data over the network.Week #7:Objective:In this lesson, I present a number of technologies related to presenting and interacting with dynamic content. This includes graphics and animation, handling touch input from the user, and recording and playing multimedia.By the end of this lesson, you should be able to:animate your applicationscreate apps that respond to both standard and custom gesturesdisplay and use multimedia contentLecture #15 \u2013 Graphics &amp; Animation ILecture #16 \u2013 Graphics &amp; Animation IILecture #17 \u2013 Multi-touch &amp; GesturesLecture #18 \u2013 MultiMediaLab #7 - Bubble Popper: Students write an application to display and animate bubbles (graphics that look like bubbles) on the device's screen. When users touch the screen where a bubble is displayed, the bubble pops. The app will also accept gesture input, allowing the user to change the direction and speed of the bubble, using a fling gesture.Week #8:Objective:In this lesson, I go over the many sensors that now come standard on most mobile devices. I also provide a focused discussion of using sensors to capture location information and using maps to display that information. Finally, I discuss some options for storing structured data.By the end of this lesson, you should be able to:create context aware applications whose behavior changes based on environmental conditions.design complex applications that leverage complex structured data sets.Lecture #19 \u2013 SensorsLecture #20 \u2013 Location &amp; MapsLecture #21 \u2013 DataManagementLab #8 - Place Badge Collector: Students build an application that uses location information to collect Badges for the places they visit.Mini-project - DailySelfie:Students will build a complete app from scratch. This app will remind users to take a picture of themselves once a day. The app will collect and display the resulting set of photos.",
        "desc_html": "This course has been developed in two parts ([Part\n1](https://www.coursera.org/course/androidpart1) and [Part\n2](https://www.coursera.org/course/androidpart2)), which will cover the\nfundamental programming principles, software architecture and user experience\nconsiderations underlying handheld software applications and their development\nenvironments, enabling course completers to build their own Android\napplications and experienced engineers to master a powerful set of development\nskills.  \n\nMost students will need to have taken Part 1 before attempting Part 2. While\nPart 1 focuses on the basic Android Platform and components, Part 2 will focus\non more advanced components and concepts provided by the Android platform:\n\n  * notifying users about important events  \n\n  * handling concurrency\n  * acquiring data over the network   \n\n  * leveraging multimedia and graphics  \n\n  * incorporating touch and gestures into your apps\n  * working with sensors  \n\nTo bring these concepts alive, the course will involve in-\u00addepth, hands-\u00adon\nexamples of applications implemented with the Android Platform. Students will\napply what they learn, also using the Android Platform, in laboratory projects\nand in a large course project.  \n\n**Mobile Cloud Computing with Android (MoCCA) Specialization: New and Improved**\n\nWe are proud to announce that the MoCCA specialization has already reached\nhundreds of thousands of learners around the globe.\n\nIn its last iteration, we worked with Google to provide Nexus tablets,\nfeedback from the Google App team, and the potential to be featured in the\nGoogle Play store to top course completers.\n\nThis time around, we are providing more flexibility for all of you busy\nlearners. We are running the Programming Mobile Applications courses in more\ndigestible one-month-long sections, each with a meaningful mini-project at the\nend. Additionally, we will be re-offering the courses more frequently. Now,\nyou can find a convenient time to join us or pick up where you left off if you\ndidn\u2019t quite finish before.\n\n**Note: **To participate in the final project, you must earn Verified Certificates for all courses in the sequence. Learners who purchase Full Access to the entire series will also receive two years of unlimited retries while these courses are offered.\n\n**For previous MoCCA students:** If you have _**already**_ completed my previous version of this course, \"Programming Mobile Applications for Android Handheld Systems\u201d offered in January and September 2014, you do _**not**_ need to retake this course to continue towards the Specialization certificate and final project in 2015. \n\nPlease consult the [Specializations Help\nCenter](https://courserahelp.zendesk.com/hc/en-\nus/articles/201223289-Specializations) or contact the [Coursera support\nteam](https://courserahelp.zendesk.com/hc/en-\nus/requests/new?ticket_form_id=19009) if you are not sure whether you qualify.  \n\n**What is the MoCCA Specialization?**  \n\nThis course has been designed as part of a Coursera Specialization designed to\nhelp learners create complex, cloud-based Android Applications, called the\n[Mobile Cloud Computing with Android (MoCCA) Specialization](https://www.cours\nera.org/specialization/mobilecloudcomputing/2).\n\nThe other four courses are led respectively by Drs. Douglas Schmidt and Jules\nWhite of Vanderbilt University, and some of the programming assignments and\nthe course project for these courses will be coordinated.\n\n  * **Course 3:** [Programming Mobile Services for Android Handheld Systems: Concurrency](https://www.coursera.org/course/posaconcurrency)  \n\n  * **Course 4:** [Programming Mobile Services for Android Handheld Systems: Communication](https://www.coursera.org/course/posacommunication)  \n\n  * Dr. Douglas Schmidt, Associate Chair of Computer Science and Engineering and Professor of Computer Science, Vanderbilt University  \n\nThe third and fourth courses in the sequence focus on systems programming\ntopics, such as middleware services and background processing. **  \n**\n\n  * **Course 5:** [Programming Cloud Services for Android Handheld Systems: Spring](https://www.coursera.org/course/mobilecloudprogram)  \n\n  * **Course 6:** [Programming Cloud Services for Android Handheld Systems: Security](https://www.coursera.org/course/mobilecloudsecurity)  \n\n  * Dr. C. Jules White, Assistant Professor of Computer Science, Vanderbilt University  \n\nThe fifth and sixth courses in the sequence will focus on connecting Android\nmobile devices to cloud computing and data storage resources, essentially\nturning a device into an extension of powerful cloud-based services on popular\ncloud computing platforms, such as Google App Engine and Amazon EC2.\n\nAlthough each of these courses stands alone, those who do choose to complete\nthe entire MoCCA sequence will gain a much more detailed, end-to-end\nunderstanding of handheld systems and their applications.\n\n## Syllabus\n\n**Week #5:**  \n\n**Objective: **In this lesson, I dive deeper in Android, focusing on advanced some of the advanced capabilities it provides. I discuss using User Notifications to interact with the user, listening for and responding to events using the BroadcastReceiver class. There is also a lecture dealing with using Alarms to run code at pre-scheduled times.\n\nBy the end of this lesson, you should\n\n  * understand how the key technologies discussed this week are used to support more advanced Android applications.\n\n  * Lecture #10 \u2013 User Notifications  \n\n  * Lecture #11 \u2013 The BroadcastReceiver Class  \n\n  * Lecture #12 - Alarms  \n\n  * Lab #5 \u2013 Tweet app: Students build an app that displays Twitter data. The app will use BroadcastReceivers and User Notifications to apprise the user of the app\u2019s behavior and state.\n\n**Week #6:**\n\n**Objective:** In this lesson, I discuss how to handle concurrency with Threads, AsyncTask & Handlers. There is also a lecture explaining how to access and process data over the network.\n\nBy the end of this lesson, you should\n\n  * understand how the key technologies discussed this week are used to support more advanced Android applications.\n\n  * Lecture #13 \u2013 Threads, AsyncTask & Handlers  \n\n  * Lecture #14 - Networking  \n\n  * Lab #6 \u2013 Display Tweet Data: Students build an app that downloads and displays Tweet data. The app uses an AsyncTask for downloading data over the network.\n\n**Week #7:**\n\n**Objective: **In this lesson, I present a number of technologies related to presenting and interacting with dynamic content. This includes graphics and animation, handling touch input from the user, and recording and playing multimedia.\n\nBy the end of this lesson, you should be able to:\n\n  * animate your applications  \n\n  * create apps that respond to both standard and custom gestures  \n\n  * display and use multimedia content\n  * Lecture #15 \u2013 Graphics & Animation I  \n\n  * Lecture #16 \u2013 Graphics & Animation II  \n\n  * Lecture #17 \u2013 Multi-touch & Gestures  \n\n  * Lecture #18 \u2013 MultiMedia\n  * Lab #7 - Bubble Popper: Students write an application to display and animate bubbles (graphics that look like bubbles) on the device's screen. When users touch the screen where a bubble is displayed, the bubble pops. The app will also accept gesture input, allowing the user to change the direction and speed of the bubble, using a fling gesture.\n\n**Week #8:**\n\n**Objective: **In this lesson, I go over the many sensors that now come standard on most mobile devices. I also provide a focused discussion of using sensors to capture location information and using maps to display that information. Finally, I discuss some options for storing structured data.\n\nBy the end of this lesson, you should be able to:\n\n  * create context aware applications whose behavior changes based on environmental conditions.  \n\n  * design complex applications that leverage complex structured data sets.\n  * Lecture #19 \u2013 Sensors  \n\n  * Lecture #20 \u2013 Location & Maps  \n\n  * Lecture #21 \u2013 DataManagement  \n\n  * Lab #8 - Place Badge Collector: Students build an application that uses location information to collect Badges for the places they visit.\n\n**Mini-project - DailySelfie: **Students will build a complete app from scratch. This app will remind users to take a picture of themselves once a day. The app will collect and display the resulting set of photos.  \n\n",
        "name": "Programming Mobile Applications for Android Handheld Systems: Part 2",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of Maryland, College Park"
        ],
        "url": "https://www.coursera.org/course/androidpart2",
        "video_url": ""
    },
    {
        "date": "2015-02-16",
        "desc": "Promotional videos in English and in SpanishPlease note that this is abilingual English-Spanish coursewith all material duplicated in both languages. Clickhereto watch\n        the promotional video inEnglish.Atenci\u00f3n: este es un cursobiling\u00fce espa\u00f1ol-ingl\u00e9scon todo el material duplicado en ambos idiomas. Para ver el video promocional enespa\u00f1ol, haced clicaqu\u00ed.In this course we will learn how to design digital circuits, following an up to date and practical orientation. Although we will study the basic electronic devices necessary for the construction of digital systems, our interest will focus mainly on thesystemthan in the Electronics. This approach will allow us to establish the fundamentals of complex digital systems design.To follow the course some basic knowledge about binary arithmetic, about programming at pseudocode level, and about Electricity/Electronics (components, currents, voltages, units, etc.) are required. A \"week_0\" has been included with self-tests to check your level of knowledge on these subjects, and with some reinforcing videos.This course is especially suitable for first years ICT (Information and Communication Technologies) engineering students, and also suitable for all those who wish to be initiated in the world of digital systems. This first course in digital systems is a must for all those who wish to deepen in the computer hardware and / or in the world of application specific integrated circuits (ASICs), which constitute an important part of robotics, bionics, industrial control and many other application fields.After completing this course the student will be able to:Design digital systems of medium complexity.Describe digital systems using high level hardware description languages.Understand the operation of computers at its most basic level (machine language) and how they can be implemented as algorithmic machines.Collaborating teachers:Merc\u00e8 Rull\u00e1n AyzaJoaqu\u00edn S\u00e1iz AlcaineDavid Ba\u00f1eres BesoraJuan Antonio Mart\u00ednezSobre el cursoEn este curso aprenderemos los fundamentos del dise\u00f1o de los circuitos digitales actuales, siguiendo una orientaci\u00f3n eminentemente pr\u00e1ctica.Aunque estudiaremos los dispositivos electr\u00f3nicos b\u00e1sicos necesarios para la construcci\u00f3n de los Sistemas Digitales,nuestro inter\u00e9s se centrar\u00e1 m\u00e1s en elsistemaque en la Electr\u00f3nica que lo sustenta. Este enfoque nos permitir\u00e1 sentar las bases del dise\u00f1o de Sistemas Digitales complejos.Para seguir el curso es necesario tener conocimientos previos del sistema de numeraci\u00f3n binario, de programaci\u00f3n (ning\u00fan lenguaje en concreto, es suficiente con el concepto de pseudo-c\u00f3digo), y de Electricidad/Electr\u00f3nica (componentes, corrientes, tensiones, unidades, etc.). Hemos preparado una \"semana_0\" en la que podr\u00e9is evaluar vuestro nivel de conocimientos en estos temas.Se trata de un curso muy adecuado para estudiantes de primeros cursos de carreras de Ingenier\u00edas cercanas a las TIC (Tecnolog\u00edas de la Informaci\u00f3n y de las Comunicaciones), y para todas aquellas personas que deseen introducirse en el mundo de los Sistemas Digitales. \nPor otra parte, este primer curso de Sistemas Digitales es un paso obligado para aquellas personas que deseen posteriormente profundizar en temas como el hardware de computadores y/o los circuitos integrados de aplicaci\u00f3n espec\u00edfica, con todas las aplicaciones que ello implica (rob\u00f3tica, bi\u00f3nica, control industrial, etc.).Al acabar el curso el estudiante ser\u00e1 capaz de:Dise\u00f1ar Sistemas Digitales de complejidad media.Describir Sistemas Digitales mediante lenguajes de descripci\u00f3n hardware de alto nivel.Comprender el funcionamiento de los computadores a su nivel m\u00e1s b\u00e1sico (lenguaje m\u00e1quina), as\u00ed como su materializaci\u00f3n e interpretaci\u00f3n a trav\u00e9s de sistemas digitales algor\u00edtmicos.Colaboradores docentes:Merc\u00e8 Rull\u00e1n AyzaJoaqu\u00edn S\u00e1iz AlcaineDavid Ba\u00f1eres BesoraJuan Antonio Mart\u00ednezSyllabusWeek 1: Digital systems; definition, description and synthesis. Specification of a\nsimple processor that will be designed along the course.Week 2: Combinational circuits. Boolean Algebra and logic gates.Week 3: Logic blocks. Timing. Synthesis tools. Implementing programming language structures.Week 4: Arithmetic blocks. Hardware description languages.Week 5: Sequential circuits. Synchronization. Explicit description of sequential circuits. Implementing algorithms with sequential circuits.Week 6: Synthesis from an explicit description of the system. Sequential blocks: Registers, counters and shift-registers. Memories.Week 7: Finite state Machines (FSM). Examples. VHDL description of FSMs.Week 8: Available technologies for the implementation of Digital Systems. Course conclusions .TemarioSemana 1: Sistemas Digitales; definici\u00f3n, descripci\u00f3n y s\u00edntesis. Especificaci\u00f3n de un procesador simple que se ir\u00e1 dise\u00f1ando a lo largo del curso.Semana 2:Circuitos combinacionales. \u00c1lgebra de Boole y puertas l\u00f3gicas.Semana 3: Bloques l\u00f3gicos. Tiempos de respuesta. Herramientas de s\u00edntesis. Implementaci\u00f3n de estructuras de programaci\u00f3n. Ejemplos.Semana 4: Bloques aritm\u00e9ticos. Lenguajes de descripci\u00f3n hardware.Semana 5: Circuitos secuenciales. Concepto de sincronizaci\u00f3n. Descripci\u00f3n expl\u00edcita de circuitos secuenciales. Implementaci\u00f3n secuencial de algoritmos. Biestables.Semana 6: S\u00edntesis a partir de la descripci\u00f3n expl\u00edcita del sistema. Bloques secuenciales: Registros, contadores y registros de desplazamiento. Memorias.Semana 7: M\u00e1quinas de estado finito (MEF). Ejemplos. Descripci\u00f3n VHDL de MEFs.Semana 8: Tecnolog\u00edas disponibles para la implementaci\u00f3n de Sistemas Digitales. Conclusiones del curso.",
        "desc_html": "**Promotional videos in English and in Spanish**\n\nPlease note that this is a **bilingual English-Spanish course** with all\nmaterial duplicated in both languages. Click **[here**](http://videosdigitals.\nuab.es/video/31/playVideo.html?serial=548&file=1503.mp4) to watch the\npromotional video in **English**.\n\n_**Atenci\u00f3n**: este es un curso **biling\u00fce espa\u00f1ol-ingl\u00e9s** con todo el\nmaterial duplicado en ambos idiomas. Para ver el video promocional en\n**espa\u00f1ol**, haced clic **[aqu\u00ed**](http://videosdigitals.uab.es/video/31/playV\nideo.html?serial=548&file=1502.mp4). _\n\n  \n_ _\n\n_ _\n\nIn this course we will learn how to design digital circuits, following an up\nto date and practical orientation. Although we will study the basic electronic\ndevices necessary for the construction of digital systems, our interest will\nfocus mainly on the **_system_** than in the Electronics. This approach will\nallow us to establish the fundamentals of complex digital systems design.  \nTo follow the course some basic knowledge about binary arithmetic, about\nprogramming at pseudocode level, and about Electricity/Electronics\n(components, currents, voltages, units, etc.) are required. A \"week_0\" has\nbeen included with self-tests to check your level of knowledge on these\nsubjects, and with some reinforcing videos.  \nThis course is especially suitable for first years ICT (Information and\nCommunication Technologies) engineering students, and also suitable for all\nthose who wish to be initiated in the world of digital systems. This first\ncourse in digital systems is a must for all those who wish to deepen in the\ncomputer hardware and / or in the world of application specific integrated\ncircuits (ASICs), which constitute an important part of robotics, bionics,\nindustrial control and many other application fields.\n\nAfter completing this course the student will be able to:  \n\n  * Design digital systems of medium complexity.\n  * Describe digital systems using high level hardware description languages.\n  * Understand the operation of computers at its most basic level (machine language) and how they can be implemented as algorithmic machines.\n\n**Collaborating teachers:**\n\n  * Merc\u00e8 Rull\u00e1n Ayza\n  * Joaqu\u00edn S\u00e1iz Alcaine\n  * David Ba\u00f1eres Besora\n  * Juan Antonio Mart\u00ednez  \n\n  \n\n## Sobre el curso\n\nEn este curso aprenderemos los fundamentos del dise\u00f1o de los circuitos\ndigitales actuales, siguiendo una orientaci\u00f3n eminentemente pr\u00e1ctica.  \nAunque estudiaremos los dispositivos electr\u00f3nicos b\u00e1sicos necesarios para la\nconstrucci\u00f3n de los Sistemas Digitales,nuestro inter\u00e9s se centrar\u00e1 m\u00e1s en el\n**_sistema_** que en la Electr\u00f3nica que lo sustenta. Este enfoque nos\npermitir\u00e1 sentar las bases del dise\u00f1o de Sistemas Digitales complejos.  \nPara seguir el curso es necesario tener conocimientos previos del sistema de\nnumeraci\u00f3n binario, de programaci\u00f3n (ning\u00fan lenguaje en concreto, es\nsuficiente con el concepto de pseudo-c\u00f3digo), y de Electricidad/Electr\u00f3nica\n(componentes, corrientes, tensiones, unidades, etc.). Hemos preparado una\n\"semana_0\" en la que podr\u00e9is evaluar vuestro nivel de conocimientos en estos\ntemas.  \nSe trata de un curso muy adecuado para estudiantes de primeros cursos de\ncarreras de Ingenier\u00edas cercanas a las TIC (Tecnolog\u00edas de la Informaci\u00f3n y de\nlas Comunicaciones), y para todas aquellas personas que deseen introducirse en\nel mundo de los Sistemas Digitales. Por otra parte, este primer curso de\nSistemas Digitales es un paso obligado para aquellas personas que deseen\nposteriormente profundizar en temas como el hardware de computadores y/o los\ncircuitos integrados de aplicaci\u00f3n espec\u00edfica, con todas las aplicaciones que\nello implica (rob\u00f3tica, bi\u00f3nica, control industrial, etc.).\n\nAl acabar el curso el estudiante ser\u00e1 capaz de:  \n\n  * Dise\u00f1ar Sistemas Digitales de complejidad media.\n  * Describir Sistemas Digitales mediante lenguajes de descripci\u00f3n hardware de alto nivel.\n  * Comprender el funcionamiento de los computadores a su nivel m\u00e1s b\u00e1sico (lenguaje m\u00e1quina), as\u00ed como su materializaci\u00f3n e interpretaci\u00f3n a trav\u00e9s de sistemas digitales algor\u00edtmicos.\n\n**Colaboradores docentes:**\n\n  * Merc\u00e8 Rull\u00e1n Ayza\n  * Joaqu\u00edn S\u00e1iz Alcaine\n  * David Ba\u00f1eres Besora\n  * Juan Antonio Mart\u00ednez  \n\n  \n\n  \n\n## Syllabus\n\n_ _\n\n_ _\n\n** Week 1 ** : Digital systems; definition, description and synthesis. Specification of a simple processor that will be designed along the course. \n\n** Week 2 ** : Combinational circuits. Boolean Algebra and logic gates. \n\n** Week 3 ** : Logic blocks. Timing. Synthesis tools. Implementing programming language structures. \n\n** Week 4 ** : Arithmetic blocks. Hardware description languages. \n\n** Week 5 ** : Sequential circuits. Synchronization. Explicit description of sequential circuits. Implementing algorithms with sequential circuits. \n\n** Week 6 ** : Synthesis from an explicit description of the system. Sequential blocks: Registers, counters and shift-registers. Memories. \n\n** Week 7 ** : Finite state Machines (FSM). Examples. VHDL description of FSMs. \n\n** Week 8 ** : Available technologies for the implementation of Digital Systems. Course conclusions . \n\n  \n\n## Temario\n\n**Semana 1**: Sistemas Digitales; definici\u00f3n, descripci\u00f3n y s\u00edntesis. Especificaci\u00f3n de un procesador simple que se ir\u00e1 dise\u00f1ando a lo largo del curso. \n\n**Semana 2:** Circuitos combinacionales. \u00c1lgebra de Boole y puertas l\u00f3gicas.\n\n**Semana 3**: Bloques l\u00f3gicos. Tiempos de respuesta. Herramientas de s\u00edntesis. Implementaci\u00f3n de estructuras de programaci\u00f3n. Ejemplos.\n\n**Semana 4**: Bloques aritm\u00e9ticos. Lenguajes de descripci\u00f3n hardware. \n\n**Semana 5**: Circuitos secuenciales. Concepto de sincronizaci\u00f3n. Descripci\u00f3n expl\u00edcita de circuitos secuenciales. Implementaci\u00f3n secuencial de algoritmos. Biestables.\n\n**Semana 6**: S\u00edntesis a partir de la descripci\u00f3n expl\u00edcita del sistema. Bloques secuenciales: Registros, contadores y registros de desplazamiento. Memorias.\n\n**Semana 7**: M\u00e1quinas de estado finito (MEF). Ejemplos. Descripci\u00f3n VHDL de MEFs. \n\n**Semana 8**: Tecnolog\u00edas disponibles para la implementaci\u00f3n de Sistemas Digitales. Conclusiones del curso.\n\n  \n\n",
        "name": "Digital Systems - Sistemas Digitales: De las puertas l\u00f3gicas al procesador",
        "provider": "Coursera",
        "rating": "4",
        "reviews": "1",
        "university": [
            "Universitat Aut\u00f2noma de Barcelona (Autonomous University of Barcelona)"
        ],
        "url": "https://www.coursera.org/course/digitalsystems",
        "video_url": ""
    },
    {
        "date": "2015-02-16",
        "desc": "The sequencing of the&nbsp;human genome fueled a computational revolution in biology. As a result, modern biology produces as many new&nbsp;algorithms as any other fundamental realm of&nbsp;science.Genome sequencing is just one of hundreds of biological problems that have become inextricable from the computational methods required to solve them. In this course, we will uncover some of the algorithmic ideas that are&nbsp;fundamental to an&nbsp;understanding of modern biology.&nbsp; Computational concepts like dynamic programming and graph theory&nbsp;will help us explore algorithms applied to&nbsp;a wide range of biological topics, from finding regulatory motifs&nbsp;to determining whether the human genome has \"fragile\" regions.&nbsp; Throughout the process, we will apply&nbsp;bioinformatics algorithms to&nbsp;real&nbsp;genetic data.Each chapter in the&nbsp;course textbook&nbsp;covers a single biological question and slowly builds the algorithmic knowledge required to address this challenge. &nbsp;Along the way, coding challenges and exercises will be integrated into the text at the exact moment they are needed.SyllabusThe course will be based around the following biological questions, with the algorithmic ideas that we will use to solve them in parentheses:Where Does DNA Replication Begin? (Algorithmic Warm-up)How Do We Sequence Antibiotics? (Brute Force Algorithms)Which DNA Patterns Act As Cellular Clocks? (Greedy and Randomized Algorithms)How Do We Assemble Genomes? (Graph Algorithms)How Do We Compare Biological Sequences? (Dynamic Programming Algorithms)Are There Fragile Regions in the Human Genome? (Combinatorial Algorithms)Which Animal Gave Us SARS? (Evolutionary Trees)How Do We Locate Disease-Causing Mutations? (Combinatorial Pattern Matching)How Did Yeast Become Such a Good Wine Brewer? (Clustering Algorithms)Some of these topics will require you to complete coding challenges in order to implement bioinformatics algorithms, followed by a comprehension quiz at the end of the topic. &nbsp;Other topics will carry lighter workloads and consist primarily of lecture videos and short quizzes.",
        "desc_html": "The sequencing of the human genome fueled a computational revolution in\nbiology. As a result, modern biology produces as many new algorithms as any\nother fundamental realm of science.\n\nGenome sequencing is just one of hundreds of biological problems that have\nbecome inextricable from the computational methods required to solve them. In\nthis course, we will uncover some of the algorithmic ideas that are\nfundamental to an understanding of modern biology.  Computational concepts\nlike dynamic programming and graph theory will help us explore algorithms\napplied to a wide range of biological topics, from finding regulatory motifs\nto determining whether the human genome has \"fragile\" regions.  Throughout the\nprocess, we will apply bioinformatics algorithms to _real_ genetic data.\n\nEach chapter in the [course textbook](http://bioinformaticsalgorithms.com)\ncovers a single biological question and slowly builds the algorithmic\nknowledge required to address this challenge.  Along the way, coding\nchallenges and exercises will be integrated into the text at the exact moment\nthey are needed.\n\n## Syllabus\n\nThe course will be based around the following biological questions, with the\nalgorithmic ideas that we will use to solve them in parentheses:  \n\n  * Where Does DNA Replication Begin? (_Algorithmic Warm-up_)  \n\n  * How Do We Sequence Antibiotics? (_Brute Force Algorithms_)\n  * Which DNA Patterns Act As Cellular Clocks? (_Greedy and Randomized Algorithms_)\n  * How Do We Assemble Genomes? (___Graph Algorithms_)\n  * How Do We Compare Biological Sequences? (_Dynamic Programming Algorithms_)\n  * Are There Fragile Regions in the Human Genome? (_Combinatorial Algorithms_)\n  * Which Animal Gave Us SARS? (_Evolutionary Trees_)  \n\n  * How Do We Locate Disease-Causing Mutations? (_Combinatorial Pattern Matching_)\n  * How Did Yeast Become Such a Good Wine Brewer? (___Clustering Algorithms_)\nSome of these topics will require you to complete coding challenges in order\nto implement bioinformatics algorithms, followed by a comprehension quiz at\nthe end of the topic.  Other topics will carry lighter workloads and consist\nprimarily of lecture videos and short quizzes.\n\n",
        "name": "Algorithms, Biology, and Programming for Beginners",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of California, San Diego"
        ],
        "url": "https://www.coursera.org/course/algobioprogramming",
        "video_url": ""
    },
    {
        "date": "2015-02-16",
        "desc": "Le cours propose une\nintroduction \u00e0 la planification urbaine des villes africaines. Apr\u00e8s un\npassage par les grandes th\u00e9matiques urbaines (changement climatique, \u00e9nergie,\ndroit \u00e0 la ville, foncier, habitat \u2026), nous aborderons les outils actuellement\nutilis\u00e9s en planification nous en feront une lecture critique. Nous\nverrons ensuite comment planifier une ville \"int\u00e9grative\", ouverte,\nrespectueuse de l\u2019environnement et faiblement consommatrice en ressources.Parall\u00e8lement, nous aborderons\nla question du financement des villes, le jeu des acteurs (gouvernance) et l\u2019\u00e9valuation des planifications.L\u2019entr\u00e9e du cours n\u2019est\npas disciplinaire, mais th\u00e9matique. Le cours articule les niveaux de lecture de la\nville (technique, social et symbolique) aussi bien que les th\u00e9matiques urbaines\npermettant de mettre en exergue les processus de fabrication de la ville.The course suggests an introduction to urban planning of African\ncities. After a short overview of the big urban issues (climate change, energy,\nright to the city, land, habitat\u2026), we will tackle the tools currently used in\nplanning and will have a critical reading. We will then see how to plan an\nintegrative, open, environmental-friendly and low-resource-consumption city.In parallel, we will approach the funding of the cities, the\ngovernance and the assessment of the planning.The approach of the course is not disciplinary, rather thematic.\nThe course articulates the different reading levels of the city (technical,\nsocial and symbolic) as well as urban issues allowing to highlight the making of a city.SyllabusSemaine 1&nbsp;:Introduction \u00e0 la ville\nafricaine et \u00e0 la planification (partie 1) /&nbsp;Week 1&nbsp;: Introduction\nto the African city and planningPr\u00e9sentation\ndu cours&nbsp;; L'urbanisation en Afrique: les\nchangements et les d\u00e9fis&nbsp;; Qu'est-ce que la\nplanification urbaine et pourquoi planifier&nbsp;?&nbsp;; De l'urbanisation\n\u00e0 la ville africaine.Presentation\nof the course ; African urbanization&nbsp;: changes and challenges&nbsp;; what\nis urban planning and why do we plan&nbsp;? ; From urbanization to the African\ncity.Semaine 2&nbsp;:&nbsp;Introduction \u00e0 la ville africaine et \u00e0 la planification (Partie 2) /&nbsp;Week 2 : Introduction to\nthe African city as well as planning (Part 2)Les trois niveaux de lecture de la ville&nbsp;; Les mod\u00e8les de villes; Les formes urbaines.The three reading levels of the city&nbsp;;\nCity models ; Urban formsSemaine 3&nbsp;:Les th\u00e9matiques urbaines /&nbsp;Week 3&nbsp;: The urban issuesLa ville dans un contexte de mondialisation&nbsp;; Le d\u00e9veloppement durable&nbsp;; Le changement climatique ; L'environnement et \u00e9nergie&nbsp;; La mobilit\u00e9.Cities in a globalization context&nbsp;;\nSustainable development&nbsp;; Climate change ; Environment and energy ;\nmobility.Semaine 4&nbsp;:Le fonctionnement urbain /&nbsp;Week 4&nbsp;: Urban operationLes\nservices urbains (infrastructures et \u00e9quipements)&nbsp;; L\u2019habitat&nbsp;; L\u2019espace\npublic; Le foncier.The urban services (infrastructures and\namenities)&nbsp;; Habitat&nbsp;; Public space&nbsp;; Land.Semaine 5&nbsp;:La planification et ses outils /&nbsp;Week 5&nbsp;: Planning and\nits toolsLes\noutils de l\u2019urbanisme; Histoire de la planification&nbsp;; Planification\nstrat\u00e9gique&nbsp;; les SDAU&nbsp;; Etudes de cas.Tools of urbanism; History of planning&nbsp;;\nStrategic planning&nbsp;; Masterplans ; Case studies.Semaine 6&nbsp;:Le futur des villes ou comment\nplanifier&nbsp;? /&nbsp;Week 6&nbsp;: Future of the\ncities and how to plan&nbsp;?Lecture\ncritique et limites des outils actuels&nbsp;; Innovation et\nplanification&nbsp;; Les principes de base de la planification&nbsp;; Planifier\nles d\u00e9placements urbains&nbsp;; Planifier les services urbains&nbsp;; Planifier\nla s\u00e9curit\u00e9 alimentaire&nbsp;; Planifier dans un contexte de changement\nclimatique&nbsp;; Planifier avec l\u2019informel&nbsp;; Planifier une ville juste,\nouverte, \u00e9galitaire.Critical reading and limits of current\ntools&nbsp;; Innovation and planning&nbsp;; Basic principles of planning&nbsp;;\nPlanning urban mobility ; Planning of urban services ; Planning food security ; Planning in a climate changing context ; Planning with the informal\n; Planning of a right, open and egalitarian city.Semaine 7&nbsp;:Les outils et les m\u00e9thodes /&nbsp;Week 7&nbsp;: Tools and methodsLes\ndiff\u00e9rentes phases de la planification&nbsp;; Les outils&nbsp;; Les donn\u00e9es&nbsp;;\nLes SIG&nbsp;; La repr\u00e9sentation et communication&nbsp;; Les m\u00e9thodes participatives&nbsp;;\nEtudes de cas.The various stages of planning&nbsp;; The\ntools&nbsp;; The data ; The GIS ; Representation and communication ;\nParticipative methods ; Case studies.Semaine 8&nbsp;:Les actions de l\u2019urbanisme\nop\u00e9rationnel&nbsp;: les lotissements /&nbsp;Week 8&nbsp;: Actions of operational urbanism&nbsp;:\nparcelling.Comment\ndessiner un lotissement&nbsp;? Rentabiliser les r\u00e9seaux&nbsp;; Le lotissement\npas \u00e0 pas&nbsp;; Etudes de cas.How to draw settlements ? Making networks\nprofitable&nbsp;; The settlement step by step&nbsp;; Case studies.Semaine 9&nbsp;:Les actions de l\u2019urbanisme\nop\u00e9rationnel&nbsp;: la restructuration et les projets urbains /&nbsp;Week 9&nbsp;: Actions of\noperational urbanism&nbsp;: restructuring and urban projectsSlum\nupgrading&nbsp;; Les \u00e9victions&nbsp;; Etudes de cas&nbsp;; Projets urbains.Slum upgrading&nbsp;; Evictions&nbsp;; Case studies&nbsp;; Urban\nprojects&nbsp; &nbsp;&nbsp;Semaine 10&nbsp;:Les co\u00fbts et le financement\ndes villes /&nbsp;Week 10&nbsp;: Costs and funding of cities.Introduction aux financements des villes&nbsp;; Comment\nla planification peut-elle g\u00e9n\u00e9rer des ressources&nbsp;; Les syst\u00e8mes de\nfinancement&nbsp;; La relation entre urbanisme &amp; transport&nbsp;; Les co\u00fbts\nd'urbanisation&nbsp;; Comment mobiliser les budgets&nbsp;; Le cadastres, l\u2019adressage\net la fiscalit\u00e9.Introduction to funding of the cities; How can planning generate\nresources; Funding systems; Relation between urbanism and\ntransportation; Costs of urbanization; How to mobilize\nbudget; Cadastres, addressing and tax system.Semaine 11&nbsp;:Gouvernance&nbsp;: quels\npartenariats? /&nbsp;Week\n11&nbsp;: Governance&nbsp;: which partnerships?D\u00e9centralisation, gouvernance\nlocale&nbsp;; Les acteurs de la planification et de la gestion urbaine; Le r\u00f4le des\ncommunaut\u00e9s et des budgets participatifs&nbsp;; Le r\u00f4le des bailleurs de\nfonds&nbsp;; Les diff\u00e9rents types de partenariats&nbsp;; Les migrants dans la\nconstruction de la ville.Decentralization, local governance&nbsp;; The\nactors of urban planning and management ; Role of communities and participatory\nbudget ; Role of fund donors ; The different types of partnerships ; Migrants\nin the construction of the city&nbsp; &nbsp;&nbsp;Semaine 12&nbsp;:Conclusions /&nbsp;Week 12&nbsp;: ConclusionsMesurer l'impact r\u00e9el de la\nplanification sur le fonctionnement urbain&nbsp;; Synth\u00e8se et rappels,\nconclusions.Measure\nthe real impact of planning on the urban operation&nbsp;; Synthesis and\nreminders, conclusions.",
        "desc_html": "__Le cours propose une introduction \u00e0 la planification urbaine des villes\nafricaines. Apr\u00e8s un passage par les grandes th\u00e9matiques urbaines (changement\nclimatique, \u00e9nergie, droit \u00e0 la ville, foncier, habitat \u2026), nous aborderons\nles outils actuellement utilis\u00e9s en planification nous en feront une lecture\ncritique. Nous verrons ensuite comment planifier une ville \"int\u00e9grative\",\nouverte, respectueuse de l\u2019environnement et faiblement consommatrice en\nressources.  \n  \nParall\u00e8lement, nous aborderons la question du financement des villes, le jeu\ndes acteurs (gouvernance) et l\u2019\u00e9valuation des planifications.  \n  \nL\u2019entr\u00e9e du cours n\u2019est pas disciplinaire, mais th\u00e9matique. Le cours articule\nles niveaux de lecture de la ville (technique, social et symbolique) aussi\nbien que les th\u00e9matiques urbaines permettant de mettre en exergue les\nprocessus de fabrication de la ville.  \n  \n\n_The course suggests an introduction to urban planning of African cities.\nAfter a short overview of the big urban issues (climate change, energy, right\nto the city, land, habitat\u2026), we will tackle the tools currently used in\nplanning and will have a critical reading. We will then see how to plan an\nintegrative, open, environmental-friendly and low-resource-consumption city._\n\n_In parallel, we will approach the funding of the cities, the governance and\nthe assessment of the planning._\n\n_The approach of the course is not disciplinary, rather thematic. The course\narticulates the different reading levels of the city (technical, social and\nsymbolic) as well as urban issues allowing to highlight the making of a city._\n\n## Syllabus\n\n**Semaine 1 :**** Introduction \u00e0 la ville africaine et \u00e0 la planification (partie 1) / ****Week 1 : Introduction to the African city and planning**\n\nPr\u00e9sentation du cours ; L'urbanisation en Afrique: les changements et les\nd\u00e9fis ; Qu'est-ce que la planification urbaine et pourquoi planifier ? ; De\nl'urbanisation \u00e0 la ville africaine.\n\n_Presentation of the course ; African urbanization : changes and challenges ;\nwhat is urban planning and why do we plan ? ; From urbanization to the African\ncity._\n\n**Semaine 2 :**** ****Introduction \u00e0 la ville africaine et \u00e0 la planification (Partie 2) / ****Week 2 : Introduction to the African city as well as planning (Part 2)**  \n\nLes trois niveaux de lecture de la ville ; Les mod\u00e8les de villes; Les formes\nurbaines.  \n\n_The three reading levels of the city ; City models ; Urban forms_\n\n**Semaine 3 :**** Les th\u00e9matiques urbaines / ****Week 3 : The urban issues**  \n\nLa ville dans un contexte de mondialisation ; Le d\u00e9veloppement durable ; Le\nchangement climatique ; L'environnement et \u00e9nergie ; La mobilit\u00e9.\n\n_Cities in a globalization context ; Sustainable development ; Climate change\n; Environment and energy ; mobility._\n\n**Semaine 4 :**** Le fonctionnement urbain / ****Week 4 : Urban operation**\n\nLes services urbains (infrastructures et \u00e9quipements) ; L\u2019habitat ; L\u2019espace\npublic; Le foncier.\n\n_The urban services (infrastructures and amenities) ; Habitat ; Public space ;\nLand._\n\n**Semaine 5 :**** La planification et ses outils / ****Week 5 : Planning and its tools**\n\nLes outils de l\u2019urbanisme; Histoire de la planification ; Planification\nstrat\u00e9gique ; les SDAU ; Etudes de cas.\n\n_Tools of urbanism; History of planning ; Strategic planning ; Masterplans ;\nCase studies._\n\n**Semaine 6 :**** Le futur des villes ou comment planifier ? / ****Week 6 : Future of the cities and how to plan ?**\n\nLecture critique et limites des outils actuels ; Innovation et planification ;\nLes principes de base de la planification ; Planifier les d\u00e9placements urbains\n; Planifier les services urbains ; Planifier la s\u00e9curit\u00e9 alimentaire ;\nPlanifier dans un contexte de changement climatique ; Planifier avec\nl\u2019informel ; Planifier une ville juste, ouverte, \u00e9galitaire.\n\n_Critical reading and limits of current tools ; Innovation and planning ;\nBasic principles of planning ; Planning urban mobility ; Planning of urban\nservices ; Planning food security ; Planning in a climate changing context ;\nPlanning with the informal ; Planning of a right, open and egalitarian city._\n\n**Semaine 7 :**** Les outils et les m\u00e9thodes / ****Week 7 : Tools and methods**\n\nLes diff\u00e9rentes phases de la planification ; Les outils ; Les donn\u00e9es ; Les\nSIG ; La repr\u00e9sentation et communication ; Les m\u00e9thodes participatives ;\nEtudes de cas.\n\n_The various stages of planning ; The tools ; The data ; The GIS ;\nRepresentation and communication ; Participative methods ; Case studies._\n\n**Semaine 8 :**** Les actions de l\u2019urbanisme op\u00e9rationnel : les lotissements / ****Week 8 : Actions of operational urbanism : parcelling.**\n\nComment dessiner un lotissement ? Rentabiliser les r\u00e9seaux ; Le lotissement\npas \u00e0 pas ; Etudes de cas.\n\n_How to draw settlements ? Making networks profitable ; The settlement step by\nstep ; Case studies._\n\n**Semaine 9 :**** Les actions de l\u2019urbanisme op\u00e9rationnel : la restructuration et les projets urbains / ****Week 9 : Actions of operational urbanism : restructuring and urban projects**\n\nSlum upgrading ; Les \u00e9victions ; Etudes de cas ; Projets urbains.\n\n_Slum upgrading ; Evictions ; Case studies ; Urban projects_  \n\n**Semaine 10 :**** Les co\u00fbts et le financement des villes / ****Week 10 : Costs and funding of cities.**\n\nIntroduction aux financements des villes ; Comment la planification peut-elle\ng\u00e9n\u00e9rer des ressources ; Les syst\u00e8mes de financement ; La relation entre\nurbanisme & transport ; Les co\u00fbts d'urbanisation ; Comment mobiliser les\nbudgets ; Le cadastres, l\u2019adressage et la fiscalit\u00e9.\n\n_Introduction to funding of the cities; How can planning generate resources;\nFunding systems; Relation between urbanism and transportation; Costs of\nurbanization; How to mobilize budget; Cadastres, addressing and tax system._  \n\n**Semaine 11 :**** Gouvernance : quels partenariats? / ****Week 11 : Governance : which partnerships?**\n\nD\u00e9centralisation, gouvernance locale ; Les acteurs de la planification et de\nla gestion urbaine; Le r\u00f4le des communaut\u00e9s et des budgets participatifs ; Le\nr\u00f4le des bailleurs de fonds ; Les diff\u00e9rents types de partenariats ; Les\nmigrants dans la construction de la ville**.**\n\n_Decentralization, local governance ; The actors of urban planning and\nmanagement ; Role of communities and participatory budget ; Role of fund\ndonors ; The different types of partnerships ; Migrants in the construction of\nthe city_    **  \n**\n\n**Semaine 12 :**** Conclusions / ****Week 12 : Conclusions**\n\nMesurer l'impact r\u00e9el de la planification sur le fonctionnement urbain ;\nSynth\u00e8se et rappels, conclusions.\n\n_Measure the real impact of planning on the urban operation ; Synthesis and\nreminders, conclusions._\n\n  \n\n",
        "name": "Villes africaines: Introduction \u00e0 la planification urbaine / African cities : an introduction to urban planning",
        "provider": "Coursera",
        "rating": "2",
        "reviews": "1",
        "university": [
            "\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne"
        ],
        "url": "https://www.coursera.org/course/villesafricaines",
        "video_url": ""
    },
    {
        "date": "2015-02-13",
        "desc": "This two-part course (part 2 is availablehere)  is designed to help students with very little or no computing background learn the basics of building simple interactive applications. Our language of choice, Python, is an easy-to learn, high-level computer language that is used in many of the computational courses offered on Coursera. To make learning Python easy, we have developed a new browser-based programming environment that makes developing interactive applications in Python simple. These applications will involve windows whose contents are graphical and respond to buttons, the keyboard and the mouse.The primary method for learning the course material will be to work through multiple \"mini-projects\" in Python. To make this class enjoyable, these projects will include building fun games such as Pong, Blackjack, and Asteroids. When you\u2019ve finished our course, we can\u2019t promise that you will be a professional programmer, but we think that you will learn a lot about programming in Python and have fun while you\u2019re doing it.SyllabusOur course syllabus can be seen at&nbsp;www.codeskulptor.org/coursera/interactivepython.html.",
        "desc_html": "This two-part course (part 2 is available\n[here](https://www.coursera.org/course/interactivepython2)) is designed to\nhelp students with very little or no computing background learn the basics of\nbuilding simple interactive applications. Our language of choice, Python, is\nan easy-to learn, high-level computer language that is used in many of the\ncomputational courses offered on Coursera. To make learning Python easy, we\nhave developed a new browser-based programming environment that makes\ndeveloping interactive applications in Python simple. These applications will\ninvolve windows whose contents are graphical and respond to buttons, the\nkeyboard and the mouse.\n\nThe primary method for learning the course material will be to work through\nmultiple \"mini-projects\" in Python. To make this class enjoyable, these\nprojects will include building fun games such as Pong, Blackjack, and\nAsteroids. When you\u2019ve finished our course, we can\u2019t promise that you will be\na professional programmer, but we think that you will learn a lot about\nprogramming in Python and have fun while you\u2019re doing it.\n\n## Syllabus\n\nOur course syllabus can be seen at [www.codeskulptor.org/coursera/interactivep\nython.html](http://www.codeskulptor.org/coursera/interactivepython.html).\n\n",
        "name": "An Introduction to Interactive Programming in Python (Part 1)",
        "provider": "Coursera",
        "rating": "4.9557142857143",
        "reviews": "2100",
        "university": [
            "Rice University"
        ],
        "url": "https://www.coursera.org/course/interactivepython1",
        "video_url": ""
    },
    {
        "date": "2015-02-13",
        "desc": "This two-part course (part 2 is availablehere) introduces the basic mathematical and programming principles that underlie much of Computer Science. Understanding these principles is crucial to the process of creating efficient and well-structured solutions for computational problems.To get hands-on experience working with these concepts, we will use the Python programming language. The main focus of the class will be weekly mini-projects that build upon the mathematical and programming principles that are taught in the class. To keep the class fun and engaging, many of the projects will involve working with strategy-based games.After completing this course, you will have a much stronger background in Computer Science and be capable of writing Python programs that are both efficient and well-structured. You will also have a better understanding of how to approach more complex computational problems. As always, our goal is to teach these principles of computing in a fun and exciting way. We look forward to seeing you in class!SyllabusOur course syllabus can be seen atwww.codeskulptor.org/coursera/principlescomputing.html.",
        "desc_html": "This two-part course (part 2 is available\n[here](https://www.coursera.org/course/principlescomputing2)) introduces the\nbasic mathematical and programming principles that underlie much of Computer\nScience. Understanding these principles is crucial to the process of creating\nefficient and well-structured solutions for computational problems.\n\nTo get hands-on experience working with these concepts, we will use the Python\nprogramming language. The main focus of the class will be weekly mini-projects\nthat build upon the mathematical and programming principles that are taught in\nthe class. To keep the class fun and engaging, many of the projects will\ninvolve working with strategy-based games.\n\nAfter completing this course, you will have a much stronger background in\nComputer Science and be capable of writing Python programs that are both\nefficient and well-structured. You will also have a better understanding of\nhow to approach more complex computational problems. As always, our goal is to\nteach these principles of computing in a fun and exciting way. We look forward\nto seeing you in class!\n\n## Syllabus\n\nOur course syllabus can be seen at [www.codeskulptor.org/coursera/principlesco\nmputing.html](http://www.codeskulptor.org/coursera/principlescomputing.html).\n\n",
        "name": "Principles of Computing (Part 1)",
        "provider": "Coursera",
        "rating": "5",
        "reviews": "2",
        "university": [
            "Rice University"
        ],
        "url": "https://www.coursera.org/course/principlescomputing1",
        "video_url": ""
    },
    {
        "date": "2015-02-09",
        "desc": "Learn thegeneral concepts of data miningalong with basic methodologies and applications. Then dive into one subfield in data mining:pattern discovery. Learn in-depth concepts, methods, and applications of pattern discovery in data mining. We will also introduce methods for pattern-based classification and some interesting applications of pattern discovery. This course provides you the opportunity to learn skills and content to practice and engage inscalable pattern discovery methodson massive transactional data, discusspattern evaluation measures, and studymethods for miningdiverse kinds of patterns, sequential patterns, and sub-graph patterns.SyllabusThis course will be covering the following topics:Introduction to data miningConcepts and challenges in pattern discovery and analysisScalable pattern discovery algorithmsPattern evaluationMining flexible patterns in multi-dimensional spaceMining sequential patternsMining graph patternsPattern-based classificationApplication examples of pattern discovery",
        "desc_html": "Learn the **general concepts of data mining** along with basic methodologies\nand applications. Then dive into one subfield in data mining: **pattern\ndiscovery**. Learn in-depth concepts, methods, and applications of pattern\ndiscovery in data mining. We will also introduce methods for pattern-based\nclassification and some interesting applications of pattern discovery. This\ncourse provides you the opportunity to learn skills and content to practice\nand engage in **scalable pattern discovery methods** on massive transactional\ndata, discuss **pattern evaluation measures**, and study **methods for\nmining** diverse kinds of patterns, sequential patterns, and sub-graph\npatterns.\n\n## Syllabus\n\nThis course will be covering the following topics:\n\n  * Introduction to data mining\n  * Concepts and challenges in pattern discovery and analysis\n  * Scalable pattern discovery algorithms\n  * Pattern evaluation\n  * Mining flexible patterns in multi-dimensional space\n  * Mining sequential patterns\n  * Mining graph patterns\n  * Pattern-based classification\n  * Application examples of pattern discovery\n\n",
        "name": "Pattern Discovery in Data Mining",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of Illinois at Urbana-Champaign"
        ],
        "url": "https://www.coursera.org/course/patterndiscovery",
        "video_url": ""
    },
    {
        "date": "2015-02-09",
        "desc": "Middle Years Computer Science, or \"MyCS\" for short, is an online CS curriculum designed for classrooms ranging from late elementary to early high school. Our goal: to provide engaging, accessible, and easy-to-use content to middle-years teachers, who can implement the content in their classroom using their own specific pedagogical adaptations of activities and exercises. The course combines general exploration of computational thinking with specific assignments in Scratch, MIT\u2019s visual programming language.MyCS provides a high-level overview of major computing concepts: how computers work, how they store and work with information, and how they use algorithms to solve problems, all with the help of someone who can design the systems it uses. The lessons may be used as-is, in which case they provide a full-semester (18 week) computer science course, plus some more advanced supplementary coursework for anyone who would like to explore it. They may also be adapted/interwoven with existing courses that have related topics, e.g., tech electives, office-suite applications, business skills, etc. We hope that adding MyCS to those classes will help them bridge important application-specific skills with the skillset and mindset that comes with composing computing oneself.We believe that every middle-years student should be able to confidently say that \u201cCS is something that people like me can do,\u201d and that the smartest way to reach those students is through the instructors who know them best. We hope to continue to empower teachers of all backgrounds to bring computational thinking to their classrooms.",
        "desc_html": "Middle Years Computer Science, or \"MyCS\" for short, is an online CS curriculum\ndesigned for classrooms ranging from late elementary to early high school. Our\ngoal: to provide engaging, accessible, and easy-to-use content to middle-years\nteachers, who can implement the content in their classroom using their own\nspecific pedagogical adaptations of activities and exercises. The course\ncombines general exploration of computational thinking with specific\nassignments in Scratch, MIT\u2019s visual programming language.  \n  \nMyCS provides a high-level overview of major computing concepts: how computers\nwork, how they store and work with information, and how they use algorithms to\nsolve problems, all with the help of someone who can design the systems it\nuses. The lessons may be used as-is, in which case they provide a full-\nsemester (18 week) computer science course, plus some more advanced\nsupplementary coursework for anyone who would like to explore it. They may\nalso be adapted/interwoven with existing courses that have related topics,\ne.g., tech electives, office-suite applications, business skills, etc. We hope\nthat adding MyCS to those classes will help them bridge important application-\nspecific skills with the skillset and mindset that comes with composing\ncomputing oneself.  \n  \nWe believe that every middle-years student should be able to confidently say\nthat \u201cCS is something that people like me can do,\u201d and that the smartest way\nto reach those students is through the instructors who know them best. We hope\nto continue to empower teachers of all backgrounds to bring computational\nthinking to their classrooms.\n\n",
        "name": "CS001x: Middle-Years Computer Science",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Harvey Mudd College"
        ],
        "url": "https://www.edx.org/course/middle-years-computer-science-harveymuddx-cs001x",
        "video_url": ""
    },
    {
        "date": "2015-02-09",
        "desc": "There are lots of different skills that go into game development. This course is about key technical concepts in game development, and has been developed for people of many different backgrounds and skills. Some programming experience would be nice but is not required.We start by looking at the central role of game design and common development processes used in the industry. You will see how game software can be broken into parts that work together, and in particular the idea of game engines. We&rsquo;ll explore the relationship between game design, balance and player experience. Lastly we&rsquo;ll look at enhancing player experience though the use of AI techniques.What will I learn?Essential game design elements and the role of a game designerKey game development stages and principles of agile game developmentHow games are like magic and real-time systemsThat programming is made up of simple steps, and how procedure and object oriented programming can help us structure our game codeHow messages and events are key concepts in games at different levels within game architectureAbout graphs and other data structures that help represent game worlds and charactersHow a game design can be described, modelled and implemented as simple game architectureAbout the emergence of game engines and the relationship of games to other data-driven applications, including concurrent and distributed architecturesHow to implement games using iterative step-by-step processes, by selecting, implementing and testingThat rules are central to games, and that game balance relates to fairness and bias for playersHow physics can be used to create realistic force-based movement, for individual characters and groupsAbout AI techniques that can add interesting behaviour to game characters, including decision making, action planning and path planningThis course requires approximately 2 - 4 hours of study per week, but can vary depending on the student. This includes watching videos, and taking quizzes and assessments.If you pass this course you'll receive a Certificate of Achievement. While this certificate isn't a formal qualification or credit, you can use it to demonstrate your interest in learning about this area to potential employers or educational institutions.Where could this lead me?If you're wondering what your future could look like in this area, here are some potential careers you could head towards.Games programmerGames developerSoftware developerGames engineerSyllabusMODULE&nbsp;1:&nbsp;ESSENTIALS OF GAME DESIGN&nbsp;&nbsp;MODULE&nbsp;2:&nbsp;MAKING IT HAPPEN&nbsp;&nbsp;MODULE&nbsp;3:&nbsp;RULES, MOVEMENT AND INTERACTION&nbsp;&nbsp;MODULE&nbsp;4:&nbsp;AI FOR GAMES",
        "desc_html": "There are lots of different skills that go into game development. This course\nis about key technical concepts in game development, and has been developed\nfor people of many different backgrounds and skills. Some programming\nexperience would be nice but is not required.\n\nWe start by looking at the central role of game design and common development\nprocesses used in the industry. You will see how game software can be broken\ninto parts that work together, and in particular the idea of game engines.\nWe'll explore the relationship between game design, balance and player\nexperience. Lastly we'll look at enhancing player experience though the use of\nAI techniques.\n\n**What will I learn?**\n\n  * Essential game design elements and the role of a game designer\n  * Key game development stages and principles of agile game development\n  * How games are like magic and real-time systems\n  * That programming is made up of simple steps, and how procedure and object oriented programming can help us structure our game code\n  * How messages and events are key concepts in games at different levels within game architecture\n  * About graphs and other data structures that help represent game worlds and characters\n  * How a game design can be described, modelled and implemented as simple game architecture\n  * About the emergence of game engines and the relationship of games to other data-driven applications, including concurrent and distributed architectures\n  * How to implement games using iterative step-by-step processes, by selecting, implementing and testing\n  * That rules are central to games, and that game balance relates to fairness and bias for players\n  * How physics can be used to create realistic force-based movement, for individual characters and groups\n  * About AI techniques that can add interesting behaviour to game characters, including decision making, action planning and path planning\n\nThis course requires approximately 2 - 4 hours of study per week, but can vary\ndepending on the student. This includes watching videos, and taking quizzes\nand assessments.\n\nIf you pass this course you'll receive a Certificate of Achievement. While\nthis certificate isn't a formal qualification or credit, you can use it to\ndemonstrate your interest in learning about this area to potential employers\nor educational institutions.\n\n**Where could this lead me?**\n\nIf you're wondering what your future could look like in this area, here are\nsome potential careers you could head towards.\n\n  * Games programmer\n  * Games developer\n  * Software developer\n  * Games engineer\n\n## Syllabus\n\nMODULE 1: ESSENTIALS OF GAME DESIGN\n\n|   |  \n---|---|---  \n  \nMODULE 2: MAKING IT HAPPEN\n\n|   |  \n  \nMODULE 3: RULES, MOVEMENT AND INTERACTION\n\n|   |  \n  \nMODULE 4: AI FOR GAMES\n\n",
        "name": "Concepts in Game Development",
        "provider": "Open2Study",
        "rating": "4.125",
        "reviews": "8",
        "university": [
            "Swinburne University of Technology"
        ],
        "url": "https://www.open2study.com//node/1300",
        "video_url": "https://www.youtube.com/embed/-aATILqiP7o?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-02-06",
        "desc": "Artificial intelligence is already all around you, from web search to video games. AI methods plan your driving directions, filter your spam, and focus your cameras on faces. AI lets you guide your phone with your voice and read foreign newspapers in English. Beyond today's applications, AI is at the core of many new technologies that will shape our future. From self-driving cars to household robots, advancements in AI help transform science fiction into real systems.The course will introduce the basic ideas and techniques underlying the design of intelligent computer systems. CS188.1x focuses on Behavior from Computation and will cover the following areas:Statistical and decision\u2013theoretic modeling paradigm. By the end of this course, you will have built autonomous agents that efficiently make decisions in stochastic and in adversarial settings.Reasoning and Learning. With this additional machinery your agents will be able to draw inferences in uncertain environments and optimize actions for arbitrary reward structures. Your machine learning algorithms will classify handwritten digits and photographs.Applications for a wide variety of artificial intelligence problems. The techniques you learn in CS188x will serve as the foundation for further study in any application area you choose to pursue.Join us today to learn more about how AI affects your life, and where it is headed in the future.",
        "desc_html": "Artificial intelligence is already all around you, from web search to video\ngames. AI methods plan your driving directions, filter your spam, and focus\nyour cameras on faces. AI lets you guide your phone with your voice and read\nforeign newspapers in English. Beyond today's applications, AI is at the core\nof many new technologies that will shape our future. From self-driving cars to\nhousehold robots, advancements in AI help transform science fiction into real\nsystems.  \n  \nThe course will introduce the basic ideas and techniques underlying the design\nof intelligent computer systems. CS188.1x focuses on Behavior from Computation\nand will cover the following areas:  \n  \nStatistical and decision\u2013theoretic modeling paradigm. By the end of this\ncourse, you will have built autonomous agents that efficiently make decisions\nin stochastic and in adversarial settings.  \nReasoning and Learning. With this additional machinery your agents will be\nable to draw inferences in uncertain environments and optimize actions for\narbitrary reward structures. Your machine learning algorithms will classify\nhandwritten digits and photographs.  \nApplications for a wide variety of artificial intelligence problems. The\ntechniques you learn in CS188x will serve as the foundation for further study\nin any application area you choose to pursue.  \nJoin us today to learn more about how AI affects your life, and where it is\nheaded in the future.\n\n",
        "name": "CS188.1x: Artificial Intelligence",
        "provider": "edX",
        "rating": "4.6",
        "reviews": "15",
        "university": [
            "University of California, Berkeley"
        ],
        "url": "https://www.edx.org/course/artificial-intelligence-uc-berkeleyx-cs188-1x-0",
        "video_url": "https://www.youtube.com/embed/ZevD-DY2eQE?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-02-06",
        "desc": "L'analyse num\u00e9rique fait partie de ce que l'on appelle aujourd'hui \"Scientific Computing\" ou encore \"Computational Sciences\". Il s'agit de faire des simulations num\u00e9riques de ph\u00e9nom\u00e8nes complexes, par exemple l'\u00e9coulement autour d'un avion, le retrait pass\u00e9 ou futur d'un glacier, ou encore des effets sp\u00e9ciaux pour l'industrie du cin\u00e9ma.Le cheminement permettant d'obtenir une simulation num\u00e9rique est le suivant.D\u00e9rivation d'un mod\u00e8le math\u00e9matique. Par exemple, dans le cas de la chute d'un corps, les \u00e9quations de Newton \"masse x acc\u00e9leration = forces\" permettent d'obtenir une \u00e9quation diff\u00e9rentielle, \u00e0 laquelle il faut ajouter une condition initiale sur la position et sur la vitesse du corps.Analyse math\u00e9matique : le mod\u00e8le math\u00e9matique obtenu est-il bien pos\u00e9 ? Par exemple, l'existence d'une solution unique de l'\u00e9quation diff\u00e9rentielle demande que certaines conditions sur les forces soient satisfaites.Analyse num\u00e9rique : en g\u00e9n\u00e9ral, la solution du mod\u00e8le math\u00e9matique ne peut pas \u00eatre obtenue de mani\u00e8re explicite. Il convient d'utiliser un algorithme permettant d'approcher la solution gr\u00e2ce \u00e0 un ordinateur. Dans la mesure du possible on souhaite quantifier l'erreur entre la solution du mod\u00e8le math\u00e9matique (que l'on ne connait pas) et son approximation num\u00e9rique (que l'on va calculer sur un ordinateur). Pour le choix de l'algorithme, on tiendra compte du nombre d'op\u00e9rations n\u00e9cessaire au calcul de la solution approch\u00e9e.Impl\u00e9mentation sur ordinateur (programmation).Tests, validation et comparaison avec l'exp\u00e9rience ou d'autres r\u00e9sultats num\u00e9riques.SyllabusNous allons \u00e9tudier les chapitres suivants du livre\u00a0 \"Introduction \u00e0 l'analyse num\u00e9rique\", J. Rappaz M. Picasso, Ed.PPUR:Chapitre 1 : interpolation, comment approcher une fonction par un polyn\u00f4me ?Chapitre 2 : comment approcher num\u00e9riquement des d\u00e9riv\u00e9es par des formules de diff\u00e9rences finies ?Chapitre 3 : comment approcher num\u00e9riquement des int\u00e9grales par des formules de quadrature ?Chapitres 4,5,6 : comment r\u00e9soudre des (grands) syst\u00e8mes lin\u00e9aires ? Seules les m\u00e9thodes directes seront abord\u00e9es.Chapitre 8 : comment r\u00e9soudre des \u00e9quations et syst\u00e8mes d\u2019\u00e9quations nonlin\u00e9aires ?Chapitre 9 : comment approcher num\u00e9riquement la solution d\u2019une \u00e9quation diff\u00e9rentielle (probl\u00e8me \u00e0 valeur initiale) ?Chapitre 10 : comment approcher num\u00e9riquement la solution d\u2019un \nprobl\u00e8me aux limites unidimensionnel par une m\u00e9thode de diff\u00e9rences \nfinies ?",
        "desc_html": "L'analyse num\u00e9rique fait partie de ce que l'on appelle aujourd'hui \"Scientific\nComputing\" ou encore \"Computational Sciences\". Il s'agit de faire des\nsimulations num\u00e9riques de ph\u00e9nom\u00e8nes complexes, par exemple l'\u00e9coulement\nautour d'un avion, le retrait pass\u00e9 ou futur d'un glacier, ou encore des\neffets sp\u00e9ciaux pour l'industrie du cin\u00e9ma.  \n  \nLe cheminement permettant d'obtenir une simulation num\u00e9rique est le suivant.  \n  \n\n  * D\u00e9rivation d'un mod\u00e8le math\u00e9matique. Par exemple, dans le cas de la chute d'un corps, les \u00e9quations de Newton \"masse x acc\u00e9leration = forces\" permettent d'obtenir une \u00e9quation diff\u00e9rentielle, \u00e0 laquelle il faut ajouter une condition initiale sur la position et sur la vitesse du corps.\n  \n\n  * Analyse math\u00e9matique : le mod\u00e8le math\u00e9matique obtenu est-il bien pos\u00e9 ? Par exemple, l'existence d'une solution unique de l'\u00e9quation diff\u00e9rentielle demande que certaines conditions sur les forces soient satisfaites.  \n\n  \n\n  * Analyse num\u00e9rique : en g\u00e9n\u00e9ral, la solution du mod\u00e8le math\u00e9matique ne peut pas \u00eatre obtenue de mani\u00e8re explicite. Il convient d'utiliser un algorithme permettant d'approcher la solution gr\u00e2ce \u00e0 un ordinateur. Dans la mesure du possible on souhaite quantifier l'erreur entre la solution du mod\u00e8le math\u00e9matique (que l'on ne connait pas) et son approximation num\u00e9rique (que l'on va calculer sur un ordinateur). Pour le choix de l'algorithme, on tiendra compte du nombre d'op\u00e9rations n\u00e9cessaire au calcul de la solution approch\u00e9e.\n  \n\n  * Impl\u00e9mentation sur ordinateur (programmation).\n  \n\n  * Tests, validation et comparaison avec l'exp\u00e9rience ou d'autres r\u00e9sultats num\u00e9riques.  \n\n## Syllabus\n\nNous allons \u00e9tudier les chapitres suivants du livre\u00a0 \"Introduction \u00e0 l'analyse\nnum\u00e9rique\", J. Rappaz M. Picasso, Ed. [ PPUR](http://www.ppur.com/en/product/3\n40/9782880748517/Introduction%20a%20lanalyse%20numerique) :  \n  \n\n  * Chapitre 1 : interpolation, comment approcher une fonction par un polyn\u00f4me ?\n  * Chapitre 2 : comment approcher num\u00e9riquement des d\u00e9riv\u00e9es par des formules de diff\u00e9rences finies ?\n  * Chapitre 3 : comment approcher num\u00e9riquement des int\u00e9grales par des formules de quadrature ?\n  * Chapitres 4,5,6 : comment r\u00e9soudre des (grands) syst\u00e8mes lin\u00e9aires ? Seules les m\u00e9thodes directes seront abord\u00e9es.\n  * Chapitre 8 : comment r\u00e9soudre des \u00e9quations et syst\u00e8mes d\u2019\u00e9quations nonlin\u00e9aires ?\n  * Chapitre 9 : comment approcher num\u00e9riquement la solution d\u2019une \u00e9quation diff\u00e9rentielle (probl\u00e8me \u00e0 valeur initiale) ?\n  * Chapitre 10 : comment approcher num\u00e9riquement la solution d\u2019un probl\u00e8me aux limites unidimensionnel par une m\u00e9thode de diff\u00e9rences finies ?\n  \n  \n\n",
        "name": "Analyse num\u00e9rique pour ing\u00e9nieurs",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne"
        ],
        "url": "https://www.coursera.org/course/analysenumerique",
        "video_url": ""
    },
    {
        "date": "2015-02-04",
        "desc": "The SAP HANA Cloud Platform is a full featured, open standards based, in-memory cloud platform designed for today\u2019s increasingly networked, mobile, social and data-driven world. Developers can quickly build impactful, highly scalable applications leveraging the massive speed and scale of SAP HANA.This Platform-as-a-Service (PaaS) offering allows you to focus on developing your software and use an enterprise-ready pre-installed environment in the SAP cloud to deploy and run your applications in a secure and reliable way.This course will introduce you to the SAP HANA Cloud Platform and show you how to take advantage of the various services it provides. Ideally you should have basic skills in Java programming as well as basic skills in using the Eclipse development environment. The registration, learning content, and the final exam are free of charge. You will be able to get some practical experience of the platform by using a free developer trial account. We\u2019ll explain how you can get access at start of the course.",
        "desc_html": "The SAP HANA Cloud Platform is a full featured, open standards based, in-\nmemory cloud platform designed for today\u2019s increasingly networked, mobile,\nsocial and data-driven world. Developers can quickly build impactful, highly\nscalable applications leveraging the massive speed and scale of SAP HANA.  \n  \nThis Platform-as-a-Service (PaaS) offering allows you to focus on developing\nyour software and use an enterprise-ready pre-installed environment in the SAP\ncloud to deploy and run your applications in a secure and reliable way.  \n  \nThis course will introduce you to the SAP HANA Cloud Platform and show you how\nto take advantage of the various services it provides. Ideally you should have\nbasic skills in Java programming as well as basic skills in using the Eclipse\ndevelopment environment. The registration, learning content, and the final\nexam are free of charge. You will be able to get some practical experience of\nthe platform by using a free developer trial account. We\u2019ll explain how you\ncan get access at start of the course.\n\n",
        "name": "Introduction to SAP HANA Cloud Platform",
        "provider": "openSAP",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.sap.com/courses/hanacloud1-2",
        "video_url": ""
    },
    {
        "date": "2015-02-03",
        "desc": "Smartphones, tablettes, ces appareils ultra-portables sont d&eacute;sormais omnipr&eacute;sents dans notre vie quotidienne. Il y a des applications pour presque tout : retoucher ses photos, r&eacute;server une place de cin&eacute;ma, r&eacute;viser le code de la route, choisir une recette de cuisine ou trouver les restaurants les plus proches.Derri&egrave;re ces applications il y a un savoir-faire sp&eacute;cifique &agrave; la programmation sur plateformes mobiles. En effet, contrairement aux ordinateurs classiques, les contraintes impos&eacute;es par les caract&eacute;ristiques ces terminaux font que certains &laquo;gestes simples&raquo; pour l'utilisateur, comme faire d&eacute;rouler une liste de donn&eacute;es, impliquent en r&eacute;alit&eacute; des m&eacute;canismes plus complexes.Ce MOOC de 6 semaines est le premier d'une s&eacute;rie de deux MOOCs consacr&eacute;s &agrave; la programmation sur iPhone et iPad. Il se concentre sur le d&eacute;veloppement d'applications &laquo;mono-vues&raquo; et pr&eacute;sente en d&eacute;tail les principes d'une interaction r&eacute;ussie de vos applications avec ses utilisateurs. Nous avons &eacute;galement d&eacute;cid&eacute; de prendre en compte les derni&egrave;res nouveaut&eacute;s introduites dans iOS. Ainsi, ce MOOC fera la part &eacute;gale entre Objective-C, le langage &laquo;traditionnel&raquo; de d&eacute;veloppement sur cette plateforme, et le tout nouveau langage Swift (annonc&eacute; en Juin 2014 &agrave; la WWWDC et stabilis&eacute; en septembre 2014 avec la sortie officielle d'iOS 8). Un parall&egrave;le avec la probl&eacute;matique du d&eacute;veloppement de syst&egrave;mes embarqu&eacute;s est &eacute;galement fait.Cette nouvelle s&eacute;rie de MOOCs tient &eacute;galement compte des nombreux retours de l'&eacute;dition d'Avril 2014 &eacute;galement pr&eacute;sent&eacute;e sur FUN.Si vous suivez attentivement ce cours et r&eacute;alisez les exercices propos&eacute;s, vous devriez &ecirc;tre autonomes dans la r&eacute;alisation d'application pour l'&eacute;cosyst&egrave;me iOS. Vous serez aussi capables de travailler non seulement dans l'environnement de d&eacute;veloppement d'Apple mais aussi dans des environnements similaires.Les exercices sont r&eacute;alis&eacute;s avec iOS8 publi&eacute; en septembre 2014. Nous recommandons donc l'usage de Xcode 6.01 ou ult&eacute;rieur (acc&egrave;s gratuit sur le site d'Apple).&Agrave; QUI S'ADRESSE CE COURS ?Ce cours s'adresse aux personnes comp&eacute;tentes en programmation et poss&eacute;dant de bonnes notions sur l'utilisation des langages objets (Objective C, C++, Java, Ada), des langages proc&eacute;duraux (C) ainsi que des principes de base en syst&egrave;me d'exploitation (interruptions, notion d'&eacute;v&eacute;nement, etc).PR&Eacute;-REQUISLes pr&eacute;requis sont un niveau de connaissances &eacute;quivalent &agrave; celui d'une licence en informatique. Si, avant de suivre cet enseignement, vous souhaitez revoir certaines notions de programmation, vous pouvez consulter les r&eacute;f&eacute;rences pr&eacute;sent&eacute;es ci-apr&egrave;s (que vous devriez trouver en biblioth&egrave;que):Langage C:B. Kernighan &amp; D. Ritchie, Le langage C norme ANSI (traduction), DUNODen ligne -&nbsp;C code referenceLangage C++:S. Meyer, Effective C++, 3rd Edition: 55 Specific Ways to Improve Your Programs and Designs, Addison&ndash;Wesley, 2005en ligne -&nbsp;Programmation C++ (d&eacute;butant)Langage Objective C:J. DeVoe, Objective C, Wileyen ligne -&nbsp;Programming with Objective-CLangage Java:K. Arnold, J. Gosling, D. Holmes, The Java Programming Language, 4th Edition, Addison-Wesley Professionalen ligne -&nbsp;Apprendre Java - Cours et exercices",
        "desc_html": "Smartphones, tablettes, ces appareils ultra-portables sont desormais\nomnipresents dans notre vie quotidienne. Il y a des applications pour presque\ntout : retoucher ses photos, reserver une place de cinema, reviser le code de\nla route, choisir une recette de cuisine ou trouver les restaurants les plus\nproches.\n\nDerriere ces applications il y a un savoir-faire specifique a la programmation\nsur plateformes mobiles. En effet, contrairement aux ordinateurs classiques,\nles contraintes imposees par les caracteristiques ces terminaux font que\ncertains \u00abgestes simples\u00bb pour l'utilisateur, comme faire derouler une liste\nde donnees, impliquent en realite des mecanismes plus complexes.\n\nCe MOOC de 6 semaines est le premier d'une serie de deux MOOCs consacres a la\nprogrammation sur iPhone et iPad. Il se concentre sur le developpement\nd'applications \u00abmono-vues\u00bb et presente en detail les principes d'une\ninteraction reussie de vos applications avec ses utilisateurs. Nous avons\negalement decide de prendre en compte les dernieres nouveautes introduites\ndans iOS. Ainsi, ce MOOC fera la part egale entre Objective-C, le langage\n\u00abtraditionnel\u00bb de developpement sur cette plateforme, et le tout nouveau\nlangage Swift (annonce en Juin 2014 a la WWWDC et stabilise en septembre 2014\navec la sortie officielle d'iOS 8). Un parallele avec la problematique du\ndeveloppement de systemes embarques est egalement fait.\n\nCette nouvelle serie de MOOCs tient egalement compte des nombreux retours de\nl'edition d'Avril 2014 egalement presentee sur FUN.\n\nSi vous suivez attentivement ce cours et realisez les exercices proposes, vous\ndevriez etre autonomes dans la realisation d'application pour l'ecosysteme\niOS. Vous serez aussi capables de travailler non seulement dans\nl'environnement de developpement d'Apple mais aussi dans des environnements\nsimilaires.\n\nLes exercices sont realises avec iOS8 publie en septembre 2014. Nous\nrecommandons donc l'usage de Xcode 6.01 ou ulterieur ([acces gratuit sur le\nsite d'Apple](https://developer.apple.com/xcode/)).\n\n**\u00c0 QUI S'ADRESSE CE COURS ?**\n\nCe cours s'adresse aux personnes competentes en programmation et possedant de\nbonnes notions sur l'utilisation des langages objets (Objective C, C++, Java,\nAda), des langages proceduraux (C) ainsi que des principes de base en systeme\nd'exploitation (interruptions, notion d'evenement, etc).\n\n**PR\u00c9-REQUIS**\n\nLes prerequis sont un niveau de connaissances equivalent a celui d'une licence\nen informatique. Si, avant de suivre cet enseignement, vous souhaitez revoir\ncertaines notions de programmation, vous pouvez consulter les references\npresentees ci-apres (que vous devriez trouver en bibliotheque):\n\n  * **Langage C:**  \nB. Kernighan & D. Ritchie, Le langage C norme ANSI (traduction), DUNOD  \n**en ligne - **[C code reference](http://code-reference.com/c)\n  * **Langage C++:**  \nS. Meyer, Effective C++, 3rd Edition: 55 Specific Ways to Improve Your\nPrograms and Designs, Addison-Wesley, 2005  \n**en ligne - **[Programmation C++ (debutant)](http://fr.wikibooks.org/wiki/Programmation_C%2B%2B_\\(d%C3%A9butant\\))\n  * **Langage Objective C:**  \nJ. DeVoe, Objective C, Wiley  \n**en ligne - **[Programming with Objective-C](https://developer.apple.com/library/mac/documentation/cocoa/conceptual/ProgrammingWithObjectiveC/Introduction/Introduction.html)\n  * **Langage Java:**  \nK. Arnold, J. Gosling, D. Holmes, The Java Programming Language, 4th Edition,\nAddison-Wesley Professional  \n**en ligne - **[Apprendre Java - Cours et exercices](http://www.infres.enst.fr/~hudry/coursJava/)\n\n",
        "name": "Programmation sur iPhone et iPad (partie I)",
        "provider": "France Universit\u00e9 Numerique",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Universit\u00e9 Pierre et Marie CURIE"
        ],
        "url": "https://www.france-universite-numerique-mooc.fr/courses/UPMC/18001S02/Trimestre_1_2015/about",
        "video_url": ""
    },
    {
        "date": "2015-02-02",
        "desc": "The impact of technology and networks on our lives, culture, and society continues to increase. The very fact that you can take this course from anywhere in the world requires a technological infrastructure that was designed, engineered, and built over the past sixty years. To function in an information-centric world, we need to understand the workings of network technology. This course will open up the Internet and show you how it was created, who created it and how it works. Along the way we will meet many of the innovators who developed the Internet and Web technologies that we use today.What You Will LearnAfter this course you will not take the Internet and Web for granted. You will be better informed about important technological issues currently facing society. You will realize that the Internet and Web are spaces for innovation and you will get a better understanding of how you might fit into that innovation. If you get excited about the material in this course, it is a great lead-in to taking a course in Web design, Web development, programming, or even network administration. At a minimum, you will be a much wiser network citizen.SyllabusWeek 1: Introduction to the Course and The Dawn of Electronic Computing (1940-1960)Week 2: The First Internet (1960-1990)Week 3: The World Wide Web (1990-1995)Week 4: Commercialization and Growth (1995-2000)Week 5: Internets and PacketsWeek 6: Transports and SecurityWeek 7: Networked ApplicationsWeek 8: Security - Protecting InformationWeek 9: Security - Establishing IdentityFinal Exam",
        "desc_html": "The impact of technology and networks on our lives, culture, and society\ncontinues to increase. The very fact that you can take this course from\nanywhere in the world requires a technological infrastructure that was\ndesigned, engineered, and built over the past sixty years. To function in an\ninformation-centric world, we need to understand the workings of network\ntechnology. This course will open up the Internet and show you how it was\ncreated, who created it and how it works. Along the way we will meet many of\nthe innovators who developed the Internet and Web technologies that we use\ntoday.  \n  \n\n## What You Will Learn\n\nAfter this course you will not take the Internet and Web for granted. You will\nbe better informed about important technological issues currently facing\nsociety. You will realize that the Internet and Web are spaces for innovation\nand you will get a better understanding of how you might fit into that\ninnovation. If you get excited about the material in this course, it is a\ngreat lead-in to taking a course in Web design, Web development, programming,\nor even network administration. At a minimum, you will be a much wiser network\ncitizen.  \n\n## Syllabus\n\nWeek 1: Introduction to the Course and The Dawn of Electronic Computing\n(1940-1960)  \nWeek 2: The First Internet (1960-1990)  \nWeek 3: The World Wide Web (1990-1995)  \nWeek 4: Commercialization and Growth (1995-2000)  \nWeek 5: Internets and Packets  \nWeek 6: Transports and Security  \nWeek 7: Networked Applications  \nWeek 8: Security - Protecting Information  \nWeek 9: Security - Establishing Identity  \nFinal Exam\n\n",
        "name": "Internet History, Technology, and Security",
        "provider": "Coursera",
        "rating": "4.7692307692308",
        "reviews": "13",
        "university": [
            "University of Michigan"
        ],
        "url": "https://www.coursera.org/course/insidetheinternet",
        "video_url": ""
    },
    {
        "date": "2015-02-02",
        "desc": "Want to learn computer programming, but unsure where to begin? This is the course for you! Scratch is the computer programming language that makes it easy and fun to create interactive stories, games and animations and share them online.This course is an introduction to computer science using the programming language Scratch, developed by MIT. Starting with the basics of using Scratch, the course will stretch your mind and challenge you. You will learn how to create amazing games, animated images and songs in just minutes with a simple \u201cdrag and drop\u201d interface.No previous programming knowledge needed. Join us as you start your computer science journey.This material is based upon work supported by the National Science Foundation under Grant No. 1044106. Any opinions, findings and conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of the National Science Foundation (NSF).",
        "desc_html": "Want to learn computer programming, but unsure where to begin? This is the\ncourse for you! Scratch is the computer programming language that makes it\neasy and fun to create interactive stories, games and animations and share\nthem online.  \n  \nThis course is an introduction to computer science using the programming\nlanguage Scratch, developed by MIT. Starting with the basics of using Scratch,\nthe course will stretch your mind and challenge you. You will learn how to\ncreate amazing games, animated images and songs in just minutes with a simple\n\u201cdrag and drop\u201d interface.  \n  \nNo previous programming knowledge needed. Join us as you start your computer\nscience journey.  \n  \nThis material is based upon work supported by the National Science Foundation\nunder Grant No. 1044106. Any opinions, findings and conclusions or\nrecommendations expressed in this material are those of the author(s) and do\nnot necessarily reflect the views of the National Science Foundation (NSF).\n\n",
        "name": "CS002x: Programming in Scratch",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Harvey Mudd College"
        ],
        "url": "https://www.edx.org/course/programming-scratch-harveymuddx-cs002x",
        "video_url": "https://www.youtube.com/embed/sWYNZLu1o-M?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-02-02",
        "desc": "Cloud computing systems today, whether open-source or used inside companies, are built using a common set ofcore techniques, algorithms, and design philosophies\u2014all centered around distributed systems. Learn about such fundamental distributed computing \"concepts\" for cloud computing.Some of these concepts include:Clouds, MapReduce, key-value storesClassical precursorsWidely-used algorithmsClassical algorithmsScalabilityTrending areasAnd more!Understand&nbsp;how these techniques work&nbsp;inside today\u2019s most widely-used cloud computing systems. Get your hands dirty using these concepts with provided homework exercises. In the&nbsp;optional programming track, implement some of these concepts in template assignments provided in C++ programming language.You will also watch interviews with leading managers and researchers, from both industry and academia.SyllabusThis course will be broken up into 5 weekly modules covering the following topics:Week 1:Orientation, Intro to Clouds, MapReduceWeek 2:Gossip, Membership, GridsWeek 3:P2P SystemsWeek 4:Key-Value Stores, Time and OrderingWeek 5:Snapshots, Multicast, PaxosAnd there's more! There are 5 more weeks of topics inCloud Computing Concepts: Part 2.",
        "desc_html": "Cloud computing systems today, whether open-source or used inside companies,\nare built using a common set of **core techniques, algorithms, and design\nphilosophies**\u2014all centered around distributed systems. Learn about such\nfundamental distributed computing \"concepts\" for cloud computing.\n\nSome of these concepts include:\n\n  * Clouds, MapReduce, key-value stores\n  * Classical precursors\n  * Widely-used algorithms\n  * Classical algorithms \n  * Scalability\n  * Trending areas\n  * And more!\n\nUnderstand **how these techniques work** inside today\u2019s most widely-used cloud\ncomputing systems. Get your hands dirty using these concepts with provided\nhomework exercises. In the **optional programming track**, implement some of\nthese concepts in template assignments provided in C++ programming language.\n\nYou will also watch interviews with leading managers and researchers, from\nboth industry and academia.\n\n## Syllabus\n\nThis course will be broken up into 5 weekly modules covering the following\ntopics:  \n\n**Week 1: **Orientation, Intro to Clouds, MapReduce \n\n**Week 2: **Gossip, Membership, Grids \n\n**Week 3: **P2P Systems\n\n**Week 4: **Key-Value Stores, Time and Ordering\n\n**Week 5: **Snapshots, Multicast, Paxos\n\n**And there's more! There are 5 more weeks of topics in [Cloud Computing Concepts: Part 2](https://www.coursera.org/course/cloudcomputing2).**\n\n",
        "name": "Cloud Computing Concepts",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of Illinois at Urbana-Champaign"
        ],
        "url": "https://www.coursera.org/course/cloudcomputing",
        "video_url": ""
    },
    {
        "date": "2015-02-02",
        "desc": "Programming is everywhere: in dishwashers, cars and even space shuttles. This course will help you to understand how programs work and guide you through creating your own computer program &ndash; a mobile game.Whether you&rsquo;re a complete newcomer to programming, or have some basic skills, this course provides a challenging but fun way to start programming in Java. Over seven weeks we will introduce the basic constructs that are used in many programming languages and help you to put this knowledge into practice by changing the game code we have provided. You&rsquo;ll have the freedom to create a game that&rsquo;s unique to you, with support from the community and educators if you get stuck. You&rsquo;ll learn how to create algorithms to solve problems and translate these into code, using the same tools as industry professionals worldwide.The course will combine video introductions, on-screen examples, downloadable guides, articles and discussions to help you understand the principles behind computer programs and the building blocks that are used to create them. Multiple choice quizzes will help you to check your understanding, while exercises each week will show you how to use your new skills to improve your game. Expert guidance from staff at the&nbsp;School of Systems Engineering&nbsp;at the University of Reading, UK, will help to you to get hands-on experience of programming.At the end of the course you&rsquo;ll have a complete game that can be played on an Android phone or tablet, or even your computer. You can share it with your friends and family, use your new knowledge to improve the game further, or even create new games of your own!",
        "desc_html": "Programming is everywhere: in dishwashers, cars and even space shuttles. This\ncourse will help you to understand how programs work and guide you through\ncreating your own computer program - a mobile game.\n\nWhether you're a complete newcomer to programming, or have some basic skills,\nthis course provides a challenging but fun way to start programming in Java.\nOver seven weeks we will introduce the basic constructs that are used in many\nprogramming languages and help you to put this knowledge into practice by\nchanging the game code we have provided. You'll have the freedom to create a\ngame that's unique to you, with support from the community and educators if\nyou get stuck. You'll learn how to create algorithms to solve problems and\ntranslate these into code, using the same tools as industry professionals\nworldwide.\n\nThe course will combine video introductions, on-screen examples, downloadable\nguides, articles and discussions to help you understand the principles behind\ncomputer programs and the building blocks that are used to create them.\nMultiple choice quizzes will help you to check your understanding, while\nexercises each week will show you how to use your new skills to improve your\ngame. Expert guidance from staff at the [School of Systems\nEngineering](http://www.reading.ac.uk/sse/) at the University of Reading, UK,\nwill help to you to get hands-on experience of programming.\n\nAt the end of the course you'll have a complete game that can be played on an\nAndroid phone or tablet, or even your computer. You can share it with your\nfriends and family, use your new knowledge to improve the game further, or\neven create new games of your own!\n\n",
        "name": "Begin Programming: Build your First Mobile Game",
        "provider": "FutureLearn",
        "rating": "5",
        "reviews": "1",
        "university": [
            "University of Reading"
        ],
        "url": "https://www.futurelearn.com/courses/begin-programming-4",
        "video_url": "https://www.youtube.com/embed/IZep0JYz2Jo?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-02-02",
        "desc": "A modern VLSI chip is a remarkably complex beast: &nbsp;billions of transistors, millions of logic gates deployed for computation and control, big blocks of memory, embedded blocks of pre-designed functions designed by third parties (called \u201cintellectual property\u201d or IP blocks). &nbsp;How do people manage to design these complicated chips? &nbsp;Answer: &nbsp;a sequence of computer aided design (CAD) tools takes an abstract description of the chip, and refines it step-wise to a final design. This class focuses on the major design tools used in the creation of an Application Specific Integrated Circuit (ASIC) or System on Chip (SoC) design. &nbsp;Our focus is on the key representations that make it possible to synthesize, and to verify, these designs, as they move from logic to layout. &nbsp;Our goal is for students to understand how the tools themselves work, at the level of their fundamental algorithms and data structures. You should be taking this course if (1) you are interested in building VLSI design tools; &nbsp;(2) you are interested in designing VLSI chips, and you want to know why the tools do what they do; &nbsp;(3) you just like cool algorithms, that work on big cool problems that involve bits, and gates, and geometry, and graphs, and matrices, and time, and...SyllabusTopics covered will include: Computational boolean algebra; logic verification; logic synthesis (2-level and multi-level); technology mapping; timing analysis; ASIC placement and routing.",
        "desc_html": "A modern VLSI chip is a remarkably complex beast:  billions of transistors,\nmillions of logic gates deployed for computation and control, big blocks of\nmemory, embedded blocks of pre-designed functions designed by third parties\n(called \u201cintellectual property\u201d or IP blocks).  How do people manage to design\nthese complicated chips?  Answer:  a sequence of computer aided design (CAD)\ntools takes an abstract description of the chip, and refines it step-wise to a\nfinal design. This class focuses on the major design tools used in the\ncreation of an Application Specific Integrated Circuit (ASIC) or System on\nChip (SoC) design.  Our focus is on the key representations that make it\npossible to synthesize, and to verify, these designs, as they move from logic\nto layout.  \n  \nOur goal is for students to understand how the tools themselves work, at the\nlevel of their fundamental algorithms and data structures. You should be\ntaking this course if (1) you are interested in building VLSI design tools;\n(2) you are interested in designing VLSI chips, and you want to know why the\ntools do what they do;  (3) you just like cool algorithms, that work on big\ncool problems that involve bits, and gates, and geometry, and graphs, and\nmatrices, and time, and...\n\n## Syllabus\n\nTopics covered will include: Computational boolean algebra; logic\nverification; logic synthesis (2-level and multi-level); technology mapping;\ntiming analysis; ASIC placement and routing.\n\n",
        "name": "VLSI CAD:  Logic to Layout",
        "provider": "Coursera",
        "rating": "5",
        "reviews": "1",
        "university": [
            "University of Illinois at Urbana-Champaign"
        ],
        "url": "https://www.coursera.org/course/vlsicad",
        "video_url": ""
    },
    {
        "date": "2015-02-02",
        "desc": "This\n course discusses the computational approach in modern physics in a \nclear yet accessible way. Individual modules contain in-depth \ndiscussions of algorithms ranging from basic enumeration methods to cutting-edge Markov-chain techniques. Emphasis will be put on \napplications in classical and quantum physics.\u00a0The\u00a0focus\n will be on subjects such as Monte Carlo sampling, molecular \ndynamics, transition phases in hard-sphere liquids, simulated annealing \nfor solving geometrical constraints, perfect sampling of classical spin \nmodels, to aspects of quantum Monte Carlo algorithms, Bose-Einstein \ncondensation, and many-body physics with fermions.The emphasis is on orientation. Discussion of implementation details will be kept to a minimum.The course is entirely\nself-contained. It heavily relies on concise algorithms\u00a0 (each\nwith between 10 and\u00a0 50 lines of Python code). Modules lead from\nelementary discussions to the rich and difficult problems in\ncontemporary physics, and are of interest to a wide range of students\nin the natural sciences.SyllabusWeeks and Themes:Introduction to Monte Carlo algorithmsHard disks: From Classical Mechanics to Statistical MechanicsEnergy, Free energy, and Phase transitionsSampling and integration: From Gaussians to the Maxwell and Boltzmann distributionsQuantum Statistical Mechanics: Density matrix and path integralQuantum Monte Carlo and path-integral samplingBose-Einstein condensationClassical spin models: From basic enumerations to the Cluster Monte Carlo algorithmsClassical spin models: \"Faster-than-the clock\" algorithmsThe Alpha and Omega of Monte Carlo: From zero \nvariances (in Buffon's needles) to infinite variances (in\n L\u00e9vy's stable distributions)",
        "desc_html": "This course discusses the computational approach in modern physics in a clear\nyet accessible way. Individual modules contain in-depth discussions of\nalgorithms ranging from basic enumeration methods to cutting-edge Markov-chain\ntechniques. Emphasis will be put on applications in classical and quantum\nphysics.\u00a0The\u00a0focus will be on subjects such as Monte Carlo sampling, molecular\ndynamics, transition phases in hard-sphere liquids, simulated annealing for\nsolving geometrical constraints, perfect sampling of classical spin models, to\naspects of quantum Monte Carlo algorithms, Bose-Einstein condensation, and\nmany-body physics with fermions.\u00a0The emphasis is on orientation. Discussion of\nimplementation details will be kept to a minimum.\n\nThe course is entirely self-contained. It heavily relies on concise algorithms\n(each with between 10 and\u00a0 50 lines of Python code). Modules lead from\nelementary discussions to the rich and difficult problems in contemporary\nphysics, and are of interest to a wide range of students in the natural\nsciences.\n\n  \n\n## Syllabus\n\nWeeks and Themes:  \n  \n\n  1. **Introduction to Monte Carlo algorithms  \n  \n**\n  2. **Hard disks: From Classical Mechanics to Statistical Mechanics**  \n  \n****\n  3. **********Energy, Free energy, and Phase transitions****  \n  \n**************\n  4. **Sampling and integration: From Gaussians to the Maxwell and Boltzmann distributions  \n  \n**\n  5. **Quantum Statistical Mechanics: Density matrix and path integral  \n  \n**\n  6. **Quantum Monte Carlo and path-integral sampling  \n  \n**\n  7. **Bose-Einstein condensation  \n  \n**\n  8. **Classical spin models: From basic enumerations to the Cluster Monte Carlo algorithms  \n  \n**\n  9. **Classical spin models: \"Faster-than-the clock\" algorithms  \n  \n**\n  10. **The Alpha and Omega of Monte Carlo: From zero variances (in Buffon's needles) to infinite variances (in L\u00e9vy's stable distributions**)\n\n  \n\n",
        "name": "Statistical Mechanics: Algorithms and Computations",
        "provider": "Coursera",
        "rating": "5",
        "reviews": "1",
        "university": [
            "\u00c9cole normale sup\u00e9rieure"
        ],
        "url": "https://www.coursera.org/course/smac",
        "video_url": ""
    },
    {
        "date": "2015-02-02",
        "desc": "How do you design a mobile app that truly changes people's lives? How can you understand how a new service is being used, both quantitatively and qualitatively? How can you use all of the rich sensing and I/O capabilities of mobile devices to create experiences that go far beyond what's possible on a traditional computer?Mobile devices are changing the ways that we interact with each other and information in the world. This course will take you from a domain of interest, through generative research, design, usability, implementation and field evaluation of a novel mobile experience. You'll finish the course with a working, field-tested application suitable for release in the app store as well as a deep understanding of human interaction with mobile devices and services.Based on a popular MIT class that has been taught since 2006 by Frank Bentley of Yahoo Labs and Ed Barrett, a Senior Lecturer at MIT, this course will explore what makes mobile devices unique. A primary focus will be on studying existing behavior and using key findings for design. While writing the code for an app is a part of the class, the majority of the topics will cover designing and evaluating a unique mobile experience. Along the way, you will have opportunities to share your work with other students from around the world! Java experience (or Objective C for iOS users) and a smartphone are required.All required readings are available within the courseware, courtesy of The MIT Press. A print version of the course textbook, Building Mobile Experiences, is also available for purchase. The MIT Press is offering enrolled students a special 30% discount on books ordered directly through the publisher\u2019s website. To take advantage of this offer, please use promotion code BME30 at The MIT Press site.",
        "desc_html": "How do you design a mobile app that truly changes people's lives? How can you\nunderstand how a new service is being used, both quantitatively and\nqualitatively? How can you use all of the rich sensing and I/O capabilities of\nmobile devices to create experiences that go far beyond what's possible on a\ntraditional computer?  \n  \nMobile devices are changing the ways that we interact with each other and\ninformation in the world. This course will take you from a domain of interest,\nthrough generative research, design, usability, implementation and field\nevaluation of a novel mobile experience. You'll finish the course with a\nworking, field-tested application suitable for release in the app store as\nwell as a deep understanding of human interaction with mobile devices and\nservices.  \n  \nBased on a popular MIT class that has been taught since 2006 by Frank Bentley\nof Yahoo Labs and Ed Barrett, a Senior Lecturer at MIT, this course will\nexplore what makes mobile devices unique. A primary focus will be on studying\nexisting behavior and using key findings for design. While writing the code\nfor an app is a part of the class, the majority of the topics will cover\ndesigning and evaluating a unique mobile experience. Along the way, you will\nhave opportunities to share your work with other students from around the\nworld! Java experience (or Objective C for iOS users) and a smartphone are\nrequired.  \n  \nAll required readings are available within the courseware, courtesy of The MIT\nPress. A print version of the course textbook, Building Mobile Experiences, is\nalso available for purchase. The MIT Press is offering enrolled students a\nspecial 30% discount on books ordered directly through the publisher\u2019s\nwebsite. To take advantage of this offer, please use promotion code BME30 at\nThe MIT Press site.\n\n",
        "name": "21W.789x: Building Mobile Experiences",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Massachusetts Institute of Technology"
        ],
        "url": "https://www.edx.org/course/building-mobile-experiences-mitx-21w-789x",
        "video_url": "https://www.youtube.com/embed/G10dftRMMXI?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-01-31",
        "desc": "We introduce the participant to modern distributed file systems and MapReduce, including what distinguishes good MapReduce algorithms from good algorithms in general. &nbsp;The rest of the course is devoted to algorithms for extracting models and information from large datasets. &nbsp;Participants will learn how Google's PageRank algorithm models importance of Web pages and some of the many extensions that have been used for a variety of purposes. &nbsp;We'll cover locality-sensitive hashing, a bit of magic that allows you to find similar items in a set of items so large you cannot possibly compare each pair. &nbsp;When data is stored as a very large, sparse matrix, dimensionality reduction is often a good way to model the data, but standard approaches do not scale well; we'll talk about efficient approaches. &nbsp;Many other large-scale algorithms are covered as well, as outlined in the course syllabus.SyllabusWeek 1:MapReduceLink Analysis -- PageRankWeek 2:Locality-Sensitive Hashing -- Basics + ApplicationsDistance MeasuresNearest NeighborsFrequent ItemsetsWeek 3:Data Stream MiningAnalysis of Large GraphsWeek 4:Recommender SystemsDimensionality ReductionWeek 5:ClusteringComputational AdvertisingWeek 6:Support-Vector MachinesDecision TreesMapReduce AlgorithmsWeek 7:More About Link Analysis -- &nbsp;Topic-specific PageRank, Link Spam.More About Locality-Sensitive Hashing",
        "desc_html": "We introduce the participant to modern distributed file systems and MapReduce,\nincluding what distinguishes good MapReduce algorithms from good algorithms in\ngeneral.  The rest of the course is devoted to algorithms for extracting\nmodels and information from large datasets.  Participants will learn how\nGoogle's PageRank algorithm models importance of Web pages and some of the\nmany extensions that have been used for a variety of purposes.  We'll cover\nlocality-sensitive hashing, a bit of magic that allows you to find similar\nitems in a set of items so large you cannot possibly compare each pair.  When\ndata is stored as a very large, sparse matrix, dimensionality reduction is\noften a good way to model the data, but standard approaches do not scale well;\nwe'll talk about efficient approaches.  Many other large-scale algorithms are\ncovered as well, as outlined in the course syllabus.\n\n## Syllabus\n\nWeek 1:  \nMapReduce  \nLink Analysis -- PageRank\n\nWeek 2:  \nLocality-Sensitive Hashing -- Basics + Applications  \nDistance Measures  \nNearest Neighbors  \nFrequent Itemsets\n\nWeek 3:  \nData Stream Mining  \nAnalysis of Large Graphs\n\nWeek 4:  \nRecommender Systems  \nDimensionality Reduction\n\nWeek 5:  \nClustering  \nComputational Advertising\n\nWeek 6:  \nSupport-Vector Machines  \nDecision Trees  \nMapReduce Algorithms\n\nWeek 7:  \nMore About Link Analysis --  Topic-specific PageRank, Link Spam.  \nMore About Locality-Sensitive Hashing\n\n",
        "name": "Mining Massive Datasets",
        "provider": "Coursera",
        "rating": "4",
        "reviews": "2",
        "university": [
            "Stanford University"
        ],
        "url": "https://www.coursera.org/course/mmds",
        "video_url": ""
    },
    {
        "date": "2015-01-27",
        "desc": "Get Ready for SAP Rapid Deployment Solutions Qualification is an exciting new course that explains how to use SAP Rapid Deployment solutions (RDS) to deploy faster and better than ever, by taking advantage of SAP best practices and content to deploy SAP innovations and solutions, such as SAP HANA, SAP Business Suite, User Experience (UX), cloud, analytics, and mobility.In this course, you will learn how much faster and more reliably you can deploy SAP Solutions, using the SAP Best Practices that come with each RDS and helping your customers achieve quick-time-to-value. This course teaches key concepts and deployment processes so you can unlock SAP\u2019s best practices and achieve greater customer satisfaction. In the course, you can select one or more strategic solution domains\u2014and explore the RDS portfolio to gain specialized knowledge that gives you a distinct advantage when deploying SAP\u2019s innovations. Also, you will learn to create and deploy a Partner RDS service offering, which is a critical component to achieve your RDS Partner qualification status.",
        "desc_html": "Get Ready for SAP Rapid Deployment Solutions Qualification is an exciting new\ncourse that explains how to use SAP Rapid Deployment solutions (RDS) to deploy\nfaster and better than ever, by taking advantage of SAP best practices and\ncontent to deploy SAP innovations and solutions, such as SAP HANA, SAP\nBusiness Suite, User Experience (UX), cloud, analytics, and mobility.  \n  \nIn this course, you will learn how much faster and more reliably you can\ndeploy SAP Solutions, using the SAP Best Practices that come with each RDS and\nhelping your customers achieve quick-time-to-value. This course teaches key\nconcepts and deployment processes so you can unlock SAP\u2019s best practices and\nachieve greater customer satisfaction. In the course, you can select one or\nmore strategic solution domains\u2014and explore the RDS portfolio to gain\nspecialized knowledge that gives you a distinct advantage when deploying SAP\u2019s\ninnovations. Also, you will learn to create and deploy a Partner RDS service\noffering, which is a critical component to achieve your RDS Partner\nqualification status.\n\n",
        "name": "Rapid Deployment of SAP Solutions",
        "provider": "openSAP",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.sap.com/courses/rds1-1",
        "video_url": ""
    },
    {
        "date": "2015-01-26",
        "desc": "We shop online. We work online. We play online. We live online. As our lives increasingly depend on digital services, the need to protect our information from being maliciously disrupted or misused is really important.This free online course will help you to understand online security and start to protect your digital life, whether at home or work. You will learn how to recognise the threats that could harm you online and the steps you can take to reduce the chances that they will happen to you.With cyber security often in the news today, the course will also frame your online safety in the context of the wider world, introducing you to different types of malware, including viruses and trojans, as well as concepts such as network security, cryptography, identity theft and risk management.&nbsp;You can use the hashtag&nbsp;#FLcybersec&nbsp;to find and contribute to conversations about this course on social networks.REQUIREMENTSThe course does not assume any prior knowledge of computer security and can be enjoyed by anyone interested in improving the security of their digital information.",
        "desc_html": "We shop online. We work online. We play online. We live online. As our lives\nincreasingly depend on digital services, the need to protect our information\nfrom being maliciously disrupted or misused is really important.\n\nThis free online course will help you to understand online security and start\nto protect your digital life, whether at home or work. You will learn how to\nrecognise the threats that could harm you online and the steps you can take to\nreduce the chances that they will happen to you.\n\nWith cyber security often in the news today, the course will also frame your\nonline safety in the context of the wider world, introducing you to different\ntypes of malware, including viruses and trojans, as well as concepts such as\nnetwork security, cryptography, identity theft and risk management.\n\n\n\nYou can use the hashtag **#FLcybersec** to find and contribute to\nconversations about this course on social networks.\n\n**REQUIREMENTS**\n\nThe course does not assume any prior knowledge of computer security and can be\nenjoyed by anyone interested in improving the security of their digital\ninformation.\n\n",
        "name": "Introduction to Cyber Security",
        "provider": "FutureLearn",
        "rating": "0",
        "reviews": "0",
        "university": [
            "The Open University"
        ],
        "url": "https://www.futurelearn.com/courses/introduction-to-cyber-security?utm_source=FL_blog&utm_medium=blog&utm_campaign=FL_blog",
        "video_url": "https://www.youtube.com/embed/5oAgxIzaq0E?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-01-23",
        "desc": "Analysis of Algorithms aims to enable precise quantitative predictions of the properties of large combinatorial structures. The theory has emerged over recent decades as essential both for the scientific analysis of algorithms in computer science and for the study of scientific models in many other disciplines, including probability theory, statistical physics, computational biology and information theory. This course covers recurrence relations, generating functions, asymptotics, and fundamental structures such as trees, permutations, strings, tries, words, and mappings, in the context of applications to the analysis of algorithms.SyllabusLecture &nbsp;1 &nbsp;Analysis of AlgorithmsLecture &nbsp;2 &nbsp;RecurrencesLecture &nbsp;3 &nbsp;Solving recurrences with GFsLecture &nbsp;4 &nbsp;AsymptoticsLecture &nbsp;5 &nbsp;The symbolic methodLecture &nbsp;6 &nbsp;TreesLecture &nbsp;7 &nbsp;PermutationsLecture &nbsp;8 &nbsp;Strings and TriesLecture &nbsp;9 &nbsp;Words and Mappings",
        "desc_html": "Analysis of Algorithms aims to enable precise quantitative predictions of the\nproperties of large combinatorial structures. The theory has emerged over\nrecent decades as essential both for the scientific analysis of algorithms in\ncomputer science and for the study of scientific models in many other\ndisciplines, including probability theory, statistical physics, computational\nbiology and information theory. This course covers recurrence relations,\ngenerating functions, asymptotics, and fundamental structures such as trees,\npermutations, strings, tries, words, and mappings, in the context of\napplications to the analysis of algorithms.\n\n## Syllabus\n\nLecture  1  Analysis of Algorithms\n\nLecture  2  Recurrences\n\nLecture  3  Solving recurrences with GFs\n\nLecture  4  Asymptotics\n\nLecture  5  The symbolic method\n\nLecture  6  Trees\n\nLecture  7  Permutations\n\nLecture  8  Strings and Tries\n\nLecture  9  Words and Mappings\n\n",
        "name": "Analysis of Algorithms",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Princeton University"
        ],
        "url": "https://www.coursera.org/course/aofa",
        "video_url": ""
    },
    {
        "date": "2015-01-23",
        "desc": "An introduction to fundamental data types, algorithms, and data structures,\nwith emphasis on applications and scientific performance analysis of Java\nimplementations. Specific topics covered include: union-find algorithms;\nbasic iterable data types (stack, queues, and bags); sorting algorithms\n(quicksort, mergesort, heapsort) and applications; priority queues; binary\nsearch trees; red-black trees; hash tables; and symbol-table applications.",
        "desc_html": "An introduction to fundamental data types, algorithms, and data structures,\nwith emphasis on applications and scientific performance analysis of Java\nimplementations. Specific topics covered include: union-find algorithms; basic\niterable data types (stack, queues, and bags); sorting algorithms (quicksort,\nmergesort, heapsort) and applications; priority queues; binary search trees;\nred-black trees; hash tables; and symbol-table applications.\n\n",
        "name": "Algorithms, Part I",
        "provider": "Coursera",
        "rating": "4.3076923076923",
        "reviews": "13",
        "university": [
            "Princeton University"
        ],
        "url": "https://www.coursera.org/course/algs4partI",
        "video_url": ""
    },
    {
        "date": "2015-01-19",
        "desc": "Machine learning is the science of getting computers to act without being\n    explicitly programmed. In the past decade, machine learning has given us\n    self-driving cars, practical speech recognition, effective web search,\n    and a vastly improved understanding of the human genome. Machine learning\n    is so pervasive today that you probably use it dozens of times a day without\n    knowing it. Many researchers also think it is the best way to make progress\n    towards human-level AI. In this class, you will learn about the most effective\n    machine learning techniques, and gain practice implementing them and getting\n    them to work for yourself. More importantly, you'll learn about not only\n    the theoretical underpinnings of learning, but also gain the practical\n    know-how needed to quickly and powerfully apply these techniques to new\n    problems. Finally, you'll learn about some of Silicon Valley's best practices\n    in innovation as it pertains to machine learning and AI.This course provides a broad introduction to machine learning, datamining,\n    and statistical pattern recognition. Topics include: (i) Supervised learning\n    (parametric/non-parametric algorithms, support vector machines, kernels,\n    neural networks). (ii) Unsupervised learning (clustering, dimensionality\n    reduction, recommender systems, deep learning). (iii) Best practices in\n    machine learning (bias/variance theory; innovation process in machine learning\n    and AI). The course will also draw from numerous case studies and applications,\n    so that you'll also learn how to apply learning algorithms to building\n    smart robots (perception, control), text understanding (web search, anti-spam),\n    computer vision, medical informatics, audio, database mining, and other\n    areas.",
        "desc_html": "Machine learning is the science of getting computers to act without being\nexplicitly programmed. In the past decade, machine learning has given us self-\ndriving cars, practical speech recognition, effective web search, and a vastly\nimproved understanding of the human genome. Machine learning is so pervasive\ntoday that you probably use it dozens of times a day without knowing it. Many\nresearchers also think it is the best way to make progress towards human-level\nAI. In this class, you will learn about the most effective machine learning\ntechniques, and gain practice implementing them and getting them to work for\nyourself. More importantly, you'll learn about not only the theoretical\nunderpinnings of learning, but also gain the practical know-how needed to\nquickly and powerfully apply these techniques to new problems. Finally, you'll\nlearn about some of Silicon Valley's best practices in innovation as it\npertains to machine learning and AI.\n\nThis course provides a broad introduction to machine learning, datamining, and\nstatistical pattern recognition. Topics include: (i) Supervised learning\n(parametric/non-parametric algorithms, support vector machines, kernels,\nneural networks). (ii) Unsupervised learning (clustering, dimensionality\nreduction, recommender systems, deep learning). (iii) Best practices in\nmachine learning (bias/variance theory; innovation process in machine learning\nand AI). The course will also draw from numerous case studies and\napplications, so that you'll also learn how to apply learning algorithms to\nbuilding smart robots (perception, control), text understanding (web search,\nanti-spam), computer vision, medical informatics, audio, database mining, and\nother areas.\n\n",
        "name": "Machine Learning",
        "provider": "Coursera",
        "rating": "4.8",
        "reviews": "60",
        "university": [
            "Stanford University"
        ],
        "url": "https://www.coursera.org/course/ml",
        "video_url": ""
    },
    {
        "date": "2015-01-19",
        "desc": "In this course you will learn several fundamental principles of algorithm design. You'll learn the divide-and-conquer design paradigm, with applications to fast sorting, searching, and multiplication. You'll learn several blazingly fast primitives for computing on graphs, such as how to compute connectivity information and shortest paths. Finally, we'll study how allowing the computer to \"flip coins\" can lead to elegant and practical algorithms and data structures. Learn the answers to questions such as: How do data structures like heaps, hash tables, bloom filters, and balanced search trees actually work, anyway? How come QuickSort runs so fast? What can graph algorithms tell us about the structure of the Web and social networks? Did my 3rd-grade teacher explain only a suboptimal algorithm for multiplying two numbers?SyllabusWeek 1:Introduction.&nbsp; Asymptotic analysis including big-oh notation.&nbsp; Divide-and-conquer algorithms for sorting, counting inversions, matrix multiplication, and closest pair.Week 2:Running time analysis of divide-and-conquer algorithms.&nbsp; The master method.&nbsp; Introduction to randomized algorithms, with a probability review.&nbsp; QuickSort.&nbsp;Week 3:More on randomized algorithms and probability.&nbsp; Computing the median in linear time.&nbsp; A randomized algorithm for the minimum graph cut problem.Week 4:Graph primitives.&nbsp; Depth- and breadth-first search.&nbsp; Connected components in undirected graphs.&nbsp; Topological sort in directed acyclic graphs.&nbsp; Strongly connected components in directed graphs.Week 5:Dijkstra's shortest-path algorithm.&nbsp; Introduction to data structures.&nbsp; Heaps and applications.Week 6:Further data structures.&nbsp; Hash tables and applications.&nbsp; Balanced binary search trees.",
        "desc_html": "In this course you will learn several fundamental principles of algorithm\ndesign. You'll learn the divide-and-conquer design paradigm, with applications\nto fast sorting, searching, and multiplication. You'll learn several blazingly\nfast primitives for computing on graphs, such as how to compute connectivity\ninformation and shortest paths. Finally, we'll study how allowing the computer\nto \"flip coins\" can lead to elegant and practical algorithms and data\nstructures. Learn the answers to questions such as: How do data structures\nlike heaps, hash tables, bloom filters, and balanced search trees actually\nwork, anyway? How come QuickSort runs so fast? What can graph algorithms tell\nus about the structure of the Web and social networks? Did my 3rd-grade\nteacher explain only a suboptimal algorithm for multiplying two numbers?\n\n## Syllabus\n\n**Week 1:** Introduction.  Asymptotic analysis including big-oh notation.  Divide-and-conquer algorithms for sorting, counting inversions, matrix multiplication, and closest pair.  \n  \n**Week 2: **Running time analysis of divide-and-conquer algorithms.  The master method.  Introduction to randomized algorithms, with a probability review.  QuickSort.    \n  \n**Week 3: **More on randomized algorithms and probability.  Computing the median in linear time.  A randomized algorithm for the minimum graph cut problem.  \n  \n**Week 4:** Graph primitives.  Depth- and breadth-first search.  Connected components in undirected graphs.  Topological sort in directed acyclic graphs.  Strongly connected components in directed graphs.  \n  \n**Week 5:** Dijkstra's shortest-path algorithm.  Introduction to data structures.  Heaps and applications.  \n  \n**Week 6:** Further data structures.  Hash tables and applications.  Balanced binary search trees.  \n\n",
        "name": "Algorithms: Design and Analysis, Part 1",
        "provider": "Coursera",
        "rating": "4.8888888888889",
        "reviews": "18",
        "university": [
            "Stanford University"
        ],
        "url": "https://www.coursera.org/course/algo",
        "video_url": ""
    },
    {
        "date": "2015-01-19",
        "desc": "R\u00e4umliches Sehen stellt f\u00fcr die meisten Menschen eine Selbstverst\u00e4ndlichkeit dar. Maschinen mit einem gleichwertigen Sehverm\u00f6gen auszustatten, ist hingegen eine sehr komplizierte Angelegenheit. Seit den 1960-er Jahren hat sich dieser alsComputer Visionbezeichnete Forschungsbereich kontinuierlich entwickelt und zahlreiche Forschungsergebnisse hervorgebracht. Viele Fragen haben jedoch noch nicht hinreichend beantwortet werden k\u00f6nnen und sind bis heute aktuell.Dieser Kurs befasst sich mit einigen grundlegenden Algorithmen der Computer\n    Vision, f\u00fchrt das hierzu ben\u00f6tigte Fachvokabular ein und frischt die ben\u00f6tigten\n    mathematischen Grundlagen auf, wann immer sie ben\u00f6tigt werden. Beginnend\n    mit grundlegenden Methoden der Bildverarbeitung wie z.B. der Kantendetektion,\n    werden diese im Lauf des Kurses f\u00fcr umfassendere Aufgaben wie Merkmalsextraktion\n    und Korrespondenzsch\u00e4tzung angewendet.Diese Korrespondenzen k\u00f6nnen mit Wissen \u00fcber die Darstellung von Bildern\n    am Computer und der Beschreibung von Objektbewegungen im Raum dann verwendet\n    werden, um die Epipolargeometrie eines Stereokamerasystems und somit die\n    2D-3D-Beziehung zwischen Bildern und der Szene zu beschreiben. Hierbei\n    wird der Unterschied zwischen unkalibriertem und kalibriertem Kamerasystem\n    erl\u00e4utert, sowie auf das Konzept der Homographie eingegangen. Schlie\u00dflich\n    erm\u00f6glicht das Zusammenspiel all dieser Aspekte die 3D-Rekonstruktion einer\n    Szene aus einem Stereokamerabildpaar.SyllabusErstes Kapitel: Wissenswertes \u00fcber Bilder (Darstellung von Bildern, Bildgradient, Merkmalspunkte, Korrespondenzsch\u00e4tzung)Zweites Kapitel: Bildentstehung (Lochkameramodell, Homogene Koordinaten, Euklidische Bewegungen, Perspektivische Projektion mit kalibrierter Kamera, Bild, Ur-Bild und Co-Bild)Drittes Kapitel: Epipolargeometrie (Epipolargleichung, Epipole und Epipolarlinien, 8-Punkt-Algorithmus, 3D-Rekonstruktion, Die Fundamentalmatrix)Viertes Kapitel: Planare Szenen (Planare Epipolargleichung, 4-Punkt-Algorithmus, Kamerakalibrierung)",
        "desc_html": "R\u00e4umliches Sehen stellt f\u00fcr die meisten Menschen eine Selbstverst\u00e4ndlichkeit\ndar. Maschinen mit einem gleichwertigen Sehverm\u00f6gen auszustatten, ist hingegen\neine sehr komplizierte Angelegenheit. Seit den 1960-er Jahren hat sich dieser\nals _Computer Vision_ bezeichnete Forschungsbereich kontinuierlich entwickelt\nund zahlreiche Forschungsergebnisse hervorgebracht. Viele Fragen haben jedoch\nnoch nicht hinreichend beantwortet werden k\u00f6nnen und sind bis heute aktuell.\n\nDieser Kurs befasst sich mit einigen grundlegenden Algorithmen der Computer\nVision, f\u00fchrt das hierzu ben\u00f6tigte Fachvokabular ein und frischt die\nben\u00f6tigten mathematischen Grundlagen auf, wann immer sie ben\u00f6tigt werden.\nBeginnend mit grundlegenden Methoden der Bildverarbeitung wie z.B. der\nKantendetektion, werden diese im Lauf des Kurses f\u00fcr umfassendere Aufgaben wie\nMerkmalsextraktion und Korrespondenzsch\u00e4tzung angewendet.\n\nDiese Korrespondenzen k\u00f6nnen mit Wissen \u00fcber die Darstellung von Bildern am\nComputer und der Beschreibung von Objektbewegungen im Raum dann verwendet\nwerden, um die Epipolargeometrie eines Stereokamerasystems und somit die 2D-\n3D-Beziehung zwischen Bildern und der Szene zu beschreiben. Hierbei wird der\nUnterschied zwischen unkalibriertem und kalibriertem Kamerasystem erl\u00e4utert,\nsowie auf das Konzept der Homographie eingegangen. Schlie\u00dflich erm\u00f6glicht das\nZusammenspiel all dieser Aspekte die 3D-Rekonstruktion einer Szene aus einem\nStereokamerabildpaar.\n\n## Syllabus\n\nErstes Kapitel: Wissenswertes \u00fcber Bilder (Darstellung von Bildern,\nBildgradient, Merkmalspunkte, Korrespondenzsch\u00e4tzung)  \nZweites Kapitel: Bildentstehung (Lochkameramodell, Homogene Koordinaten,\nEuklidische Bewegungen, Perspektivische Projektion mit kalibrierter Kamera,\nBild, Ur-Bild und Co-Bild)  \nDrittes Kapitel: Epipolargeometrie (Epipolargleichung, Epipole und\nEpipolarlinien, 8-Punkt-Algorithmus, 3D-Rekonstruktion, Die Fundamentalmatrix)  \nViertes Kapitel: Planare Szenen (Planare Epipolargleichung, 4-Punkt-\nAlgorithmus, Kamerakalibrierung)\n\n",
        "name": "Einf\u00fchrung in Computer Vision",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Technische Universit\u00e4t M\u00fcnchen (Technical University of Munich)"
        ],
        "url": "https://www.coursera.org/course/compvision",
        "video_url": ""
    },
    {
        "date": "2015-01-19",
        "desc": "In many systems, human users are a critical part of the security process. They create passwords, follow security protocols, and share information that can maintain or destroy the security of a system. However, many secure systems are designed with little to no attention paid to people's cognitive abilities, workflow, or tasks. As a result, people find ways around the security obstacles that get in the way of their work.This course focuses on how to design and build secure systems with a human-centric focus. We will look at basic principles of human-computer interaction, including the basics of humans' cognitive abilities, principles of usability, design techniques, and evaluation methods. We will then apply these insights to the design of secure systems with the goal of developing security measures that respect human performance and their goals within a system.Through hands-on exercises designing, building, evaluating, and critiquing systems, students will learn how to integrate usability into secure software. The course will specifically focus on authentication mechanisms, browsing security, privacy and social media, and mobile security.SyllabusSyllabusIntroduction to HCI, usable security, and designUsabilityMental and psychological modelsDesign methodologyMeasuring and evaluating usabilityUsability studiesIterative designAuthenticationPassword systemsTwo-factor authentication and other alternative schemesBiometricsWeb browsing and securityTrackingAnonymous browsingSecure browsingUsability and PrivacyPersonal data sharingPrivacy policies / data sharingPersonal trait Inference",
        "desc_html": "In many systems, human users are a critical part of the security process. They\ncreate passwords, follow security protocols, and share information that can\nmaintain or destroy the security of a system. However, many secure systems are\ndesigned with little to no attention paid to people's cognitive abilities,\nworkflow, or tasks. As a result, people find ways around the security\nobstacles that get in the way of their work.  \n\nThis course focuses on how to design and build secure systems with a human-\ncentric focus. We will look at basic principles of human-computer interaction,\nincluding the basics of humans' cognitive abilities, principles of usability,\ndesign techniques, and evaluation methods. We will then apply these insights\nto the design of secure systems with the goal of developing security measures\nthat respect human performance and their goals within a system.\n\nThrough hands-on exercises designing, building, evaluating, and critiquing\nsystems, students will learn how to integrate usability into secure software.\nThe course will specifically focus on authentication mechanisms, browsing\nsecurity, privacy and social media, and mobile security.\n\n## Syllabus\n\nSyllabus\n\n**Introduction to HCI, usable security, and design**\n\n  * Usability  \n\n  * Mental and psychological models  \n\n  * Design methodology\n**Measuring and evaluating usability**  \n\n  * Usability studies  \n\n  * Iterative design\n**Authentication**  \n\n  * Password systems  \n\n  * Two-factor authentication and other alternative schemes  \n\n  * Biometrics\n**Web browsing and security**  \n\n  * Tracking  \n\n  * Anonymous browsing  \n\n  * Secure browsing  \n\n**Usability and Privacy**  \n\n  * Personal data sharing  \n\n  * Privacy policies / data sharing  \n\n  * Personal trait Inference  \n\n  \n\n",
        "name": "Usable Security",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of Maryland, College Park"
        ],
        "url": "https://www.coursera.org/course/usablesec",
        "video_url": ""
    },
    {
        "date": "2015-01-19",
        "desc": "We will learn the basics of statistical inference in order to understand and compute p-values and confidence intervals. We will provide examples by programming in R in a way that will help make the connection between concepts and implementation. Problems sets requiring R programming will be used to test understanding and ability to implement basic data analyses. We will use visualization techniques to explore new data sets and determine the most appropriate approach. We will describe robust statistical techniques as alternative when data do not fit assumptions required by the standard approaches.\u00a0We will also introduce the basics of using R scripts to conduct reproducible research.Topics:DistributionsExploratory Data AnalysisInferenceNon-parametric statisticsThis class was supported in part by NIH grant R25GM114818.This course is part of a larger set of 8 total courses:*\u00a0Registration open through 27 April 2015PH525.1x:\u00a0Statistics and R for the Life SciencesPH525.2x:\u00a0Introduction to Linear Models and Matrix AlgebraPH525.3x:\u00a0Advanced Statistics for the Life SciencesPH525.4x:\u00a0Introduction to BioconductorPH525.5x:\u00a0Case study: RNA-seq data analysisPH525.6x: Case study: Variant Discovery and GenotypingPH525.7x:\u00a0Case study: ChIP-seq data analysisPH525.8x:\u00a0Case study: DNA methylation data analysisHarvardX pursues the science of learning. By registering as an online learner in an HX course, you will also participate in research about learning. Read our research statement to learn more.",
        "desc_html": "We will learn the basics of statistical inference in order to understand and\ncompute p-values and confidence intervals. We will provide examples by\nprogramming in R in a way that will help make the connection between concepts\nand implementation. Problems sets requiring R programming will be used to test\nunderstanding and ability to implement basic data analyses. We will use\nvisualization techniques to explore new data sets and determine the most\nappropriate approach. We will describe robust statistical techniques as\nalternative when data do not fit assumptions required by the standard\napproaches.\u00a0We will also introduce the basics of using R scripts to conduct\nreproducible research.  \n  \nTopics:  \n  \nDistributions  \nExploratory Data Analysis  \nInference  \nNon-parametric statistics  \nThis class was supported in part by NIH grant R25GM114818.  \n  \nThis course is part of a larger set of 8 total courses:  \n  \n*\u00a0Registration open through 27 April 2015  \n  \nPH525.1x:\u00a0Statistics and R for the Life Sciences  \n  \nPH525.2x:\u00a0Introduction to Linear Models and Matrix Algebra  \n  \nPH525.3x:\u00a0Advanced Statistics for the Life Sciences  \n  \nPH525.4x:\u00a0Introduction to Bioconductor  \n  \nPH525.5x:\u00a0Case study: RNA-seq data analysis  \n  \nPH525.6x: Case study: Variant Discovery and Genotyping  \n  \nPH525.7x:\u00a0Case study: ChIP-seq data analysis  \n  \nPH525.8x:\u00a0Case study: DNA methylation data analysis  \n  \nHarvardX pursues the science of learning. By registering as an online learner\nin an HX course, you will also participate in research about learning. Read\nour research statement to learn more.\n\n",
        "name": "PH525.1x: Statistics and R for the Life Sciences",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Harvard University"
        ],
        "url": "https://www.edx.org/course/statistics-r-life-sciences-harvardx-ph525-1x",
        "video_url": "https://www.youtube.com/embed/nwFyIxc4AE0?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-01-15",
        "desc": "\u064a\u062a\u0646\u0627\u0648\u0644 \u0627\u0644\u0645\u0642\u0631\u0631 \u0627\u0644\u062a\u0639\u0631\u064a\u0641 \u0628\u0627\u0633\u0627\u0633\u064a\u0627\u062a \u0627\u0633\u062a\u0631\u062c\u0627\u0639 \u0627\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0648 \u0643\u064a\u0641\u064a\u0629 \u0639\u0645\u0644\u0647\u0627 \u0648 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647\u0627 \u0648 \u064a\u0644\u0642\u064a \u0627\u0644\u0636\u0648\u0621 \u0639\u0644\u0649 \u0622\u0644\u064a\u0627\u062a \u0648 \u0623\u0633\u0627\u0644\u064a\u0628 \u0627\u0644\u0628\u062d\u062b \u0639\u0646 \u0627\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a.",
        "desc_html": "\u064a\u062a\u0646\u0627\u0648\u0644 \u0627\u0644\u0645\u0642\u0631\u0631 \u0627\u0644\u062a\u0639\u0631\u064a\u0641 \u0628\u0627\u0633\u0627\u0633\u064a\u0627\u062a \u0627\u0633\u062a\u0631\u062c\u0627\u0639 \u0627\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0648 \u0643\u064a\u0641\u064a\u0629 \u0639\u0645\u0644\u0647\u0627 \u0648 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647\u0627 \u0648\n\u064a\u0644\u0642\u064a \u0627\u0644\u0636\u0648\u0621 \u0639\u0644\u0649 \u0622\u0644\u064a\u0627\u062a \u0648 \u0623\u0633\u0627\u0644\u064a\u0628 \u0627\u0644\u0628\u062d\u062b \u0639\u0646 \u0627\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a.\n\n",
        "name": "\u0623\u0633\u0627\u0633\u064a\u0627\u062a \u0627\u0633\u062a\u0631\u062c\u0627\u0639 \u0627\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a",
        "provider": "Rwaq (\u0631\u0648\u0627\u0642)",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "http://www.rwaq.org/courses/information-retrieval",
        "video_url": "https://www.youtube.com/embed/ZxehuiO1Jig?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-01-13",
        "desc": "This course provides an overview about the state of the art in information visualization. It teaches the process of producing effective visualizations that take the needs of users into account.&nbsp;This year, the course can be taken for three Indiana University credits as part of the&nbsp;Online Data Science Program&nbsp;just announced by the School of Informatics and Computing. Students interested in applying to the program can&nbsp;find more information here.Among other topics, the course covers:Data analysis algorithms that enable extraction of patterns and trends in dataMajor temporal, geospatial, topical, and network visualization techniquesDiscussions of systems that drive research and development.Just like last year, students will have the opportunity to collaborate on real-world projects for a variety of clients.&nbsp;Click here to see the 2014 list of clients and projects. You can also&nbsp;see the detailed results of the 2013 client projects from the Visual Insights book here.Everyone who registers gains free access to the&nbsp;Scholarly Database(26 million paper, patent, and grant records) and the&nbsp;Sci2 Tool&nbsp;(100+ algorithms and tools).",
        "desc_html": "This course provides an overview about the state of the art in information\nvisualization. It teaches the process of producing effective visualizations\nthat take the needs of users into account.  \n  \nThis year, the course can be taken for three Indiana University credits as\npart of the [Online Data Science\nProgram](http://news.iu.edu/releases/iu/2013/11/data-science-program-\nsoic.shtml) just announced by the School of Informatics and Computing.\nStudents interested in applying to the program can [find more information\nhere](http://www.soic.indiana.edu/graduate/programs/data-science/how-to-\napply.shtml).  \n  \nAmong other topics, the course covers:\n\n  * Data analysis algorithms that enable extraction of patterns and trends in data\n  * Major temporal, geospatial, topical, and network visualization techniques\n  * Discussions of systems that drive research and development.\n\nJust like last year, students will have the opportunity to collaborate on\nreal-world projects for a variety of clients. [Click here to see the 2014 list\nof clients and projects](http://ivmooc.cns.iu.edu/clients.html). You can also\n[see the detailed results of the 2013 client projects from the Visual Insights\nbook here](http://ivmooc.cns.iu.edu/docs/Visual_Insights_Ch8.pdf).  \n  \nEveryone who registers gains free access to the [Scholarly\nDatabase](http://sdb.cns.iu.edu/)(26 million paper, patent, and grant records)\nand the [Sci2 Tool](http://sci2.cns.iu.edu/) (100+ algorithms and tools).\n\n",
        "name": "Information Visualization",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Indiana University"
        ],
        "url": "http://ivmooc.cns.iu.edu/",
        "video_url": "https://www.youtube.com/embed/q5Dg-wD8_GY?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-01-12",
        "desc": "The course aims to provide a foundation in artificial intelligence techniques for planning, with an overview of the wide spectrum of different problems and approaches, including their underlying theory and their applications. It will allow you to:Understand different planning problemsHave the basic know how to design and implement AI planning systemsKnow how to use AI planning technology for projects in different application domainsHave the ability to make use of AI planning literaturePlanning is a fundamental part of intelligent systems. In this course, for example, you will learn the basic algorithms that are used in robots to deliberate over a course of actions to take. Simpler, reactive robots don't need this, but if a robot is to act intelligently, this type of reasoning about actions is vital.SyllabusWeek 1: Introduction and Planning in ContextWeek 2: State-Space Search: Heuristic Search and STRIPSWeek 3: Plan-Space Search and HTN PlanningOne week catch up breakWeek 4: Graphplan and Advanced HeuristicsWeek 5: Plan Execution and ApplicationsExam week",
        "desc_html": "The course aims to provide a foundation in artificial intelligence techniques\nfor planning, with an overview of the wide spectrum of different problems and\napproaches, including their underlying theory and their applications. It will\nallow you to:\n\n  * Understand different planning problems\n  * Have the basic know how to design and implement AI planning systems\n  * Know how to use AI planning technology for projects in different application domains\n  * Have the ability to make use of AI planning literature\n\nPlanning is a fundamental part of intelligent systems. In this course, for\nexample, you will learn the basic algorithms that are used in robots to\ndeliberate over a course of actions to take. Simpler, reactive robots don't\nneed this, but if a robot is to act intelligently, this type of reasoning\nabout actions is vital.\n\n## Syllabus\n\nWeek 1: Introduction and Planning in Context\n\nWeek 2: State-Space Search: Heuristic Search and STRIPS  \nWeek 3: Plan-Space Search and HTN Planning\n\n_One week catch up break_\n\nWeek 4: Graphplan and Advanced Heuristics\n\nWeek 5: Plan Execution and Applications\n\n_Exam week_\n\n",
        "name": "Artificial Intelligence Planning",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of Edinburgh"
        ],
        "url": "https://www.coursera.org/course/aiplan",
        "video_url": ""
    },
    {
        "date": "2015-01-12",
        "desc": "This course is designed as an introduction to computer programming using Java. Students will learn how to a) analyze a problem, and identify and define the computing requirements appropriate to its solution b) design, implement, and evaluate a computer-based system, process, component, or program to meet desired needs, and c) apply design and development principles in the construction of software systems of varying complexity. Topics include Computers, programs, Java, input and output, identifiers, variables, assignment statements, constants, memory diagrams, primitive data types, conditional statements, repetition, methods, parameters, arguments, return values, one dimensional arrays, objects, classes, and classes from the Java Application Programmers Interface (API).",
        "desc_html": "This course is designed as an introduction to computer programming using Java.\nStudents will learn how to a) analyze a problem, and identify and define the\ncomputing requirements appropriate to its solution b) design, implement, and\nevaluate a computer-based system, process, component, or program to meet\ndesired needs, and c) apply design and development principles in the\nconstruction of software systems of varying complexity. Topics include\nComputers, programs, Java, input and output, identifiers, variables,\nassignment statements, constants, memory diagrams, primitive data types,\nconditional statements, repetition, methods, parameters, arguments, return\nvalues, one dimensional arrays, objects, classes, and classes from the Java\nApplication Programmers Interface (API).\n\n",
        "name": "Introduction to Computer Programming",
        "provider": "Janux",
        "rating": "0",
        "reviews": "0",
        "university": [
            "The University of Oklahoma"
        ],
        "url": "https://janux.ou.edu/course.cs1323-spring2015.html",
        "video_url": "https://www.youtube.com/embed/uq3Smf6U_PA?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-01-12",
        "desc": "All computing\nsystems, from mobile to supercomputers, are becoming heterogeneous, massively\nparallel&nbsp;computers for higher power efficiency and&nbsp;computation\nthroughput. While the computing community is racing to build tools and\nlibraries to&nbsp;ease the use of these systems, effective and confident\nuse&nbsp;of these systems will always require knowledge about low-level\nprogramming&nbsp;in these systems. This course is designed for students to\nlearn the essence&nbsp;of low-level programming interfaces and how to use these\ninterfaces to achieve application goals. CUDA C, with its good balance between\nuser control and verboseness, will serve as the teaching vehicle for the first\nhalf of the course. Students will then extend their learning into closely\nrelated programming interfaces such as OpenCL, OpenACC, and C++AMP.The course is unique in that it is application oriented and only introduces the\nnecessary&nbsp;underlying computer science and computer engineering knowledge for\nunderstanding.&nbsp;It covers the concept of data parallel execution models,\nmemory models for managing locality, tiling techniques for reducing bandwidth\nconsumption, parallel algorithm patterns,&nbsp;overlapping computation with\ncommunication, and a variety of\nheterogeneous parallel programming interfaces. The concepts learned in this\ncourse form a strong foundation for learning other types of parallel\nprogramming systems.SyllabusWeek One:Introduction to Heterogeneous\nComputing, Overview of CUDA C, and Kernel-Based Parallel Programming, with lab tour\nand programming assignment of vector addition in CUDA C.&nbsp;Week Two:Memory Model for Locality, Tiling\nfor Conserving Memory Bandwidth, Handling Boundary Conditions, and Performance\nConsiderations, with&nbsp;programming assignment of simple matrix-matrix multiplication\nin CUDA C.Week Three:Parallel Convolution Pattern, with\nprogramming assignment of tiled matrix-matrix multiplication in CUDA C.Week Four:Parallel Scan Pattern, with\nprogramming&nbsp;assignment of parallel convolution in CUDA C.Week Five:Parallel Histogram Pattern and\nAtomic Operations, with programming assignment of parallel scan in CUDA C.Week Six:Data Transfer and Task\nParallelism, with programming assignment of parallel histogram in CUDA C.Week Seven:Introduction to OpenCL,\nIntroduction to C++AMP, Introduction to OpenACC, with programming assignment of\nvector addition using streams in CUDA C.Week Eight:Course Summary,\nOther Related Programming Models \u2013Thrust,&nbsp;Bolt, and CUDA FORTRAN, with\nprogramming assignment of simple matrix-matrix multiplication in choice of\nOpenCL, C++AMP, or OpenACC.Week Nine:complete any\nremaining lab assignments, with optional, bonus programming assignments in choice\nof OpenCL, C++AMP, or OpenACC.",
        "desc_html": "All computing systems, from mobile to supercomputers, are becoming\nheterogeneous, massively parallel computers for higher power efficiency and\ncomputation throughput. While the computing community is racing to build tools\nand libraries to ease the use of these systems, effective and confident use of\nthese systems will always require knowledge about low-level programming in\nthese systems. This course is designed for students to learn the essence of\nlow-level programming interfaces and how to use these interfaces to achieve\napplication goals. CUDA C, with its good balance between user control and\nverboseness, will serve as the teaching vehicle for the first half of the\ncourse. Students will then extend their learning into closely related\nprogramming interfaces such as OpenCL, OpenACC, and C++AMP.\n\n  \nThe course is unique in that it is application oriented and only introduces\nthe necessary underlying computer science and computer engineering knowledge\nfor understanding. It covers the concept of data parallel execution models,\nmemory models for managing locality, tiling techniques for reducing bandwidth\nconsumption, parallel algorithm patterns, overlapping computation with\ncommunication, and a variety of heterogeneous parallel programming interfaces.\nThe concepts learned in this course form a strong foundation for learning\nother types of parallel programming systems.\n\n  \n\n## Syllabus\n\n  * **Week One:** Introduction to Heterogeneous Computing, Overview of CUDA C, and Kernel-Based Parallel Programming, with lab tour and programming assignment of vector addition in CUDA C.\n  *  **Week Two:** Memory Model for Locality, Tiling for Conserving Memory Bandwidth, Handling Boundary Conditions, and Performance Considerations, with programming assignment of simple matrix-matrix multiplication in CUDA C.\n  * **Week Three:** Parallel Convolution Pattern, with programming assignment of tiled matrix-matrix multiplication in CUDA C.\n  * **Week Four:** Parallel Scan Pattern, with programming assignment of parallel convolution in CUDA C**.**\n  * **Week Five:** Parallel Histogram Pattern and Atomic Operations, with programming assignment of parallel scan in CUDA C.\n  * **Week Six:** Data Transfer and Task Parallelism, with programming assignment of parallel histogram in CUDA C.\n  * **Week Seven:** Introduction to OpenCL, Introduction to C++AMP, Introduction to OpenACC, with programming assignment of vector addition using streams in CUDA C.\n  * **Week Eight: **Course Summary, Other Related Programming Models \u2013Thrust, Bolt, and CUDA FORTRAN, with programming assignment of simple matrix-matrix multiplication in choice of OpenCL, C++AMP, or OpenACC**.**\n  * ******Week Nine: **complete any remaining lab assignments, with optional, bonus programming assignments in choice of OpenCL, C++AMP, or OpenACC. \n\n",
        "name": "Heterogeneous Parallel Programming",
        "provider": "Coursera",
        "rating": "4",
        "reviews": "2",
        "university": [
            "University of Illinois at Urbana-Champaign"
        ],
        "url": "https://www.coursera.org/course/hetero",
        "video_url": ""
    },
    {
        "date": "2015-01-12",
        "desc": "This course is intended for people who have no experience in computer science but would like to learn more about how computers work and how they can control them. It is designed to introduce learners to the power and elegance of computational thinking. You will learn basic computational principles and will have the opportunity to put them into practice. Computers and technology are driving phenomenal change in this world. This course will give you the power to help drive that change",
        "desc_html": "This course is intended for people who have no experience in computer science\nbut would like to learn more about how computers work and how they can control\nthem. It is designed to introduce learners to the power and elegance of\ncomputational thinking. You will learn basic computational principles and will\nhave the opportunity to put them into practice. Computers and technology are\ndriving phenomenal change in this world. This course will give you the power\nto help drive that change\n\n",
        "name": "Power and elegance of computational thinking",
        "provider": "Janux",
        "rating": "0",
        "reviews": "0",
        "university": [
            "The University of Oklahoma"
        ],
        "url": "https://janux.ou.edu/course.cs1303-spring2015.html",
        "video_url": ""
    },
    {
        "date": "2015-01-07",
        "desc": "This course is the first of a two-course sequence: Introduction to Computer Science and Programming Using Python, and Introduction to Computational Thinking and Data Science. Together, they are designed to help people with no prior exposure to computer science or programming learn to think computationally and write programs to tackle useful problems. Some of the people taking the two courses will use them as a stepping stone to more advanced computer science courses, but for many it will be their first and last computer science courses.Since these courses may be the only formal computer science courses many of the students take, we have chosen to focus on breadth rather than depth. The goal is to provide students with a brief introduction to many topics so they will have an idea of what is possible when they need to think about how to use computation to accomplish some goal later in their career. That said, they are not \"computation appreciation\" courses. They are challenging and rigorous courses in which the students spend a lot of time and effort learning to bend the computer to their will.Introduction to Computer Science and Programming Using Python covers the notion of computation, the Python programming language, some simple algorithms, testing and debugging, and informal introduction to algorithmic complexity, and some simple algorithms and data structures.Recommended textbook.\u00a0The recommended textbook for this course is: Introduction to Computation and Programming Using Python, Revised and Expanded edition, by John Guttag (MIT Press, 2013). Professor Guttag\u2019s book is priced at an affordable $25.00 and is available in both print and e-book editions wherever books are sold.Special offer for edX students.\u00a0The MIT Press is offering enrolled students of 6.00x a special price of $17.50 (a 30% discount) on books ordered directly through the publisher\u2019s website. To take advantage of this offer, please use promotion code guttag30.6.00 Introduction to Computer Science and Programming on OCW 20116.00 Introduction to Computer Science and Programming on OCW 2008",
        "desc_html": "This course is the first of a two-course sequence: Introduction to Computer\nScience and Programming Using Python, and Introduction to Computational\nThinking and Data Science. Together, they are designed to help people with no\nprior exposure to computer science or programming learn to think\ncomputationally and write programs to tackle useful problems. Some of the\npeople taking the two courses will use them as a stepping stone to more\nadvanced computer science courses, but for many it will be their first and\nlast computer science courses.  \n  \nSince these courses may be the only formal computer science courses many of\nthe students take, we have chosen to focus on breadth rather than depth. The\ngoal is to provide students with a brief introduction to many topics so they\nwill have an idea of what is possible when they need to think about how to use\ncomputation to accomplish some goal later in their career. That said, they are\nnot \"computation appreciation\" courses. They are challenging and rigorous\ncourses in which the students spend a lot of time and effort learning to bend\nthe computer to their will.  \n  \nIntroduction to Computer Science and Programming Using Python covers the\nnotion of computation, the Python programming language, some simple\nalgorithms, testing and debugging, and informal introduction to algorithmic\ncomplexity, and some simple algorithms and data structures.  \n  \nRecommended textbook.\u00a0The recommended textbook for this course is:\nIntroduction to Computation and Programming Using Python, Revised and Expanded\nedition, by John Guttag (MIT Press, 2013). Professor Guttag\u2019s book is priced\nat an affordable $25.00 and is available in both print and e-book editions\nwherever books are sold.  \n  \nSpecial offer for edX students.\u00a0The MIT Press is offering enrolled students of\n6.00x a special price of $17.50 (a 30% discount) on books ordered directly\nthrough the publisher\u2019s website. To take advantage of this offer, please use\npromotion code guttag30.  \n  \n  \n  \n  \n  \n6.00 Introduction to Computer Science and Programming on OCW 2011  \n  \n6.00 Introduction to Computer Science and Programming on OCW 2008  \n  \n\n\n",
        "name": "6.00.1x: Introduction to Computer Science and Programming Using Python",
        "provider": "edX",
        "rating": "4.5263157894737",
        "reviews": "19",
        "university": [
            "Massachusetts Institute of Technology"
        ],
        "url": "https://www.edx.org/course/introduction-computer-science-mitx-6-00-1x-0",
        "video_url": "https://www.youtube.com/embed/ww2BdhILIio?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-01-07",
        "desc": "Handheld systems, such as smartphones and tablets are now the most common way for people to access and interact with computing services. The demand for application development skills is therefore growing at a breathtaking pace. These skills, however, are multi-&shy;\u2010 faceted, requiring students to master computer science and engineering principles, to learn the details of specific mobile application platforms, and to design artistic and engaging user interfaces that respond to how, where and why handheld applications are used.This course will cover the fundamental programming principles, software architecture and user experience considerations underlying handheld software applications and their development environments. To bring these concepts alive, the course will involve in-&shy;\u2010depth, hands-&shy;\u2010on examples, implemented in the Android Platform, the fastest growing segment of the handheld system user base. Students will apply these teachings, also using the Android Platform, in laboratory projects and in a large-&shy;\u2010scale semester project.&nbsp;Note: This course is part of a Coursera SpecializationThis course and two others, led respectively by Drs. Douglas Schmidt and Jules White of Vanderbilt University, have been designed to complement each other. Click here to find out more about theMobile Cloud Computing with Android (MoCCA) Specialization. Therefore, some of the programming assignments and the course project for these courses will be coordinated.This course focuses on handheld systems and the design of user-facing applications, and will be taught first. The first Vanderbilt University course,Pattern-Oriented Software Architectures: Programming Mobile Services for Android Handheld Systemswill focus on systems programming topics, such as middleware services and background processing. The second Vanderbilt University course,Programming Cloud Services for Android Handheld Systemswill focus on connecting Android mobile devices to cloud computing and data storage resources, essentially turning a device into an extension of powerful cloud-based services on popular cloud computing platforms, such as Google App Engine and Amazon EC2.Nevertheless, each of these courses stands alone. Students are not required to take all of them. Those who do, however, will gain a much more detailed, end-to-end&nbsp;understanding of handheld systems and their applications.SyllabusScheduleWeek #1:Objective: In this lesson, I discuss the Android Platform and the Android Development Environment. By the end of this lesson you should understand the components comprising the Android Platform and be able to use various tools found in the Android Development Environment&bull;&nbsp;&nbsp;Lecture #1 &ndash; The Android Platform&bull;&nbsp;&nbsp;Lecture #2 &ndash; The Android Development Environment&bull;&nbsp;&nbsp;Lab #1: Setup: Students identify required software &amp; install it on their personal computers.&nbsp; Students perform several tasks to familiarize themselves with the Android Platform and Development Environment.&nbsp;Week #2:Objective:&nbsp;In this lesson, I&nbsp;explain&nbsp;the basic components from which all Android applications are created. I also present the Activity class - one of the main class responsible for displaying an application's user interface. By the end of this&nbsp;lesson, you should recognize the four fundamental components of Android applications, be able to create a simple Android application and understand the lifecycle of the Activity class.&bull;&nbsp;&nbsp;Lecture #3 &ndash; Application Fundamentals&bull;&nbsp;&nbsp;Lecture #4 &ndash; The Activity Class&bull;&nbsp;&nbsp;Lab #2 &ndash; The Activity Lifecycle &amp; Reconfiguration: Students build applications that trace the lifecycle callback methods issued by the Android platform and that demonstrate Android's behavior when the device configuration changes (e.g., when the device moves from portrait to landscape mode and back).Week #3:Objective:&nbsp;In this lesson, I&nbsp;explain the Intent class and Permissions. I also present the Fragment class - another key class responsible for displaying an application's user interface. By the end of this lesson, you should be able to&nbsp;create applications comprising more than one Activity, understand how to define and enforce permissions and be able to design applications that run on multiple, differently-sized devices.&bull;&nbsp;&nbsp;Lecture #5 &ndash; The Intent Class&bull;&nbsp;&nbsp;Lecture #6 &ndash; Permissions&bull;&nbsp;&nbsp;Lecture #7 &ndash; The Fragment Class&bull;&nbsp;&nbsp;Lab #3a - Intents &amp; Permissions: &nbsp;Students build applications that require starting multiple Activities via both standard and custom Intents.&bull;&nbsp;&nbsp;Lab #3b - Permissions: &nbsp;Students&nbsp;build applications that require standard and custom permissions.&bull;&nbsp;&nbsp;Lab #3c &ndash; Multi-pane and single-pane User Interfaces:&nbsp;Students&nbsp;build an application that uses a single code base, but creates different user interfaces depending on a device's screen size.&nbsp;Week #4:&nbsp;Objective:&nbsp;In this lesson, I summarize and demonstrate the many class Android provides for creating user interfaces. By the end of this lesson, you should be able to define and deploy applications with sophisticated user interfaces.&bull; Lectures #8 &ndash; User Interface Classes - Part I&bull; Lectures #9 &ndash; User Interface Classes - Part II&bull; Lab #4 &ndash; ToDoManager: &nbsp;Students build a ToDo list manager using the user interface elements discussed in lecture. The application allows users to create new ToDo Items and to display them in a ListView.&nbsp;&nbsp;&bull;&nbsp;Mini-project - Modern Art User Interfaces: Students will build a complete app from scratch. Collaborators from the&nbsp;Musuem of Modern Art&nbsp;will help student draw some inspiration from the work of several Modern Art masters.Week #5:Objective:&nbsp;In this lesson, I dive deeper in Android, focusing on advanced some of the advanced capabilities it provides. I discuss using User Notifications to interact with the user, listening for and responding to events using the BroadcastReceiver class, and handling concurrency with Threads, AsyncTask &amp; Handlers. There are also two optional lectures dealing with using Alarms to run code at pre-scheduled times and with understanding how to access data over the network. By the end of this lesson, you should understand how these key technologies are used to support more advanced Android applications.&bull; Lecture #10 &ndash; User Notifications&bull; Lecture #11 &ndash; The BroadcastReceiver Class&bull; Lecture #12 &ndash; Threads, AsyncTask &amp; Handlers&bull; Lecture #13 - Alarms&bull; Lecture #14 - Networking&bull; Lab #5 &ndash; Tweet app: Students build an app that downloads and displays Tweet data. The app uses an AsyncTask for downloading data over the network. The app will also user BroadcastReceivers and User Notifications to apprise the user of the apps behavior and state.Week #6:Objective:&nbsp;In this lesson, I present a number of technologies related to presenting and interacting with dynamic content. This includes graphics and animation, handling touch input from the user, and recording and playing multimedia. By the end of this lesson, you should be able to animate your applications, create apps that respond to both standard and custom gestures, and display and use multimedia content.&bull; Lecture #15 &ndash; Graphics &amp; Animation I&bull; Lecture #16 &ndash; Graphics &amp; Animation II&bull; Lecture #17 &ndash; Multi-touch &amp; Gestures&bull; Lecture #18 &ndash; MultiMedia&bull; Lab #6 - Bubble Popper: Students write an application to display and animate bubbles (graphics that look like bubbles) on the device's screen. When users touch the screen where a bubble is displayed, the bubble pops. The app will also accept gesture input, allowing the user to change the direction and speed of the bubble, using a fling gesture.Week #7:Objective:&nbsp;In this lesson, I go over the many sensors that now come standard on most mobile devices. I also provide a focused discussion of using sensors to capture location information and using maps to display that information. By the end of this lesson, you should be able to create context aware applications whose behavior changes based on environmental conditions.&bull; Lecture #19 &ndash; Sensors&bull; Lecture #20 &ndash; Location &amp; Maps&bull; Lab #7 - Place Badge Collector: Students build an application that uses location information to collect Badges for the places they visit.Week #8:Objective:&nbsp;In this lesson, I wrap up with a discussion of some behind the scenes Android capabilities. I discuss how to manage structured data, how to share that data across applications using the ContentProvider class, and how to run operations in the background and across processes using the Service class. By the end of this lesson, you should be able to design complex applications that leverage complex structured data sets and that perform processing in the background.&bull; Lecture #21 &ndash; DataManagement&bull; Lecture #22 &ndash; The ContentProvider Class&bull; Lecture #23 &ndash; The Service Class&bull; Lab #8 - Place Badge Collector Content Provider: Students build a ContentProvider to store the Place Badges they collect with the app from Weekk 7 application that uses location information to collect Badges for the places they visit.Mini-project -&nbsp;DailySelfie:&nbsp;Students will build a complete app from scratch. This app will remind users to take a picture of themselves once a day. The app will collect and display the resulting set of photos.",
        "desc_html": "Handheld systems, such as smartphones and tablets are now the most common way\nfor people to access and interact with computing services. The demand for\napplication development skills is therefore growing at a breathtaking pace.\nThese skills, however, are multi-\u00ad\u2010 faceted, requiring students to master\ncomputer science and engineering principles, to learn the details of specific\nmobile application platforms, and to design artistic and engaging user\ninterfaces that respond to how, where and why handheld applications are used.\n\nThis course will cover the fundamental programming principles, software\narchitecture and user experience considerations underlying handheld software\napplications and their development environments. To bring these concepts\nalive, the course will involve in-\u00ad\u2010depth, hands-\u00ad\u2010on examples, implemented in\nthe Android Platform, the fastest growing segment of the handheld system user\nbase. Students will apply these teachings, also using the Android Platform, in\nlaboratory projects and in a large-\u00ad\u2010scale semester project.\n\n**Note: This course is part of a Coursera Specialization**\n\nThis course and two others, led respectively by Drs. Douglas Schmidt and Jules\nWhite of Vanderbilt University, have been designed to complement each other.\nClick here to find out more about the [Mobile Cloud Computing with Android\n(MoCCA) Specialization](https://www.coursera.org/specialization/mobilecloudcom\nputing/2). Therefore, some of the programming assignments and the course\nproject for these courses will be coordinated.\n\nThis course focuses on handheld systems and the design of user-facing\napplications, and will be taught first. The first Vanderbilt University\ncourse, [Pattern-Oriented Software Architectures: Programming Mobile Services\nfor Android Handheld Systems](https://www.coursera.org/course/posa) will focus\non systems programming topics, such as middleware services and background\nprocessing. The second Vanderbilt University course, [ Programming Cloud\nServices for Android Handheld\nSystems](https://www.coursera.org/course/mobilecloud) will focus on connecting\nAndroid mobile devices to cloud computing and data storage resources,\nessentially turning a device into an extension of powerful cloud-based\nservices on popular cloud computing platforms, such as Google App Engine and\nAmazon EC2.\n\nNevertheless, each of these courses stands alone. Students are not required to\ntake all of them. Those who do, however, will gain a much more detailed, end-\nto-end understanding of handheld systems and their applications.\n\n## Syllabus\n\n**Schedule**\n\n**Week #1**:\n\nObjective: In this lesson, I discuss the Android Platform and the Android\nDevelopment Environment. By the end of this lesson you should understand the\ncomponents comprising the Android Platform and be able to use various tools\nfound in the Android Development Environment\n\n\u2022  Lecture #1 - The Android Platform\n\n\u2022  Lecture #2 - The Android Development Environment\n\n\u2022  Lab #1: Setup: Students identify required software & install it on their\npersonal computers.  Students perform several tasks to familiarize themselves\nwith the Android Platform and Development Environment.\n\n**Week #2:**\n\nObjective: In this lesson, I explain the basic components from which all\nAndroid applications are created. I also present the Activity class - one of\nthe main class responsible for displaying an application's user interface. By\nthe end of this lesson, you should recognize the four fundamental components\nof Android applications, be able to create a simple Android application and\nunderstand the lifecycle of the Activity class.\n\n\u2022  Lecture #3 - Application Fundamentals\n\n\u2022  Lecture #4 - The Activity Class\n\n\u2022  Lab #2 - The Activity Lifecycle & Reconfiguration: Students build\napplications that trace the lifecycle callback methods issued by the Android\nplatform and that demonstrate Android's behavior when the device configuration\nchanges (e.g., when the device moves from portrait to landscape mode and\nback).\n\n**Week #3:**\n\nObjective: In this lesson, I explain the Intent class and Permissions. I also\npresent the Fragment class - another key class responsible for displaying an\napplication's user interface. By the end of this lesson, you should be able to\ncreate applications comprising more than one Activity, understand how to\ndefine and enforce permissions and be able to design applications that run on\nmultiple, differently-sized devices.**  \n**\n\n\u2022  Lecture #5 - The Intent Class\n\n\u2022  Lecture #6 - Permissions\n\n\u2022  Lecture #7 - The Fragment Class\n\n\u2022  Lab #3a - Intents & Permissions:  Students build applications that require\nstarting multiple Activities via both standard and custom Intents.  \n\u2022  Lab #3b - Permissions:  Students build applications that require standard\nand custom permissions.  \n\u2022  Lab #3c - Multi-pane and single-pane User Interfaces: Students build an\napplication that uses a single code base, but creates different user\ninterfaces depending on a device's screen size.\n\n**Week #4:** \n\nObjective: In this lesson, I summarize and demonstrate the many class Android\nprovides for creating user interfaces. By the end of this lesson, you should\nbe able to define and deploy applications with sophisticated user interfaces.\n\n\u2022 Lectures #8 - User Interface Classes - Part I\n\n\u2022 Lectures #9 - User Interface Classes - Part II\n\n\u2022 Lab #4 - ToDoManager:  Students build a ToDo list manager using the user\ninterface elements discussed in lecture. The application allows users to\ncreate new ToDo Items and to display them in a ListView.\n\n\n\n\u2022 Mini-project - Modern Art User Interfaces: Students will build a complete\napp from scratch. Collaborators from the [Musuem of Modern Art\n](http://moma.org)will help student draw some inspiration from the work of\nseveral Modern Art masters.\n\n**Week #5:**\n\nObjective: In this lesson, I dive deeper in Android, focusing on advanced some\nof the advanced capabilities it provides. I discuss using User Notifications\nto interact with the user, listening for and responding to events using the\nBroadcastReceiver class, and handling concurrency with Threads, AsyncTask &\nHandlers. There are also two optional lectures dealing with using Alarms to\nrun code at pre-scheduled times and with understanding how to access data over\nthe network. By the end of this lesson, you should understand how these key\ntechnologies are used to support more advanced Android applications.**  \n**\n\n\u2022 Lecture #10 - User Notifications\n\n\u2022 Lecture #11 - The BroadcastReceiver Class\n\n\u2022 Lecture #12 - Threads, AsyncTask & Handlers\n\n\u2022 Lecture #13 - Alarms\n\n\u2022 Lecture #14 - Networking\n\n\u2022 Lab #5 - Tweet app: Students build an app that downloads and displays Tweet\ndata. The app uses an AsyncTask for downloading data over the network. The app\nwill also user BroadcastReceivers and User Notifications to apprise the user\nof the apps behavior and state.\n\n**Week #6:**\n\nObjective: In this lesson, I present a number of technologies related to\npresenting and interacting with dynamic content. This includes graphics and\nanimation, handling touch input from the user, and recording and playing\nmultimedia. By the end of this lesson, you should be able to animate your\napplications, create apps that respond to both standard and custom gestures,\nand display and use multimedia content.**  \n**\n\n\u2022 Lecture #15 - Graphics & Animation I\n\n\u2022 Lecture #16 - Graphics & Animation II\n\n\u2022 Lecture #17 - Multi-touch & Gestures\n\n\u2022 Lecture #18 - MultiMedia\n\n\u2022 Lab #6 - Bubble Popper: Students write an application to display and animate\nbubbles (graphics that look like bubbles) on the device's screen. When users\ntouch the screen where a bubble is displayed, the bubble pops. The app will\nalso accept gesture input, allowing the user to change the direction and speed\nof the bubble, using a fling gesture.\n\n**Week #7:**\n\nObjective: In this lesson, I go over the many sensors that now come standard\non most mobile devices. I also provide a focused discussion of using sensors\nto capture location information and using maps to display that information. By\nthe end of this lesson, you should be able to create context aware\napplications whose behavior changes based on environmental conditions.\n\n\u2022 Lecture #19 - Sensors\n\n\u2022 Lecture #20 - Location & Maps\n\n\u2022 Lab #7 - Place Badge Collector: Students build an application that uses\nlocation information to collect Badges for the places they visit.\n\n**Week #8:**\n\nObjective: In this lesson, I wrap up with a discussion of some behind the\nscenes Android capabilities. I discuss how to manage structured data, how to\nshare that data across applications using the ContentProvider class, and how\nto run operations in the background and across processes using the Service\nclass. By the end of this lesson, you should be able to design complex\napplications that leverage complex structured data sets and that perform\nprocessing in the background.\n\n\u2022 Lecture #21 - DataManagement\n\n\u2022 Lecture #22 - The ContentProvider Class\n\n\u2022 Lecture #23 - The Service Class\n\n\u2022 Lab #8 - Place Badge Collector Content Provider: Students build a\nContentProvider to store the Place Badges they collect with the app from Weekk\n7 application that uses location information to collect Badges for the places\nthey visit.\n\nMini-project -** **DailySelfie: Students will build a complete app from\nscratch. This app will remind users to take a picture of themselves once a\nday. The app will collect and display the resulting set of photos.\n\n",
        "name": "Programming Mobile Applications for Android Handheld Systems: Part 1",
        "provider": "Coursera",
        "rating": "3.8",
        "reviews": "5",
        "university": [
            "University of Maryland, College Park"
        ],
        "url": "https://www.coursera.org/course/androidpart1",
        "video_url": ""
    },
    {
        "date": "2015-01-06",
        "desc": "CS 169.2x is the second half of University of California, Berkeley's semester long course on Engineering Software as a Service. In the first half of the course, CS 169.1x, students use Agile development methods to deploy a simple SaaS app in the cloud. In the second half, CS 169.2x, students create more sophisticated apps by adding relationships between models in apps and by enhancing their apps with JavaScript. They also learn about what happens after the apps are deployed to real users, including how to monitor performance, identify and fix common performance problems, and avoid compromising customer data. Finally, students learn how to apply Agile techniques to enhance and refactor legacy code, a critical skill for professional programmers.Other topics covered in CS 169.2x include:How to form, organize and manage small programming teamsIntroduction to design patterns: what they are and how to recognize opportunities to apply themUsing Rails for more advanced features like third-party authentication and elegantly expressing design patterns that arise frequently in SaaSThere will be three homework assignments: two programming assignments and one assignment about operations/deployment.There will also be several short quizzes. The videos and homeworks used in this offering of the course were revised in October 2013.Before your course starts, try the new edX Demo where you can explore the fun, interactive learning environment and virtual labs. Learn more.",
        "desc_html": "CS 169.2x is the second half of University of California, Berkeley's semester\nlong course on Engineering Software as a Service. In the first half of the\ncourse, CS 169.1x, students use Agile development methods to deploy a simple\nSaaS app in the cloud. In the second half, CS 169.2x, students create more\nsophisticated apps by adding relationships between models in apps and by\nenhancing their apps with JavaScript. They also learn about what happens after\nthe apps are deployed to real users, including how to monitor performance,\nidentify and fix common performance problems, and avoid compromising customer\ndata. Finally, students learn how to apply Agile techniques to enhance and\nrefactor legacy code, a critical skill for professional programmers.  \n  \nOther topics covered in CS 169.2x include:  \n  \nHow to form, organize and manage small programming teams  \nIntroduction to design patterns: what they are and how to recognize\nopportunities to apply them  \nUsing Rails for more advanced features like third-party authentication and\nelegantly expressing design patterns that arise frequently in SaaS  \nThere will be three homework assignments: two programming assignments and one\nassignment about operations/deployment.  \n  \nThere will also be several short quizzes. The videos and homeworks used in\nthis offering of the course were revised in October 2013.  \n  \nBefore your course starts, try the new edX Demo where you can explore the fun,\ninteractive learning environment and virtual labs. Learn more.\n\n",
        "name": "CS169.2x: Engineering Software as a Service, Part 2",
        "provider": "edX",
        "rating": "4.6666666666667",
        "reviews": "3",
        "university": [
            "University of California, Berkeley"
        ],
        "url": "https://www.edx.org/course/engineering-software-service-part-2-uc-berkeleyx-cs169-2x",
        "video_url": "https://www.youtube.com/embed/2Fu7GVnBu0I?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-01-06",
        "desc": "Learn everything you need to know to get started building a MongoDB-based app. This course will go over basic installation, JSON, schema design, querying, insertion of data, indexing and working with language drivers. In the course, you will build a blogging platform, backed by MongoDB. Our code examples will be in Java.After completing this course, you should have a good understanding as to how applications are built on top of MongoDB using Java. This course should also prepare you to take the developer certification associate exam. Register for next exam session to become a MongoDB Certified Professional.PrerequisitesTo take this course you should be familiar with Java. Knowledge of relational databases is not required.SyllabusWeek 1: Introduction and OverviewWeek 2: Creating, Reading and Updating Data (CRUD)Week 3: Schema DesignWeek 4: PerformanceWeek 5: Aggregation FrameworkWeek 6: Application EngineeringWeek 7: Case Studies",
        "desc_html": "Learn everything you need to know to get started building a MongoDB-based app.\nThis course will go over basic installation, JSON, schema design, querying,\ninsertion of data, indexing and working with language drivers. In the course,\nyou will build a blogging platform, backed by MongoDB. Our code examples will\nbe in Java.\n\nAfter completing this course, you should have a good understanding as to how\napplications are built on top of MongoDB using Java. This course should also\nprepare you to take the developer certification associate exam. Register for\nnext exam session to become a MongoDB Certified Professional.\n\n**Prerequisites**\n\nTo take this course you should be familiar with Java. Knowledge of relational\ndatabases is not required.\n\n## Syllabus\n\nWeek 1: Introduction and Overview  \nWeek 2: Creating, Reading and Updating Data (CRUD)  \nWeek 3: Schema Design  \nWeek 4: Performance  \nWeek 5: Aggregation Framework  \nWeek 6: Application Engineering  \nWeek 7: Case Studies\n\n",
        "name": "M101J: MongoDB for Java Developers",
        "provider": "MongoDB University",
        "rating": "4.5",
        "reviews": "4",
        "university": [],
        "url": "https://university.mongodb.com/courses/M101J/about",
        "video_url": "https://www.youtube.com/embed/a-aMJ4vG-vU?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-01-06",
        "desc": "Learn everything you need to know to administer a MongoDB installation in production. This course begins by assuming you have no experience with MongoDB, taking you through the basics of installation. Then you will learn about JSON and Mongo's extensive query capabilities through the Mongo shell. We will cover importing, and exporting data into Mongo. After that, we cover replication and fault tolerance. Then it is on to scaling out with MongoDB, including indexing, performance tuning, monitoring, and sharding. Finally, we cover backups and recovery. No prior experience with MongoDB is assumed for this course but a knowledge of administration of another database will be helpful.After completing this course, you should have a good understanding as to how applications are built on top of MongoDB.&nbsp;This course should also prepare you to take the DBA certification associate exam. Register for next exam session to become a MongoDB Certified Professional.PrerequisitesBasic system administration skills. A working knowledge of relational database concepts is helpful but not required. Javascript is the shell language for MongoDB and rudimentary knowledge of that is also helpful, but not required.SyllabusWeek 1: Introduction and OverviewWeek 2: Creating, Reading and Updating Data (CRUD)Week 3: PerformanceWeek 4: ReplicationWeek 5:&nbsp;Replication, Part 2Week 6: ScalabilityWeek 7: Backup and Recovery",
        "desc_html": "Learn everything you need to know to administer a MongoDB installation in\nproduction. This course begins by assuming you have no experience with\nMongoDB, taking you through the basics of installation. Then you will learn\nabout JSON and Mongo's extensive query capabilities through the Mongo shell.\nWe will cover importing, and exporting data into Mongo. After that, we cover\nreplication and fault tolerance. Then it is on to scaling out with MongoDB,\nincluding indexing, performance tuning, monitoring, and sharding. Finally, we\ncover backups and recovery. No prior experience with MongoDB is assumed for\nthis course but a knowledge of administration of another database will be\nhelpful.\n\nAfter completing this course, you should have a good understanding as to how\napplications are built on top of MongoDB. This course should also prepare you\nto take the DBA certification associate exam. Register for next exam session\nto become a MongoDB Certified Professional.\n\n**Prerequisites**\n\nBasic system administration skills. A working knowledge of relational database\nconcepts is helpful but not required. Javascript is the shell language for\nMongoDB and rudimentary knowledge of that is also helpful, but not required.\n\n## Syllabus\n\nWeek 1: Introduction and Overview  \nWeek 2: Creating, Reading and Updating Data (CRUD)  \nWeek 3: Performance  \nWeek 4: Replication  \nWeek 5: Replication, Part 2\n\nWeek 6: Scalability  \nWeek 7: Backup and Recovery\n\n",
        "name": "M102: MongoDB for DBAs",
        "provider": "MongoDB University",
        "rating": "5",
        "reviews": "2",
        "university": [],
        "url": "https://university.mongodb.com/courses/M102/about",
        "video_url": "https://www.youtube.com/embed/qrfdT5sfrlI?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-01-06",
        "desc": "This is an advanced course for operations staff and others interested in administering MongoDB deployments. It is a deeper dive into many of the topics of M102 and several additional subjects. In this course, we will explore performance and monitoring with a detailed tutorial on using MMS. You will learn the mechanics of MongoDB memory and disk usage and how to tune Linux for typical MongoDB workloads. We will look at preparing for disaster recovery under different requirements scenarios ranging from low tolerance for downtime and data loss to high tolerance for both. You will also learn best practices for doing rolling upgrades and other maintenance across replica sets. Building on the introductory coverage of sharding in M102, we will cover sharding mechanics in detail and specific topics such as pre-splitting data and tag-based vs. hash-based sharding. Throughout the course, we will spend considerable time on diagnostic concerns and debugging configuration and other issues in MongoDB deployments. New MongoDB 2.6 features will be addressed throughout the course, including the new security features, which we will cover in the final week.&nbsp;This course should also prepare you to take the DBA certification associate exam. Register for next exam session to become a MongoDB Certified Professional.PrerequisitesM102SyllabusWeek 1: System Sizing and TuningWeek 2: Disaster Recovery and BackupWeek 3: Fault Tolerance and AvailabilityWeek 4: Monitoring and Sharded Cluster ManagementWeek 5: Sharded Cluster Management, Part 2Week 6:&nbsp;Data Integrity, Authentication, and SecurityWeek 7: Authentication, Authorization, and Security",
        "desc_html": "This is an advanced course for operations staff and others interested in\nadministering MongoDB deployments. It is a deeper dive into many of the topics\nof M102 and several additional subjects. In this course, we will explore\nperformance and monitoring with a detailed tutorial on using MMS. You will\nlearn the mechanics of MongoDB memory and disk usage and how to tune Linux for\ntypical MongoDB workloads. We will look at preparing for disaster recovery\nunder different requirements scenarios ranging from low tolerance for downtime\nand data loss to high tolerance for both. You will also learn best practices\nfor doing rolling upgrades and other maintenance across replica sets. Building\non the introductory coverage of sharding in M102, we will cover sharding\nmechanics in detail and specific topics such as pre-splitting data and tag-\nbased vs. hash-based sharding. Throughout the course, we will spend\nconsiderable time on diagnostic concerns and debugging configuration and other\nissues in MongoDB deployments. New MongoDB 2.6 features will be addressed\nthroughout the course, including the new security features, which we will\ncover in the final week.\n\nThis course should also prepare you to take the DBA certification associate\nexam. Register for next exam session to become a MongoDB Certified\nProfessional.\n\n**Prerequisites**\n\nM102\n\n## Syllabus\n\nWeek 1: System Sizing and Tuning  \nWeek 2: Disaster Recovery and Backup  \nWeek 3: Fault Tolerance and Availability  \nWeek 4: Monitoring and Sharded Cluster Management  \nWeek 5: Sharded Cluster Management, Part 2  \nWeek 6: Data Integrity, Authentication, and Security  \nWeek 7: Authentication, Authorization, and Security\n\n",
        "name": "M202: MongoDB Advanced Deployment and Operations",
        "provider": "MongoDB University",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://university.mongodb.com/courses/M202/about",
        "video_url": "https://www.youtube.com/embed/MnZrqOfei4g?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-01-06",
        "desc": "Learn everything you need to know to get started building a MongoDB-based app.This course will go over basic installation, JSON, schema design, querying, insertion of data, indexing and working with language drivers. We will also cover working in sharded and replicated environments. In the course, you will build a blogging platform, backed by MongoDB. Our code examples will be given in Python. A brief Python introduction is included in the course.PrerequisitesTo take this course, you should have a working knowledge of Python. Knowledge of relational databases is not required.",
        "desc_html": "Learn everything you need to know to get started building a MongoDB-based app.\n\nThis course will go over basic installation, JSON, schema design, querying,\ninsertion of data, indexing and working with language drivers. We will also\ncover working in sharded and replicated environments. In the course, you will\nbuild a blogging platform, backed by MongoDB. Our code examples will be given\nin Python. A brief Python introduction is included in the course.\n\n**Prerequisites**\n\nTo take this course, you should have a working knowledge of Python. Knowledge\nof relational databases is not required.\n\n",
        "name": "M101P: MongoDB for Python Developers",
        "provider": "MongoDB University",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://university.mongodb.com/courses/M101P/about",
        "video_url": "https://www.youtube.com/embed/qkX0sC7IuJI?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-01-06",
        "desc": "Learn everything you need to know to get started building a MongoDB-based app.This course will go over basic installation, JSON, schema design, querying, insertion of data, indexing and working with language drivers. In the course, you will build a blogging platform, backed by MongoDB. Our code examples will be in Node.js.PrerequisitesTo take this course you should be familiar with JavaScript. Knowledge of relational databases is not required.SyllabusWeek 1: Introduction and OverviewWeek 2: Creating, Reading and Updating Data (CRUD)Week 3: Schema DesignWeek 4: PerformanceWeek 5: Aggregation FrameworkWeek 6: Application EngineeringWeek 7: Case Studies",
        "desc_html": "Learn everything you need to know to get started building a MongoDB-based app.\n\nThis course will go over basic installation, JSON, schema design, querying,\ninsertion of data, indexing and working with language drivers. In the course,\nyou will build a blogging platform, backed by MongoDB. Our code examples will\nbe in Node.js.\n\n**Prerequisites**\n\nTo take this course you should be familiar with JavaScript. Knowledge of\nrelational databases is not required.\n\n## Syllabus\n\nWeek 1: Introduction and Overview  \nWeek 2: Creating, Reading and Updating Data (CRUD)  \nWeek 3: Schema Design  \nWeek 4: Performance  \nWeek 5: Aggregation Framework  \nWeek 6: Application Engineering  \nWeek 7: Case Studies\n\n",
        "name": "M101JS: MongoDB for Node.js Developers",
        "provider": "MongoDB University",
        "rating": "4",
        "reviews": "1",
        "university": [],
        "url": "https://university.mongodb.com/courses/M101JS/about",
        "video_url": "https://www.youtube.com/embed/ubM2MzmC2C8?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2015-01-05",
        "desc": "Cryptography is an indispensable tool for protecting information in computer systems. This course explains the inner workings of cryptographic primitives and how to correctly use them. Students will learn how to reason about the security of cryptographic constructions and how to apply this knowledge to real-world applications. The course begins with a detailed discussion of how two parties who have a shared secret key can communicate securely when a powerful adversary eavesdrops and tampers with traffic. We will examine many deployed protocols and analyze mistakes in existing systems. The second half of the course discusses public-key techniques that let two or more parties generate a shared secret key. We will cover the relevant number theory and discuss public-key encryption and basic key-exchange.&nbsp;Throughout the course students will be exposed to many exciting open problems in the field.The course will include written homeworks and programming labs. The course is self-contained, however it will be helpful to have a basic understanding of discrete probability theory.A preview of the course, including lectures and homework assignments, is available at thispreview site.",
        "desc_html": "Cryptography is an indispensable tool for protecting information in computer\nsystems. This course explains the inner workings of cryptographic primitives\nand how to correctly use them. Students will learn how to reason about the\nsecurity of cryptographic constructions and how to apply this knowledge to\nreal-world applications. The course begins with a detailed discussion of how\ntwo parties who have a shared secret key can communicate securely when a\npowerful adversary eavesdrops and tampers with traffic. We will examine many\ndeployed protocols and analyze mistakes in existing systems. The second half\nof the course discusses public-key techniques that let two or more parties\ngenerate a shared secret key. We will cover the relevant number theory and\ndiscuss public-key encryption and basic key-exchange. Throughout the course\nstudents will be exposed to many exciting open problems in the field.\n\nThe course will include written homeworks and programming labs. The course is\nself-contained, however it will be helpful to have a basic understanding of\ndiscrete probability theory.\n\nA preview of the course, including lectures and homework assignments, is\navailable at this [preview site](https://class.coursera.org/crypto-preview).\n\n",
        "name": "Cryptography I",
        "provider": "Coursera",
        "rating": "4.6875",
        "reviews": "16",
        "university": [
            "Stanford University"
        ],
        "url": "https://www.coursera.org/course/crypto",
        "video_url": ""
    },
    {
        "date": "2015-01-05",
        "desc": "What is image and video processing? Images and videos are everywhere, from those we take with our mobile devices and share with our friends to those that we receive from Mars and the ones we see in the movie theatre, without forgetting the whole ensemble of images of our bodies that are taken in hospital visits. Image and video processing is the art of working with such images and movies, from making it possible to store and transmit them to making those dark and blurry images look nice, as well as interpreting and analyzing the medical data and recognizing our friends\u2019 faces in social pictures. This discipline is also fascinating because it uses tools from many areas of applied mathematics. In this class you will look behind the scenes of image and video processing, from the basic and classical tools to the most modern and advanced algorithms.The course will start with an introduction to the basics of image formation and the fundamental concepts that translate a physical scene into a digital image. We will then describe the underlying concepts of image compression, the enabling technology that makes it possible for images to be sent from Mars and videos to be stored in our mobile phones. We will cover the most fundamental tools in image enhancement, showing how simple tools can significantly improve images. Both geometric and non-geometric tools as well as spatial and non-spatial operations will be presented. Details on image segmentation will be provided, one of the most fundamental and useful problems in image processing. The above topics will be extended to color images and video. Once we have covered the fundamentals, which both provide the basis for modern image and video processing and serve many important applications until today, we will move into recent progress in the area, covering image inpainting (how to remove objects from images and video), image processing via sparse modeling and compressed sensing, geometric partial differential equations for image analysis, image processing for HIV and virus research, and image processing for neurosurgery and other medical applications.SyllabusWeek 1- Introduction to Image and Video Processing: We will cover the fundamentals, including some elements of visual perception, sensing, sampling, and quantization.Week 2- Image and Video Compression: We will learn the fundamental tools enabling us to receive images from Mars, to upload images to the web, and to store a lot of images and videos in our mobile phones.Week 3- Spatial Processing: This week we will learn some of the most classical and fundamental tools that help us still today to make noisy, blurry, and dark images look much better.Week 4- Image Restoration: When something is known or estimated about the degradation process, we can do much better, and in this week we will learn how.Week 5- Image Segmentation: How do we split an image or video in its core components?Week 6- Geometric PDEs: We will learn about the use of partial differential equations and geometric deformations for problems like image enhancement and object detection.Week 7- Image and Video Inpainting: How to make objects disappear and other special effects.Week 8- Sparse Modeling and Compressed Sensing: We will cover some of the most modern tools for image enhancement and image analysis.Week 9- Medical Imaging: As an example of medical image analysis, we will illustrate examples and techniques in the areas of brain research and virus analysis.Computer Exercises-See below for more details on this.",
        "desc_html": "What is image and video processing? Images and videos are everywhere, from\nthose we take with our mobile devices and share with our friends to those that\nwe receive from Mars and the ones we see in the movie theatre, without\nforgetting the whole ensemble of images of our bodies that are taken in\nhospital visits. Image and video processing is the art of working with such\nimages and movies, from making it possible to store and transmit them to\nmaking those dark and blurry images look nice, as well as interpreting and\nanalyzing the medical data and recognizing our friends\u2019 faces in social\npictures. This discipline is also fascinating because it uses tools from many\nareas of applied mathematics. In this class you will look behind the scenes of\nimage and video processing, from the basic and classical tools to the most\nmodern and advanced algorithms.  \n  \nThe course will start with an introduction to the basics of image formation\nand the fundamental concepts that translate a physical scene into a digital\nimage. We will then describe the underlying concepts of image compression, the\nenabling technology that makes it possible for images to be sent from Mars and\nvideos to be stored in our mobile phones. We will cover the most fundamental\ntools in image enhancement, showing how simple tools can significantly improve\nimages. Both geometric and non-geometric tools as well as spatial and non-\nspatial operations will be presented. Details on image segmentation will be\nprovided, one of the most fundamental and useful problems in image processing.\nThe above topics will be extended to color images and video. Once we have\ncovered the fundamentals, which both provide the basis for modern image and\nvideo processing and serve many important applications until today, we will\nmove into recent progress in the area, covering image inpainting (how to\nremove objects from images and video), image processing via sparse modeling\nand compressed sensing, geometric partial differential equations for image\nanalysis, image processing for HIV and virus research, and image processing\nfor neurosurgery and other medical applications.\n\n## Syllabus\n\n**Week 1**\\- Introduction to Image and Video Processing: We will cover the fundamentals, including some elements of visual perception, sensing, sampling, and quantization.  \n  \n**Week 2**\\- Image and Video Compression: We will learn the fundamental tools enabling us to receive images from Mars, to upload images to the web, and to store a lot of images and videos in our mobile phones.  \n  \n**Week 3**\\- Spatial Processing: This week we will learn some of the most classical and fundamental tools that help us still today to make noisy, blurry, and dark images look much better.  \n  \n**Week 4**\\- Image Restoration: When something is known or estimated about the degradation process, we can do much better, and in this week we will learn how.  \n  \n**Week 5**\\- Image Segmentation: How do we split an image or video in its core components?  \n  \n**Week 6**\\- Geometric PDEs: We will learn about the use of partial differential equations and geometric deformations for problems like image enhancement and object detection.  \n  \n**Week 7**\\- Image and Video Inpainting: How to make objects disappear and other special effects.  \n  \n**Week 8**\\- Sparse Modeling and Compressed Sensing: We will cover some of the most modern tools for image enhancement and image analysis.  \n  \n**Week 9**\\- Medical Imaging: As an example of medical image analysis, we will illustrate examples and techniques in the areas of brain research and virus analysis.  \n  \n**Computer Exercises- **See below for more details on this.  \n\n",
        "name": "Image and video processing: From Mars to Hollywood with a stop at the hospital",
        "provider": "Coursera",
        "rating": "3.6666666666667",
        "reviews": "3",
        "university": [
            "Duke University"
        ],
        "url": "https://www.coursera.org/course/images",
        "video_url": ""
    },
    {
        "date": "2015-01-05",
        "desc": "Exploratory and objective data analysis methods applied to the physical,\nengineering, and biological sciences. Brief review of statistical methods\nand their computational implementation for studying time series analysis,\nspectral analysis, filtering methods, principal component analysis, orthogonal\nmode decomposition, and image processing and compression.",
        "desc_html": "Exploratory and objective data analysis methods applied to the physical,\nengineering, and biological sciences. Brief review of statistical methods and\ntheir computational implementation for studying time series analysis, spectral\nanalysis, filtering methods, principal component analysis, orthogonal mode\ndecomposition, and image processing and compression.\n\n",
        "name": "Computational Methods for Data Analysis",
        "provider": "Coursera",
        "rating": "5",
        "reviews": "2",
        "university": [
            "University of Washington"
        ],
        "url": "https://www.coursera.org/course/compmethods",
        "video_url": ""
    },
    {
        "date": "2015-01-05",
        "desc": "Develop a good working knowledge of Linux using both the graphical interface and command line, covering the major Linux distribution families.Linux powers 94% of the world\u2019s supercomputers, most of the servers powering the Internet, the majority of financial trades worldwide and a billion Android devices. In short, Linux is everywhere. It appears in many different architectures, from mainframes to server to desktop to mobile and on a staggeringly wide variety of hardware.This course explores the various tools and techniques commonly used by Linux system administrators and end users to achieve their day-to-day work in a Linux environment. It is designed for experienced computer users who have limited or no previous exposure to Linux, whether they are working in an individual or Enterprise environment.Upon completion of this training you should have a good working knowledge of Linux, from both a graphical and command line perspective, allowing you to easily navigate through any of the major Linux distributions. You will be able to continue your progress as either a user, system administrator or developer using the acquired skill set.Join the 250,000+ students who are already enrolled in this course and start your Linux journey",
        "desc_html": "Develop a good working knowledge of Linux using both the graphical interface\nand command line, covering the major Linux distribution families.  \n  \nLinux powers 94% of the world\u2019s supercomputers, most of the servers powering\nthe Internet, the majority of financial trades worldwide and a billion Android\ndevices. In short, Linux is everywhere. It appears in many different\narchitectures, from mainframes to server to desktop to mobile and on a\nstaggeringly wide variety of hardware.  \n  \nThis course explores the various tools and techniques commonly used by Linux\nsystem administrators and end users to achieve their day-to-day work in a\nLinux environment. It is designed for experienced computer users who have\nlimited or no previous exposure to Linux, whether they are working in an\nindividual or Enterprise environment.  \n  \nUpon completion of this training you should have a good working knowledge of\nLinux, from both a graphical and command line perspective, allowing you to\neasily navigate through any of the major Linux distributions. You will be able\nto continue your progress as either a user, system administrator or developer\nusing the acquired skill set.  \n  \nJoin the 250,000+ students who are already enrolled in this course and start\nyour Linux journey\n\n",
        "name": "LFS101x.2: Introduction to Linux",
        "provider": "edX",
        "rating": "4.1666666666667",
        "reviews": "6",
        "university": [
            "Linux Foundation"
        ],
        "url": "https://www.edx.org/course/introduction-linux-linuxfoundationx-lfs101x-2",
        "video_url": "https://www.youtube.com/embed/BmDricQGK6w?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-12-30",
        "desc": "This is CS50, Harvard University's introduction to the intellectual enterprises of computer science and the art of programming for majors and non-majors alike, with or without prior programming experience. An entry-level course taught by David J. Malan, CS50 teaches students how to think algorithmically and solve problems efficiently. Topics include abstraction, algorithms, data structures, encapsulation, resource management, security, software engineering, and web development. Languages include C, PHP, and JavaScript plus SQL, CSS, and HTML. Problem sets inspired by real-world domains of biology, cryptography, finance, forensics, and gaming. As of Fall 2014, the on-campus version of CS50 was Harvard's largest course.Students who earn a satisfactory score on 9 problem sets (i.e., programming assignments) and a final project will receive a certificate from HarvardX. This is a self-paced course&#8211;you may take CS50 on your own schedule.HarvardX pursues the science of learning. By registering as an online learner in an HX course, you will also participate in research about learning. Read our research statement to learn more.WAYS TO TAKE THIS EDX COURSE FOR FREE:Audit this CourseAudit this course for free and have complete access to all the course material, activities, tests, and forums. If your work is satisfactory and you abide by the Honor Code, you'll receive a personalized  Honor Code Certificate to showcase your achievement.WAYS TO TAKE THIS COURSE FOR A FEE:Earn a Verified Certificate of AchievementLooking to test your mettle? Do you plan to use your completed coursework for job applications, promotions or school applications? Then you may prefer to work towards an edX personalized Certificate of Achievement to document your accomplishment. It is a great way to document your accomplishment.Earn Harvard CreditOptionally, you can enroll in the traditional, semester-long course at Harvard Extension School. Courses are offered in fall or spring semesters, or both. You have the option to enroll for undergraduate or graduate credit and will receive grades on a Harvard transcript. Learn more about the course on the Harvard Extension School website.SyllabusA schedule of lectures, subject to change, appears below.Week 0Binary. ASCII. Algorithms. Pseudocode. Source code. Compiler. Object code. Scratch. Statements. Boolean expressions. Conditions. Loops. Variables. Functions. Arrays. Threads. Events.Week 1Linux. C. Compiling. Libraries. Types. Standard output.Week 2Casting. Imprecision. Switches. Scope. Strings. Arrays. Command-line arguments. Cryptography.Week 3Debugging. Security. Searching. Sorting. Bubble sort. Selection sort. Insertion sort. O. &Omega;.Week 4&Theta;. Merge sort. Recursion. Pointers. Dynamic memory allocation.Week 5Stack. Heap. Stack overflow. Pre-processing. Compiling. Assembling. Linking.Week 7File I/O. Linked lists. Hash tables. Tries.Week 8Stacks. Queues. Trees. HTTP.Week 9HTML. CSS. PHP. SQL.Week 10JavaScript. Ajax.Week 12Life after 50.",
        "desc_html": "This is CS50, Harvard University's introduction to the intellectual\nenterprises of computer science and the art of programming for majors and non-\nmajors alike, with or without prior programming experience. An entry-level\ncourse taught by David J. Malan, CS50 teaches students how to think\nalgorithmically and solve problems efficiently. Topics include abstraction,\nalgorithms, data structures, encapsulation, resource management, security,\nsoftware engineering, and web development. Languages include C, PHP, and\nJavaScript plus SQL, CSS, and HTML. Problem sets inspired by real-world\ndomains of biology, cryptography, finance, forensics, and gaming. As of Fall\n2014, the on-campus version of CS50 was Harvard's largest course.  \n  \nStudents who earn a satisfactory score on 9 problem sets (i.e., programming\nassignments) and a final project will receive a certificate from HarvardX.\nThis is a self-paced course-you may take CS50 on your own schedule.  \n  \n  \nHarvardX pursues the science of learning. By registering as an online learner\nin an HX course, you will also participate in research about learning. Read\nour research statement to learn more.  \n  \nWAYS TO TAKE THIS EDX COURSE FOR FREE:  \n  \n  \nAudit this Course  \n  \nAudit this course for free and have complete access to all the course\nmaterial, activities, tests, and forums. If your work is satisfactory and you\nabide by the Honor Code, you'll receive a personalized Honor Code Certificate\nto showcase your achievement.  \n  \nWAYS TO TAKE THIS COURSE FOR A FEE:  \n  \nEarn a Verified Certificate of Achievement  \n  \nLooking to test your mettle? Do you plan to use your completed coursework for\njob applications, promotions or school applications? Then you may prefer to\nwork towards an edX personalized Certificate of Achievement to document your\naccomplishment. It is a great way to document your accomplishment.  \n  \nEarn Harvard Credit  \n  \nOptionally, you can enroll in the traditional, semester-long course at Harvard\nExtension School. Courses are offered in fall or spring semesters, or both.\nYou have the option to enroll for undergraduate or graduate credit and will\nreceive grades on a Harvard transcript. Learn more about the course on the\nHarvard Extension School website.\n\n## Syllabus\n\nA schedule of lectures, subject to change, appears below.\n\n**Week 0**  \nBinary. ASCII. Algorithms. Pseudocode. Source code. Compiler. Object code.\nScratch. Statements. Boolean expressions. Conditions. Loops. Variables.\nFunctions. Arrays. Threads. Events.  \n**Week 1**  \nLinux. C. Compiling. Libraries. Types. Standard output.  \n**Week 2**  \nCasting. Imprecision. Switches. Scope. Strings. Arrays. Command-line\narguments. Cryptography.  \n**Week 3**  \nDebugging. Security. Searching. Sorting. Bubble sort. Selection sort.\nInsertion sort. O. \u03a9.  \n**Week 4**  \n\u0398. Merge sort. Recursion. Pointers. Dynamic memory allocation.  \n**Week 5**  \nStack. Heap. Stack overflow. Pre-processing. Compiling. Assembling. Linking.  \n**Week 7**  \nFile I/O. Linked lists. Hash tables. Tries.  \n**Week 8**  \nStacks. Queues. Trees. HTTP.  \n**Week 9**  \nHTML. CSS. PHP. SQL.  \n**Week 10**  \nJavaScript. Ajax.  \n**Week 12**  \nLife after 50.\n\n",
        "name": "CS50x: Introduction to Computer Science",
        "provider": "edX",
        "rating": "4.2727272727273",
        "reviews": "11",
        "university": [
            "Harvard University"
        ],
        "url": "https://www.edx.org/course/introduction-computer-science-harvardx-cs50x",
        "video_url": "https://www.youtube.com/embed/FsYdgKO4AQU?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-12-23",
        "desc": "Welcome! The instructor has decided to teach the course in Mandarin on \nCoursera, while the slides of the course will be in English to ease the \ntechnical illustrations. We \nhope that this choice can help introduce Machine Learning to more students in the Mandarin-speaking world. The English-written slides \nwill not require advanced English ability to understand, though. If you \ncan understand the following descriptions of this course, you can \nprobably follow the slides.[\u6b61\u8fce\u5927\u5bb6\uff01\u9019\u9580\u8ab2\u5c07\u63a1\u7528\u82f1\u6587\u6295\u5f71\u7247\u914d\u5408\u83ef\u6587\u7684\u6559\u5b78\u8b1b\u89e3\uff0c\u6211\u5011\u5e0c\u671b\u80fd\u85c9\u9019\u6b21\u83ef\u6587\u6559\u5b78\u7684\u6a5f\u6703\uff0c\u5c07\u6a5f\u5668\u5b78\u7fd2\u4ecb\u7d39\u7d66\u66f4\u591a\u83ef\u4eba\u4e16\u754c\u7684\u540c\u5b78\u5011\u3002\u8ab2\u7a0b\u4e2d\u4f7f\u7528\u7684\u82f1\u6587\u6295\u5f71\u7247\u4e0d\u6703\u4f7f\u7528\u5230\u8271\u6df1\u7684\u82f1\u6587\uff0c\u5982\u679c\u4f60\u80fd\u4e86\u89e3\u4ee5\u4e0b\u5169\u6bb5\u7684\u8ab2\u7a0b\u7c21\u4ecb\uff0c\u4f60\u61c9\u8a72\u4e5f\u53ef\u4ee5\u4e86\u89e3\u8ab2\u7a0b\u6240\u4f7f\u7528\u7684\u82f1\u6587\u6295\u5f71\u7247\u3002]In the prequel of this course,Machine Learning Foundations, we have illustratedthe necessary fundamentals that give any student of machine learning a \nsolid foundation to explore further techniques. While many new techniques are being designed every day, some techniques stood the test of time and became popular tools nowadays.The course roughly corresponds to the second \nhalf-semester of the National Taiwan University course \"Machine \nLearning.\" Based \non five years of teaching this popular course successfully (including \nwinning the most prestigious teaching award of National Taiwan \nUniversity) and discussing with many other scholars actively, the \ninstructor chooses to focus on three of those popular tools, namely embedding numerous features (kernel models, such as support vector machine), combining predictive features (aggregation models, such as adaptive boosting), and distilling hidden features (extraction models, such as deep learning).SyllabusEach of the following items correspond to approximately one hour of video lecture.[\u4ee5\u4e0b\u7684\u6bcf\u500b\u5c0f\u9805\u76ee\u5c0d\u61c9\u5230\u7d04\u4e00\u5c0f\u6642\u7684\u7dda\u4e0a\u8ab2\u7a0b]Embedding Numerous Features[\u5d4c\u5165\u5927\u91cf\u7684\u7279\u5fb5]-- Linear Support Vector Machine[\u7dda\u6027\u652f\u6301\u5411\u91cf\u6a5f]-- Dual Support Vector Machine[\u5c0d\u5076\u652f\u6301\u5411\u91cf\u6a5f]-- Kernel Support Vector Machine[\u6838\u578b\u652f\u6301\u5411\u91cf\u6a5f]-- Soft-Margin Support Vector Machine[\u8edf\u5f0f\u652f\u6301\u5411\u91cf\u6a5f]-- Kernel Logistic Regression[\u6838\u578b\u7f85\u5409\u65af\u8ff4\u6b78]-- Support Vector Regression[\u652f\u6301\u5411\u91cf\u8ff4\u6b78]Combining Predictive Features[\u878d\u5408\u9810\u6e2c\u6027\u7684\u7279\u5fb5]-- Bootstrap Aggregation[\u81ea\u52a9\u805a\u5408\u6cd5]-- Adaptive Boosting[\u6f38\u6b21\u63d0\u6607\u6cd5]-- Decision Tree[\u6c7a\u7b56\u6a39]-- Random Forest[\u96a8\u6a5f\u68ee\u6797]-- Gradient Boosted Decision Tree[\u68af\u5ea6\u63d0\u6607\u6c7a\u7b56\u6a39]Distilling HiddenFeatures[\u8403\u53d6\u96b1\u85cf\u7684\u7279\u5fb5]-- Neural Network[\u985e\u795e\u7d93\u7db2\u8def]-- Deep Learning[\u6df1\u5ea6\u5b78\u7fd2]-- Radial Basis Function Network[\u9015\u5411\u57fa\u51fd\u6578\u7db2\u8def]-- Matrix Factorization[\u77e9\u9663\u5206\u89e3]Summary[\u7e3d\u7d50]",
        "desc_html": "Welcome! The instructor has decided to teach the course in Mandarin on\nCoursera, while the slides of the course will be in English to ease the\ntechnical illustrations. We hope that this choice can help introduce Machine\nLearning to more students in the Mandarin-speaking world. The English-written\nslides will not require advanced English ability to understand, though. If you\ncan understand the following descriptions of this course, you can probably\nfollow the slides. **[\u6b61\u8fce\u5927\u5bb6\uff01\u9019\u9580\u8ab2\u5c07\u63a1\u7528\u82f1\u6587\u6295\u5f71\u7247\u914d\u5408\u83ef\u6587\u7684\u6559\u5b78\u8b1b\u89e3\uff0c\u6211\u5011\u5e0c\u671b\u80fd\u85c9\u9019\u6b21\u83ef\u6587\u6559\u5b78\u7684\u6a5f\u6703\uff0c\u5c07\u6a5f\u5668\u5b78\u7fd2\u4ecb\u7d39\u7d66\u66f4\u591a\u83ef\u4eba\u4e16\u754c\n\u7684\u540c\u5b78\u5011\u3002\u8ab2\u7a0b\u4e2d\u4f7f\u7528\u7684\u82f1\u6587\u6295\u5f71\u7247\u4e0d\u6703\u4f7f\u7528\u5230\u8271\u6df1\u7684\u82f1\u6587\uff0c\u5982\u679c\u4f60\u80fd\u4e86\u89e3\u4ee5\u4e0b\u5169\u6bb5\u7684\u8ab2\u7a0b\u7c21\u4ecb\uff0c\u4f60\u61c9\u8a72\u4e5f\u53ef\u4ee5\u4e86\u89e3\u8ab2\u7a0b\u6240\u4f7f\u7528\u7684\u82f1\u6587\u6295\u5f71\u7247\u3002]**  \n  \nIn the prequel of this course, _[Machine Learning\nFoundations_](https://www.coursera.org/course/ntumlone), we have illustrated\nthe necessary fundamentals that give any student of machine learning a solid\nfoundation to explore further techniques. While many new techniques are being\ndesigned every day, some techniques stood the test of time and became popular\ntools nowadays.  \n  \nThe course roughly corresponds to the second half-semester of the National\nTaiwan University course \"Machine Learning.\" Based on five years of teaching\nthis popular course successfully (including winning the most prestigious\nteaching award of National Taiwan University) and discussing with many other\nscholars actively, the instructor chooses to focus on three of those popular\ntools, namely embedding numerous features (kernel models, such as support\nvector machine), combining predictive features (aggregation models, such as\nadaptive boosting), and distilling hidden features (extraction models, such as\ndeep learning).  \n  \n  \n\n## Syllabus\n\nEach of the following items correspond to approximately one hour of video\nlecture.** [\u4ee5\u4e0b\u7684\u6bcf\u500b\u5c0f\u9805\u76ee\u5c0d\u61c9\u5230\u7d04\u4e00\u5c0f\u6642\u7684\u7dda\u4e0a\u8ab2\u7a0b]**  \n  \nEmbedding Numerous Features **[\u5d4c\u5165\u5927\u91cf\u7684\u7279\u5fb5]**  \n\\-- Linear Support Vector Machine **[\u7dda\u6027\u652f\u6301\u5411\u91cf\u6a5f]**  \n\\-- Dual Support Vector Machine **[\u5c0d\u5076\u652f\u6301\u5411\u91cf\u6a5f]**  \n\\-- Kernel Support Vector Machine **[\u6838\u578b\u652f\u6301\u5411\u91cf\u6a5f]**  \n\\-- Soft-Margin Support Vector Machine **[\u8edf\u5f0f\u652f\u6301\u5411\u91cf\u6a5f]**  \n\\-- Kernel Logistic Regression **[\u6838\u578b\u7f85\u5409\u65af\u8ff4\u6b78]**  \n\\-- Support Vector Regression **[\u652f\u6301\u5411\u91cf\u8ff4\u6b78]**  \n  \nCombining Predictive Features **[\u878d\u5408\u9810\u6e2c\u6027\u7684\u7279\u5fb5]**  \n\\-- Bootstrap Aggregation **[\u81ea\u52a9\u805a\u5408\u6cd5]**  \n\\-- Adaptive Boosting **[\u6f38\u6b21\u63d0\u6607\u6cd5]**  \n\\-- Decision Tree **[\u6c7a\u7b56\u6a39]**  \n\\-- Random Forest **[\u96a8\u6a5f\u68ee\u6797]**  \n\\-- Gradient Boosted Decision Tree **[\u68af\u5ea6\u63d0\u6607\u6c7a\u7b56\u6a39]**  \n  \nDistilling Hidden Features **[\u8403\u53d6\u96b1\u85cf\u7684\u7279\u5fb5]**  \n\\-- Neural Network **[\u985e\u795e\u7d93\u7db2\u8def]**  \n\\-- Deep Learning **[\u6df1\u5ea6\u5b78\u7fd2]**  \n\\-- Radial Basis Function Network **[****\u9015\u5411\u57fa\u51fd\u6578\u7db2\u8def]**  \n\\-- Matrix Factorization **[\u77e9\u9663\u5206\u89e3]**  \n  \nSummary **[\u7e3d\u7d50]**  \n  \n\n",
        "name": "\u6a5f\u5668\u5b78\u7fd2\u6280\u6cd5 (Machine Learning Techniques)",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "National Taiwan University"
        ],
        "url": "https://www.coursera.org/course/ntumltwo",
        "video_url": ""
    },
    {
        "date": "2014-11-30",
        "desc": "This is a set of computational modules aimed at supporting engineering students with their computational needs in the curriculum. Each module is self-contained and consists of a set of lessons motivated by applications in engineering courses. The computing is done using scientific Python..Students can study, practice and complete these modules at any time, according to their needs.",
        "desc_html": "This is a set of computational modules aimed at supporting engineering\nstudents with their computational needs in the curriculum. Each module is\nself-contained and consists of a set of lessons motivated by applications in\nengineering courses. The computing is done using scientific Python..\n\nStudents can study, practice and complete these modules at any time, according\nto their needs.\n\n",
        "name": "Just-in-Time Online Modules in Engineering Computing",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [
            "George Washington University"
        ],
        "url": "http://openedx.seas.gwu.edu/courses/GW/JITcode/2014_fall/about",
        "video_url": ""
    },
    {
        "date": "2014-11-28",
        "desc": "Machine Learning is a first-class ticket to the most exciting careers in data analysis today. As data sources proliferate along with the computing power to process them, going straight to the data is one of the most straightforward ways to quickly gain insights and make predictions.Machine learning brings together computer science and statistics to harness that predictive power. It&rsquo;s a must-have skill for all aspiring data analysts and data scientists, or anyone else who wants to wrestle all that raw data into refined trends and predictions.This is a class that will teach you the end-to-end process of investigating data through a machine learning lens. It will teach you how to extract and identify useful features that best represent your data, a few of the most important machine learning algorithms, and how to evaluate the performance of your machine learning algorithms.Why Take This Course?In this course, you&rsquo;ll learn by doing! We&rsquo;ll bring machine learning to life by showing you fascinating use cases and tackling interesting real-world problems like self-driving cars. For your final project you&rsquo;ll mine the email inboxes and financial data of Enron to identify persons of interest in one of the greatest corporate fraud cases in American history.When you finish this introductory course, you&rsquo;ll be able to analyze data using machine learning techniques, and you&rsquo;ll also be prepared to take our Data Analyst Nanodegree. We&rsquo;ll get you started on your machine learning journey by teaching you how to use helpful tools, such as pre-written algorithms and libraries, to answer interesting questions.Prerequisites and RequirementsTo succeed in this course, you must be proficient at programming in Python, basic statistics, and data science. If you need a refresher on any of these topics, you can check out these courses:Intro to Computer Science&nbsp;(You should know basic data structures and control statements, and be able to write and import functions.)Inferential StatisticsDescriptive StatisticsOne additional course that would be nice to have is Intro to Data Science, as this will get you familiar with scientific problem-solving. However, completion of that class isn't required for success. We will also use a tiny bit of&nbsp;git, which you can also learn about on Udacity.One thing that we don&rsquo;t require is previous exposure to machine learning. If you&rsquo;re a machine learning beginner, you&rsquo;re in the right place.See the&nbsp;Technology Requirements&nbsp;for using Udacity.&nbsp;SyllabusSyllabusYou&rsquo;ll learn how to start with a question and/or a dataset, and use machine learning to turn them into insights.Lessons 1-4: Supervised ClassificationNaive Bayes:&nbsp;We jump in headfirst, learning perhaps the world&rsquo;s greatest algorithm for classifying text.Support Vector Machines (SVMs):&nbsp;One of the top 10 algorithms in machine learning, and a must-try for many classification tasks. What makes it special? The ability to generate new features independently and on the fly.Decision Trees:&nbsp;Extremely straightforward, often just as accurate as an SVM but (usually) way faster. The launch point for more sophisticated methods, like random forests and boosting.Lesson 5: Datasets and QuestionsBehind any great machine learning project is a great dataset that the algorithm can learn from. We were inspired by a treasure trove of email and financial data from the Enron corporation, which would normally be strictly confidential but became public when the company went bankrupt in a blizzard of fraud. Follow our lead as we wrestle this dataset into a machine-learning-ready format, in anticipation of trying to predict cases of fraud.Lesson 6 and 7: Regressions and OutliersRegressions are some of the most widely used machine learning algorithms, and rightly share prominence with classification. What&rsquo;s a fast way to make mistakes in regression, though? Have troublesome outliers in your data. We&rsquo;ll tackle how to identify and clean away those pesky data points.Lesson 8: Unsupervised LearningK-Means Clustering:&nbsp;The flagship algorithm when you don&rsquo;t have labeled data to work with, and a quick method for pattern-searching when approaching a dataset for the first time.Lessons 9-12: Features, Features, FeaturesFeature Creation:&nbsp;Taking your human intuition about the world and turning it into data that a computer can use.Feature Selection:&nbsp;Einstein said it best: make everything as simple as possible, and no simpler. In this case, that means identifying the most important features of your data.Principal Component Analysis:&nbsp;A more sophisticated take on feature selection, and one of the crown jewels of unsupervised learning.Feature Scaling:&nbsp;Simple tricks for making sure your data and your algorithm play nicely together. Learning from Text: More information is in text than any other format, and there are some effective but simple tools for extracting that information.Lessons 13-14: Validation and EvaluationTraining/testing data split:&nbsp;How do you know that what you&rsquo;re doing is working? You don&rsquo;t, unless you validate. The train-test split is simple to do, and the gold standard for understanding your results.Cross-validation:&nbsp;Take the training/testing split and put it on steroids. Validate your machine learning results like a pro.Precision, recall, and F1 score:&nbsp;After all this data-driven work, quantify your results with metrics tailored to what is most important to you.Lesson 15: Wrapping it all UpWe take a step back and review what we&rsquo;ve learned, and how it all fits together.ProjectsMini-project at the end of each lessonFinal project:&nbsp;searching for signs of corporate fraud in Enron data",
        "desc_html": "Machine Learning is a first-class ticket to the most exciting careers in data\nanalysis today. As data sources proliferate along with the computing power to\nprocess them, going straight to the data is one of the most straightforward\nways to quickly gain insights and make predictions.\n\nMachine learning brings together computer science and statistics to harness\nthat predictive power. It's a must-have skill for all aspiring data analysts\nand data scientists, or anyone else who wants to wrestle all that raw data\ninto refined trends and predictions.\n\nThis is a class that will teach you the end-to-end process of investigating\ndata through a machine learning lens. It will teach you how to extract and\nidentify useful features that best represent your data, a few of the most\nimportant machine learning algorithms, and how to evaluate the performance of\nyour machine learning algorithms.\n\n**Why Take This Course?**\n\nIn this course, you'll learn by doing! We'll bring machine learning to life by\nshowing you fascinating use cases and tackling interesting real-world problems\nlike self-driving cars. For your final project you'll mine the email inboxes\nand financial data of Enron to identify persons of interest in one of the\ngreatest corporate fraud cases in American history.\n\nWhen you finish this introductory course, you'll be able to analyze data using\nmachine learning techniques, and you'll also be prepared to take our Data\nAnalyst Nanodegree. We'll get you started on your machine learning journey by\nteaching you how to use helpful tools, such as pre-written algorithms and\nlibraries, to answer interesting questions.\n\n**Prerequisites and Requirements**\n\nTo succeed in this course, you must be proficient at programming in Python,\nbasic statistics, and data science. If you need a refresher on any of these\ntopics, you can check out these courses:\n\n  * [Intro to Computer Science](https://www.udacity.com/course/cs101) (You should know basic data structures and control statements, and be able to write and import functions.)\n\n  * [Inferential Statistics](https://www.udacity.com/course/ud201)\n\n  * [Descriptive Statistics](https://www.udacity.com/course/ud827)\n\nOne additional course that would be nice to have is Intro to Data Science, as\nthis will get you familiar with scientific problem-solving. However,\ncompletion of that class isn't required for success. We will also use a tiny\nbit of [git](https://www.udacity.com/course/ud775), which you can also learn\nabout on Udacity.\n\nOne thing that we don't require is previous exposure to machine learning. If\nyou're a machine learning beginner, you're in the right place.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity.\n\n\n\n## Syllabus\n\n**Syllabus**\n\nYou'll learn how to start with a question and/or a dataset, and use machine\nlearning to turn them into insights.\n\n**Lessons 1-4: Supervised Classification**\n\nNaive Bayes: We jump in headfirst, learning perhaps the world's greatest\nalgorithm for classifying text.\n\nSupport Vector Machines (SVMs): One of the top 10 algorithms in machine\nlearning, and a must-try for many classification tasks. What makes it special?\nThe ability to generate new features independently and on the fly.\n\nDecision Trees: Extremely straightforward, often just as accurate as an SVM\nbut (usually) way faster. The launch point for more sophisticated methods,\nlike random forests and boosting.\n\n**Lesson 5: Datasets and Questions**\n\nBehind any great machine learning project is a great dataset that the\nalgorithm can learn from. We were inspired by a treasure trove of email and\nfinancial data from the Enron corporation, which would normally be strictly\nconfidential but became public when the company went bankrupt in a blizzard of\nfraud. Follow our lead as we wrestle this dataset into a machine-learning-\nready format, in anticipation of trying to predict cases of fraud.\n\n**Lesson 6 and 7: Regressions and Outliers**\n\nRegressions are some of the most widely used machine learning algorithms, and\nrightly share prominence with classification. What's a fast way to make\nmistakes in regression, though? Have troublesome outliers in your data. We'll\ntackle how to identify and clean away those pesky data points.\n\n**Lesson 8: Unsupervised Learning**\n\nK-Means Clustering: The flagship algorithm when you don't have labeled data to\nwork with, and a quick method for pattern-searching when approaching a dataset\nfor the first time.\n\n**Lessons 9-12: Features, Features, Features**\n\nFeature Creation: Taking your human intuition about the world and turning it\ninto data that a computer can use.\n\nFeature Selection: Einstein said it best: make everything as simple as\npossible, and no simpler. In this case, that means identifying the most\nimportant features of your data.\n\nPrincipal Component Analysis: A more sophisticated take on feature selection,\nand one of the crown jewels of unsupervised learning.\n\nFeature Scaling: Simple tricks for making sure your data and your algorithm\nplay nicely together. Learning from Text: More information is in text than any\nother format, and there are some effective but simple tools for extracting\nthat information.\n\n**Lessons 13-14: Validation and Evaluation**\n\nTraining/testing data split: How do you know that what you're doing is\nworking? You don't, unless you validate. The train-test split is simple to do,\nand the gold standard for understanding your results.\n\nCross-validation: Take the training/testing split and put it on steroids.\nValidate your machine learning results like a pro.\n\nPrecision, recall, and F1 score: After all this data-driven work, quantify\nyour results with metrics tailored to what is most important to you.\n\n**Lesson 15: Wrapping it all Up**\n\nWe take a step back and review what we've learned, and how it all fits\ntogether.\n\n**Projects**\n\nMini-project at the end of each lesson\n\nFinal project: searching for signs of corporate fraud in Enron data\n\n",
        "name": "Intro to Machine Learning - Pattern Recognition for Fun and Profit",
        "provider": "Udacity",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Stanford University"
        ],
        "url": "https://www.udacity.com/course/ud120",
        "video_url": "https://www.youtube.com/embed/ICKBWIkfeJ8?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-11-24",
        "desc": "jQuery is the most popular JavaScript library today, in use by over 60% of the top 100,000 most visited websites. This course will teach you how to use jQuery&rsquo;s core features - DOM element selections, traversal and manipulation.You'll also learn how to read and make sense of jQuery's documentation, making it easy for you to go beyond the methods taught in this class and take advantage of jQuery's full array of features!This course is also a part of our&nbsp;Front-End Web Developer&nbsp;Nanodegree.Why Take This Course?Due to jQuery&rsquo;s popularity and ease of use, learning jQuery is a must for all front-end web developers. jQuery makes selecting DOM elements and manipulating them simple by providing a consistent API that works across all browsers.Proficiency in using jQuery is an important skill that can speed up your development time and opens up a world of useful plugins.Prerequisites and RequirementsTo succeed in this course, we expect you to have some HTML and JavaScript experience. You should at minimum understand loops, functions, and conditional statements (if/else).Udacity&rsquo;s&nbsp;JavaScript Basics course&nbsp;and&nbsp;HTML/CSS course&nbsp;are good preparation for this course.SyllabusIn this course, you will learn how to use jQuery to select and navigate to DOM elements within your page, how to manipulate DOM elements by altering attributes, how to dynamically change content and how to add/remove DOM elements.Most importantly, you'll practice making sense of jQuery's documentation so that you'll be able to go beyond what you learn here and take advantage of jQuery's full suite of features!Lesson 1: the DOM, $ and SelectorsThe jQuery Object ($)Basic DOM StructureSelectorsFiltersLesson 2: DOM ManipulationReading jQuery DocumentationAccessing HTML Attributes and ContentModifying HTML Attributes and ContentAdding and Removing DOM ElementsIterating with .each()Using jQuery to run on DOM ready",
        "desc_html": "jQuery is the most popular JavaScript library today, in use by over 60% of the\ntop 100,000 most visited websites. This course will teach you how to use\njQuery's core features - DOM element selections, traversal and manipulation.\n\nYou'll also learn how to read and make sense of jQuery's documentation, making\nit easy for you to go beyond the methods taught in this class and take\nadvantage of jQuery's full array of features!\n\nThis course is also a part of our [Front-End Web\nDeveloper](https://www.udacity.com/course/nd001) Nanodegree.\n\n**Why Take This Course?**\n\nDue to jQuery's popularity and ease of use, learning jQuery is a must for all\nfront-end web developers. jQuery makes selecting DOM elements and manipulating\nthem simple by providing a consistent API that works across all browsers.\n\nProficiency in using jQuery is an important skill that can speed up your\ndevelopment time and opens up a world of useful plugins.\n\n**Prerequisites and Requirements**\n\nTo succeed in this course, we expect you to have some HTML and JavaScript\nexperience. You should at minimum understand loops, functions, and conditional\nstatements (if/else).\n\nUdacity's [JavaScript Basics course](https://www.udacity.com/course/ud804) and\n[HTML/CSS course](https://www.udacity.com/course/ud304) are good preparation\nfor this course.\n\n## Syllabus\n\nIn this course, you will learn how to use jQuery to select and navigate to DOM\nelements within your page, how to manipulate DOM elements by altering\nattributes, how to dynamically change content and how to add/remove DOM\nelements.\n\nMost importantly, you'll practice making sense of jQuery's documentation so\nthat you'll be able to go beyond what you learn here and take advantage of\njQuery's full suite of features!\n\n**Lesson 1: the DOM, $ and Selectors**\n\n  * The jQuery Object ($)\n  * Basic DOM Structure\n  * Selectors\n  * Filters\n\n**Lesson 2: DOM Manipulation**\n\n  * Reading jQuery Documentation\n  * Accessing HTML Attributes and Content\n  * Modifying HTML Attributes and Content\n  * Adding and Removing DOM Elements\n  * Iterating with .each()\n  * Using jQuery to run on DOM ready\n\n",
        "name": "Intro to jQuery - Manipulating Websites with Ease",
        "provider": "Udacity",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.udacity.com/course/ud245",
        "video_url": "https://www.youtube.com/embed/YzR-Iv2l8sE?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-11-19",
        "desc": "In this course we will build an iPhone app that records a conversation between you and a friend, and then makes your voices sound like a Chipmunk or Darthvader.This course will introduce you to iOS app development in Swift, a new programming language from Apple.&nbsp;This course will set you on your way to becoming an iOS Developer, where you&rsquo;ll establish a basic understanding of the iOS ecosystem. You&rsquo;ll also have working knowledge of Swift, Apple&rsquo;s custom programming language created exclusively for the mobile developer.Prerequisites and RequirementsThis course assumes prior programming experience.&nbsp;Specifically, you have a strong understanding of programming concepts like variables, if statements, loops, functions, and classes.&nbsp;Intro to Computer Scienceand&nbsp;Programming Foundations with Python&nbsp;are good courses to take if you are completely new to programming.You will also need access to a Mac computer running OS X 10.9 or later.SyllabusLesson 1: Introduction (1 hour)In this lesson, you'll get up and running with XCode, the IDE used to program iOS apps. You'll also learn to start reading Swift code by identifying important syntax.Lesson 2: Making v1 of Our App (3 hours)In this lesson, you'll create a simplified version of the final app by adding buttons, images, and text to a precise location on the phone. You'll also learn about MVC (Model-View-Controller) architecture and how it's used in app development.We will introduce you to the following iOS libraries in this lesson:UIButtonUILabelNSLayoutConstraintUIViewUIViewControllerUIKitLesson 3: Playing Audio and Adding Navigation (6 hours)In this lesson, you'll learn how to smoothly transition between two screens in our app. We'll also play a short audio clip from a famous movie, and will tinker with this movie quote to make it play super fast and really slowly. Throughout this lesson, we will discuss something called the View Lifecycle - this includes a conversation around how to load different objects in our app and how to handle low memory-related events.We will introduce you to the following iOS libraries in this lesson:UINavigationControllerAVAudioPlayerAVFoundationLesson 4: Recording Audio and Adding Effects (5 hours)In this lesson, you'll put finishing touches on our app by learning to record your voice and changing it's pitch. This effect will make you sound like a Chipmunk or Darth Vader. Here, we will also explore a powerful iOS idea called the Delegate Pattern, which makes it really easy to create apps. At the end of this lesson you'll have the know-how to install the app on your phone.We will introduce you to the following iOS libraries in this lesson:AVAudioRecorderAVAudioEngineAVAudioPlayerNodeAVAudioUnitTimePitchFinal Project (5 hours)To complete the app, you'll create two additional audio filters of your choosing and add them to the app. You'll also begin to establish credibility as a professional developer authoring a public blog post on how to accomplish a specific task in Swift.",
        "desc_html": "In this course we will build an iPhone app that records a conversation between\nyou and a friend, and then makes your voices sound like a Chipmunk or\nDarthvader.\n\nThis course will introduce you to iOS app development in Swift, a new\nprogramming language from Apple.\n\n\n\nThis course will set you on your way to becoming an iOS Developer, where\nyou'll establish a basic understanding of the iOS ecosystem. You'll also have\nworking knowledge of Swift, Apple's custom programming language created\nexclusively for the mobile developer.\n\n**Prerequisites and Requirements**\n\nThis course assumes prior programming experience. Specifically, you have a\nstrong understanding of programming concepts like variables, if statements,\nloops, functions, and classes. [Intro to Computer\nScience](https://www.udacity.com/course/cs101)and [Programming Foundations\nwith Python](https://www.udacity.com/course/ud036) are good courses to take if\nyou are completely new to programming.\n\nYou will also need access to a Mac computer running OS X 10.9 or later.\n\n## Syllabus\n\n**Lesson 1: Introduction (1 hour)**\n\nIn this lesson, you'll get up and running with XCode, the IDE used to program\niOS apps. You'll also learn to start reading Swift code by identifying\nimportant syntax.\n\n**Lesson 2: Making v1 of Our App (3 hours)**\n\nIn this lesson, you'll create a simplified version of the final app by adding\nbuttons, images, and text to a precise location on the phone. You'll also\nlearn about MVC (Model-View-Controller) architecture and how it's used in app\ndevelopment.\n\nWe will introduce you to the following iOS libraries in this lesson:\n\n  * UIButton\n  * UILabel\n  * NSLayoutConstraint\n  * UIView\n  * UIViewController\n  * UIKit\n\n**Lesson 3: Playing Audio and Adding Navigation (6 hours)**\n\nIn this lesson, you'll learn how to smoothly transition between two screens in\nour app. We'll also play a short audio clip from a famous movie, and will\ntinker with this movie quote to make it play super fast and really slowly.\nThroughout this lesson, we will discuss something called the View Lifecycle -\nthis includes a conversation around how to load different objects in our app\nand how to handle low memory-related events.\n\nWe will introduce you to the following iOS libraries in this lesson:\n\n  * UINavigationController\n  * AVAudioPlayer\n  * AVFoundation\n\n**Lesson 4: Recording Audio and Adding Effects (5 hours)**\n\nIn this lesson, you'll put finishing touches on our app by learning to record\nyour voice and changing it's pitch. This effect will make you sound like a\nChipmunk or Darth Vader. Here, we will also explore a powerful iOS idea called\nthe Delegate Pattern, which makes it really easy to create apps. At the end of\nthis lesson you'll have the know-how to install the app on your phone.\n\nWe will introduce you to the following iOS libraries in this lesson:\n\n  * AVAudioRecorder\n  * AVAudioEngine\n  * AVAudioPlayerNode\n  * AVAudioUnitTimePitch\n\n**Final Project (5 hours)**\n\nTo complete the app, you'll create two additional audio filters of your\nchoosing and add them to the app. You'll also begin to establish credibility\nas a professional developer authoring a public blog post on how to accomplish\na specific task in Swift.\n\n",
        "name": "Intro to iOS App Development with Swift",
        "provider": "Udacity",
        "rating": "4.3333333333333",
        "reviews": "3",
        "university": [],
        "url": "https://www.udacity.com/course/ud585",
        "video_url": "https://www.youtube.com/embed/VmK94-DDxP0?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-11-17",
        "desc": "Louv1.2x (starting Nov. 17, 2014) and its predecessor\u00a0Louv1.1x\u00a0(Sep. 17 - Nov. 10, 2014) together\u00a0give an introduction to all major programming concepts, techniques, and paradigms in a unified framework. We cover the three main programming paradigms: functional, object-oriented, and declarative dataflow.The two courses are targeted toward people with a basic knowledge of programming. It will be most useful to beginning programming students, but the unconventional approach should be insightful even to seasoned professionals.Louv1.1x (Fundamentals) covers\u00a0functional programming, its techniques and its data structures. You\u2019ll use simple formal semantics for all concepts, and see those concepts illustrated with practical code that runs on the accompanying open-source platform, the Mozart Programming System.Louv1.2x (Abstraction and Concurrency)\u00a0covers data abstraction, state, and concurrency. You\u2019ll learn the four ways to do data abstraction and discuss the trade-offs between objects and abstract data types. You\u2019ll be exposed to deterministic dataflow, the most useful paradigm for concurrent programming, and learn how it avoids race conditions.To learn more about the practical organization of the two courses,\u00a0watch the introductory video.At the end of Louv1.1x and Louv1.2x, the successful participant will be able to :Specify problems, break them down into their basic steps, and design algorithms and abstractions to solve themChoose the right programming paradigm and write a program in this paradigm to solve a problemUse formal semantics to reason about program correctnessWrite small concurrent programs in the deterministic dataflow paradigm",
        "desc_html": "Louv1.2x (starting Nov. 17, 2014) and its predecessor\u00a0Louv1.1x\u00a0(Sep. 17 - Nov.\n10, 2014) together\u00a0give an introduction to all major programming concepts,\ntechniques, and paradigms in a unified framework. We cover the three main\nprogramming paradigms: functional, object-oriented, and declarative dataflow.  \n  \nThe two courses are targeted toward people with a basic knowledge of\nprogramming. It will be most useful to beginning programming students, but the\nunconventional approach should be insightful even to seasoned professionals.  \n  \nLouv1.1x (Fundamentals) covers\u00a0functional programming, its techniques and its\ndata structures. You\u2019ll use simple formal semantics for all concepts, and see\nthose concepts illustrated with practical code that runs on the accompanying\nopen-source platform, the Mozart Programming System.  \n  \nLouv1.2x (Abstraction and Concurrency)\u00a0covers data abstraction, state, and\nconcurrency. You\u2019ll learn the four ways to do data abstraction and discuss the\ntrade-offs between objects and abstract data types. You\u2019ll be exposed to\ndeterministic dataflow, the most useful paradigm for concurrent programming,\nand learn how it avoids race conditions.  \n  \nTo learn more about the practical organization of the two courses,\u00a0watch the\nintroductory video.  \n  \nAt the end of Louv1.1x and Louv1.2x, the successful participant will be able\nto :  \n  \nSpecify problems, break them down into their basic steps, and design\nalgorithms and abstractions to solve them  \nChoose the right programming paradigm and write a program in this paradigm to\nsolve a problem  \nUse formal semantics to reason about program correctness  \nWrite small concurrent programs in the deterministic dataflow paradigm\n\n",
        "name": "Louv1.2x: Paradigms of Computer Programming \u2013 Abstraction and Concurrency",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Universit\u00e9 catholique de Louvain"
        ],
        "url": "https://www.edx.org/course/paradigms-computer-programming-louvainx-louv1-2x",
        "video_url": "https://www.youtube.com/embed/qTHGxZpbjfk?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-11-13",
        "desc": "Canvas is an HTML5 element which gives you drawable surface inside your web pages you can control with JavaScript. Powerful enough to use for compositing images and even creating games.In this course, through several sample projects, you&rsquo;ll learn how to use the canvas; how to make compositions using shapes, images, and text; how to create effects and filters on images and how to create animations.Why Take This Course?You should take this course if you want to move beyond static HTML tag content and build on your JavaScript skills to make interactive and engaging experiences. Maybe you want to start on the journey of creating a game or complex animations, maybe you want to create visually compelling compositions like infographs, or maybe you just want to make memes. Canvas to the rescue.This is a recommended course for the&nbsp;Front-End Web Developer&nbsp;nanodegree, and will help you complete the Frogger project.Prerequisites and RequirementsTo succeed in this course, we expect you to have some HTML and JavaScript experience. You should at minimum understand loops, functions, and conditional statements(if/else).Udacity&rsquo;s&nbsp;JavaScript Basics course&nbsp;and&nbsp;HTML/CSS course&nbsp;are good preparation for this course.See the&nbsp;Technology Requirements&nbsp;for using Udacity.SyllabusYou&rsquo;ll learn how the Canvas 2D API works and how to use it to create interesting applications. Each sample project will expose you to different aspects of HTML5 Canvas that you can use to make your own applications.Lesson 1: HTML5 Canvas BasicsIn this lesson, we&rsquo;ll discuss what the Canvas is, how it affects graphics in the browser and what makes it truly awesome. We&rsquo;ll make compositions with text and images (e.g. memes) as we learn the API.Lesson 2: From Pixels to AnimationIn this lesson, we&rsquo;ll learn about how images are stored by the Canvas2D context, how to modify them on a pixel level by applying various effects and filters, and how to create animations.",
        "desc_html": "Canvas is an HTML5 element which gives you drawable surface inside your web\npages you can control with JavaScript. Powerful enough to use for compositing\nimages and even creating games.\n\nIn this course, through several sample projects, you'll learn how to use the\ncanvas; how to make compositions using shapes, images, and text; how to create\neffects and filters on images and how to create animations.\n\n**Why Take This Course?**\n\nYou should take this course if you want to move beyond static HTML tag content\nand build on your JavaScript skills to make interactive and engaging\nexperiences. Maybe you want to start on the journey of creating a game or\ncomplex animations, maybe you want to create visually compelling compositions\nlike infographs, or maybe you just want to make memes. Canvas to the rescue.\n\nThis is a recommended course for the [Front-End Web\nDeveloper](https://www.udacity.com/course/nd001) nanodegree, and will help you\ncomplete the Frogger project.\n\n**Prerequisites and Requirements**\n\nTo succeed in this course, we expect you to have some HTML and JavaScript\nexperience. You should at minimum understand loops, functions, and conditional\nstatements(if/else).\n\nUdacity's [JavaScript Basics course](https://www.udacity.com/course/ud804) and\n[HTML/CSS course](https://www.udacity.com/course/ud304) are good preparation\nfor this course.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity.\n\n## Syllabus\n\nYou'll learn how the Canvas 2D API works and how to use it to create\ninteresting applications. Each sample project will expose you to different\naspects of HTML5 Canvas that you can use to make your own applications.\n\n**Lesson 1: HTML5 Canvas Basics**\n\nIn this lesson, we'll discuss what the Canvas is, how it affects graphics in\nthe browser and what makes it truly awesome. We'll make compositions with text\nand images (e.g. memes) as we learn the API.\n\n**Lesson 2: From Pixels to Animation**\n\nIn this lesson, we'll learn about how images are stored by the Canvas2D\ncontext, how to modify them on a pixel level by applying various effects and\nfilters, and how to create animations.\n\n",
        "name": "HTML5 Canvas - From Pixels to Animation!",
        "provider": "Udacity",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.udacity.com/course/ud292",
        "video_url": "https://www.youtube.com/embed/U0I6lP4Nj1M?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-11-13",
        "desc": "SAP Business Warehouse (BW) continues to serve as a powerful data warehouse to consolidate data, harmonize master data and provide flexible reporting scenarios. Introducing SAP HANA as database underneath SAP BW was a major breakthrough in various core areas for data warehousing. With the combination of a rich data warehousing application and a fast in-memory database, we&rsquo;ve seen architectural simplification, performance improvements and new modelling experiences.The course will introduce the renewed concepts and possibilities when SAP BW is powered by SAP HANA. We&rsquo;ll introduce the major guiding points and semantics of a data warehouse and demonstrate them in a business scenario, directly in the system. You will learn and experience the latest developments, with SAP BW 7.4 powered by SAP HANA, as well as opportunities for real-time data integration and agile data modelling. We will demonstrate what it means to consume the data via a data warehouse and show you how SAP HANA helps to speed up data analysis. We&rsquo;ll also introduce the planning capabilities based on SAP BW, which is a unique combination of reporting and planning on the same platform.The registration, learning content, final exam, and the Record of Achievement are free of charge.Target AudienceConsultantsImplementation expertsArchitectsDevelopersCourse RequirementsA basic understanding of data warehousingIt is preferable to have pre-basic SAP BW knowledge.You should have already walked through the openSAP course&nbsp;ABAP Development for SAP HANA, since some concepts will be shared and further developed.SyllabusWeek 1:SAP BW powered by SAP HANA &ndash; IntroWeek 2:Data Integration &amp; ManagementWeek 3:Data Consumption &amp; AnalysisWeek 4:Planning &amp; Lifecycle ManagementI Like, I Wish:We Love Your Feedback &hellip; And Want MoreFinal Exam:Good Luck!",
        "desc_html": "SAP Business Warehouse (BW) continues to serve as a powerful data warehouse to\nconsolidate data, harmonize master data and provide flexible reporting\nscenarios. Introducing SAP HANA as database underneath SAP BW was a major\nbreakthrough in various core areas for data warehousing. With the combination\nof a rich data warehousing application and a fast in-memory database, we've\nseen architectural simplification, performance improvements and new modelling\nexperiences.\n\nThe course will introduce the renewed concepts and possibilities when SAP BW\nis powered by SAP HANA. We'll introduce the major guiding points and semantics\nof a data warehouse and demonstrate them in a business scenario, directly in\nthe system. You will learn and experience the latest developments, with SAP BW\n7.4 powered by SAP HANA, as well as opportunities for real-time data\nintegration and agile data modelling. We will demonstrate what it means to\nconsume the data via a data warehouse and show you how SAP HANA helps to speed\nup data analysis. We'll also introduce the planning capabilities based on SAP\nBW, which is a unique combination of reporting and planning on the same\nplatform.\n\nThe registration, learning content, final exam, and the Record of Achievement\nare free of charge.\n\n**Target Audience**\n\n  * Consultants\n  * Implementation experts\n  * Architects\n  * Developers\n\n**Course Requirements**\n\n  * A basic understanding of data warehousing\n  * It is preferable to have pre-basic SAP BW knowledge.\n  * You should have already walked through the openSAP course [ABAP Development for SAP HANA](https://open.sap.com/courses/a4strong), since some concepts will be shared and further developed.\n\n## Syllabus\n\n  * **Week 1:** SAP BW powered by SAP HANA - Intro\n  * **Week 2:** Data Integration & Management\n  * **Week 3:** Data Consumption & Analysis\n  * **Week 4:** Planning & Lifecycle Management\n  * **I Like, I Wish:** We Love Your Feedback \u2026 And Want More\n  * **Final Exam:** Good Luck!\n\n",
        "name": "SAP Business Warehouse powered by SAP HANA",
        "provider": "openSAP",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.sap.com/courses/bwhana1",
        "video_url": ""
    },
    {
        "date": "2014-11-12",
        "desc": "Learn the fundamentals of data visualization and practice communicating with data. This course covers how to apply design principles, human perception, color theory, and effective storytelling to data visualization. If you present data to others, aspire to be an analyst or data scientist, or if you&rsquo;d like to become more technical with visualization tools, then you can grow your skills with this course.The course does not cover exploratory approaches to discover insights about data. Instead, the course focuses on how to visually encode and present data to an audience once an insight has been found.&nbsp;Why Take This Course?Learn by doing! You will analyze existing data visualization and create new ones to learn about the field. At it&rsquo;s core, data visualization is a form of communication. Learn how to be a great communicator and how to enable readers to walk away from your graphics with insight and understanding. This course also make use of open web standards (HTML, CSS, and SVG) to create data visualizations.You can also learn how to...communicate clearly with the best visual representation of your datatell stories, spark discussion, and create calls to actions for readersdesign graphics like ones from the NYTimes and other media companieshow to use open web technologies to create an online portfolio of your workuse visualization libraries (dimple.js&nbsp;and&nbsp;D3.js) to create graphicsFinal Project: Making an Effective Data VisualizationYou will create a data visualization that conveys a clear message about a data set. You will use dimple.js or d3.js and collect feedback along the way to arrive at a polished product.Prerequisites and RequirementsRegardless of your programming background, you can learn about data visualization and design principles in Lesson 1a and Lesson 2a without the following recommended background.To succeed in this course, you should to be familiar with basic programming principles, including data types (strings, arrays, booleans, etc.),&nbsp;if else&nbsp;statements, and&nbsp;for&nbsp;loops. You should also be able to describe concepts like functions and objects. Our&nbsp;Intro to Computer Science&nbsp;and&nbsp;Programming Fundamentals with Python&nbsp;courses are great places to get started.Basic knowledge of HTML and CSS (structuring and styling a web page) is not required but highly recommended. We suggest taking the&nbsp;Intro to HTML and CSS&nbsp;course if you have no experience with HTML or CSS.This course is unique in that the final project can be completed using either dimple.js or d3.js. The visualization library, dimple.js, is easier to use than d3.js and requires less background knowledge. Furthermore, a graphic can be created in considerably fewer lines of code using dimple.js as opposed to d3.js.So why should you learn d3.js?Data Driven Documents (d3.js) allows you to build highly customized graphics. If you would like to gain more technical skills and learn more about Javascript and open web standards, then you should complete Lesson 3 and Lesson 4 in order to prepare for the final project.If you would like to complete the final project using d3.js, you should have some experience reading and using documentation. For example, you should be able to code a&nbsp;for&nbsp;loop in Javascript or be able to look up the syntax to work with strings and arrays in Javascript. We recommend taking the&nbsp;Javascript Basics&nbsp;course if you have little to no experience with Javascript.See the&nbsp;Technology Requirements&nbsp;for using Udacity.SyllabusLesson 1a Visualization FundamentalsLearn about the elements of great data visualization. In this lesson, you will meet data visualization experts, learn about data visualization in the context of data science, and learn how to represent data values in visual form.Lesson 1b D3 Building BlocksLearn how to use the open standards of the web to create graphical elements. You&rsquo;ll learn how to select elements on the page, add SVG elements, and how to style SVG elements. Make use of all the Instructor Notes throughout this lesson if you have little to no experience with HTML and CSS.Mini-Project 1: RAW VisualizationCreate a data visualization using a software of your choice. We will provide recommendations for visualization software as well as data sets. We want you to get right into making data visualization so here&rsquo;s your first chance!Lesson 2a Design PrinciplesWhich chart type should I use for my data? Which colors should I avoid when making graphics? How do I know if my graphic is effective? Investigate these questions, and learn about the World Cup data set which will be use throughout the rest of the course.Lesson 2b Dimple.jsLearn how to create graphics using the Dimple JavaScript library. You will learn about this library as a gentle coding introduction before learning about D3.js. You will be able to produce great graphics with minimal code, and all of your graphics will come with interactivity without any extra effort on your part. Dimple, it's simple!Mini-Project 2: Take TwoFind an existing data visualization, critique it for what it does well and what it doesn&rsquo;t do well, and finally, recreate the graphic using a software tool of your choice. We recommend using Dimple.js, which is covered in Lesson 2b, but we don&rsquo;t want you to feel constrained by the choice of tools. Use any tool that works for you.Special NoteAt this point in the course, you can start the final project. The remaining content of the course covers narrative structures, types of bias, and maps. All of the code in Lesson 3 and Lesson 4 pertains to d3.js. If you'd like to learn d3.js and complete the final project using d3.js, then please continue. If you prefer to stop, you can complete the final project using dimple.js.Lesson 3 NarrativesLearn how to incorporate different narrative structures into your visualizations and code along with Jonathan as you create a graphic for the World Cup data set. You&rsquo;ll learn about different types of bias in the data visualization process and learn how to add context to your data visualizations. By the end of this lesson, you&rsquo;ll have a solid foundation in D3.js.Lesson 4 Animation and InteractionStatic graphics are great, but interactive graphics can be even better. Learn how to leverage animation and interaction to bring more data insights to your audience. Code along with Jonathan once again as you learn how to create a bubble map for the World Cup data set.Final Project: Making an Effective Data VisualizationCreate an explanatory graphic that incorporates animation or interaction using dimple.js or d3.js.",
        "desc_html": "Learn the fundamentals of data visualization and practice communicating with\ndata. This course covers how to apply design principles, human perception,\ncolor theory, and effective storytelling to data visualization. If you present\ndata to others, aspire to be an analyst or data scientist, or if you'd like to\nbecome more technical with visualization tools, then you can grow your skills\nwith this course.\n\nThe course does not cover exploratory approaches to discover insights about\ndata. Instead, the course focuses on how to visually encode and present data\nto an audience once an insight has been found.\n\n\n\n**Why Take This Course?**\n\nLearn by doing! You will analyze existing data visualization and create new\nones to learn about the field. At it's core, data visualization is a form of\ncommunication. Learn how to be a great communicator and how to enable readers\nto walk away from your graphics with insight and understanding. This course\nalso make use of open web standards (HTML, CSS, and SVG) to create data\nvisualizations.\n\n**You can also learn how to...**\n\n  * communicate clearly with the best visual representation of your data\n  * tell stories, spark discussion, and create calls to actions for readers\n  * design graphics like ones from the NYTimes and other media companies\n  * how to use open web technologies to create an online portfolio of your work\n  * use visualization libraries ([dimple.js](http://dimplejs.org/) and [D3.js](http://d3js.org/)) to create graphics\n**Final Project: Making an Effective Data Visualization**\n\nYou will create a data visualization that conveys a clear message about a data\nset. You will use dimple.js or d3.js and collect feedback along the way to\narrive at a polished product.\n\n**Prerequisites and Requirements**\n\nRegardless of your programming background, you can learn about data\nvisualization and design principles in Lesson 1a and Lesson 2a without the\nfollowing recommended background.\n\nTo succeed in this course, you should to be familiar with basic programming\nprinciples, including data types (strings, arrays, booleans, etc.), `if else`\nstatements, and `for` loops. You should also be able to describe concepts like\nfunctions and objects. Our [Intro to Computer\nScience](https://www.udacity.com/course/cs101) and [Programming Fundamentals\nwith Python](https://www.udacity.com/course/ud036) courses are great places to\nget started.\n\nBasic knowledge of HTML and CSS (structuring and styling a web page) is not\nrequired but highly recommended. We suggest taking the [Intro to HTML and\nCSS](https://www.udacity.com/course/ud304) course if you have no experience\nwith HTML or CSS.\n\nThis course is unique in that the final project can be completed using either\ndimple.js or d3.js. The visualization library, dimple.js, is easier to use\nthan d3.js and requires less background knowledge. Furthermore, a graphic can\nbe created in considerably fewer lines of code using dimple.js as opposed to\nd3.js.\n\nSo why should you learn d3.js?\n\nData Driven Documents (d3.js) allows you to build highly customized graphics.\nIf you would like to gain more technical skills and learn more about\nJavascript and open web standards, then you should complete Lesson 3 and\nLesson 4 in order to prepare for the final project.\n\nIf you would like to complete the final project using d3.js, you should have\nsome experience reading and using documentation. For example, you should be\nable to code a `for` loop in Javascript or be able to look up the syntax to\nwork with strings and arrays in Javascript. We recommend taking the\n[Javascript Basics](https://www.udacity.com/course/ud804) course if you have\nlittle to no experience with Javascript.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity.\n\n## Syllabus\n\n**Lesson 1a Visualization Fundamentals**\n\nLearn about the elements of great data visualization. In this lesson, you will\nmeet data visualization experts, learn about data visualization in the context\nof data science, and learn how to represent data values in visual form.\n\n**Lesson 1b D3 Building Blocks**\n\nLearn how to use the open standards of the web to create graphical elements.\nYou'll learn how to select elements on the page, add SVG elements, and how to\nstyle SVG elements. Make use of all the Instructor Notes throughout this\nlesson if you have little to no experience with HTML and CSS.\n\n**Mini-Project 1: RAW Visualization**\n\nCreate a data visualization using a software of your choice. We will provide\nrecommendations for visualization software as well as data sets. We want you\nto get right into making data visualization so here's your first chance!\n\n**Lesson 2a Design Principles**\n\nWhich chart type should I use for my data? Which colors should I avoid when\nmaking graphics? How do I know if my graphic is effective? Investigate these\nquestions, and learn about the World Cup data set which will be use throughout\nthe rest of the course.\n\n**Lesson 2b Dimple.js**\n\nLearn how to create graphics using the Dimple JavaScript library. You will\nlearn about this library as a gentle coding introduction before learning about\nD3.js. You will be able to produce great graphics with minimal code, and all\nof your graphics will come with interactivity without any extra effort on your\npart. Dimple, it's simple!\n\n**Mini-Project 2: Take Two**\n\nFind an existing data visualization, critique it for what it does well and\nwhat it doesn't do well, and finally, recreate the graphic using a software\ntool of your choice. We recommend using Dimple.js, which is covered in Lesson\n2b, but we don't want you to feel constrained by the choice of tools. Use any\ntool that works for you.\n\n**Special Note**\n\nAt this point in the course, you can start the final project. The remaining\ncontent of the course covers narrative structures, types of bias, and maps.\nAll of the code in Lesson 3 and Lesson 4 pertains to d3.js. If you'd like to\nlearn d3.js and complete the final project using d3.js, then please continue.\nIf you prefer to stop, you can complete the final project using dimple.js.\n\n**Lesson 3 Narratives**\n\nLearn how to incorporate different narrative structures into your\nvisualizations and code along with Jonathan as you create a graphic for the\nWorld Cup data set. You'll learn about different types of bias in the data\nvisualization process and learn how to add context to your data\nvisualizations. By the end of this lesson, you'll have a solid foundation in\nD3.js.\n\n**Lesson 4 Animation and Interaction**\n\nStatic graphics are great, but interactive graphics can be even better. Learn\nhow to leverage animation and interaction to bring more data insights to your\naudience. Code along with Jonathan once again as you learn how to create a\nbubble map for the World Cup data set.\n\n**Final Project: Making an Effective Data Visualization**\n\nCreate an explanatory graphic that incorporates animation or interaction using\ndimple.js or d3.js.\n\n",
        "name": "Data Visualization and D3.js",
        "provider": "Udacity",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.udacity.com/course/ud507",
        "video_url": "https://www.youtube.com/embed/mfLklbVU7r0?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-11-11",
        "desc": "Congratulations! You&rsquo;ve made it through the Introduction and Next Steps in SAP HANA Cloud Platform, and now it&rsquo;s time to move to the next level. You&rsquo;ve already been introduced to SAP HANA Cloud Platform, and have explored some of the advanced features and services that the platform provides.This course will show you another perspective - putting SAP HANA Cloud Platform into good use for extending various SAP products. You'll learn about some of the extension options that SAP products support, and explore the required technologies and tools that will help you to be productive. As part of the course, you&rsquo;ll create your first extension to SuccessFactors, as well as experiment with different collaboration options in SAP Jam.To follow all the units, you should have completed the openSAP courses&nbsp;Introduction to SAP HANA Cloud Platform&nbsp;and&nbsp;Next Steps in SAP HANA Cloud Platform.The course content assumes that you&rsquo;re already familiar with the concepts and technologies introduced there. Registration, learning content, required systems, and the final exam are free of charge to all participants.Target AudienceApplication developersSAP partnersCourse RequirementsParticipation in the openSAP course&nbsp;Introduction to SAP HANA Cloud PlatformParticipation in the openSAP course&nbsp;Next Steps in SAP HANA Cloud PlatformBasic programming skillsBasic knowledge of how to use an Eclipse development environmentSyllabusWeek 1:Extending SAP Cloud ProductsWeek 2:Cloud Extension in DetailsWeek 3:My First SuccessFactors ExtensionWeek 4:My First SAP Jam ExtensionI Like, I Wish:We Love Your Feedback &hellip; And Want MoreFinal Exam:Good Luck!",
        "desc_html": "Congratulations! You've made it through the Introduction and Next Steps in SAP\nHANA Cloud Platform, and now it's time to move to the next level. You've\nalready been introduced to SAP HANA Cloud Platform, and have explored some of\nthe advanced features and services that the platform provides.\n\nThis course will show you another perspective - putting SAP HANA Cloud\nPlatform into good use for extending various SAP products. You'll learn about\nsome of the extension options that SAP products support, and explore the\nrequired technologies and tools that will help you to be productive. As part\nof the course, you'll create your first extension to SuccessFactors, as well\nas experiment with different collaboration options in SAP Jam.\n\nTo follow all the units, you should have completed the openSAP courses\n_[Introduction to SAP HANA Cloud\nPlatform](https://open.sap.com/course/hanacloud1-1)_ and _[Next Steps in SAP\nHANA Cloud Platform](https://open.sap.com/course/hanacloud2-1)_.\n\nThe course content assumes that you're already familiar with the concepts and\ntechnologies introduced there. Registration, learning content, required\nsystems, and the final exam are free of charge to all participants.\n\n**Target Audience**\n\n  * Application developers\n  * SAP partners\n\n**Course Requirements**\n\n  * Participation in the openSAP course _[Introduction to SAP HANA Cloud Platform_](https://open.sap.com/course/hanacloud1-1)\n  * Participation in the openSAP course _[Next Steps in SAP HANA Cloud Platform](https://open.sap.com/course/hanacloud2-1)_\n  * Basic programming skills\n  * Basic knowledge of how to use an Eclipse development environment\n\n## Syllabus\n\n  * **Week 1:** Extending SAP Cloud Products\n  * **Week 2:** Cloud Extension in Details\n  * **Week 3:** My First SuccessFactors Extension\n  * **Week 4:** My First SAP Jam Extension\n  * **I Like, I Wish:** We Love Your Feedback \u2026 And Want More\n  * **Final Exam:** Good Luck!\n\n",
        "name": "Extending SAP Products with SAP HANA Cloud Platform",
        "provider": "openSAP",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.sap.com/courses/hanacloud3",
        "video_url": ""
    },
    {
        "date": "2014-11-10",
        "desc": "\u8bfe\u7a0b\u4ecb\u7ecd\u89c6\u9891\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u4e2d\u56fd\u7f51\u7ad9\u8ba1\u7b97\u673a\u662f\u73b0\u4ee3\u793e\u4f1a\u4e2d\u7528\u4e8e\u89e3\u51b3\u95ee\u9898\u7684\u91cd\u8981\u5de5\u5177\u3002\u5229\u7528\u8ba1\u7b97\u673a\u89e3\u51b3\u5b9e\u9645\u95ee\u9898\u9700\u8981\u5c06\u95ee\u9898\u62bd\u8c61\uff0c\u5e76\u5bf9\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff0c\u6700\u540e\u901a\u8fc7\u8ba1\u7b97\u673a\u7a0b\u5e8f\u6c42\u89e3\u95ee\u9898\u3002\u800c\u672c\u95e8\u8bfe\u7a0b\u4e3b\u8981\u5185\u5bb9\u5c31\u662f\u5bf9\u4ee5\u4e0a\u5185\u5bb9\u8fdb\u884c\u7814\u7a76\u3002\u56fe\u7075\u5956\u83b7\u5f97\u8005N.Wirth\u5199\u4e86\u4e00\u672c\u7ecf\u5178\u8457\u4f5c\u201c\u7a0b\u5e8f=\u7b97\u6cd5+\u6570\u636e\u7ed3\u6784\u201d\u3002\u6570\u636e\u7ed3\u6784\uff0c\u662f\u62bd\u8c61\u7684\u8868\u793a\u6570\u636e\u7684\u65b9\u5f0f\uff1b\u7b97\u6cd5\uff0c\u5219\u662f\u8ba1\u7b97\u7684\u4e00\u7cfb\u5217\u6709\u6548\u3001\u901a\u7528\u7684\u6b65\u9aa4\u3002\u7b97\u6cd5\u4e0e\u6570\u636e\u7ed3\u6784\u662f\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u76f8\u8f85\u76f8\u6210\u7684\u4e24\u4e2a\u65b9\u9762\u3002\u6211\u4eec\u4f1a\u56f4\u7ed5\u7740\u201c\u7b97\u6cd5+\u6570\u636e\u7ed3\u6784=\u7a0b\u5e8f\u201d\u7684\u601d\u8def\uff0c\u4ee5\u95ee\u9898\u6c42\u89e3\u4e3a\u5bfc\u5411\u8fdb\u884c\u5b66\u4e60\u3002\u5e0c\u671b\u80fd\u591f\u5e2e\u52a9\u5927\u5bb6\u63d0\u9ad8\u7406\u8bba\u3001\u62bd\u8c61\u3001\u8bbe\u8ba1\u7684\u80fd\u529b\u3002\u5728\u624e\u5b9e\u7684\u7ecf\u5178\u7406\u8bba\u57fa\u7840\u4e0a\uff0c\u8fd0\u7528\u95ee\u9898\u62bd\u8c61\u3001\u6570\u636e\u62bd\u8c61\u3001\u7b97\u6cd5\u62bd\u8c61\u6765\u5206\u6790\u95ee\u9898\uff0c\u5e94\u7528\u9002\u5f53\u7684\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u6765\u8bbe\u8ba1\u548c\u5b9e\u73b0\u76f8\u5e94\u7684\u7a0b\u5e8f\u3002\u901a\u8fc7\u8bfe\u7a0b\u5b66\u4e60\uff0c\u5927\u5bb6\u7684\u62bd\u8c61\u601d\u7ef4\u80fd\u529b\u3001\u95ee\u9898\u6c42\u89e3\u80fd\u529b\u5c06\u5f97\u5230\u8f83\u5927\u63d0\u5347\uff0c\u7f16\u7a0b\u80fd\u529b\u548c\u4ee3\u7801\u8d28\u91cf\u4f1a\u6709\u8d28\u7684\u98de\u8dc3\uff01\u5728\u6c42\u89e3\u5b9e\u9645\u95ee\u9898\u65b9\u9762\uff0c\u6211\u4eec\u4f1a\u5b66\u4e60\u5230\u901a\u8fc7\u6743\u8861\u65f6\u7a7a\u548c\u5176\u4ed6\u8d44\u6e90\u5f00\u9500\uff0c\u5229\u7528\u6570\u636e\u7ed3\u6784\u6765\u7ec4\u7ec7\u6570\u636e\u3001\u8bbe\u8ba1\u9ad8\u6548\u7684\u7b97\u6cd5\u3001\u5b8c\u6210\u9ad8\u8d28\u91cf\u7684\u7a0b\u5e8f\u4ee5\u6ee1\u8db3\u9519\u7efc\u590d\u6742\u7684\u5b9e\u9645\u5e94\u7528\u9700\u8981\u3002\u6b64\u5916\uff0c\u8bfe\u7a0b\u6240\u5b66\u5230\u7684\u5185\u5bb9\u4f1a\u88ab\u5229\u7528\u5230\u8ba1\u7b97\u673a\u79d1\u5b66\u540e\u7eed\u7684\u5404\u4e2a\u8bfe\u7a0b\u4e2d\uff0c\u5982\u64cd\u4f5c\u7cfb\u7edf\u3001\u8f6f\u4ef6\u5de5\u7a0b\u3001\u6570\u636e\u5e93\u6982\u8bba\u3001\u7f16\u8bd1\u6280\u672f\u3001\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u3001\u4eba\u673a\u4ea4\u4e92\u7b49\u3002\u5e0c\u671b\u53ef\u4ee5\u4e3a\u5927\u5bb6\u5c06\u6765\u4ece\u4e8b\u8ba1\u7b97\u673a\u76f8\u5173\u7684\u5b66\u4e60\u3001\u7814\u7a76\u548c\u5f00\u53d1\u5de5\u4f5c\u6253\u4e0b\u624e\u5b9e\u7684\u57fa\u7840\u3002\u672c\u8bfe\u7a0b\u91c7\u7528\u5f20\u94ed\u4e3b\u7f16\u7684\u56fd\u5bb6\u201c\u5341\u4e00\u4e94\u201d\u89c4\u5212\u6559\u6750\u300a\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u300b\uff08\u9ad8\u7b49\u6559\u80b2\u51fa\u7248\u793e\uff09\u3002\u9002\u5408\u8ba1\u7b97\u673a\u4ee5\u53ca\u76f8\u5173\u7406\u5de5\u4e13\u4e1a\u7684\u5927\u4e8c\u672c\u79d1\u751f\u5b66\u4e60\uff0c\u9700\u8981\u5148\u4fee\u8fc7\u8ba1\u7b97\u6982\u8bba\u7b49\u8bfe\u7a0b\uff0c\u5177\u6709\u7ed3\u6784\u5316\u548c\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u3002\u5728\u7b2c\u4e00\u90e8\u5206\u5b66\u5b8c\u4e86\u7ebf\u6027\u8868\u3001\u6808\u4e0e\u961f\u5217\u3001\u5b57\u7b26\u4e32\u3001\u4e8c\u53c9\u6811\u3001\u6811\u548c\u56fe\u8fd9\u4e9b\u57fa\u7840\u6570\u636e\u7ed3\u6784\u4e4b\u540e\uff0c\u7b2c\u4e8c\u90e8\u5206\u6211\u4eec\u5c06\u6df1\u5165\u5b66\u4e60\u6392\u5e8f\u3001\u68c0\u7d22\u3001\u7d22\u5f15\u3001\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4ee5\u53ca\u6570\u636e\u7ed3\u6784\u5e94\u7528\u7b49\u5185\u5bb9\u3002\u6d89\u53ca\u5feb\u901f\u6392\u5e8f\u3001\u5916\u6392\u5e8f\u7b49\u5404\u79cd\u7ecf\u5178\u6392\u5e8f\u7b97\u6cd5\uff0c\u96c6\u5408\u3001\u6563\u5217\u3001\u4f4d\u56fe\u7b49\u68c0\u7d22\u65b9\u6cd5\uff0cB/B+\u6811\u3001Trie\u6811\u7b49\u7d22\u5f15\u7ed3\u6784\uff0c\u5e7f\u4e49\u8868\u3001\u591a\u7ef4\u6570\u7ec4\u7b49\u9ad8\u7ea7\u7ebf\u6027\u7ed3\u6784\uff0cAVL\u3001\u7ea2\u9ed1\u6811\u3001\u4f38\u5c55\u6811\u7b49\u5e73\u8861\u4e8c\u53c9\u6811\u3002\u7b2c\u4e8c\u90e8\u5206\u8bfe\u7a0b\u6301\u7eed8\u5468\uff0c\u5b66\u4e60\u8005\u6bcf\u5468\u5728\u672c\u8bfe\u7a0b\u4e0a\u9700\u8981\u6295\u51654\uff0d8\u5c0f\u65f6\u3002\u672c\u8bfe\u7a0b\u7684\u672c\u6b21\u5f00\u8bbe\u5f97\u5230Google\u7814\u7a76\u7ecf\u8d39\u652f\u6301\u3002Computers are an important tool for\u00a0problem\u00a0solving and are deeply involved\u00a0in modern life.\u00a0Computers perform operations on data. What is the logical relationship among data? How is data stored in computers? What algorithms are required to solve particular problems? These are the questions that will be answered in \u201cData Structures and Algorithms,\u201d an important core course in Computer Science. The course also introduces students to fundamental data structures and classical algorithms used in more specialized courses,\u00a0including Operating Systems, Software Engineering, Database Systems, Compiler\u00a0Principles, Computer Graphics and Human Computer Interaction.Niklaus Wirth described the important and indivisible link between algorithms and data structure in his book,\u00a0Algorithms + Data Structures = Programs.The course will build on Wirth\u2019s ideas as it helps students improve their knowledge of theory and their ability to think abstractly to solve problems.\u00a0Building on a solid theoretical foundation, students\u00a0will analyze problems using data and algorithm abstraction. Students will learn how to organize data efficiently and make tradeoffs between space and time complexity, design efficient and effective algorithms, and implement high quality programs to solve complex real-world problems.\u00a0After studying this course, students will be well prepared for further study and research in engineering and other computer-related areas.This is an intermediate-level course appropriate for sophomore students majoring in computer science or other science/engineering disciplines. Students should\u00a0have learned \"introduction to computing\",\u00a0with the knowledge of structured and object-oriented programming.This course is presented in two eight-week sessions. In session 1, we learnt Linear Lists, Stacks, Queues, Strings, Binary Trees, Trees and Graphs, which are fundamental data structures. In the second session, we will study advanced data structures and algorithms, such as Sorting, Searching, Indexing, as well as their applications thoroughly. More detailed, these chapters include a variety of classic Sorting algorithms (Quicksort, External Sorting), Searching methods (Sets, Hash Tables, Bitmaps), Indexing structures (B/B+ trees, Trie trees), Advanced List-Structure (generalized lists, Multi-dimensional arrays) and Balanced Binary Trees (AVL, Red-Black trees, Splay trees). The second part of the course lasts eight weeks. Each week, student will spend 4-8 hours to follow this course.Students who score 60% or higher will receive an Honor Code Certificate.The Autumn 2014 Sessions of this course are supported by Google.",
        "desc_html": "\u8bfe\u7a0b\u4ecb\u7ecd\u89c6\u9891\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u4e2d\u56fd\u7f51\u7ad9  \n  \n\u8ba1\u7b97\u673a\u662f\u73b0\u4ee3\u793e\u4f1a\u4e2d\u7528\u4e8e\u89e3\u51b3\u95ee\u9898\u7684\u91cd\u8981\u5de5\u5177\u3002\u5229\u7528\u8ba1\u7b97\u673a\u89e3\u51b3\u5b9e\u9645\u95ee\u9898\u9700\u8981\u5c06\u95ee\u9898\u62bd\u8c61\uff0c\u5e76\u5bf9\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff0c\u6700\u540e\u901a\u8fc7\u8ba1\u7b97\u673a\u7a0b\u5e8f\u6c42\u89e3\u95ee\u9898\u3002\u800c\u672c\u95e8\u8bfe\u7a0b\u4e3b\u8981\u5185\u5bb9\u5c31\u662f\u5bf9\u4ee5\u4e0a\u5185\n\u5bb9\u8fdb\u884c\u7814\u7a76\u3002  \n  \n\u56fe\u7075\u5956\u83b7\u5f97\u8005N.Wirth\u5199\u4e86\u4e00\u672c\u7ecf\u5178\u8457\u4f5c\u201c\u7a0b\u5e8f=\u7b97\u6cd5+\u6570\u636e\u7ed3\u6784\u201d\u3002\u6570\u636e\u7ed3\u6784\uff0c\u662f\u62bd\u8c61\u7684\u8868\u793a\u6570\u636e\u7684\u65b9\u5f0f\uff1b\u7b97\u6cd5\uff0c\u5219\u662f\u8ba1\u7b97\u7684\u4e00\u7cfb\u5217\u6709\u6548\u3001\u901a\u7528\u7684\u6b65\u9aa4\u3002\u7b97\u6cd5\u4e0e\u6570\u636e\u7ed3\u6784\n\u662f\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u76f8\u8f85\u76f8\u6210\u7684\u4e24\u4e2a\u65b9\u9762\u3002  \n  \n\u6211\u4eec\u4f1a\u56f4\u7ed5\u7740\u201c\u7b97\u6cd5+\u6570\u636e\u7ed3\u6784=\u7a0b\u5e8f\u201d\u7684\u601d\u8def\uff0c\u4ee5\u95ee\u9898\u6c42\u89e3\u4e3a\u5bfc\u5411\u8fdb\u884c\u5b66\u4e60\u3002\u5e0c\u671b\u80fd\u591f\u5e2e\u52a9\u5927\u5bb6\u63d0\u9ad8\u7406\u8bba\u3001\u62bd\u8c61\u3001\u8bbe\u8ba1\u7684\u80fd\u529b\u3002\u5728\u624e\u5b9e\u7684\u7ecf\u5178\u7406\u8bba\u57fa\u7840\u4e0a\uff0c\u8fd0\u7528\u95ee\u9898\u62bd\u8c61\u3001\u6570\u636e\n\u62bd\u8c61\u3001\u7b97\u6cd5\u62bd\u8c61\u6765\u5206\u6790\u95ee\u9898\uff0c\u5e94\u7528\u9002\u5f53\u7684\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u6765\u8bbe\u8ba1\u548c\u5b9e\u73b0\u76f8\u5e94\u7684\u7a0b\u5e8f\u3002\u901a\u8fc7\u8bfe\u7a0b\u5b66\u4e60\uff0c\u5927\u5bb6\u7684\u62bd\u8c61\u601d\u7ef4\u80fd\u529b\u3001\u95ee\u9898\u6c42\u89e3\u80fd\u529b\u5c06\u5f97\u5230\u8f83\u5927\u63d0\u5347\uff0c\u7f16\u7a0b\u80fd\u529b\u548c\u4ee3\u7801\u8d28\u91cf\u4f1a\n\u6709\u8d28\u7684\u98de\u8dc3\uff01  \n  \n\u5728\u6c42\u89e3\u5b9e\u9645\u95ee\u9898\u65b9\u9762\uff0c\u6211\u4eec\u4f1a\u5b66\u4e60\u5230\u901a\u8fc7\u6743\u8861\u65f6\u7a7a\u548c\u5176\u4ed6\u8d44\u6e90\u5f00\u9500\uff0c\u5229\u7528\u6570\u636e\u7ed3\u6784\u6765\u7ec4\u7ec7\u6570\u636e\u3001\u8bbe\u8ba1\u9ad8\u6548\u7684\u7b97\u6cd5\u3001\u5b8c\u6210\u9ad8\u8d28\u91cf\u7684\u7a0b\u5e8f\u4ee5\u6ee1\u8db3\u9519\u7efc\u590d\u6742\u7684\u5b9e\u9645\u5e94\u7528\u9700\u8981\u3002  \n  \n\u6b64\u5916\uff0c\u8bfe\u7a0b\u6240\u5b66\u5230\u7684\u5185\u5bb9\u4f1a\u88ab\u5229\u7528\u5230\u8ba1\u7b97\u673a\u79d1\u5b66\u540e\u7eed\u7684\u5404\u4e2a\u8bfe\u7a0b\u4e2d\uff0c\u5982\u64cd\u4f5c\u7cfb\u7edf\u3001\u8f6f\u4ef6\u5de5\u7a0b\u3001\u6570\u636e\u5e93\u6982\u8bba\u3001\u7f16\u8bd1\u6280\u672f\u3001\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u3001\u4eba\u673a\u4ea4\u4e92\u7b49\u3002\u5e0c\u671b\u53ef\u4ee5\u4e3a\u5927\u5bb6\u5c06\u6765\u4ece\u4e8b\u8ba1\u7b97\n\u673a\u76f8\u5173\u7684\u5b66\u4e60\u3001\u7814\u7a76\u548c\u5f00\u53d1\u5de5\u4f5c\u6253\u4e0b\u624e\u5b9e\u7684\u57fa\u7840\u3002  \n  \n\u672c\u8bfe\u7a0b\u91c7\u7528\u5f20\u94ed\u4e3b\u7f16\u7684\u56fd\u5bb6\u201c\u5341\u4e00\u4e94\u201d\u89c4\u5212\u6559\u6750\u300a\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u300b\uff08\u9ad8\u7b49\u6559\u80b2\u51fa\u7248\u793e\uff09\u3002\u9002\u5408\u8ba1\u7b97\u673a\u4ee5\u53ca\u76f8\u5173\u7406\u5de5\u4e13\u4e1a\u7684\u5927\u4e8c\u672c\u79d1\u751f\u5b66\u4e60\uff0c\u9700\u8981\u5148\u4fee\u8fc7\u8ba1\u7b97\u6982\u8bba\u7b49\u8bfe\u7a0b\uff0c\u5177\u6709\u7ed3\n\u6784\u5316\u548c\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u3002  \n  \n\u5728\u7b2c\u4e00\u90e8\u5206\u5b66\u5b8c\u4e86\u7ebf\u6027\u8868\u3001\u6808\u4e0e\u961f\u5217\u3001\u5b57\u7b26\u4e32\u3001\u4e8c\u53c9\u6811\u3001\u6811\u548c\u56fe\u8fd9\u4e9b\u57fa\u7840\u6570\u636e\u7ed3\u6784\u4e4b\u540e\uff0c\u7b2c\u4e8c\u90e8\u5206\u6211\u4eec\u5c06\u6df1\u5165\u5b66\u4e60\u6392\u5e8f\u3001\u68c0\u7d22\u3001\u7d22\u5f15\u3001\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4ee5\u53ca\u6570\u636e\u7ed3\u6784\u5e94\u7528\u7b49\u5185\u5bb9\u3002\u6d89\n\u53ca\u5feb\u901f\u6392\u5e8f\u3001\u5916\u6392\u5e8f\u7b49\u5404\u79cd\u7ecf\u5178\u6392\u5e8f\u7b97\u6cd5\uff0c\u96c6\u5408\u3001\u6563\u5217\u3001\u4f4d\u56fe\u7b49\u68c0\u7d22\u65b9\u6cd5\uff0cB/B+\u6811\u3001Trie\u6811\u7b49\u7d22\u5f15\u7ed3\u6784\uff0c\u5e7f\u4e49\u8868\u3001\u591a\u7ef4\u6570\u7ec4\u7b49\u9ad8\u7ea7\u7ebf\u6027\u7ed3\u6784\uff0cAVL\u3001\u7ea2\u9ed1\u6811\u3001\u4f38\u5c55\u6811\u7b49\n\u5e73\u8861\u4e8c\u53c9\u6811\u3002\u7b2c\u4e8c\u90e8\u5206\u8bfe\u7a0b\u6301\u7eed8\u5468\uff0c\u5b66\u4e60\u8005\u6bcf\u5468\u5728\u672c\u8bfe\u7a0b\u4e0a\u9700\u8981\u6295\u51654\uff0d8\u5c0f\u65f6\u3002\u672c\u8bfe\u7a0b\u7684\u672c\u6b21\u5f00\u8bbe\u5f97\u5230Google\u7814\u7a76\u7ecf\u8d39\u652f\u6301\u3002  \n  \nComputers are an important tool for\u00a0problem\u00a0solving and are deeply involved\u00a0in\nmodern life.\u00a0Computers perform operations on data. What is the logical\nrelationship among data? How is data stored in computers? What algorithms are\nrequired to solve particular problems? These are the questions that will be\nanswered in \u201cData Structures and Algorithms,\u201d an important core course in\nComputer Science. The course also introduces students to fundamental data\nstructures and classical algorithms used in more specialized courses,\nincluding Operating Systems, Software Engineering, Database Systems, Compiler\nPrinciples, Computer Graphics and Human Computer Interaction.  \n  \nNiklaus Wirth described the important and indivisible link between algorithms\nand data structure in his book,\u00a0Algorithms + Data Structures = Programs.  \n  \nThe course will build on Wirth\u2019s ideas as it helps students improve their\nknowledge of theory and their ability to think abstractly to solve problems.\nBuilding on a solid theoretical foundation, students\u00a0will analyze problems\nusing data and algorithm abstraction. Students will learn how to organize data\nefficiently and make tradeoffs between space and time complexity, design\nefficient and effective algorithms, and implement high quality programs to\nsolve complex real-world problems.\u00a0After studying this course, students will\nbe well prepared for further study and research in engineering and other\ncomputer-related areas.  \n  \nThis is an intermediate-level course appropriate for sophomore students\nmajoring in computer science or other science/engineering disciplines.\nStudents should\u00a0have learned \"introduction to computing\",\u00a0with the knowledge\nof structured and object-oriented programming.  \n  \nThis course is presented in two eight-week sessions. In session 1, we learnt\nLinear Lists, Stacks, Queues, Strings, Binary Trees, Trees and Graphs, which\nare fundamental data structures. In the second session, we will study advanced\ndata structures and algorithms, such as Sorting, Searching, Indexing, as well\nas their applications thoroughly. More detailed, these chapters include a\nvariety of classic Sorting algorithms (Quicksort, External Sorting), Searching\nmethods (Sets, Hash Tables, Bitmaps), Indexing structures (B/B+ trees, Trie\ntrees), Advanced List-Structure (generalized lists, Multi-dimensional arrays)\nand Balanced Binary Trees (AVL, Red-Black trees, Splay trees). The second part\nof the course lasts eight weeks. Each week, student will spend 4-8 hours to\nfollow this course.  \n  \nStudents who score 60% or higher will receive an Honor Code Certificate.  \n  \nThe Autumn 2014 Sessions of this course are supported by Google.\n\n",
        "name": "04830050.2x: \u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u7b2c\u4e8c\u90e8\u5206 | Data Structures and Algorithms Part 2",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Peking University"
        ],
        "url": "https://www.edx.org/course/shu-ju-jie-gou-yu-suan-fa-di-er-bu-fen-pekingx-04830050-2x",
        "video_url": "https://www.youtube.com/embed/13AKQjGCKE8?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-11-06",
        "desc": "In this course, we will begin by studying why the video game fascinates product marketing.We'll dissect the behavior of the players to understand their motivations to play for tens or hundreds of hours in the same game.It will consider the implementation of gamification with case studies of services that you will surely use it, and you did not know they were gamifi&eacute;s.Finally, we will end up an ethical debate about the difference between motivation and manipulation, and how to avoid falling to the dark side of the force (although there, they have cookies).PrerequisitesRecommended:Good knowledge of marketingGood knowledge of the ecosystem of applications (mobile and web)",
        "desc_html": "In this course, we will begin by studying why the video game fascinates\nproduct marketing. We'll dissect the behavior of the players to understand\ntheir motivations to play for tens or hundreds of hours in the same game.\n\nIt will consider the implementation of gamification with case studies of\nservices that you will surely use it, and you did not know they were gamifies.\nFinally, we will end up an ethical debate about the difference between\nmotivation and manipulation, and how to avoid falling to the dark side of the\nforce (although there, they have cookies).\n\n**Prerequisites**\n\nRecommended:\n\n  * Good knowledge of marketing\n  * Good knowledge of the ecosystem of applications (mobile and web)\n\n",
        "name": "Gamifier son service",
        "provider": "IONIS",
        "rating": "0",
        "reviews": "0",
        "university": [
            "IONIS"
        ],
        "url": "https://courses.ionisx.com/courses/ionisx/105/p/about",
        "video_url": ""
    },
    {
        "date": "2014-11-05",
        "desc": "In this course you will learn how to make asynchronous requests with JavaScript (using jQuery&rsquo;s AJAX functionality), and gain a better understanding of what&rsquo;s actually happening when you do so. You will also learn how to use data APIs so you can take advantage of freely accessible data in your applications, including photo results, news articles and up-to-date data about the world around us.As part of the course, you&rsquo;ll be building a webapp that will help people learn about a place where they want to move! Your app will query the Google Streetview, Wikipedia and New York Times APIs!This course is also a part of our&nbsp;Front-End Web Developer&nbsp;Nanodegree.Why Take This Course?User experience is vital to the success of your website or web app. It&rsquo;s important that the user&rsquo;s experience be smooth and free of jank, yet the application will have to do things that take take a long time to complete. AJAX allows app developers to interact with server-side APIs without pausing script execution or forcing the page to reload.Plus, learning how to query data APIs will open you to a tremendous amount of free data that&rsquo;s freely accessible. Want to build a flight tracking app? How about a photo gallery with image search? Or what about a tweet viewer? Just find an API that provides the data you need, read the documentation and sample code, and query away!If you want to build solid and fast web applications, knowing how to query servers using AJAX is a must.SyllabusInspirationWhat is AJAX?Why use an API?How can you identify AJAX requests in existing websites?PerspirationClone the Move Planner repositoryImplement the Google Streetview APIImplement the NY Times APIError handling normal AJAX requestsImplement the Wikipedia APIError handling JSON-P requestsMeditationWhat did you learn?How else can you apply AJAX to make speedy page loads?Go customize!",
        "desc_html": "In this course you will learn how to make asynchronous requests with\nJavaScript (using jQuery's AJAX functionality), and gain a better\nunderstanding of what's actually happening when you do so. You will also learn\nhow to use data APIs so you can take advantage of freely accessible data in\nyour applications, including photo results, news articles and up-to-date data\nabout the world around us.\n\nAs part of the course, you'll be building a webapp that will help people learn\nabout a place where they want to move! Your app will query the Google\nStreetview, Wikipedia and New York Times APIs!\n\nThis course is also a part of our [Front-End Web\nDeveloper](https://www.udacity.com/course/nd001) Nanodegree.\n\nWhy Take This Course?\n\nUser experience is vital to the success of your website or web app. It's\nimportant that the user's experience be smooth and free of jank, yet the\napplication will have to do things that take take a long time to complete.\nAJAX allows app developers to interact with server-side APIs without pausing\nscript execution or forcing the page to reload.\n\nPlus, learning how to query data APIs will open you to a tremendous amount of\nfree data that's freely accessible. Want to build a flight tracking app? How\nabout a photo gallery with image search? Or what about a tweet viewer? Just\nfind an API that provides the data you need, read the documentation and sample\ncode, and query away!\n\nIf you want to build solid and fast web applications, knowing how to query\nservers using AJAX is a must.\n\n## Syllabus\n\n**Inspiration**\n\n  * What is AJAX?\n  * Why use an API?\n  * How can you identify AJAX requests in existing websites?\n\n**Perspiration**\n\n  * Clone the Move Planner repository\n  * Implement the Google Streetview API\n  * Implement the NY Times API\n  * Error handling normal AJAX requests\n  * Implement the Wikipedia API\n  * Error handling JSON-P requests\n\n**Meditation**\n\n  * What did you learn?\n  * How else can you apply AJAX to make speedy page loads?\n  * Go customize!\n\n",
        "name": "Intro to AJAX - Making Asynchronous Requests with jQuery",
        "provider": "Udacity",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.udacity.com/course/ud110",
        "video_url": "https://www.youtube.com/embed/P5JlebbqzTQ?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-11-05",
        "desc": "The world is trending in real time! Learn from Twitter to scalably process tweets, or any big data stream, in real-time to drive d3 visualizations using Apache Storm, the &ldquo;Hadoop of Real Time.&rdquo; Storm is free, open source, and fun to use! Learn from Karthik Ramasamy, Technical Lead of Storm@Twitter, about the distributed, fault-tolerant, and flexible technology used to power Twitter&rsquo;s real-time data flow pipeline. Twitter open sourced Storm in 2011, and it graduated to a top-level Apache project in September, 2014.Starting from basic distributed concepts presented during our first Udacity-Twitter Storm Hackathon, link Storm concepts to Storm syntax to scalably drive Word Cloud visualizations with Vagrant, Ubuntu, Maven, Flask, Redis, and d3. Link to the public Twitter gardenhose stream to process live tweets, parse embedded URLs, and calculate Top worldwide hashtags. Extend beyond Storm basics by exploring multi-language capabilities in Python, integrate open source components, and implement real-time streaming joins.In your final project, follow real-time trending topics by implementing the data pipeline to visualize only tweets that contain Top worldwide hashtags. Extend your project by exploring the Twitter API, or any data source, alongside Hackathon participants as they design their own ideas, receive feedback from Karthik, and open source a final project calculating real-time tweet sentiment and geolocation to drive a U.S. Map.Why Take This Course?Learn by doing! The world is going real time. Batch processing, popularized by Hadoop, has latency exceeding required real-time demands of modern mobile, connected, always-on users. Stream processing with seconds-required response time is necessary to meet this demand. Twitter is a world leader in real-time processing at scale. Learn the future from the company defining it.Prerequisites and RequirementsProgramming language required: JavaTo be successful, you'll need intermediate knowledge of Java. Specifically, this is defined by experience and comfort with Java syntax, compile &amp; run-time error diagnostics and debugging, ability to use javadocs as needed, and intermediate data structures including Arrays, HashMaps, and LinkedLists. If you need to build these skills, a good starting point is Udacity&rsquo;s&nbsp;Introduction to Java&nbsp;with additional comfortability needed identifying and debugging compile &amp; run-time errors.No prior experience is assumed in Ubuntu, git, Maven, Redis, Flask (Python) or d3 (Javascript). Python is useful, but optional. A basic course such as CS101 or OO in Python would be helpful.See the&nbsp;Technology Requirements&nbsp;for using Udacity.SyllabusLesson 1Join instructor Karthik Ramasamy and the first Udacity-Twitter Storm Hackathon to cover the motivation and practice of real-time, distributed, fault-tolerant data processing. Dive into basic Storm Topologies by linking to a real-time d3 Word Cloud Visualization using Redis, Flask, and d3.Lesson 2Explore Storm basics by programming Bolts, linking Spouts, and finally connecting to the live Twitter API to process real-time tweets. Explore open source components by connecting a Rolling Count Bolt to your topology to visualize Rolling Top Tweeted Words.Lesson 3Go beyond Storm basics by exploring multi-language capabilities to download and parse real-time Tweeted URLs in Python using Beautiful Soup. Integrate complex open source bolts to calculate Top-N words to visualize real-time Top-N Hashtags. Finally, use stream grouping concepts to easily create streaming join to connect and dynamically process multiple streams.Lesson 4Work on your final project and we cover additional questions and topics brought up by Hackathon participants. Explore Vagrant, VirtualBox, Redis, Flask, and d3 further if you are interested!Final Project: Construct a Storm TopologyDesign a Storm Topology and new bolt that uses streaming joins to dynamically calculate Top-N Hashtags and display real-time tweets that contain trending Top Hashtags. Post your visualization to the forum and tweet them to your Twitter followers.Project ExtensionsUse additional features of the real-time Twitter sample stream or use any data source to drive your real-time d3 visualization.",
        "desc_html": "The world is trending in real time! Learn from Twitter to scalably process\ntweets, or any big data stream, in real-time to drive d3 visualizations using\nApache Storm, the \"Hadoop of Real Time.\" Storm is free, open source, and fun\nto use! Learn from Karthik Ramasamy, Technical Lead of Storm@Twitter, about\nthe distributed, fault-tolerant, and flexible technology used to power\nTwitter's real-time data flow pipeline. Twitter open sourced Storm in 2011,\nand it graduated to a top-level Apache project in September, 2014.\n\nStarting from basic distributed concepts presented during our first Udacity-\nTwitter Storm Hackathon, link Storm concepts to Storm syntax to scalably drive\nWord Cloud visualizations with Vagrant, Ubuntu, Maven, Flask, Redis, and d3.\nLink to the public Twitter gardenhose stream to process live tweets, parse\nembedded URLs, and calculate Top worldwide hashtags. Extend beyond Storm\nbasics by exploring multi-language capabilities in Python, integrate open\nsource components, and implement real-time streaming joins.\n\nIn your final project, follow real-time trending topics by implementing the\ndata pipeline to visualize only tweets that contain Top worldwide hashtags.\nExtend your project by exploring the Twitter API, or any data source,\nalongside Hackathon participants as they design their own ideas, receive\nfeedback from Karthik, and open source a final project calculating real-time\ntweet sentiment and geolocation to drive a U.S. Map.\n\nWhy Take This Course?\n\nLearn by doing! The world is going real time. Batch processing, popularized by\nHadoop, has latency exceeding required real-time demands of modern mobile,\nconnected, always-on users. Stream processing with seconds-required response\ntime is necessary to meet this demand. Twitter is a world leader in real-time\nprocessing at scale. Learn the future from the company defining it.\n\nPrerequisites and Requirements\n\nProgramming language required: Java\n\nTo be successful, you'll need intermediate knowledge of Java. Specifically,\nthis is defined by experience and comfort with Java syntax, compile & run-time\nerror diagnostics and debugging, ability to use javadocs as needed, and\nintermediate data structures including Arrays, HashMaps, and LinkedLists. If\nyou need to build these skills, a good starting point is Udacity's\n[Introduction to Java](https://www.udacity.com/course/cs046) with additional\ncomfortability needed identifying and debugging compile & run-time errors.\n\nNo prior experience is assumed in Ubuntu, git, Maven, Redis, Flask (Python) or\nd3 (Javascript). Python is useful, but optional. A basic course such as CS101\nor OO in Python would be helpful.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity.\n\n## Syllabus\n\nLesson 1\n\nJoin instructor Karthik Ramasamy and the first Udacity-Twitter Storm Hackathon\nto cover the motivation and practice of real-time, distributed, fault-tolerant\ndata processing. Dive into basic Storm Topologies by linking to a real-time d3\nWord Cloud Visualization using Redis, Flask, and d3.\n\nLesson 2\n\nExplore Storm basics by programming Bolts, linking Spouts, and finally\nconnecting to the live Twitter API to process real-time tweets. Explore open\nsource components by connecting a Rolling Count Bolt to your topology to\nvisualize Rolling Top Tweeted Words.\n\nLesson 3\n\nGo beyond Storm basics by exploring multi-language capabilities to download\nand parse real-time Tweeted URLs in Python using Beautiful Soup. Integrate\ncomplex open source bolts to calculate Top-N words to visualize real-time\nTop-N Hashtags. Finally, use stream grouping concepts to easily create\nstreaming join to connect and dynamically process multiple streams.\n\nLesson 4\n\nWork on your final project and we cover additional questions and topics\nbrought up by Hackathon participants. Explore Vagrant, VirtualBox, Redis,\nFlask, and d3 further if you are interested!\n\nFinal Project: Construct a Storm Topology\n\nDesign a Storm Topology and new bolt that uses streaming joins to dynamically\ncalculate Top-N Hashtags and display real-time tweets that contain trending\nTop Hashtags. Post your visualization to the forum and tweet them to your\nTwitter followers.\n\nProject Extensions\n\nUse additional features of the real-time Twitter sample stream or use any data\nsource to drive your real-time d3 visualization.\n\n",
        "name": "Real-Time Analytics with Apache Storm",
        "provider": "Udacity",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Twitter"
        ],
        "url": "https://www.udacity.com/course/ud381",
        "video_url": "https://www.youtube.com/embed/TMj_H4GQRUE?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-11-04",
        "desc": "In a world that\u2019s full of data, we have many questions: How long do animals in a shelter have to wait until they are adopted? Can we model the growth of internet usage in a country? Do films with a more adult rating make more money that other rated films?Luckily, the world is also full of data to help us answer those questions. This course will walk through the basics of statistical thinking \u2013 starting with an interesting question. Then, we\u2019ll learn the correct statistical tool to help answer our question of interest \u2013 using R and hands-on Labs. Finally, we\u2019ll learn how to interpret our findings and develop a meaningful conclusion.This course will consist of instructional videos for statistical concepts broken down into manageable chunks \u2013 each followed by some guided questions to help your understanding of the topic. Most weeks, the instructional section will be followed by tutorial videos for using R, which we\u2019ll then apply to a hands-on Lab where we will answer a specific question using real-world datasets.We\u2019ll cover basic Descriptive Statistics in our first \u201cUnit\u201d \u2013 learning about visualizing and summarizing data. Unit two will be a \u201cmodeling\u201d investigation where we\u2019ll learn about linear, exponential, and logistic functions. We\u2019ll learn how to interpret and use those functions with a little bit of Pre-Calculus (but we\u2019ll keep it very basic). Finally in the third Unit, we\u2019ll learn about Inferential statistical tests such as the t-test, ANOVA, and chi-square.This course is intended to have the same \u201cpunch\u201d as a typical introductory undergraduate statistics course, with an added twist of modeling. This course is also intentionally devised to be sequential, with each new piece building on the previous topics. Once completed, students should feel comfortable using basic statistical techniques to answer their own questions about their own data, using a widely available statistical software package (R).I hope you\u2019ll join me in learning how to look at the world around us \u2013 what are the questions? How can we answer them? And what do those answers tell us about the world we live in?",
        "desc_html": "In a world that\u2019s full of data, we have many questions: How long do animals in\na shelter have to wait until they are adopted? Can we model the growth of\ninternet usage in a country? Do films with a more adult rating make more money\nthat other rated films?  \n  \nLuckily, the world is also full of data to help us answer those questions.\nThis course will walk through the basics of statistical thinking \u2013 starting\nwith an interesting question. Then, we\u2019ll learn the correct statistical tool\nto help answer our question of interest \u2013 using R and hands-on Labs. Finally,\nwe\u2019ll learn how to interpret our findings and develop a meaningful conclusion.  \n  \nThis course will consist of instructional videos for statistical concepts\nbroken down into manageable chunks \u2013 each followed by some guided questions to\nhelp your understanding of the topic. Most weeks, the instructional section\nwill be followed by tutorial videos for using R, which we\u2019ll then apply to a\nhands-on Lab where we will answer a specific question using real-world\ndatasets.  \n  \nWe\u2019ll cover basic Descriptive Statistics in our first \u201cUnit\u201d \u2013 learning about\nvisualizing and summarizing data. Unit two will be a \u201cmodeling\u201d investigation\nwhere we\u2019ll learn about linear, exponential, and logistic functions. We\u2019ll\nlearn how to interpret and use those functions with a little bit of Pre-\nCalculus (but we\u2019ll keep it very basic). Finally in the third Unit, we\u2019ll\nlearn about Inferential statistical tests such as the t-test, ANOVA, and chi-\nsquare.  \n  \nThis course is intended to have the same \u201cpunch\u201d as a typical introductory\nundergraduate statistics course, with an added twist of modeling. This course\nis also intentionally devised to be sequential, with each new piece building\non the previous topics. Once completed, students should feel comfortable using\nbasic statistical techniques to answer their own questions about their own\ndata, using a widely available statistical software package (R).  \n  \nI hope you\u2019ll join me in learning how to look at the world around us \u2013 what\nare the questions? How can we answer them? And what do those answers tell us\nabout the world we live in?\n\n",
        "name": "UT.7.01x: Foundations of Data Analysis",
        "provider": "edX",
        "rating": "4",
        "reviews": "1",
        "university": [
            "The University of Texas at Austin"
        ],
        "url": "https://www.edx.org/course/foundations-data-analysis-utaustinx-ut-7-01x",
        "video_url": "https://www.youtube.com/embed/l_RzyzpI8YA?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-11-04",
        "desc": "En este curso aprender&aacute;s lo b&aacute;sico del desarrollo de aplicaciones m&oacute;viles para Android, ser&aacute; un curso introductorio cubriendo los conceptos b&aacute;sicos que te permitir&aacute; crear tus primeras aplicaciones y publicarlas a Google Play.&nbsp;\"Desarrollo de Aplicaciones para Android\" ser&aacute; un curso altamente pr&aacute;ctico con demos y tareas de c&oacute;digo semanales. Requiere que el estudiante conozca el paradigma de programaci&oacute;n orientada a objetos y de preferencia el lenguaje de programaci&oacute;n Java.&nbsp;Syllabus&nbsp;Introducci&oacute;n a AndroidLayouts y elementos de interfaz gr&aacute;ficaBloques b&aacute;sicos de aplicaci&oacute;nLayouts y elementos de interfaz gr&aacute;ficaAlmacenamiento y datosAcceso a hardwarePublicaci&oacute;n de apps- See more at: http://telescopio.galileo.edu/curso/desarrollo-de-aplicaciones-para-android/#sthash.xsKBpY3b.dpuf&nbsp;",
        "desc_html": "En este curso aprenderas lo basico del desarrollo de aplicaciones moviles para\nAndroid, sera un curso introductorio cubriendo los conceptos basicos que te\npermitira crear tus primeras aplicaciones y publicarlas a Google Play.\n\n\"Desarrollo de Aplicaciones para Android\" sera un curso altamente practico con\ndemos y tareas de codigo semanales. Requiere que el estudiante conozca el\nparadigma de programacion orientada a objetos y de preferencia el lenguaje de\nprogramacion Java.\n\n## Syllabus\n\n\n\n  * Introduccion a Android\n  * Layouts y elementos de interfaz grafica\n  * Bloques basicos de aplicacion\n  * Layouts y elementos de interfaz grafica\n  * Almacenamiento y datos\n  * Acceso a hardware\n  * Publicacion de apps\n\n\\- See more at: http://telescopio.galileo.edu/curso/desarrollo-de-\naplicaciones-para-android/#sthash.xsKBpY3b.dpuf\n\n\n\n",
        "name": "Desarrollo de Aplicaciones para Android",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Galileo University"
        ],
        "url": "http://telescopio.galileo.edu/curso/desarrollo-de-aplicaciones-para-android/",
        "video_url": "https://www.youtube.com/embed/OH3OWonOCu8?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-11-03",
        "desc": "In this course you will learn how to program in Python.We will take the first steps in the language to the study of the most advanced through numerous short videos concepts, exercises and mini-projects.Python has many stores that are already probably what you want.You can create a website with Django, working with databases with SQLAlchemy, developing applications on the Internet with Twisted, make network applications with Scapy, making scientific and symbolic computing with NumPy, SciPy or Sage, and more .However, to fully exploit these libraries you must acquire a deep understanding of language.Python encourages intuitive programming based on a natural syntax and powerful basic concepts that facilitate programming.It is important to master these concepts to quickly write efficient programs are easy to understand and maintain, and that fully exploit the possibilities of language.We will cover in this course all aspects of language, basic types meta-classes, but is structured around three basic concepts that are the strength of Python:the concept of dynamic typing and shared references that provide a fast, easily extensible programming and memory-efficient;the iterator concept that allows a natural and intuitive programming where browse a file is as easy as making a loop over and takes one line of code;the concept of namespace which allows safer programming, minimizing unwanted between different parts of a program interactions.&nbsp;At the end of this Mooc, you will master the fundamentals of the language and you will use them to harness the power of the Python language.Prerequisite:Basic computer: install an application, what is a file system, how to configure a path through a PATH variable, etc.Familiarity with certain mathematical concepts such as variables and functionsLogical loop, condition, basic (and, or, etc.): the concepts of algorithmicGood capacity for abstractionSyllabusWeek 1Introduction and Getting StartedWeek 2Basic typesWeek 3Shared references and iteratorsWeek 4FunctionsWeek 5Modules, classes and namespacesWeek 6Iterator design and exception handlingWeek 7Advanced Topics",
        "desc_html": "In this course you will learn how to program in Python.\n\nWe will take the first steps in the language to the study of the most advanced\nthrough numerous short videos concepts, exercises and mini-projects.\n\nPython has many stores that are already probably what you want. You can create\na website with Django, working with databases with SQLAlchemy, developing\napplications on the Internet with Twisted, make network applications with\nScapy, making scientific and symbolic computing with NumPy, SciPy or Sage, and\nmore . However, to fully exploit these libraries you must acquire a deep\nunderstanding of language.\n\nPython encourages intuitive programming based on a natural syntax and powerful\nbasic concepts that facilitate programming. It is important to master these\nconcepts to quickly write efficient programs are easy to understand and\nmaintain, and that fully exploit the possibilities of language.\n\nWe will cover in this course all aspects of language, basic types meta-\nclasses, but is structured around three basic concepts that are the strength\nof Python:\n\n  * the concept of dynamic typing and shared references that provide a fast, easily extensible programming and memory-efficient;\n  * the iterator concept that allows a natural and intuitive programming where browse a file is as easy as making a loop over and takes one line of code;\n  * the concept of namespace which allows safer programming, minimizing unwanted between different parts of a program interactions.\n\n At the end of this Mooc, you will master the fundamentals of the language and\nyou will use them to harness the power of the Python language.\n\n**Prerequisite:**\n\n  * Basic computer: install an application, what is a file system, how to configure a path through a PATH variable, etc.\n  * Familiarity with certain mathematical concepts such as variables and functions\n  * Logical loop, condition, basic (and, or, etc.): the concepts of algorithmic\n  * Good capacity for abstraction\n\n## Syllabus\n\n**Week 1**\n\n|\n\nIntroduction and Getting Started  \n  \n---|---  \n  \n**Week 2**\n\n|\n\nBasic types  \n  \n**Week 3**\n\n|\n\nShared references and iterators  \n  \n**Week 4**\n\n|\n\nFunctions  \n  \n**Week 5**\n\n|\n\nModules, classes and namespaces  \n  \n**Week 6**\n\n|\n\nIterator design and exception handling  \n  \n**Week 7**\n\n|\n\nAdvanced Topics\n\n",
        "name": "Python : des fondamentaux \u00e0 l'utilisation du langage",
        "provider": "France Universit\u00e9 Numerique",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Inria (French Institute for Research in Computer Science and Automation)"
        ],
        "url": "https://www.france-universite-numerique-mooc.fr/courses/inria/41001/Trimestre_4_2014/about",
        "video_url": ""
    },
    {
        "date": "2014-11-03",
        "desc": "Yapay Zeka&rsquo;ya Giri\u015f dersinin amac\u0131, s&ouml;z konusu bilim alan\u0131n\u0131n temellerine de\u011finmek ve genel Yapay Zeka yakla\u015f\u0131mlar\u0131, y&ouml;ntemleri ve tekniklerine dair gerekli bilgi ve becerilerin edinilmesini sa\u011flamakt\u0131r. Bu ders sonunda, daha ileri d&uuml;zey Yapay Zeka konular\u0131n\u0131n kavranabilmesi i&ccedil;in gereken her \u015fey &ouml;\u011frenilmi\u015f olacakt\u0131r. Yapay Zeka konusuna ilgisi olan herkes, Y&uuml;ksek&ouml;\u011frenim kurumlar\u0131n\u0131n ilgili b&ouml;l&uuml;mlerinde Yapay Zeka ile ilgili dersler alan &ouml;\u011frenciler, Yapay Zeka ile ilgili &ouml;n bilgi sahibi olup, bilgilerini peki\u015ftirmek isteyen herkes bu derse kat\u0131labilir.SyllabusYapay Zek&acirc; Kavram\u0131Yapay Zek&acirc; Problemleri ve Uygulama Alanlar\u0131Yapay Zek&acirc; Teknikleri ve S\u0131n\u0131fland\u0131rmalarGenel Yapay Zek&acirc; Teknikleri ve Y&ouml;ntemleriG&uuml;n&uuml;m&uuml;z Yapay Zek&acirc; &Ccedil;al\u0131\u015fmalar\u0131nda Temel Yakla\u015f\u0131mlarDo\u011fa Temelli Yakla\u015f\u0131m",
        "desc_html": "Yapay Zeka'ya Giri\u015f dersinin amac\u0131, soz konusu bilim alan\u0131n\u0131n temellerine\nde\u011finmek ve genel Yapay Zeka yakla\u015f\u0131mlar\u0131, yontemleri ve tekniklerine dair\ngerekli bilgi ve becerilerin edinilmesini sa\u011flamakt\u0131r. Bu ders sonunda, daha\nileri duzey Yapay Zeka konular\u0131n\u0131n kavranabilmesi i\u00e7in gereken her \u015fey\no\u011frenilmi\u015f olacakt\u0131r. Yapay Zeka konusuna ilgisi olan herkes, Yukseko\u011frenim\nkurumlar\u0131n\u0131n ilgili bolumlerinde Yapay Zeka ile ilgili dersler alan\no\u011frenciler, Yapay Zeka ile ilgili on bilgi sahibi olup, bilgilerini\npeki\u015ftirmek isteyen herkes bu derse kat\u0131labilir.\n\n## Syllabus\n\n  * Yapay Zeka Kavram\u0131\n  * Yapay Zeka Problemleri ve Uygulama Alanlar\u0131\n  * Yapay Zeka Teknikleri ve S\u0131n\u0131fland\u0131rmalar\n  * Genel Yapay Zeka Teknikleri ve Yontemleri\n  * Gunumuz Yapay Zeka \u00c7al\u0131\u015fmalar\u0131nda Temel Yakla\u015f\u0131mlar\n  * Do\u011fa Temelli Yakla\u015f\u0131m\n\n",
        "name": "Yapay Zeka'ya Giri\u015f",
        "provider": "Universiteplus",
        "rating": "0",
        "reviews": "0",
        "university": [
            "U\u015fak \u00dcniversitesi"
        ],
        "url": "https://www.universiteplus.com/courses/yapay-zeka-ya-giris",
        "video_url": ""
    },
    {
        "date": "2014-11-03",
        "desc": "This course will discuss the major ideas used today in the implementation of programming language compilers, including lexical analysis, parsing, syntax-directed translation, abstract syntax trees, types and type checking, intermediate languages, dataflow analysis, program optimization, code generation, and runtime systems. As a result, you will learn how a program written in a high-level language designed for humans is systematically translated into a program written in low-level assembly more suited to machines. Along the way we will also touch on how programming languages are designed, programming language semantics, and why there are so many different kinds of programming languages.The course lectures will be presented in short videos. To help you master the material, there will be in-lecture questions to answer, quizzes, and two exams: a midterm and a final. There will also be homework in the form of exercises that ask you to show a sequence of logical steps needed to derive a specific result, such as the sequence of steps a type checker would perform to type check a piece of code, or the sequence of steps a parser would perform to parse an input string. This checking technology is the result of ongoing research at Stanford into developing innovative tools for education, and we're excited to be the first course ever to make it available to students.An optional course project is to write a complete compiler for COOL, the Classroom Object Oriented Language. COOL has the essential features of a realistic programming language, but is small and simple enough that it can be implemented in a few thousand lines of code. Students who choose to do the project can implement it in either C++ or Java.I hope you enjoy the course!WHY STUDY COMPILERS?Everything that computers do is the result of some program, and all of the millions of programs in the world are written in one of the many thousands of programming languages that have been developed over the last 60 years. Designing and implementing a programming language turns out to be difficult; some of the best minds in computer science have thought about the problems involved and contributed beautiful and deep results. Learning something about compilers will show you the interplay of theory and practice in computer science, especially how powerful general ideas combined with engineering insight can lead to practical solutions to very hard problems. Knowing how a compiler works will also make you a better programmer and increase your ability to learn new programming languages quickly.",
        "desc_html": "This course will discuss the major ideas used today in the implementation of\nprogramming language compilers, including lexical analysis, parsing, syntax-\ndirected translation, abstract syntax trees, types and type checking,\nintermediate languages, dataflow analysis, program optimization, code\ngeneration, and runtime systems. As a result, you will learn how a program\nwritten in a high-level language designed for humans is systematically\ntranslated into a program written in low-level assembly more suited to\nmachines. Along the way we will also touch on how programming languages are\ndesigned, programming language semantics, and why there are so many different\nkinds of programming languages.\n\nThe course lectures will be presented in short videos. To help you master the\nmaterial, there will be in-lecture questions to answer, quizzes, and two\nexams: a midterm and a final. There will also be homework in the form of\nexercises that ask you to show a sequence of logical steps needed to derive a\nspecific result, such as the sequence of steps a type checker would perform to\ntype check a piece of code, or the sequence of steps a parser would perform to\nparse an input string. This checking technology is the result of ongoing\nresearch at Stanford into developing innovative tools for education, and we're\nexcited to be the first course ever to make it available to students.\n\nAn optional course project is to write a complete compiler for COOL, the\nClassroom Object Oriented Language. COOL has the essential features of a\nrealistic programming language, but is small and simple enough that it can be\nimplemented in a few thousand lines of code. Students who choose to do the\nproject can implement it in either C++ or Java.\n\nI hope you enjoy the course!\n\n**WHY STUDY COMPILERS?**\n\nEverything that computers do is the result of some program, and all of the\nmillions of programs in the world are written in one of the many thousands of\nprogramming languages that have been developed over the last 60 years.\nDesigning and implementing a programming language turns out to be difficult;\nsome of the best minds in computer science have thought about the problems\ninvolved and contributed beautiful and deep results. Learning something about\ncompilers will show you the interplay of theory and practice in computer\nscience, especially how powerful general ideas combined with engineering\ninsight can lead to practical solutions to very hard problems. Knowing how a\ncompiler works will also make you a better programmer and increase your\nability to learn new programming languages quickly.\n\n",
        "name": "Compilers",
        "provider": "Stanford OpenEdx",
        "rating": "3",
        "reviews": "1",
        "university": [
            "Stanford University"
        ],
        "url": "https://class.stanford.edu/courses/Engineering/Compilers/Fall2014/about",
        "video_url": "https://www.youtube.com/embed/sm0QQO-WZlM?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-10-29",
        "desc": "\u4eba\u5de5\u667a\u6167\u53ef\u5206\u70ba\u5f37\u4eba\u5de5\u667a\u6167\u53ca\u5f31\u4eba\u5de5\u667a\u6167\u3002\u5f37\u4eba\u5de5\u667a\u6167\u8457\u91cd\u65bc\u6a21\u64ec\u4eba\u985e\u667a\u80fd\uff0c\u800c\u5f31\u4eba\u5de5\u667a\u6167\u5247\u8457\u91cd\u65bc\u985e\u4f3c\u667a\u80fd\u7684\u61c9\u7528\u8868\u73fe\u3002\u9054\u6210\u667a\u80fd\u7684\u8868\u73fe\u6709\u8a31\u591a\u65b9\u6cd5\uff0c\u5176\u4e2d\u4e00\u7a2e\u5feb\u901f\u6709\u6548\u7684\u65b9\u6cd5\u5373\u70ba\u641c\u5c0b\uff0c\u4e5f\u662f\u9019\u9580\u8ab2\u7684\u91cd\u9ede\u3002\u672c\u8ab2\u7a0b\u5c07\u7d66\u4e88\u4eba\u5de5\u667a\u6167\u4e00\u822c\u6027\u7684\u4ecb\u7d39\uff0c\u4e26\u4e14\u6df1\u5165\u63a2\u7d22\u4e09\u7a2e\u5e38\u7528\u7684\u641c\u5c0b\uff1a\u4e0d\u5229\u7528\u554f\u984c\u7279\u6027\u7684uninformed search\uff0c\u4f7f\u7528\u554f\u984c\u7279\u6027\u7684informed search\uff0c\u53ca\u91dd\u5c0d\u96f6\u548c\u5c0d\u5c40\u7684adversarial search\u3002\u8ab2\u7a0b\u4e2d\u9664\u4e86\u8b1b\u89e3\u5404\u7a2e\u641c\u5c0b\u7684\u6280\u8853\u4e4b\u5916\uff0c\u4e5f\u6703\u540c\u6642\u63a2\u8a0e\u5b83\u5011\u7684\u512a\u7f3a\u9ede\u53ca\u61c9\u7528\u7bc4\u570d\uff0c\u4f7f\u540c\u5b78\u6613\u65bc\u61c9\u7528\u5176\u76f8\u95dc\u6280\u8853\u3002\u53e6\u5916\uff0c\u5e38\u4f7f\u7528\u5728\u5c08\u5bb6\u7cfb\u7d71\u4e2d\u7684\u908f\u8f2f\u4e5f\u5c07\u65bc\u6b64\u6b21\u8ab2\u7a0b\u4e00\u4f75\u4ecb\u7d39\u3002\u6211\u5011\u6703\u5f9e\u6700\u57fa\u672c\u7684\u8b49\u8a00\u908f\u8f2f\u958b\u59cb\uff0c\u9032\u800c\u4ecb\u7d39\u73fe\u5be6\u751f\u6d3b\u4e2d\u76f8\u7576\u5be6\u7528\u7684\u4e00\u968e\u908f\u8f2f\uff0c\u4e26\u8457\u91cd\u5728\u5176\u4e2d\u7cfb\u7d71\u6027\u7684\u63a8\u8ad6\u904e\u7a0b\uff0c\u540c\u6642\u6211\u5011\u9084\u6703\u4ecb\u7d39\u4e0d\u540c\u63a8\u8ad6\u6f14\u7b97\u6cd5\u7684\u7279\u6027\u53ca\u5b83\u5011\u7684\u80fd\u529b\u3002\u6700\u5f8c\uff0c\u5c07\u6703\u4ecb\u7d39\u4eba\u5de5\u667a\u6167\u5e38\u7528\u7684\u908f\u8f2f\u6027\u8a9e\u8a00prolog\uff0c \u4ee5\u53ca\u5b83\u7684\u5be6\u4f5c\uff0c\u8b93\u540c\u5b78\u5011\u80fd\u5728\u672c\u6b21\u8ab2\u7a0b\u4e2d\uff0c\u5c0d\u4eba\u5de5\u667a\u6167\u9818\u57df\u6709\u66f4\u9032\u4e00\u6b65\u7684\u8a8d\u8b58\u3002SyllabusIntroduction &amp; Intelligent agentsUninformed searchInformed searchBeyond classical searchAdversarial searchPropositional LogicFirst Order Logic",
        "desc_html": "\u4eba\u5de5\u667a\u6167\u53ef\u5206\u70ba\u5f37\u4eba\u5de5\u667a\u6167\u53ca\u5f31\u4eba\u5de5\u667a\u6167\u3002\u5f37\u4eba\u5de5\u667a\u6167\u8457\u91cd\u65bc\u6a21\u64ec\u4eba\u985e\u667a\u80fd\uff0c\u800c\u5f31\u4eba\u5de5\u667a\u6167\u5247\u8457\u91cd\u65bc\u985e\u4f3c\u667a\u80fd\u7684\u61c9\u7528\u8868\u73fe\u3002\u9054\u6210\u667a\u80fd\u7684\u8868\u73fe\u6709\u8a31\u591a\u65b9\u6cd5\uff0c\u5176\u4e2d\u4e00\u7a2e\u5feb\u901f\u6709\u6548\u7684\u65b9\u6cd5\n\u5373\u70ba\u641c\u5c0b\uff0c\u4e5f\u662f\u9019\u9580\u8ab2\u7684\u91cd\u9ede\u3002\u672c\u8ab2\u7a0b\u5c07\u7d66\u4e88\u4eba\u5de5\u667a\u6167\u4e00\u822c\u6027\u7684\u4ecb\u7d39\uff0c\u4e26\u4e14\u6df1\u5165\u63a2\u7d22\u4e09\u7a2e\u5e38\u7528\u7684\u641c\u5c0b\uff1a\u4e0d\u5229\u7528\u554f\u984c\u7279\u6027\u7684uninformed\nsearch\uff0c\u4f7f\u7528\u554f\u984c\u7279\u6027\u7684informed search\uff0c\u53ca\u91dd\u5c0d\u96f6\u548c\u5c0d\u5c40\u7684adversarial\nsearch\u3002\u8ab2\u7a0b\u4e2d\u9664\u4e86\u8b1b\u89e3\u5404\u7a2e\u641c\u5c0b\u7684\u6280\u8853\u4e4b\u5916\uff0c\u4e5f\u6703\u540c\u6642\u63a2\u8a0e\u5b83\u5011\u7684\u512a\u7f3a\u9ede\u53ca\u61c9\u7528\u7bc4\u570d\uff0c\u4f7f\u540c\u5b78\u6613\u65bc\u61c9\u7528\u5176\u76f8\u95dc\u6280\u8853\u3002  \n\u53e6\u5916\uff0c\u5e38\u4f7f\u7528\u5728\u5c08\u5bb6\u7cfb\u7d71\u4e2d\u7684\u908f\u8f2f\u4e5f\u5c07\u65bc\u6b64\u6b21\u8ab2\u7a0b\u4e00\u4f75\u4ecb\u7d39\u3002__\u6211\u5011\u6703\u5f9e\u6700\u57fa\u672c\u7684\u8b49\u8a00\u908f\u8f2f\u958b\u59cb\uff0c\u9032\u800c\u4ecb\u7d39\u73fe\u5be6\u751f\u6d3b\u4e2d\u76f8\u7576\u5be6\u7528\u7684\u4e00\u968e\u908f\u8f2f\uff0c\u4e26\u8457\u91cd\u5728\u5176\u4e2d\u7cfb\u7d71\u6027\u7684\u63a8\u8ad6\u904e\u7a0b\uff0c\n\u540c\u6642\u6211\u5011\u9084\u6703\u4ecb\u7d39\u4e0d\u540c\u63a8\u8ad6\u6f14\u7b97\u6cd5\u7684\u7279\u6027\u53ca\u5b83\u5011\u7684\u80fd\u529b\u3002\u6700\u5f8c\uff0c\u5c07\u6703\u4ecb\u7d39\u4eba\u5de5\u667a\u6167\u5e38\u7528\u7684\u908f\u8f2f\u6027\u8a9e\u8a00prolog\uff0c\n\u4ee5\u53ca\u5b83\u7684\u5be6\u4f5c\uff0c\u8b93\u540c\u5b78\u5011\u80fd\u5728\u672c\u6b21\u8ab2\u7a0b\u4e2d\uff0c\u5c0d\u4eba\u5de5\u667a\u6167\u9818\u57df\u6709\u66f4\u9032\u4e00\u6b65\u7684\u8a8d\u8b58\u3002\n\n## Syllabus\n\n  1. Introduction & Intelligent agents\n\n  2. Uninformed search\n\n  3. Informed search\n\n  4. Beyond classical search  \n\n  5. Adversarial search\n\n  6. Propositional Logic\n\n  7. First Order Logic\n\n",
        "name": "\u4eba\u5de5\u667a\u6167(Artificial Intelligence)",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "National Taiwan University"
        ],
        "url": "https://www.coursera.org/course/ai",
        "video_url": ""
    },
    {
        "date": "2014-10-29",
        "desc": "SAP Business Intelligence delivers insight into every aspect of your organization by distributing information on premise, on device, and via the cloud. With native integration to SAP HANA, users have the ability to model business scenarios in real-time, adding tremendous value to your business.In this course, you will gain hands-on experience in deploying business intelligence (BI) on SAP HANA, leveraging it both as a data source and as a platform. Learn how SAP BusinessObjects BI 4.1 is optimized for SAP HANA, and explore new features that take advantage of the speed and agility offered by SAP HANA. Benefit from best practices around design, development, and troubleshooting of BI content from SAP&rsquo;s Strategic Customer Engagements (SCE) team. Simplify your SAP BusinessObjects BI toolkit with scenarios that help you select the right client for a particular business need.You will also have the opportunity to experience SAP Lumira in the Desktop, Cloud, and Server releases, to create amazing visualizations that can be consumed anywhere. Take full advantage of the functionality offered in the latest release to update your business intelligence strategy and change the way your organization thinks about BI.The registration, learning content, and final exam are free of charge. As an optional add-on, you will be able to leverage a series of hands-on exercises to reinforce your learning on a trial image for a very reasonable cost, if desired. However, you can complete the course successfully without taking part in the hands-on exercises.Course Requirements:Experience using SAP BI products and client toolsUnderstanding of core database concepts such as SQL, joins, and functionsKnowledge of Web development concepts such as HTML5, JavaScript, and CSS is an advantage, but not essential.SyllabusWeek 1: SAP HANA as an Analytics PlatformWeek 2: Self-ServiceWeek 3: Dashboards and ApplicationsWeek 4: Semantic Layer and ReportingWeek 5: Mobility and CloudWeek 6: User Experience Tools and FeaturesWeek 7: Final Exam",
        "desc_html": "SAP Business Intelligence delivers insight into every aspect of your\norganization by distributing information on premise, on device, and via the\ncloud. With native integration to SAP HANA, users have the ability to model\nbusiness scenarios in real-time, adding tremendous value to your business.\n\nIn this course, you will gain hands-on experience in deploying business\nintelligence (BI) on SAP HANA, leveraging it both as a data source and as a\nplatform. Learn how SAP BusinessObjects BI 4.1 is optimized for SAP HANA, and\nexplore new features that take advantage of the speed and agility offered by\nSAP HANA. Benefit from best practices around design, development, and\ntroubleshooting of BI content from SAP's Strategic Customer Engagements (SCE)\nteam. Simplify your SAP BusinessObjects BI toolkit with scenarios that help\nyou select the right client for a particular business need.\n\nYou will also have the opportunity to experience SAP Lumira in the Desktop,\nCloud, and Server releases, to create amazing visualizations that can be\nconsumed anywhere. Take full advantage of the functionality offered in the\nlatest release to update your business intelligence strategy and change the\nway your organization thinks about BI.\n\nThe registration, learning content, and final exam are free of charge. As an\noptional add-on, you will be able to leverage a series of hands-on exercises\nto reinforce your learning on a trial image for a very reasonable cost, if\ndesired. However, you can complete the course successfully without taking part\nin the hands-on exercises.\n\n**Course Requirements:**\n\n  * Experience using SAP BI products and client tools\n  * Understanding of core database concepts such as SQL, joins, and functions\n  * Knowledge of Web development concepts such as HTML5, JavaScript, and CSS is an advantage, but not essential.\n\n## Syllabus\n\n  * Week 1: SAP HANA as an Analytics Platform\n  * Week 2: Self-Service\n  * Week 3: Dashboards and Applications\n  * Week 4: Semantic Layer and Reporting\n  * Week 5: Mobility and Cloud\n  * Week 6: User Experience Tools and Features\n  * Week 7: Final Exam\n\n",
        "name": "BI Clients and Applications on SAP HANA",
        "provider": "openSAP",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.sap.com/courses/bifour2",
        "video_url": ""
    },
    {
        "date": "2014-10-27",
        "desc": "Ce cours vous fera d\u00e9couvrir diff\u00e9rents aspects de la conception d'un programme. Au travers de nombreuses \u00e9tudes de cas, nous mettrons en exergue les structures de donn\u00e9es et les algorithmes permettant d'apporter des solutions. Comme souvent en informatique, il n'existe pas de solution unique et nous serons amen\u00e9s \u00e0 d\u00e9couvrir diff\u00e9rentes classes d'algorithme et \u00e0 les comparer.Nous introduirons \u00e0 cet effet\u00a0la notion\u00a0de complexit\u00e9 d'un programme, c'est \u00e0 dire \u00e0 la fois une estimation du temps d'ex\u00e9cution de votre programme et de l'espace requis par celui-ci. Il est tentant de croire que le \"meilleur\" programme est celui qui minimise le temps d'ex\u00e9cution mais tr\u00e8s souvent cette complexit\u00e9 est contrainte par la m\u00e9moire dont vous disposez. Ainsi, vous n'utiliserez peut-\u00eatre pas le m\u00eame algorithme selon que votre programme s'ex\u00e9cute sur un ordinateur ou un t\u00e9l\u00e9phone !SyllabusDescription:Ce cours pr\u00e9sentera les structures de donn\u00e9es les plus classiques comme les\u00a0\u00a0tableaux, listes, piles, files, et arbres pour aller vers les graphes.En parall\u00e8le, on d\u00e9couvrira les grands concepts de l'algorithmique \u00e0 travers des \u00e9tudes cas. Nous passerons ainsi en revue les tris, parcours, les arbres de recherche quaternaires,les algorithmes gloutons ainsi que les bases de la programmation dynamique.",
        "desc_html": "Ce cours vous fera d\u00e9couvrir diff\u00e9rents aspects de la conception d'un\nprogramme. Au travers de nombreuses \u00e9tudes de cas, nous mettrons en exergue\nles structures de donn\u00e9es et les algorithmes permettant d'apporter des\nsolutions. Comme souvent en informatique, il n'existe pas de solution unique\net nous serons amen\u00e9s \u00e0 d\u00e9couvrir diff\u00e9rentes classes d'algorithme et \u00e0 les\ncomparer.  \nNous introduirons \u00e0 cet effet\u00a0la notion\u00a0de complexit\u00e9 d'un programme, c'est \u00e0\ndire \u00e0 la fois une estimation du temps d'ex\u00e9cution de votre programme et de\nl'espace requis par celui-ci. Il est tentant de croire que le \"meilleur\"\nprogramme est celui qui minimise le temps d'ex\u00e9cution mais tr\u00e8s souvent cette\ncomplexit\u00e9 est contrainte par la m\u00e9moire dont vous disposez. Ainsi, vous\nn'utiliserez peut-\u00eatre pas le m\u00eame algorithme selon que votre programme\ns'ex\u00e9cute sur un ordinateur ou un t\u00e9l\u00e9phone !\n\n## Syllabus\n\n**Description:\u00a0**Ce cours pr\u00e9sentera les structures de donn\u00e9es les plus classiques comme les\u00a0\u00a0tableaux, listes, piles, files, et arbres pour aller vers les graphes.   \nEn parall\u00e8le, on d\u00e9couvrira les grands concepts de l'algorithmique \u00e0 travers\ndes \u00e9tudes cas. Nous passerons ainsi en revue les tris, parcours, les arbres\nde recherche quaternaires_,\u00a0_les algorithmes gloutons ainsi que les bases de\nla programmation dynamique.  \n  \n  \n  \n\n",
        "name": "Conception et mise en \u0153uvre d'algorithmes.",
        "provider": "Coursera",
        "rating": "5",
        "reviews": "1",
        "university": [
            "\u00c9cole Polytechnique"
        ],
        "url": "https://www.coursera.org/course/algoprog",
        "video_url": ""
    },
    {
        "date": "2014-10-27",
        "desc": "Press releases about the theft of sensitive data in unprecedented magnitude clarify again that Internet security is an important issue.Internet users are more likely aware of the many opportunities offered by the network, but less of its potential dangers.This openhpi course introduces the basic concepts of Internet Security: Here you can not only learn what formal security goals are, but also why the Internet is insecure in its basic design.The most common vulnerability of the Internet to demonstrate how this can be exploited and finally, how you can protect yourself.The course first explains basic concepts such as \"vulnerability\", \"attack\" or \"security incident\" and clarifies who attackers on the Internet are, what they do and can thereby underlie the motives.Next, the course examines in week 2 with digital identities and passwords: How to (easily) Passwords can be cracked and how to choose a secure password?In week 3, it then goes to malware (malicious software) - ie viruses, worms and Trojans as well as their connection with the so-called botnets.Continue then in week 4 with the dangers that threaten the insecure transport routes in the open internet: How can attacker might listen to news or even engage in compounds and manipulate the communication?In addition, it comes in this week to protective measures such as firewalls and encryption for the insecure communication channels.The topic of encryption is then absorbed in the weeks 5 and 6 further: First, the course explains the conceptual underpinnings of encryption method and shows following the techniques in practice, eg based on PGP, a commonly used tool for E-mail Security .No special knowledge is required for this course.SyllabusWeek 1:Basic concepts of Internet securityWeek 2:passwords and digital identitiesWeek 3:malware - viruses, worms, Trojans and BotnetsWeek 4:Open Internet, unsafe transportation routesWeek 5:Introduction to EncryptionWeek 6:Encryption in practice",
        "desc_html": "Press releases about the theft of sensitive data in unprecedented magnitude\nclarify again that Internet security is an important issue. Internet users are\nmore likely aware of the many opportunities offered by the network, but less\nof its potential dangers. This openhpi course introduces the basic concepts of\nInternet Security: Here you can not only learn what formal security goals are,\nbut also why the Internet is insecure in its basic design. The most common\nvulnerability of the Internet to demonstrate how this can be exploited and\nfinally, how you can protect yourself.\n\nThe course first explains basic concepts such as \"vulnerability\", \"attack\" or\n\"security incident\" and clarifies who attackers on the Internet are, what they\ndo and can thereby underlie the motives. Next, the course examines in week 2\nwith digital identities and passwords: How to (easily) Passwords can be\ncracked and how to choose a secure password? In week 3, it then goes to\nmalware (malicious software) - ie viruses, worms and Trojans as well as their\nconnection with the so-called botnets. Continue then in week 4 with the\ndangers that threaten the insecure transport routes in the open internet: How\ncan attacker might listen to news or even engage in compounds and manipulate\nthe communication? In addition, it comes in this week to protective measures\nsuch as firewalls and encryption for the insecure communication channels. The\ntopic of encryption is then absorbed in the weeks 5 and 6 further: First, the\ncourse explains the conceptual underpinnings of encryption method and shows\nfollowing the techniques in practice, eg based on PGP, a commonly used tool\nfor E-mail Security .\n\nNo special knowledge is required for this course.\n\n## Syllabus\n\n  * **Week 1:** Basic concepts of Internet security\n  * **Week 2:** passwords and digital identities\n  * **Week 3:** malware - viruses, worms, Trojans and Botnets\n  * **Week 4:** Open Internet, unsafe transportation routes\n  * **Week 5:** Introduction to Encryption\n  * **Week 6:** Encryption in practice\n\n",
        "name": "Sicherheit im Internet",
        "provider": "openHPI",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.hpi.de/courses/intsec2014",
        "video_url": ""
    },
    {
        "date": "2014-10-27",
        "desc": "Die Enth&uuml;llungen durch Edward Snowden haben noch einmal verdeutlicht, dass Sicherheit im Internet ein wichtiges Thema ist. Internetnutzer sind sich eher der vielf&auml;ltigen M&ouml;glichkeiten bewusst, die das Internet bietet, weniger jedoch seiner potentiellen Gefahren. Dieser openHPI-Kurs f&uuml;hrt in die Grundbegriffe der Internetsicherheit ein: Hier lernen Sie nicht nur, was formelle Sicherheitsziele sind sondern auch, warum das Internet von seinem Grunddesign unsicher ist, was die h&auml;ufigsten Schwachstellen sind und wie diese ausgenutzt werden k&ouml;nnen und schlie&szlig;lich auch, wie Sie sich sch&uuml;tzen k&ouml;nnen.",
        "desc_html": "Die Enthullungen durch Edward Snowden haben noch einmal verdeutlicht, dass\nSicherheit im Internet ein wichtiges Thema ist. Internetnutzer sind sich eher\nder vielfaltigen Moglichkeiten bewusst, die das Internet bietet, weniger\njedoch seiner potentiellen Gefahren. Dieser openHPI-Kurs fuhrt in die\nGrundbegriffe der Internetsicherheit ein: Hier lernen Sie nicht nur, was\nformelle Sicherheitsziele sind sondern auch, warum das Internet von seinem\nGrunddesign unsicher ist, was die haufigsten Schwachstellen sind und wie diese\nausgenutzt werden konnen und schlie\u00dflich auch, wie Sie sich schutzen konnen.\n\n",
        "name": "Einfu\u0308hrung in die Internetsicherheit",
        "provider": "openHPI",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://openhpi.de/courses/78591fd0-bf4d-4f7f-9e00-2bf71876a3c7",
        "video_url": ""
    },
    {
        "date": "2014-10-26",
        "desc": "Um die heutige Gesellschaft und Wirtschaft als Ganzes zu begreifen, muss\nman verstehen, wie Computer funktionieren und wie sie unser wirtschaftliches\nUmfeld ver\u00e4ndern. Ziel der VorlesungInformatik f\u00fcr \u00d6konomenist es, diese\nzwei Bereiche zu beleuchten.Zun\u00e4chst besch\u00e4ftigen wir uns also mit der Frage wie Computer und\nInformationssysteme funktionieren. Dabei werden wir ergr\u00fcnden\nauf welchen Prinzipien die Ger\u00e4te basieren und wie diese programmiert werden k\u00f6nnen.Wie\nfunktioniert ein Computer wie z. B. mein Smartphone?Was sind die technischen Grundlagen f\u00fcr die Vielzahl von Informationen auf dem Web?Als weiteres wollen wir verstehen, wie sich Informationssysteme auf\nunser wirtschaftliches Umfeld auswirken.Weshalb\nlohnt es sich in Computer zu investieren?Welchen Mehrwert leisten diese f\u00fcr eine Firma?Wie,\nwo, und mit welcher Zielsetzung werden und sollen Computer demnach in Firmen und\nOrganisationen eingesetzt werden?Warum\nhaben Supermarktketten und Warenh\u00e4user moderne\nScannerkassen eingef\u00fchrt?Welche Besonderheiten haben Digitale G\u00fcter\n-- also Produkte, die nur aus einer Ansammlung von Daten bestehen, wie Musik,\nFilme, oder Software -- und wie wirken sich diese auf deren Handel aus?SyllabusDie Vorlesung gliedert sich in w\u00f6chentliche Themen. Diese sind:Woche 1: Einf\u00fchrungWoche 2-4: Technische GrundlagenProgrammierungHardware, Software, InfrastrukturDigitalisierung, Datenformate, DatenspeicherungWoche 5-6:\u00a0Informationssysteme im UnternehmenArten von InformationssystemenWert von InformationssystemenWoche 7: Der Wert von InformationWoche 8-9: Digitale G\u00fcter in der VolkswirtschaftEigenschaften und Besonderheiten digitaler G\u00fcterMassnahmen gegen MarktverzerrungenWettbewerbsstrategienDanach folgen 2-3 Wochen zum lernen und anschliessen eine Abschlusspr\u00fcfung.",
        "desc_html": "Um die heutige Gesellschaft und Wirtschaft als Ganzes zu begreifen, muss man\nverstehen, wie Computer funktionieren und wie sie unser wirtschaftliches\nUmfeld ver\u00e4ndern. Ziel der Vorlesung _Informatik f\u00fcr \u00d6konomen_ ist es, diese\nzwei Bereiche zu beleuchten.  \n\nZun\u00e4chst besch\u00e4ftigen wir uns also mit der Frage wie Computer und\nInformationssysteme funktionieren. Dabei werden wir ergr\u00fcnden auf welchen\nPrinzipien die Ger\u00e4te basieren und wie diese programmiert werden k\u00f6nnen.\n\n  * Wie funktioniert ein Computer wie z. B. mein Smartphone?\u00a0\n  * Was sind die technischen Grundlagen f\u00fcr die Vielzahl von Informationen auf dem Web?  \n\nAls weiteres wollen wir verstehen, wie sich Informationssysteme auf unser\nwirtschaftliches Umfeld auswirken.  \n\n  * Weshalb lohnt es sich in Computer zu investieren?\u00a0\n  * Welchen Mehrwert leisten diese f\u00fcr eine Firma?\n  * Wie, wo, und mit welcher Zielsetzung werden und sollen Computer demnach in Firmen und Organisationen eingesetzt werden?  \n\n  * Warum haben Supermarktketten und Warenh\u00e4user moderne Scannerkassen eingef\u00fchrt?  \n\nWelche Besonderheiten haben Digitale G\u00fcter \\-- also Produkte, die nur aus\neiner Ansammlung von Daten bestehen, wie Musik, Filme, oder Software -- und\nwie wirken sich diese auf deren Handel aus?\n\n## Syllabus\n\nDie Vorlesung gliedert sich in w\u00f6chentliche Themen. Diese sind:  \n  \nWoche 1: Einf\u00fchrung  \n  \nWoche 2-4: Technische Grundlagen  \n\n  * Programmierung\n  * Hardware, Software, Infrastruktur\n  * Digitalisierung, Datenformate, Datenspeicherung\nWoche 5-6:\u00a0Informationssysteme im Unternehmen  \n\n  * Arten von Informationssystemen  \n\n  * Wert von Informationssystemen\nWoche 7: Der Wert von Information  \n  \nWoche 8-9: Digitale G\u00fcter in der Volkswirtschaft  \n\n  * Eigenschaften und Besonderheiten digitaler G\u00fcter  \n\n  * Massnahmen gegen Marktverzerrungen  \n\n  * Wettbewerbsstrategien  \n\n  \nDanach folgen 2-3 Wochen zum lernen und anschliessen eine Abschlusspr\u00fcfung.\n\n",
        "name": "Informatik f\u00fcr \u00d6konomen",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of Zurich"
        ],
        "url": "https://www.coursera.org/course/inf4oec",
        "video_url": ""
    },
    {
        "date": "2014-10-24",
        "desc": "Pr\u00e9sentation et mise en pratique en Java des concepts de base de la programmation orient\u00e9e objet&nbsp;: objets, classes, m\u00e9thodes, encapsulation, polymorphisme, ...Bien que nous vous garantissons les bases pour programmer de fa\u00e7on autonomedans le langage Java, ce cours&nbsp; se concentre avant tout sur les concepts de programmation, plut\u00f4t que sur les d\u00e9tails du langage lui-m\u00eame.&nbsp;&nbsp;Ainsi, apr\u00e8s avoir suivi ce cours, vous devriez \u00e9galement pouvoirfacilement aborder par vous-m\u00eames de nouveaux langages deprogrammation.Il est la continuation logique du cours d'introduction&nbsp;\u00abInitiation \u00e0 la programmation (en Java)\u00bb.SyllabusIntroduction au concept de \u00abProgrammation Orient\u00e9e Objet\u00bbPrincipes d'encapsulation et d'abstractionH\u00e9ritagePolymorphismeModificateurs (abstract et final)Interfaces et le modificateur static",
        "desc_html": "Pr\u00e9sentation et mise en pratique en Java des concepts de base de la\nprogrammation orient\u00e9e objet : objets, classes, m\u00e9thodes, encapsulation,\npolymorphisme, ...  \nBien que nous vous garantissons les bases pour programmer de fa\u00e7on autonome  \ndans le langage Java, ce cours  se concentre avant tout sur les concepts de\nprogrammation, plut\u00f4t que sur les d\u00e9tails du langage lui-m\u00eame.  \nAinsi, apr\u00e8s avoir suivi ce cours, vous devriez \u00e9galement pouvoir  \nfacilement aborder par vous-m\u00eames de nouveaux langages de  \nprogrammation.  \n  \n  \nIl est la continuation logique du cours d'introduction [\u00abInitiation \u00e0 la\nprogrammation (en Java)\u00bb](https://www.coursera.org/course/initprogjava).  \n\n## Syllabus\n\n  * Introduction au concept de \u00abProgrammation Orient\u00e9e Objet\u00bb\n  * Principes d'encapsulation et d'abstraction  \n\n  * H\u00e9ritage\n  * Polymorphisme\n  * Modificateurs (abstract et final)\n  * Interfaces et le modificateur static\n\n",
        "name": "Introduction \u00e0 la programmation orient\u00e9e objet (en Java)",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne"
        ],
        "url": "https://www.coursera.org/course/intropoojava",
        "video_url": ""
    },
    {
        "date": "2014-10-21",
        "desc": "*Note - This is an Archived course*This is a past/archived course. At this time, you can only explore this course in a self-paced fashion. Certain features of this course may not be active, but many people enjoy watching the videos and working with the materials. Make sure to check for reruns of this course.CS169.1x teaches the fundamentals for engineering long-lasting software using highly-productive Agile techniques to develop Software as a Service (SaaS) using Ruby on Rails. Students will understand the new challenges and opportunities of SaaS versus shrink-wrapped software. They will understand and apply fundamental programming techniques to the design, development, testing, and public cloud deployment of a simple SaaS application. Students will use best-of-breed tools that support modern development techniques including behavior-driven design, user stories, test-driven development, velocity, and pair programming. Students will learn how modern programming language features like metaprogramming and reflection can improve productivity and code maintainability. Students will work on weekly coding projects and quizzes. Those who successfully complete the assignments and earn a passing grade can get an honor code certificate or verified certificate from BerkeleyX. The videos and homeworks used in this offering of the course were revised in October 2013. The new class also includes embedded live chat with Teaching Assistants and other students and opportunities for remote pair programming with other students.Before your course starts, try the new edX Demo where you can explore the fun, interactive learning environment and virtual labs. Learn more.",
        "desc_html": "*Note - This is an Archived course*  \n  \nThis is a past/archived course. At this time, you can only explore this course\nin a self-paced fashion. Certain features of this course may not be active,\nbut many people enjoy watching the videos and working with the materials. Make\nsure to check for reruns of this course.  \n  \nCS169.1x teaches the fundamentals for engineering long-lasting software using\nhighly-productive Agile techniques to develop Software as a Service (SaaS)\nusing Ruby on Rails. Students will understand the new challenges and\nopportunities of SaaS versus shrink-wrapped software. They will understand and\napply fundamental programming techniques to the design, development, testing,\nand public cloud deployment of a simple SaaS application. Students will use\nbest-of-breed tools that support modern development techniques including\nbehavior-driven design, user stories, test-driven development, velocity, and\npair programming. Students will learn how modern programming language features\nlike metaprogramming and reflection can improve productivity and code\nmaintainability. Students will work on weekly coding projects and quizzes.\nThose who successfully complete the assignments and earn a passing grade can\nget an honor code certificate or verified certificate from BerkeleyX. The\nvideos and homeworks used in this offering of the course were revised in\nOctober 2013. The new class also includes embedded live chat with Teaching\nAssistants and other students and opportunities for remote pair programming\nwith other students.  \nBefore your course starts, try the new edX Demo where you can explore the fun,\ninteractive learning environment and virtual labs. Learn more.\n\n",
        "name": "CS169.1x: Engineering Software as a Service",
        "provider": "edX",
        "rating": "4.75",
        "reviews": "8",
        "university": [
            "University of California, Berkeley"
        ],
        "url": "https://www.edx.org/course/engineering-software-service-uc-berkeleyx-cs169-1x",
        "video_url": "https://www.youtube.com/embed/V36LpHqtcDY?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-10-20",
        "desc": "How it was never to learn the basics of programming playful.To participate in the course, you do not need special knowledge, only an internet connection and a computer.No special software needs to be installed on the computer.Necessary are only a current browser and an e-mail address with which you can log on openhpi.At the beginning of the free four-week course focuses on simple programming exercises.You learn to control a virtual turtle by your programming.In the following weeks you will be familiarized that will give you a basic understanding of the structure of programming with loops, and functions.In the openhpi course you'll see tutorials and check in the quiz, if you understood everything.Directly in the browser, you can then apply the learned knowledge and program drauflos.If you're stuck once, you can in the forum or the learning groups find support from other students.Upon successful completion you will receive after the course a openhpi certificate.SyllabusWeek 1:Programming and operating instructions.In the first week you will learn how a computer works and how he gets his instructions.Be presented with the programming of the keyboard, formulas, variables, and the turtle (turtle graphics).Week 2:This week you will learn how the computer can handle similar data one by one and itself makes decisions.Presents the conditional statement, loop and lists.Week 3:A major task consists of many small.This week you will learn how programs organized and the same code can be used multiple times.Are presented functions, parameters, and dictionaries.Week 4:Ask the user.In this last week of the course you will learn how the computer can react to user input.Are presented input from keyboard and mouse input, and error handling.",
        "desc_html": "How it was never to learn the basics of programming playful. To participate in\nthe course, you do not need special knowledge, only an internet connection and\na computer. No special software needs to be installed on the computer.\nNecessary are only a current browser and an e-mail address with which you can\nlog on openhpi.\n\nAt the beginning of the free four-week course focuses on simple programming\nexercises. You learn to control a virtual turtle by your programming. In the\nfollowing weeks you will be familiarized that will give you a basic\nunderstanding of the structure of programming with loops, and functions. In\nthe openhpi course you'll see tutorials and check in the quiz, if you\nunderstood everything. Directly in the browser, you can then apply the learned\nknowledge and program drauflos.\n\nIf you're stuck once, you can in the forum or the learning groups find support\nfrom other students. Upon successful completion you will receive after the\ncourse a openhpi certificate.\n\n## Syllabus\n\n  * **Week 1:** Programming and operating instructions. In the first week you will learn how a computer works and how he gets his instructions. Be presented with the programming of the keyboard, formulas, variables, and the turtle (turtle graphics).\n  * **Week 2:** This week you will learn how the computer can handle similar data one by one and itself makes decisions. Presents the conditional statement, loop and lists.\n  * **Week 3:** A major task consists of many small. This week you will learn how programs organized and the same code can be used multiple times. Are presented functions, parameters, and dictionaries.\n  * **Week 4:** Ask the user. In this last week of the course you will learn how the computer can react to user input. Are presented input from keyboard and mouse input, and error handling.\n\n",
        "name": "Spielend Programmieren lernen!",
        "provider": "openHPI",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.hpi.de/courses/pythonjunior2014",
        "video_url": "https://www.youtube.com/embed/pRgNkIg3QiM?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-10-20",
        "desc": "\u00bfHas tenido que resolver un mismo problema varias veces?, por ejemplo, al salir de viaje o preparar una reuni\u00f3n con amigos. Y cada vez, \u00bftuviste que volver a pensar en todo lo que hay que hacer, cu\u00e1les pasos y en qu\u00e9 orden?Precisamente lo que busca este curso es proporcionarte las herramientas necesarias con las que identificar\u00e1s, analizar\u00e1s y plantear\u00e1s soluciones efectivas para estas situaciones. As\u00ed, al encontrarte con el mismo problema, ya sabr\u00e1s una manera de resolverlo.En este curso introductorio a la computaci\u00f3n, desarrollar\u00e1s el razonamiento estructurado necesario para analizar problemas b\u00e1sicos y resolverlos utilizando la reflexi\u00f3n l\u00f3gica y el pensamiento algor\u00edtmico. De igual manera, reconocer\u00e1s los elementos que est\u00e1n a tu alcance y c\u00f3mo los puedes utilizar efectivamente para lograr tus objetivos.Al finalizar el curso, aprender\u00e1s a plasmar soluciones en t\u00e9rminos computacionales a trav\u00e9s de diagramas de flujo o pseudoc\u00f3digo. Adem\u00e1s, podr\u00e1s trasladar estas soluciones a herramientas como hojas de c\u00e1lculo que te ser\u00e1n \u00fatiles en tus actividades diarias, personales y profesionales.SyllabusSemana 1 - Razonamiento algor\u00edtmico y metodolog\u00eda para la soluci\u00f3n de problemasAn\u00e1lisis y soluci\u00f3n de problemas empleando algoritmos y diagramas de flujoEntrada y salida de datosExpresiones aritm\u00e9ticas y operador de asignaci\u00f3nSoluci\u00f3n de problemas con expresiones aritm\u00e9ticasSemana 2 - Estructuras de control selectivasProblemas que involucran toma de decisionesEspecificaci\u00f3n y funcionamiento de la estructura de control selectivaOperadores relacionales (l\u00f3gicos)Semana 3 - Estructuras de control repetitivasProblemas que involucran situaciones repetitivasEspecificaci\u00f3n de un estatuto de repetici\u00f3n para formar ciclosContador y acumuladorSemana 4 - Aplicaci\u00f3n de estructuras c\u00edclicasSoluci\u00f3n de problemas utilizando estatutos de repetici\u00f3n simpleSemana 5 - Introducci\u00f3n al ambiente de hoja de c\u00e1lculoElementos b\u00e1sicos de una hoja de c\u00e1lculoReferencias absolutas y referencias relativasCreaci\u00f3n de f\u00f3rmulaJerarqu\u00eda de evaluaci\u00f3n de los operadores aritm\u00e9ticosUso de rangosSemana 6 - Soluci\u00f3n de problemas con hoja de c\u00e1lculoFunciones matem\u00e1ticasFunciones selectivas",
        "desc_html": "\u00bfHas tenido que resolver un mismo problema varias veces?, por ejemplo, al\nsalir de viaje o preparar una reuni\u00f3n con amigos. Y cada vez, \u00bftuviste que\nvolver a pensar en todo lo que hay que hacer, cu\u00e1les pasos y en qu\u00e9 orden?\n\nPrecisamente lo que busca este curso es proporcionarte las herramientas\nnecesarias con las que identificar\u00e1s, analizar\u00e1s y plantear\u00e1s soluciones\nefectivas para estas situaciones. As\u00ed, al encontrarte con el mismo problema,\nya sabr\u00e1s una manera de resolverlo.\n\nEn este curso introductorio a la computaci\u00f3n, desarrollar\u00e1s el razonamiento\nestructurado necesario para analizar problemas b\u00e1sicos y resolverlos\nutilizando la reflexi\u00f3n l\u00f3gica y el pensamiento algor\u00edtmico. De igual manera,\nreconocer\u00e1s los elementos que est\u00e1n a tu alcance y c\u00f3mo los puedes utilizar\nefectivamente para lograr tus objetivos.\n\nAl finalizar el curso, aprender\u00e1s a plasmar soluciones en t\u00e9rminos\ncomputacionales a trav\u00e9s de diagramas de flujo o pseudoc\u00f3digo. Adem\u00e1s, podr\u00e1s\ntrasladar estas soluciones a herramientas como hojas de c\u00e1lculo que te ser\u00e1n\n\u00fatiles en tus actividades diarias, personales y profesionales.\n\n## Syllabus\n\n  * **Semana 1 - Razonamiento algor\u00edtmico y metodolog\u00eda para la soluci\u00f3n de problemas**\n\n    * An\u00e1lisis y soluci\u00f3n de problemas empleando algoritmos y diagramas de flujo\n\n    * Entrada y salida de datos \n\n    * Expresiones aritm\u00e9ticas y operador de asignaci\u00f3n\n\n    * Soluci\u00f3n de problemas con expresiones aritm\u00e9ticas\n\n  * **Semana 2 - Estructuras de control selectivas**\n\n    * Problemas que involucran toma de decisiones\n\n    * Especificaci\u00f3n y funcionamiento de la estructura de control selectiva \n\n      * Operadores relacionales (l\u00f3gicos)\n\n  * **Semana 3 - Estructuras de control repetitivas**\n\n    * Problemas que involucran situaciones repetitivas\n\n    * Especificaci\u00f3n de un estatuto de repetici\u00f3n para formar ciclos\n\n      * Contador y acumulador\n\n  * **Semana 4 - Aplicaci\u00f3n de estructuras c\u00edclicas**\n\n    * Soluci\u00f3n de problemas utilizando estatutos de repetici\u00f3n simple\n\n  * **Semana 5 - Introducci\u00f3n al ambiente de hoja de c\u00e1lculo**\n\n    * Elementos b\u00e1sicos de una hoja de c\u00e1lculo\n\n    * Referencias absolutas y referencias relativas\n\n    * Creaci\u00f3n de f\u00f3rmula\n\n    * Jerarqu\u00eda de evaluaci\u00f3n de los operadores aritm\u00e9ticos\n\n    * Uso de rangos\n\n  * **Semana 6 - Soluci\u00f3n de problemas con hoja de c\u00e1lculo**\n\n    * Funciones matem\u00e1ticas\n\n    * Funciones selectivas\n\n",
        "name": "Pensamiento algor\u00edtmico",
        "provider": "Coursera",
        "rating": "5",
        "reviews": "1",
        "university": [
            "Tecnol\u00f3gico de Monterrey"
        ],
        "url": "https://www.coursera.org/course/pealgoritmico",
        "video_url": ""
    },
    {
        "date": "2014-10-20",
        "desc": "*Note - This is an Archived course*This is a past/archived course. At this time, you can only explore this course in a self-paced fashion. Certain features of this course may not be active, but many people enjoy watching the videos and working with the materials. Make sure to check for reruns of this course.Capturing and analyzing data has changed how decisions are made and resources are allocated in businesses, journalism, government, and military and intelligence fields. Through better use of data, leaders are able to plan and enact strategies with greater clarity and confidence. Data drives increased organizational efficiency and a competitive advantage. Simply, analytics provide new insight and actionable intelligence.In education, the use of data and analytics to improve learning is referred to as learning analytics. Analytics have not yet made the impact on education that they have made in other fields. That\u2019s starting to change. Software companies, researchers, educators, and university leaders recognize the value of data in improving not only teaching and learning, but the entire education sector. In particular, learning analytics enables universities, schools, and corporate training departments to improve the quality of learning and overall competitiveness. Research communities such as the International Educational Data Mining Society (IEDMS) and the Society for Learning Analytics Research (SoLAR) are developing promising models for improving learner success through predictive analytics, machine learning, recommender systems (content and social), network analysis, tracking the development of concepts through social systems, discourse analysis, and intervention and support strategies. The era of data and analytics in learning is just beginning.Data, Analytics, and Learning provides an introduction to learning analytics and how it is being deployed in various contexts in education, including to support automated intervention, to inform instructors, and to promote scientific discovery. Additionally, we will discuss tools and methods, what skills data scientists need in education, and how to protect student privacy and other rights. The course will provide a broad overview of the field, suitable for a broad audience. Learners will explore the logic of analytics, the basics of finding, cleaning, and using educational data, predictive models, text analysis, and activity graphs and social networks. We will discuss use of analytics in data domains such as log files and text data.\u00a0 Tableau Software is partnering with University of Texas Arlington to provide analytics software to course participants as well as technical support and guest lectures. Additional software will be introduced and discussed throughout the course.How this course works:This course will experiment with multiple learning pathways. It has been structured to allow learners to take various pathways through learning content - either in the existing edX format or in a social competency-based and self-directed format. Learners will have access to pathways that support both beginners, and more advanced students, with pointers to additional advanced resources. In addition to interactions within the edX platform, learners will be encouraged to engage in distributed conversations on social media such as blogs and Twitter.",
        "desc_html": "*Note - This is an Archived course*  \n  \nThis is a past/archived course. At this time, you can only explore this course\nin a self-paced fashion. Certain features of this course may not be active,\nbut many people enjoy watching the videos and working with the materials. Make\nsure to check for reruns of this course.  \n  \nCapturing and analyzing data has changed how decisions are made and resources\nare allocated in businesses, journalism, government, and military and\nintelligence fields. Through better use of data, leaders are able to plan and\nenact strategies with greater clarity and confidence. Data drives increased\norganizational efficiency and a competitive advantage. Simply, analytics\nprovide new insight and actionable intelligence.  \n  \nIn education, the use of data and analytics to improve learning is referred to\nas learning analytics. Analytics have not yet made the impact on education\nthat they have made in other fields. That\u2019s starting to change. Software\ncompanies, researchers, educators, and university leaders recognize the value\nof data in improving not only teaching and learning, but the entire education\nsector. In particular, learning analytics enables universities, schools, and\ncorporate training departments to improve the quality of learning and overall\ncompetitiveness. Research communities such as the International Educational\nData Mining Society (IEDMS) and the Society for Learning Analytics Research\n(SoLAR) are developing promising models for improving learner success through\npredictive analytics, machine learning, recommender systems (content and\nsocial), network analysis, tracking the development of concepts through social\nsystems, discourse analysis, and intervention and support strategies. The era\nof data and analytics in learning is just beginning.  \n  \n  \n  \nData, Analytics, and Learning provides an introduction to learning analytics\nand how it is being deployed in various contexts in education, including to\nsupport automated intervention, to inform instructors, and to promote\nscientific discovery. Additionally, we will discuss tools and methods, what\nskills data scientists need in education, and how to protect student privacy\nand other rights. The course will provide a broad overview of the field,\nsuitable for a broad audience. Learners will explore the logic of analytics,\nthe basics of finding, cleaning, and using educational data, predictive\nmodels, text analysis, and activity graphs and social networks. We will\ndiscuss use of analytics in data domains such as log files and text data.\nTableau Software is partnering with University of Texas Arlington to provide\nanalytics software to course participants as well as technical support and\nguest lectures. Additional software will be introduced and discussed\nthroughout the course.  \n  \nHow this course works:  \n  \nThis course will experiment with multiple learning pathways. It has been\nstructured to allow learners to take various pathways through learning content\n- either in the existing edX format or in a social competency-based and self-\ndirected format. Learners will have access to pathways that support both\nbeginners, and more advanced students, with pointers to additional advanced\nresources. In addition to interactions within the edX platform, learners will\nbe encouraged to engage in distributed conversations on social media such as\nblogs and Twitter.\n\n",
        "name": "LINK5.10x: Data, Analytics and Learning",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of Texas Arlington"
        ],
        "url": "https://www.edx.org/course/data-analytics-learning-utarlingtonx-link5-10x",
        "video_url": ""
    },
    {
        "date": "2014-10-20",
        "desc": "El curso \"Data Science en Agricultura\" dotrar&aacute; a los alumnos de los conocimientos esenciales sobre Data Science, de forma que estos puedan ser capaces de avanzar por s&iacute; mismos. La orientaci&oacute;n del curso es hacia el &aacute;mbito de la agricultura, dado que los casos pr&aacute;cticos que se emplear&aacute;n est&aacute;n relacionados con este &aacute;rea. En cualquier caso, no se requiere ning&uacute;n conocimiento espec&iacute;fico sobre agricultura y los conocimientos adquiridos son inmediatamente aplicables a cualquier otro &aacute;rea.Los temas principales ser&aacute;n:La importancia de \"Data Science\". El rol del \"Data Scientist\" y sus habilidades.Las herramientas y fuentes de datos empleadas en \"Data Science\".Casos de estudio: exploratorio, predictivo y descriptivo.El futuro de \"Data Science\".English translation:This course introduces the fundamentals of data science, using agriculture as the common thread. Concepts, tools, methods, processes, and data sources will be explored through lectures, readings, quizzes, and case study applications. Main topics will include:The importance of data scienceSkills and roles of data scientistsData science tools and data sourcesHow to identify and analyze case studiesThe outlook for data science",
        "desc_html": "El curso \"Data Science en Agricultura\" dotrara a los alumnos de los\nconocimientos esenciales sobre Data Science, de forma que estos puedan ser\ncapaces de avanzar por si mismos. La orientacion del curso es hacia el ambito\nde la agricultura, dado que los casos practicos que se emplearan estan\nrelacionados con este area. En cualquier caso, no se requiere ningun\nconocimiento especifico sobre agricultura y los conocimientos adquiridos son\ninmediatamente aplicables a cualquier otro area.\n\nLos temas principales seran:\n\n  * La importancia de \"Data Science\". El rol del \"Data Scientist\" y sus habilidades.\n  * Las herramientas y fuentes de datos empleadas en \"Data Science\".\n  * Casos de estudio: exploratorio, predictivo y descriptivo.\n  * El futuro de \"Data Science\".\n\n  \n_English translation:_  \nThis course introduces the fundamentals of data science, using agriculture as\nthe common thread. Concepts, tools, methods, processes, and data sources will\nbe explored through lectures, readings, quizzes, and case study applications.\nMain topics will include:\n\n  * The importance of data science\n  * Skills and roles of data scientists\n  * Data science tools and data sources\n  * How to identify and analyze case studies\n  * The outlook for data science\n\n",
        "name": "Data Science en Agricultura",
        "provider": "Canvas.net",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Universidad de Alcal\u00e1"
        ],
        "url": "https://www.canvas.net/courses/data-science-en-agricultura",
        "video_url": ""
    },
    {
        "date": "2014-10-20",
        "desc": "This course is anovice-friendly and delightful introductionto computer science and to programming Android apps for smartphones and tablets.No prior programming knowledge is necessary.In this course you will have fun learning tocreate an app for modern Android devices, such as the Nexus tablet.You willuse the programming toolsthat Android software developers use to build your own useful app during this course. Along the way, we will introducefundamental computer science principles and programming ideasthat power today\u2019s smartphone and tablet apps.We will also peek beyond the borders of Android programming to the world of computer science. Meet computer science undergraduates, see one of the firstvacuum tube computers, the firsttransistor, and now-modernscientific researchon the Blue Waters supercomputer\u2014all at Illinois.Android Developer Track: Weeks 1\u20135(required for passing the course):This portion of the course is intended to give you aslow and gentle introduction to the basicsof Android application development such as downloading, installing, and setting up the tools you will use in this course. You will alsocreate your first Android appand share the results of your experience with your classmates\u2014all while writing hardly any code at all!Computer Science and Programming Track: Weeks 6\u20138(optional):During this latter portion of the course, you candelve deeper into computer science fundamentalsand beginner programming techniques. Together we will explore this content whiledeveloping another really cool projectto share.SyllabusThis course is composed of 2 tracks organized into 8 distinct weekly topics:Android Developer TrackWeek 1:An App for Hello WorldWeek 2:A Simple App for ILLIACWeek 3:A Working App for ILLIACWeek 4:An App for EmilyWeek 5:A Simple Web App and Debugging Code in 0gComputer Science and Programming TrackWeek 6:An App to Share My ViewsWeek 7:An App for Bitmaps and ImagesWeek 8:An App for Moving Pixels&nbsp;",
        "desc_html": "![](https://d396qusza40orc.cloudfront.net/androidapps101/images/android1.jpg)\n\nThis course is a **novice-friendly and delightful introduction** to computer\nscience and to programming Android apps for smartphones and tablets. **No\nprior programming knowledge is necessary.** In this course you will have fun\nlearning to **create an app for modern Android devices**, such as the Nexus\ntablet.\n\nYou will **use the programming tools** that Android software developers use to\nbuild your own useful app during this course. Along the way, we will introduce\n**fundamental computer science principles and programming ideas** that power\ntoday\u2019s smartphone and tablet apps.\n\nWe will also peek beyond the borders of Android programming to the world of\ncomputer science. Meet computer science undergraduates, see one of the first\n**vacuum tube computers**, the first **transistor**, and now-modern\n**scientific research** on the Blue Waters supercomputer\u2014all at Illinois.\n\n**Android Developer Track: Weeks 1\u20135** (required for passing the course):  \nThis portion of the course is intended to give you a **slow and gentle\nintroduction to the basics** of Android application development such as\ndownloading, installing, and setting up the tools you will use in this course.\nYou will also **create your first Android app** and share the results of your\nexperience with your classmates\u2014all while writing hardly any code at all!\n\n**Computer Science and Programming Track: Weeks 6\u20138** (optional):  \nDuring this latter portion of the course, you can **delve deeper into computer\nscience fundamentals** and beginner programming techniques. Together we will\nexplore this content while **developing another really cool project** to\nshare.\n\n## Syllabus\n\nThis course is composed of 2 tracks organized into 8 distinct weekly topics:\n\n![](https://d396qusza40orc.cloudfront.net/androidapps101/images/android2.jpg)\n\n**Android Developer Track**\n\n**Week 1: **An App for Hello World\n\n**Week 2: **A Simple App for ILLIAC\n\n**Week 3: **A Working App for ILLIAC\n\n**Week 4: **An App for Emily\n\n**Week 5: **A Simple Web App and Debugging Code in 0g\n\n**Computer Science and Programming Track**\n\n**Week 6: **An App to Share My Views\n\n**Week 7: **An App for Bitmaps and Images\n\n**Week 8: **An App for Moving Pixels\n\n\n\n",
        "name": "Creative, Serious and Playful Science of Android Apps",
        "provider": "Coursera",
        "rating": "4.5",
        "reviews": "2",
        "university": [
            "University of Illinois at Urbana-Champaign"
        ],
        "url": "https://www.coursera.org/course/androidapps101",
        "video_url": ""
    },
    {
        "date": "2014-10-20",
        "desc": "Linear Programming (LP) is arguably one of the most important optimization problems in applied mathematics and engineering. The Simplex algorithm to solve linear programs is widely regarded as one among the \"top ten\"&nbsp;algorithms of the 20th century. Linear Programs arise in almost all fields of engineering including operations research, statistics, machine learning, control system design, scheduling, formal verification&nbsp;and computer vision. It forms the basis for numerous approaches to solving hard combinatorial optimization problems through randomization and approximation.The primary goals of this course&nbsp;will be to:1. Understand the basic theory behind LP, algorithms to solve LPs, and the basics of (mixed) integer programs (ILP).2. Understand important and emerging applications of LP and ILPs to economic problems (optimal resource allocation, scheduling problems), machine learning (SVM), and combinatorial optimization problems.At the end of the course, the successful student will be able to cast various problems that may arise in her research as optimization problems, understand the cases where the optimization problem will be linear, choose appropriate solution methods and interpret results appropriately.This is generally considered a useful ability in many research areas.SyllabusIntroductory Material&nbsp;Introduction to Linear Programming.Week #1:&nbsp;The Diet Problem.Linear Programming Formulations.Tutorials on using GLPK (AMPL), Matlab, CVX and Microsft Excel.The Simplex Algorithm (basics).Week #2:&nbsp;Handling unbounded problemsDegeneracyGeometry of SimplexInitializing Simplex.Cycling and the Use of Bland's rule.Week #3:Duality: dual variables and dual linear program.Strong duality theorem.Complementary Slackness.&nbsp;KKT conditions for Linear Programs.Understanding the dual problem: shadow costs.Extra:The revised simplex method.Week #4:&nbsp;Advanced LP formulations: norm optimization.Least squares, and quadratic programming.Applications #1: Signal reconstruction and De-noising.Applications #2: Regression.Week #5:&nbsp;Integer Linear Programming.Integer vs. Real-valued variables.NP-completeness: basic introduction.Reductions from Combinatorial Problems (SAT, TSP and Vertex Cover).Approximation Algorithms: Introduction.Week #6:Branch and Bound MethodCutting Plane MethodWeek #7:Applications: solving puzzles (Sudoku), reasoning about systems and other applications.Classification and Machine Learning",
        "desc_html": "Linear Programming (LP) is arguably one of the most important optimization\nproblems in applied mathematics and engineering. The Simplex algorithm to\nsolve linear programs is widely regarded as one among the \"[top\nten](http://www.siam.org/pdf/news/637.pdf)\" algorithms of the 20th century.\nLinear Programs arise in almost all fields of engineering including operations\nresearch, statistics, machine learning, control system design, scheduling,\nformal verification and computer vision. It forms the basis for numerous\napproaches to solving hard combinatorial optimization problems through\nrandomization and approximation.\n\n  \n\nThe primary goals of this course will be to:\n\n1\\. Understand the basic theory behind LP, algorithms to solve LPs, and the\nbasics of (mixed) integer programs (ILP).\n\n2\\. Understand important and emerging applications of LP and ILPs to economic\nproblems (optimal resource allocation, scheduling problems), machine learning\n(SVM), and combinatorial optimization problems.\n\nAt the end of the course, the successful student will be able to cast various\nproblems that may arise in her research as optimization problems, understand\nthe cases where the optimization problem will be linear, choose appropriate\nsolution methods and interpret results appropriately._ This is generally\nconsidered a useful ability in many research areas._\n\n  \n\n## Syllabus\n\n**Introductory Material **  \n\n  * Introduction to Linear Programming.\n**Week #1:   \n**\n\n  * The Diet Problem.\n  * Linear Programming Formulations.  \n\n  * Tutorials on using GLPK (AMPL), Matlab, CVX and Microsft Excel.\n  * The Simplex Algorithm (basics).\n**Week #2: **\n\n  * Handling unbounded problems\n  * Degeneracy\n  * Geometry of Simplex\n  * Initializing Simplex.\n  * Cycling and the Use of Bland's rule.\n**Week #3:**\n\n  * Duality: dual variables and dual linear program.\n  * Strong duality theorem.\n  * Complementary Slackness. \n  * KKT conditions for Linear Programs.\n  * Understanding the dual problem: shadow costs.\n  * _Extra:_ The revised simplex method.\n**Week #4: **  \n\n  * Advanced LP formulations: norm optimization.\n  * Least squares, and quadratic programming.\n  * Applications #1: Signal reconstruction and De-noising.\n  * Applications #2: Regression.\n**Week #5: **  \n\n  * Integer Linear Programming.\n  * Integer vs. Real-valued variables.\n  * NP-completeness: basic introduction.\n  * Reductions from Combinatorial Problems (SAT, TSP and Vertex Cover).\n  * Approximation Algorithms: Introduction.\n**Week #6:**  \n\n  * Branch and Bound Method\n  * Cutting Plane Method\n******Week #7:**  \n\n  * Applications: solving puzzles (Sudoku), reasoning about systems and other applications.\n  * Classification and Machine Learning\n\n",
        "name": "Linear and Integer Programming",
        "provider": "Coursera",
        "rating": "3.7142857142857",
        "reviews": "7",
        "university": [
            "University of Colorado Boulder"
        ],
        "url": "https://www.coursera.org/course/linearprogramming",
        "video_url": ""
    },
    {
        "date": "2014-10-20",
        "desc": "The sequencing of the&nbsp;human genome fueled a computational revolution\n    in biology. As a result, modern biology produces as many new&nbsp;algorithms\n    as any other fundamental realm of&nbsp;science. &nbsp;Accordingly, the newly formed&nbsp;links\n    between computer science and biology affect the way we teach applied algorithms to computer\n    scientists.Genome sequencing is just one of hundreds of biological problems that\n    have become inextricable from the computational methods required to solve\n    them. In this course, we will uncover some of the algorithmic ideas\n    that are&nbsp;fundamental to an&nbsp;understanding of modern biology.&nbsp;\n    Computational concepts like dynamic programming and graph theory&nbsp;will\n    help us explore algorithms applied to&nbsp;a wide range of biological topics,\n    from finding regulatory motifs&nbsp;to determining whether the human genome has \"fragile\" regions.&nbsp; Throughout\n    the process, we will apply&nbsp;bioinformatics algorithms to&nbsp;realgenetic\n    data.Each chapter in thecourse textbookcovers a single biological question and slowly builds the algorithmic knowledge required to address this challenge. &nbsp;Along the way, coding challenges and exercises (many of which ask you to apply your skills to real&nbsp;genetic data) will be directly integrated into the text at the exact moment they are needed.SyllabusThe course will be based on six \"chapters\" covering the following central questions, with the algorithmic ideas that we will use to solve them in parentheses:Where Does DNA Replication Begin? (Algorithmic Warm-up)How Do We Sequence Antibiotics? (Brute Force Algorithms)Which DNA Patterns Act As Cellular Clocks? (Greedy and Randomized Algorithms)How Do We Assemble Genomes? (Graph Algorithms)How Do We Compare Biological Sequences? (Dynamic Programming Algorithms)Are There Fragile Regions in the Human Genome? (Combinatorial Algorithms)The grading for the course will be based on several weekly programming challenges, as well as a comprehension quiz at the end of each chapter.Bioinformatics Algorithms (Part 2)will be based around the following questions:&nbsp;Which Animal Gave Us SARS? (Evolutionary Trees)How Do We Locate Disease-Causing Mutations? (Combinatorial Pattern Matching)How Did Yeast Become Such a Good Wine Brewer? (Clustering Algorithms)Why Do We Still Not Have an HIV Vaccine? (Hldden Markov Models)Was T-Rex Just a Big Chicken? (Computational Proteomics)What Genetic Characteristics Do Human Populations Share? (Principal Components Analysis)",
        "desc_html": "The sequencing of the human genome fueled a computational revolution in\nbiology. As a result, modern biology produces as many new algorithms as any\nother fundamental realm of science.  Accordingly, the newly formed links\nbetween computer science and biology affect the way we teach applied\nalgorithms to computer scientists.\n\nGenome sequencing is just one of hundreds of biological problems that have\nbecome inextricable from the computational methods required to solve them. In\nthis course, we will uncover some of the algorithmic ideas that are\nfundamental to an understanding of modern biology.  Computational concepts\nlike dynamic programming and graph theory will help us explore algorithms\napplied to a wide range of biological topics, from finding regulatory motifs\nto determining whether the human genome has \"fragile\" regions.  Throughout the\nprocess, we will apply bioinformatics algorithms to _real_ genetic data.\n\nEach chapter in the [course textbook](http://bioinformaticsalgorithms.com)\ncovers a single biological question and slowly builds the algorithmic\nknowledge required to address this challenge.  Along the way, coding\nchallenges and exercises (many of which ask you to apply your skills to real\ngenetic data) will be directly integrated into the text at the exact moment\nthey are needed.\n\n## Syllabus\n\nThe course will be based on six \"chapters\" covering the following central\nquestions, with the algorithmic ideas that we will use to solve them in\nparentheses:  \n\n  * Where Does DNA Replication Begin? (_Algorithmic Warm-up)_  \n\n  * How Do We Sequence Antibiotics? (_Brute Force Algorithms_)\n  * Which DNA Patterns Act As Cellular Clocks? (_Greedy and Randomized Algorithms_)\n  * How Do We Assemble Genomes? (___Graph Algorithms_)\n  * How Do We Compare Biological Sequences? (_Dynamic Programming Algorithms_)\n  * Are There Fragile Regions in the Human Genome? (_Combinatorial Algorithms_)\nThe grading for the course will be based on several weekly programming\nchallenges, as well as a comprehension quiz at the end of each chapter.  \n  \n[Bioinformatics Algorithms (Part\n2)](http://coursera.org/course/bioinformatics2) will be based around the\nfollowing questions:  \n\n  * Which Animal Gave Us SARS? (_Evolutionary Trees)_  \n\n  * How Do We Locate Disease-Causing Mutations? (_Combinatorial Pattern Matching_)\n  * How Did Yeast Become Such a Good Wine Brewer? (___Clustering Algorithms_)\n  * Why Do We Still Not Have an HIV Vaccine? (_Hldden Markov Models)_\n  * Was T-Rex Just a Big Chicken? (_Computational Proteomics_)\n  * What Genetic Characteristics Do Human Populations Share? (_Principal Components Analysis_)\n\n",
        "name": "Bioinformatics Algorithms (Part 1)",
        "provider": "Coursera",
        "rating": "5",
        "reviews": "1",
        "university": [
            "University of California, San Diego"
        ],
        "url": "https://www.coursera.org/course/bioinformatics",
        "video_url": ""
    },
    {
        "date": "2014-10-16",
        "desc": "Social networks are moving more than ever the organization of knowledge and information.With the spread of the conversation and the arrival of new social media, the web saw his second chapter 2.0.This course introduces to the new situation and summarizes the directions in which the \"raw material\" 2.0 is changing.Condensed light on current issues of the participatory web, the education offered alternate between tiny objects ('like', tag clouds) and huge objects, ideological and economic (empowerment, social Web, the Big data).To assist in strategic decision making, the course is accompanied by a set of interviews that were conducted within the Silicon Valley ecosystem around its main themes.You can explore the different looks for patterns and French analysts the most prominent of the social web in the United States: Freddy Mini (widgets), Dominique Piotet (RebellionLab, essayist, co-author of Alchemy of Hosts with Francis Pisani ), Carlos Diaz (Kwarte and leader of the movement Pigeon), Guillaume Decugis (ScoopIt).Around the course, a clear and comprehensive educational course has been developed with multiple assessments, determined according to the profile of each.",
        "desc_html": "Social networks are moving more than ever the organization of knowledge and\ninformation. With the spread of the conversation and the arrival of new social\nmedia, the web saw his second chapter 2.0. This course introduces to the new\nsituation and summarizes the directions in which the \"raw material\" 2.0 is\nchanging.\n\nCondensed light on current issues of the participatory web, the education\noffered alternate between tiny objects ('like', tag clouds) and huge objects,\nideological and economic (empowerment, social Web, the Big data). To assist in\nstrategic decision making, the course is accompanied by a set of interviews\nthat were conducted within the Silicon Valley ecosystem around its main\nthemes. You can explore the different looks for patterns and French analysts\nthe most prominent of the social web in the United States: Freddy Mini\n(widgets), Dominique Piotet (RebellionLab, essayist, co-author of Alchemy of\nHosts with Francis Pisani ), Carlos Diaz (Kwarte and leader of the movement\nPigeon), Guillaume Decugis (ScoopIt).\n\nAround the course, a clear and comprehensive educational course has been\ndeveloped with multiple assessments, determined according to the profile of\neach.\n\n",
        "name": "Sociologie du Web : Civilisation 2.0 et Intelligence collective",
        "provider": "IONIS",
        "rating": "0",
        "reviews": "0",
        "university": [
            "IONIS"
        ],
        "url": "https://courses.ionisx.com/courses/ionisx/103/p/about",
        "video_url": "https://www.youtube.com/embed/b8ApGncuLYU?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-10-15",
        "desc": "Broadly speaking, functional programming is a style of programming in which the primary method of computation is the application of functions to arguments. Among other features, functional languages offer a compact notation for writing programs, powerful abstraction methods for structuring programs, and a simple mathematical basis that supports reasoning about programs.Functional languages represent the leading edge of programming language design, and the primary setting in which new programming concepts are introduced and studied. All contemporary programming languages such as Hack/PHP, C#, Visual Basic, F#, C++, JavaScript, Python, Ruby, Java, Scala, Clojure, Groovy, Racket, \u2026 support higher-order programming via the concept of closures or lambda expressions.This course will use Haskell as the medium for understanding the basic principles of functional programming. While the specific language isn't all that important, Haskell is a pure functional language so it is entirely appropriate for learning the essential ingredients of programming using mathematical functions. It is also a relatively small language, and hence it should be easy for you to get up to speed with Haskell.Once you understand the Why, What and How that underlies pure functional programming and learned to \u201cthink like a fundamentalist\u201d, we will apply the concepts of functional programming to \u201ccode like a hacker\u201d in mainstream programming languages, using Facebook\u2019s novel Hack language as our main example.This course assumes no prior knowledge of functional programming, but assumes you have at least one year of programming experience in a regular programming language such as Java, .NET, Javascript or PHP.LICENSEThe course materials of this course are Copyright Delft University of Technology and are licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Netherlands License.",
        "desc_html": "Broadly speaking, functional programming is a style of programming in which\nthe primary method of computation is the application of functions to\narguments. Among other features, functional languages offer a compact notation\nfor writing programs, powerful abstraction methods for structuring programs,\nand a simple mathematical basis that supports reasoning about programs.  \nFunctional languages represent the leading edge of programming language\ndesign, and the primary setting in which new programming concepts are\nintroduced and studied. All contemporary programming languages such as\nHack/PHP, C#, Visual Basic, F#, C++, JavaScript, Python, Ruby, Java, Scala,\nClojure, Groovy, Racket, \u2026 support higher-order programming via the concept of\nclosures or lambda expressions.  \nThis course will use Haskell as the medium for understanding the basic\nprinciples of functional programming. While the specific language isn't all\nthat important, Haskell is a pure functional language so it is entirely\nappropriate for learning the essential ingredients of programming using\nmathematical functions. It is also a relatively small language, and hence it\nshould be easy for you to get up to speed with Haskell.  \nOnce you understand the Why, What and How that underlies pure functional\nprogramming and learned to \u201cthink like a fundamentalist\u201d, we will apply the\nconcepts of functional programming to \u201ccode like a hacker\u201d in mainstream\nprogramming languages, using Facebook\u2019s novel Hack language as our main\nexample.  \nThis course assumes no prior knowledge of functional programming, but assumes\nyou have at least one year of programming experience in a regular programming\nlanguage such as Java, .NET, Javascript or PHP.  \nLICENSE  \nThe course materials of this course are Copyright Delft University of\nTechnology and are licensed under a Creative Commons Attribution-\nNonCommercial-ShareAlike 3.0 Netherlands License.\n\n",
        "name": "FP101x: Introduction to Functional Programming",
        "provider": "edX",
        "rating": "4.6666666666667",
        "reviews": "3",
        "university": [
            "Delft University of Technology"
        ],
        "url": "https://www.edx.org/course/introduction-functional-programming-delftx-fp101x",
        "video_url": "https://www.youtube.com/embed/YU2LP2QpUaE?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-10-15",
        "desc": "Les r&eacute;seaux sociaux font plus que jamais bouger l&rsquo;organisation du savoir et de l&rsquo;information. Avec la g&eacute;n&eacute;ralisation de la conversation et l&rsquo;arriv&eacute;e de nouveaux m&eacute;dias sociaux, le web vit son deuxi&egrave;me chapitre 2.0. Ce cours introduit &agrave; cette nouvelle donne et r&eacute;sume les directions dans lesquelles la \"mati&egrave;re premi&egrave;re&rdquo; 2.0 est en train d&rsquo;&eacute;voluer...Condens&eacute; d&rsquo;&eacute;clairages sur les enjeux actuels du web participatif, l&rsquo;enseignement propos&eacute; alterne entre objets minuscules (captchas, &laquo; like &raquo;, tags) et des objets immenses, id&eacute;ologiques et &eacute;conomiques (l&rsquo;empowerment, les smart mobs, le Big data). Pour aider &agrave; la prise de d&eacute;cision strat&eacute;gique, le cours est accompagn&eacute; d&rsquo;un ensemble d&rsquo;interviews qui ont &eacute;t&eacute; r&eacute;alis&eacute;es au sein de l&rsquo;&eacute;cosyst&egrave;me de la Silicon Valley, autour de ses th&eacute;matiques principales. Vous pourrez d&eacute;couvrir les analyses des patrons et des analystes fran&ccedil;ais les plus en vue du web social aux Etats-Unis : Freddy Mini (Netvibes), de Dominique Piotet (RebellionLab, essayiste, co-auteur de l&rsquo;Alchimie des Multitudes avec Francis Pisani), de Carlos Diaz (Kwarter et leader du mouvement des Pigeon), de Guillaume Decugis (ScoopIt).Autour du cours, un parcours p&eacute;dagogique clair et complet a &eacute;t&eacute; &eacute;labor&eacute;, offrant de multiples &eacute;valuations, d&eacute;termin&eacute; en fonction du profil de chacun.Pr&eacute;requisAucun pr&eacute;requis sp&eacute;cifique n'est n&eacute;cessaire pour suivre ce cours.",
        "desc_html": "Les reseaux sociaux font plus que jamais bouger l'organisation du savoir et de\nl'information. Avec la generalisation de la conversation et l'arrivee de\nnouveaux medias sociaux, le web vit son deuxieme chapitre 2.0. Ce cours\nintroduit a cette nouvelle donne et resume les directions dans lesquelles la\n\"matiere premiere\" 2.0 est en train d'evoluer...\n\nCondense d'eclairages sur les enjeux actuels du web participatif,\nl'enseignement propose alterne entre objets minuscules (captchas, \u00ab like \u00bb,\ntags) et des objets immenses, ideologiques et economiques (l'empowerment, les\nsmart mobs, le Big data). Pour aider a la prise de decision strategique, le\ncours est accompagne d'un ensemble d'interviews qui ont ete realisees au sein\nde l'ecosysteme de la Silicon Valley, autour de ses thematiques principales.\nVous pourrez decouvrir les analyses des patrons et des analystes fran\u00e7ais les\nplus en vue du web social aux Etats-Unis : Freddy Mini (Netvibes), de\nDominique Piotet (RebellionLab, essayiste, co-auteur de l'Alchimie des\nMultitudes avec Francis Pisani), de Carlos Diaz (Kwarter et leader du\nmouvement des Pigeon), de Guillaume Decugis (ScoopIt).\n\nAutour du cours, un parcours pedagogique clair et complet a ete elabore,\noffrant de multiples evaluations, determine en fonction du profil de chacun.\n\n**Prerequis**\n\nAucun prerequis specifique n'est necessaire pour suivre ce cours.\n\n",
        "name": "Sociologie du Web : Civilisation 2.0 et Intelligence collective",
        "provider": "IONIS",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://courses.ionisx.com/courses/ionisx/103/p/about",
        "video_url": "https://www.youtube.com/embed/b8ApGncuLYU?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-10-14",
        "desc": "Der Kurs f&uuml;hrt in das zentrale Gebiet der Informatik ein, auf dem alle anderen Teilgebiete aufbauen: Wie entwickele ich Software? Anhand der Programmiersprache Java werden Algorithmen zum Suchen und Sortieren vorgestellt und die dazu ben&ouml;tigten Datenstrukturen wie Keller, Schlange, Liste, Baum und Graph eingef&uuml;hrt.Was lerne ich in diesem Kurs?Die Teilnehmer des Kurses werden in die Lage versetzt, eine Problemstellung auf maschinelle L&ouml;sbarkeit hin zu analysieren, daf&uuml;r einen Algorithmus zu entwerfen, die zugeh&ouml;rigen Datenstrukturen zu w&auml;hlen, daraus ein Java-Programm zu entwickeln und dieses zur L&ouml;sung des Problems einzusetzen.Welche Vorkenntnisse ben&ouml;tige ich?Mathematikkenntnisse auf Oberstufenniveau.SyllabusKapitel&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ThemaKapitel 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Einf&uuml;hrungKapitel 2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SystemumgebungKapitel 3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; JavaKapitel 4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DatentypenKapitel 5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FelderKapitel 6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MethodenKapitel 7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RekursionKapitel 8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Komplexit&auml;tKapitel 9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SortierenKapitel 10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ObjektorientierungKapitel 11&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Abstrakte DatentypenKapitel 12&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Suchb&auml;umeKapitel 13&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HashingKapitel 14&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Graphen",
        "desc_html": "Der Kurs fuhrt in das zentrale Gebiet der Informatik ein, auf dem alle anderen\nTeilgebiete aufbauen: Wie entwickele ich Software? Anhand der\nProgrammiersprache Java werden Algorithmen zum Suchen und Sortieren\nvorgestellt und die dazu benotigten Datenstrukturen wie Keller, Schlange,\nListe, Baum und Graph eingefuhrt.\n\n******Was lerne ich in diesem Kurs?**\n\nDie Teilnehmer des Kurses werden in die Lage versetzt, eine Problemstellung\nauf maschinelle Losbarkeit hin zu analysieren, dafur einen Algorithmus zu\nentwerfen, die zugehorigen Datenstrukturen zu wahlen, daraus ein Java-Programm\nzu entwickeln und dieses zur Losung des Problems einzusetzen.\n\n******Welche Vorkenntnisse benotige ich?**\n\nMathematikkenntnisse auf Oberstufenniveau.\n\n## Syllabus\n\n**Kapitel**|      **Thema**  \n---|---  \nKapitel 1 |        Einfuhrung  \nKapitel 2 |        Systemumgebung  \nKapitel 3 |        Java  \nKapitel 4 |        Datentypen  \nKapitel 5 |        Felder  \nKapitel 6 |        Methoden  \nKapitel 7 |        Rekursion  \nKapitel 8 |        Komplexitat  \nKapitel 9 |        Sortieren  \nKapitel 10 |        Objektorientierung  \nKapitel 11 |        Abstrakte Datentypen  \nKapitel 12 |        Suchbaume  \nKapitel 13 |        Hashing  \nKapitel 14 |        Graphen\n\n",
        "name": "Algorithmen und Datenstrukturen",
        "provider": "iversity",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Universit\u00e4t Osnabr\u00fcck"
        ],
        "url": "https://iversity.org/courses/algorithmen-und-datenstrukturen-9e5008f3-56de-4a1c-9242-13922984d3e4",
        "video_url": "https://www.youtube.com/embed/Ipzh-cq2KOU?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-10-08",
        "desc": "\u968f\u7740\u4fe1\u606f\u6280\u672f\u53ca\u533b\u5b66\u5f71\u50cf\u6210\u50cf\u6280\u672f\u7684\u53d1\u5c55\uff0c\u533b\u5b66\u56fe\u50cf\u5904\u7406\u5728\u533b\u5b66\u4e34\u5e8a\u3001\u6559\u5b66\u548c\u79d1\u7814\u4e2d\u53d1\u6325\u7740\u8d8a\u6765\u8d8a\u91cd\u8981\u7684\u4f5c\u7528\uff0c\u6709\u529b\u5730\u63a8\u52a8\u7740\u533b\u5b66\u79d1\u5b66\u7814\u7a76\u548c\u4e34\u5e8a\u533b\u7597\u7684\u8fdb\u6b65\u3002\u5982\u4f55\u6709\u6548\u5730\u5e94\u7528\u56fe\u50cf\u589e\u5f3a\u3001\u5206\u5272\u3001\u914d\u51c6\u3001\u878d\u5408\u4ee5\u53ca\u4e09\u7ef4\u91cd\u5efa\u7b49\u6570\u5b57\u56fe\u50cf\u5206\u6790\u4e0e\u5904\u7406\u6280\u672f\uff0c\u5bf9\u4eba\u4f53\u89e3\u5256\u7ed3\u6784\u548c\u75c5\u53d8\u533a\u57df\u8fdb\u884c\u5b9a\u4f4d\u3001\u63d0\u53d6\u3001\u4e09\u7ef4\u518d\u73b0\u5e76\u91cf\u5316\u5206\u6790\u662f\u4f7f\u5f97\u533b\u5b66\u5f71\u50cf\u6570\u636e\u5e94\u7528\u4ef7\u503c\u6700\u5927\u5316\u7684\u524d\u63d0\u548c\u4fdd\u8bc1\u3002\u672c\u8bfe\u7a0b\u9488\u5bf9\u533b\u5b66\u56fe\u50cf\u7684\u7279\u5f81\uff0c\u7ed3\u5408\u4e34\u5e8a\u9700\u6c42\uff0c\u7531\u6d45\u5165\u6df1\u5730\u8bb2\u89e3\u533b\u5b66\u56fe\u50cf\u7684\u79cd\u7c7b\u3001\u7279\u5f81\u3001\u5e94\u7528\u9886\u57df\u3001\u6570\u5b57\u5316\u5b58\u50a8\u5f62\u5f0f\uff0c\u5e76\u5206\u7c7b\u8bb2\u89e3\u56fe\u50cf\u5904\u7406\u7684\u7406\u8bba\u548c\u7b97\u6cd5\uff0c\u7ed3\u5408\u5e94\u7528\u6848\u4f8b\u548c\u8bfe\u7a0b\u5b9e\u8df5\u4f7f\u5b66\u751f\u719f\u7ec3\u638c\u63e1\u7965\u5149\u9886\u57df\u7684\u77e5\u8bc6\u548c\u6280\u80fd\uff0c\u5e76\u5177\u5907\u4e00\u5b9a\u7684\u52a8\u624b\u80fd\u529b\uff0c\u4e3a\u8fdb\u4e00\u6b65\u5b66\u4e60\u533b\u5b66\u56fe\u50cf\u9886\u57df\u7684\u5176\u4ed6\u8bfe\u7a0b\u5960\u5b9a\u57fa\u7840\u3002The medical image analysis plays an important role in clinical application. The people who want to learn advance theory, algorithms and its applications on the digital image processing area is most suitable. The contents may include image acquiring, image filtering, image segmentation, image understanding and visualization. It could help students to review the history, current status and development of the research area, and could help them to apply them to their own research field. The students are required to understand the basic theory, algorithms and its applications on the digital image processing area.Syllabus\u7b2c\u4e00\u5468 \u7eea\u8bba\u7b2c\u4e8c\u5468 \u533b\u5b66\u56fe\u50cf\u57fa\u7840\u7b97\u6cd5\uff08\u4e0a\uff09\u7b2c\u4e09\u5468 \u533b\u5b66\u56fe\u50cf\u57fa\u7840\u7b97\u6cd5\uff08\u4e0b\uff09\u7b2c\u56db\u7ae0 \u4e8c\u503c\u6570\u5b66\u5f62\u6001\u5b66\u7b2c\u4e94\u7ae0 \u7070\u5ea6\u6570\u5b66\u5f62\u6001\u5b66\u7b2c\u516d\u5468 \u5f69\u8272\u56fe\u50cf\u548c\u4e09\u7ef4\u56fe\u50cf&nbsp;\u7b2c\u4e03\u5468 \u56fe\u50cf\u5206\u5272\u4e0e\u5f62\u72b6\u8f6e\u5ed3\u6a21\u578b\u7b2c\u516b\u5468 \u533b\u5b66\u56fe\u50cf\u914d\u51c6",
        "desc_html": "\u968f\u7740\u4fe1\u606f\u6280\u672f\u53ca\u533b\u5b66\u5f71\u50cf\u6210\u50cf\u6280\u672f\u7684\u53d1\u5c55\uff0c\u533b\u5b66\u56fe\u50cf\u5904\u7406\u5728\u533b\u5b66\u4e34\u5e8a\u3001\u6559\u5b66\u548c\u79d1\u7814\u4e2d\u53d1\u6325\u7740\u8d8a\u6765\u8d8a\u91cd\u8981\u7684\u4f5c\u7528\uff0c\u6709\u529b\u5730\u63a8\u52a8\u7740\u533b\u5b66\u79d1\u5b66\u7814\u7a76\u548c\u4e34\u5e8a\u533b\u7597\u7684\u8fdb\u6b65\u3002\u5982\u4f55\u6709\u6548\u5730\u5e94\u7528\u56fe\n\u50cf\u589e\u5f3a\u3001\u5206\u5272\u3001\u914d\u51c6\u3001\u878d\u5408\u4ee5\u53ca\u4e09\u7ef4\u91cd\u5efa\u7b49\u6570\u5b57\u56fe\u50cf\u5206\u6790\u4e0e\u5904\u7406\u6280\u672f\uff0c\u5bf9\u4eba\u4f53\u89e3\u5256\u7ed3\u6784\u548c\u75c5\u53d8\u533a\u57df\u8fdb\u884c\u5b9a\u4f4d\u3001\u63d0\u53d6\u3001\u4e09\u7ef4\u518d\u73b0\u5e76\u91cf\u5316\u5206\u6790\u662f\u4f7f\u5f97\u533b\u5b66\u5f71\u50cf\u6570\u636e\u5e94\u7528\u4ef7\u503c\u6700\u5927\u5316\u7684\u524d\n\u63d0\u548c\u4fdd\u8bc1\u3002\u672c\u8bfe\u7a0b\u9488\u5bf9\u533b\u5b66\u56fe\u50cf\u7684\u7279\u5f81\uff0c\u7ed3\u5408\u4e34\u5e8a\u9700\u6c42\uff0c\u7531\u6d45\u5165\u6df1\u5730\u8bb2\u89e3\u533b\u5b66\u56fe\u50cf\u7684\u79cd\u7c7b\u3001\u7279\u5f81\u3001\u5e94\u7528\u9886\u57df\u3001\u6570\u5b57\u5316\u5b58\u50a8\u5f62\u5f0f\uff0c\u5e76\u5206\u7c7b\u8bb2\u89e3\u56fe\u50cf\u5904\u7406\u7684\u7406\u8bba\u548c\u7b97\u6cd5\uff0c\u7ed3\u5408\u5e94\u7528\u6848\u4f8b\n\u548c\u8bfe\u7a0b\u5b9e\u8df5\u4f7f\u5b66\u751f\u719f\u7ec3\u638c\u63e1\u7965\u5149\u9886\u57df\u7684\u77e5\u8bc6\u548c\u6280\u80fd\uff0c\u5e76\u5177\u5907\u4e00\u5b9a\u7684\u52a8\u624b\u80fd\u529b\uff0c\u4e3a\u8fdb\u4e00\u6b65\u5b66\u4e60\u533b\u5b66\u56fe\u50cf\u9886\u57df\u7684\u5176\u4ed6\u8bfe\u7a0b\u5960\u5b9a\u57fa\u7840\u3002\n\nThe medical image analysis plays an important role in clinical application.\nThe people who want to learn advance theory, algorithms and its applications\non the digital image processing area is most suitable. The contents may\ninclude image acquiring, image filtering, image segmentation, image\nunderstanding and visualization. It could help students to review the history,\ncurrent status and development of the research area, and could help them to\napply them to their own research field. The students are required to\nunderstand the basic theory, algorithms and its applications on the digital\nimage processing area.\n\n  \n\n## Syllabus\n\n\u7b2c\u4e00\u5468 \u7eea\u8bba\n\n\u7b2c\u4e8c\u5468 \u533b\u5b66\u56fe\u50cf\u57fa\u7840\u7b97\u6cd5\uff08\u4e0a\uff09\n\n\u7b2c\u4e09\u5468 \u533b\u5b66\u56fe\u50cf\u57fa\u7840\u7b97\u6cd5\uff08\u4e0b\uff09\n\n\u7b2c\u56db\u7ae0 \u4e8c\u503c\u6570\u5b66\u5f62\u6001\u5b66\n\n\u7b2c\u4e94\u7ae0 \u7070\u5ea6\u6570\u5b66\u5f62\u6001\u5b66\n\n\u7b2c\u516d\u5468 \u5f69\u8272\u56fe\u50cf\u548c\u4e09\u7ef4\u56fe\u50cf\n\n\u7b2c\u4e03\u5468 \u56fe\u50cf\u5206\u5272\u4e0e\u5f62\u72b6\u8f6e\u5ed3\u6a21\u578b\n\n\u7b2c\u516b\u5468 \u533b\u5b66\u56fe\u50cf\u914d\u51c6\n\n",
        "name": "\u533b\u5b66\u56fe\u50cf\u5904\u7406\u6280\u672f Medical Image Analysis",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Shanghai Jiao Tong University"
        ],
        "url": "https://www.coursera.org/course/sjtumia",
        "video_url": ""
    },
    {
        "date": "2014-10-07",
        "desc": "Este MOOC se dirige a profesores y es extensible tambi&eacute;n a personas que tengan inter&eacute;s por conocer el funcionamiento del programa Scratch y de su integraci&oacute;n con las placas Arduino, para dise&ntilde;ar robots y videojuegos.El objetivo del MOOC es dotar de recursos pedag&oacute;gicos para la programaci&oacute;n de videojuegos y su uso en las aulas.Scratch es el programa que centra la base general del MOOC y tambi&eacute;n Arduino, que son placas de hardware en c&oacute;digo abierto que permiten la creaci&oacute;n de robots y aplicaci&oacute;n de electr&oacute;nica a diversos objetos &ndash;Internet de las cosas-.Plantearemos el MOOC pensando en profesores de secund&aacute;ria para as&iacute; contribuir a la innovaci&oacute;n docente mediante nuevas herramientas que puedan despertar el inter&eacute;s de los j&oacute;venes por la tecnolog&iacute;a.&nbsp;Conocimientos necesarios:No hay conocimientos previos m&iacute;nimos para la inscripci&oacute;n en el MOOC.SyllabusM&oacute;dulo 0: Presentaci&oacute;nM&oacute;dulo 1: &iquest;Que es Scratch?, &iquest;c&oacute;mo funciona?M&oacute;dulo 2: Programaci&oacute;n con ScratchM&oacute;dulo 3: Patrones m&aacute;s comunes de videojuegosM&oacute;dulo 4: ArduinoM&oacute;dulo 5: Scratch y ArduinoM&oacute;dulo 6: Otras posibilidades de Scratch y Arduino",
        "desc_html": "Este MOOC se dirige a profesores y es extensible tambien a personas que tengan\ninteres por conocer el funcionamiento del programa Scratch y de su integracion\ncon las placas Arduino, para dise\u00f1ar robots y videojuegos.\n\nEl objetivo del MOOC es dotar de recursos pedagogicos para la programacion de\nvideojuegos y su uso en las aulas.\n\nScratch es el programa que centra la base general del MOOC y tambien Arduino,\nque son placas de hardware en codigo abierto que permiten la creacion de\nrobots y aplicacion de electronica a diversos objetos -Internet de las cosas-.\n\nPlantearemos el MOOC pensando en profesores de secundaria para asi contribuir\na la innovacion docente mediante nuevas herramientas que puedan despertar el\ninteres de los jovenes por la tecnologia.\n\n\n\n**Conocimientos necesarios:**\n\nNo hay conocimientos previos minimos para la inscripcion en el MOOC.\n\n## Syllabus\n\nModulo 0: Presentacion\n\nModulo 1: \u00bfQue es Scratch?, \u00bfcomo funciona?\n\nModulo 2: Programacion con Scratch\n\nModulo 3: Patrones mas comunes de videojuegos\n\nModulo 4: Arduino\n\nModulo 5: Scratch y Arduino\n\nModulo 6: Otras posibilidades de Scratch y Arduino\n\n",
        "name": "Robots y Videojuegos en las aulas: Scratch y Arduino para profesores",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Universitat Pompeu Fabra"
        ],
        "url": "https://www.miriadax.net/web/robots-videojuegos-aulas-scratch-arduino-profesores-2ed",
        "video_url": "https://www.youtube.com/embed/p1Z9nWuSVs4?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-10-07",
        "desc": "SAP HANA is an in-memory data platform that is deployable either as an appliance or in the cloud. At its core, it is an innovative, in-memory, relational database management system that exploits all the capabilities of current hardware to increase application performance, reduce total cost of ownership, and enable new scenarios and applications that were not possible before.SAP HANA enables you to build applications that integrate the business logic, the control logic, and the database layer with unprecedented performance. As a developer, one of the key issues is how to minimize data movements. The more you can do directly on the data in memory next to the CPUs, the better the application will perform.This course will build upon last year&rsquo;s&nbsp;Introduction to Software Development on SAP HANA&nbsp;course and go deeper into each of the major topics around SAP HANA native development. We will explore the many advances in the programming model and tooling that came with SAP HANA SPS6, SPS7, and SPS8.During the course, we will use SAP HANA studio as well as several new Web-based tools (for example, the Web-based Development Workbench, SAP HANA Lifecycle Management, and SAP HANA XS Administration Tool).We will also go well beyond the basics of each of the programming models, allowing discussion of deeper, real-world patterns and anti-patterns. We will look at the architecture of applications that are not just read-only or analytic but also transactional or provide an interface with transactional systems. We will also look at the extended capabilities of SAP HANA, from beyond a database to a complete application platform.Registration, learning content, final exam, and Record of Achievement are free of charge. However, to fully benefit from the course, you can access a fee-based system environment to develop your own code.Course RequirementsA basic knowledge of database technology, especially relational databases, SQL query language, and JavaScriptA general understanding of how columnar, in-memory databases workCompletion of the&nbsp;Introduction to Software Development on SAP HANA&nbsp;course or similar basic experience with SAP HANA native developmentSyllabusWeek 1:IntroductionWeek 2:Database and ModelingWeek 3:SQLScript AdvancedWeek 4:OData Services (XSODATA)Week 5:Server-Side JavaScript (XSJS)Week 6:Miscellaneous Topics / Wrap-UpI Like, I Wish:We Love Your Feedback &hellip; And Want MoreFinal Exam:Good Luck!",
        "desc_html": "SAP HANA is an in-memory data platform that is deployable either as an\nappliance or in the cloud. At its core, it is an innovative, in-memory,\nrelational database management system that exploits all the capabilities of\ncurrent hardware to increase application performance, reduce total cost of\nownership, and enable new scenarios and applications that were not possible\nbefore.\n\nSAP HANA enables you to build applications that integrate the business logic,\nthe control logic, and the database layer with unprecedented performance. As a\ndeveloper, one of the key issues is how to minimize data movements. The more\nyou can do directly on the data in memory next to the CPUs, the better the\napplication will perform.\n\nThis course will build upon last year's _[Introduction to Software Development\non SAP HANA](https://open.sap.com/courses/hana1-1)_ course and go deeper into\neach of the major topics around SAP HANA native development. We will explore\nthe many advances in the programming model and tooling that came with SAP HANA\nSPS6, SPS7, and SPS8.  \nDuring the course, we will use SAP HANA studio as well as several new Web-\nbased tools (for example, the Web-based Development Workbench, SAP HANA\nLifecycle Management, and SAP HANA XS Administration Tool).  \nWe will also go well beyond the basics of each of the programming models,\nallowing discussion of deeper, real-world patterns and anti-patterns. We will\nlook at the architecture of applications that are not just read-only or\nanalytic but also transactional or provide an interface with transactional\nsystems. We will also look at the extended capabilities of SAP HANA, from\nbeyond a database to a complete application platform.\n\nRegistration, learning content, final exam, and Record of Achievement are free\nof charge. However, to fully benefit from the course, you can access a fee-\nbased system environment to develop your own code.\n\n**Course Requirements**\n\n  * A basic knowledge of database technology, especially relational databases, SQL query language, and JavaScript\n  * A general understanding of how columnar, in-memory databases work\n  * Completion of the _[Introduction to Software Development on SAP HANA](https://open.sap.com/courses/hana1-1)_ course or similar basic experience with SAP HANA native development\n\n## Syllabus\n\n  * **Week 1:** Introduction\n  * **Week 2:** Database and Modeling\n  * **Week 3:** SQLScript Advanced\n  * **Week 4:** OData Services (XSODATA)\n  * **Week 5:** Server-Side JavaScript (XSJS)\n  * **Week 6:** Miscellaneous Topics / Wrap-Up\n  * **I Like, I Wish:** We Love Your Feedback \u2026 And Want More\n  * **Final Exam:** Good Luck!\n\n",
        "name": "Next Steps in Software Development on SAP HANA",
        "provider": "openSAP",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.sap.com/courses/hana2",
        "video_url": ""
    },
    {
        "date": "2014-10-06",
        "desc": "Organisations around the world are collecting more data than ever. They are talking about big data, data science, business intelligence, analytics, data mining and data visualisation, and there&rsquo;s an urgent need for people with the data skills to understand, interpret and communicate this information.It&rsquo;s all about using statistical data to predict behaviours and extract insights about the real world. From businesses, governments and service organisations to researchers, data has become everybody&rsquo;s business.Data to Insight provides an introduction to statistical data analysis for those new to the subject as well as those wanting a reminder and a fresh perspective.The course focuses on data exploration and discovery, showing you what to look for in statistical data, however large it may be. We&rsquo;ll also teach you some of the limitations of data and what you can do to avoid being misled. We use data visualisations designed to teach you these skills quickly, and introduce you to the basic concepts you need to start understanding our world through data.Our goal is to help you learn to think like a statistician.This course will give you the opportunity to purchase aStatement of Participation.You can use the hashtag&nbsp;#FLdata2insight&nbsp;to join and contribute to social media conversations about this course.&nbsp;REQUIREMENTSThis course assumes very little experience with statistical ideas and concepts. The software you will use is powerful yet simple to use. It is already being used with ease by high school students around New Zealand.You will need to be comfortable thinking in terms of percentages, have basic Microsoft Excel skills, and a Windows or Macintosh computer to download and install our iNZight software.",
        "desc_html": "Organisations around the world are collecting more data than ever. They are\ntalking about big data, data science, business intelligence, analytics, data\nmining and data visualisation, and there's an urgent need for people with the\ndata skills to understand, interpret and communicate this information.\n\nIt's all about using statistical data to predict behaviours and extract\ninsights about the real world. From businesses, governments and service\norganisations to researchers, data has become everybody's business.\n\nData to Insight provides an introduction to statistical data analysis for\nthose new to the subject as well as those wanting a reminder and a fresh\nperspective.\n\nThe course focuses on data exploration and discovery, showing you what to look\nfor in statistical data, however large it may be. We'll also teach you some of\nthe limitations of data and what you can do to avoid being misled. We use data\nvisualisations designed to teach you these skills quickly, and introduce you\nto the basic concepts you need to start understanding our world through data.\n\nOur goal is to help you learn to think like a statistician.\n\nThis course will give you the opportunity to purchase a[Statement of\nParticipation](http://about.futurelearn.com/about/faq/?category=statements-of-\nparticipation).\n\nYou can use the hashtag [#FLdata2insight](https://twitter.com/search?f=realtim\ne&q=%23FLdata2insight&src=typd) to join and contribute to social media\nconversations about this course.\n\n\n\n**REQUIREMENTS**\n\nThis course assumes very little experience with statistical ideas and\nconcepts. The software you will use is powerful yet simple to use. It is\nalready being used with ease by high school students around New Zealand.\n\nYou will need to be comfortable thinking in terms of percentages, have basic\nMicrosoft Excel skills, and a Windows or Macintosh computer to download and\ninstall our iNZight software.\n\n",
        "name": "Data to Insight: An Introduction to Data Analysis",
        "provider": "FutureLearn",
        "rating": "4",
        "reviews": "1",
        "university": [
            "University Of Auckland"
        ],
        "url": "https://www.futurelearn.com/courses/data-to-insight",
        "video_url": ""
    },
    {
        "date": "2014-10-06",
        "desc": "Course Introduction video can also visit China website\"Program Design Basics\" is the computer science and technology professional core courses are compulsory subjects basis. School of Computer Science and Technology, Jilin University \"program design\" course is a national boutique lesson.The course for the university first semester, no undergraduate Prerequisite, but requires high school students to better grasp of English, mathematics and other subjects related knowledge, and have basic computer skills.The course in C language as the carrier, the introduction of PAD indicates that the program logic, the main contents include: algorithms, structured programming, functions, recursion, data types, arrays, pointers, structures, documents, lists and so on.This course teaches basic video main ideas and methods of programming. Focus on training and the ability to train students in computational thinking and programming capabilities. Teaching guiding principle is \"the main line to program design,\" teaching method is \"driven by the case.\" Teaching PAD describe the algorithm used in the process, leads to knowledge through practical examples, and through programming examples to explain knowledge to enhance students understanding. To familiarize students with the main programming language structure, to understand the basic idea of \u200b\u200bprogram design, program design master the basic method has certain computational thinking ability and preliminary program design capabilities.This course is offered by Jilin University, recommended by the Peking University.",
        "desc_html": "Course Introduction video can also visit China website  \n  \n\"Program Design Basics\" is the computer science and technology professional\ncore courses are compulsory subjects basis. School of Computer Science and\nTechnology, Jilin University \"program design\" course is a national boutique\nlesson.  \n  \nThe course for the university first semester, no undergraduate Prerequisite,\nbut requires high school students to better grasp of English, mathematics and\nother subjects related knowledge, and have basic computer skills.  \n  \nThe course in C language as the carrier, the introduction of PAD indicates\nthat the program logic, the main contents include: algorithms, structured\nprogramming, functions, recursion, data types, arrays, pointers, structures,\ndocuments, lists and so on.  \n  \nThis course teaches basic video main ideas and methods of programming. Focus\non training and the ability to train students in computational thinking and\nprogramming capabilities. Teaching guiding principle is \"the main line to\nprogram design,\" teaching method is \"driven by the case.\" Teaching PAD\ndescribe the algorithm used in the process, leads to knowledge through\npractical examples, and through programming examples to explain knowledge to\nenhance students understanding. To familiarize students with the main\nprogramming language structure, to understand the basic idea of \u200b\u200bprogram\ndesign, program design master the basic method has certain computational\nthinking ability and preliminary program design capabilities.  \n  \nThis course is offered by Jilin University, recommended by the Peking\nUniversity.\n\n",
        "name": "532001x: \u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840 | Fundamentals of Programming",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Peking University"
        ],
        "url": "https://www.edx.org/course/cheng-xu-she-ji-ji-chu-fundamentals-pekingx-532001x",
        "video_url": "https://www.youtube.com/embed/-aX1e6VaKFQ?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-10-06",
        "desc": "*Note - This is an Archived course*This is a past/archived course. At this time, you can only explore this course in a self-paced fashion. Certain features of this course may not be active, but many people enjoy watching the videos and working with the materials. Make sure to check for reruns of this course.CS184.1x teaches the Foundations of Computer Graphics. Students will make images of 3D scenes in real-time, and with offline raytracing. This course runs for 6 weeks and consists of four segments. Each segment includes an individual programming assignment:Overview and Basic Math (Homework 0: 10% of grade)Transformations (Homework 1: 20% of grade)OpenGL and Lighting (Homework 2: 35% of grade)Raytracing (Homework 3: 35% of grade)This term, students who earn a total score of 50% or greater will have passed the course and may obtain a free honor code certificate from BerkeleyX.Before your course starts, try the new edX Demo where you can explore the fun, interactive learning environment and virtual labs. Learn more.",
        "desc_html": "*Note - This is an Archived course*  \n  \nThis is a past/archived course. At this time, you can only explore this course\nin a self-paced fashion. Certain features of this course may not be active,\nbut many people enjoy watching the videos and working with the materials. Make\nsure to check for reruns of this course.  \n  \nCS184.1x teaches the Foundations of Computer Graphics. Students will make\nimages of 3D scenes in real-time, and with offline raytracing. This course\nruns for 6 weeks and consists of four segments. Each segment includes an\nindividual programming assignment:  \n  \nOverview and Basic Math (Homework 0: 10% of grade)  \nTransformations (Homework 1: 20% of grade)  \nOpenGL and Lighting (Homework 2: 35% of grade)  \nRaytracing (Homework 3: 35% of grade)  \nThis term, students who earn a total score of 50% or greater will have passed\nthe course and may obtain a free honor code certificate from BerkeleyX.  \n  \nBefore your course starts, try the new edX Demo where you can explore the fun,\ninteractive learning environment and virtual labs. Learn more.  \n  \n\n\n",
        "name": "CS-184.1x: Foundations of Computer Graphics",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of California, Berkeley"
        ],
        "url": "https://www.edx.org/course/foundations-computer-graphics-uc-berkeleyx-cs184-1x",
        "video_url": "https://www.youtube.com/embed/6F0pR-ANmXY?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-10-02",
        "desc": "Learn many of the concepts that underlie all programming languages. Use functional programming and contrast it with\nobject-oriented programming. Through experience writing programs and studying\nthree different languages, learn the key issues in designing and using\nprogramming languages, such as modularity and the complementary benefits\nof static and dynamic typing. This course is neither particularly theoretical\nnor just about programming specifics \u2013 it will give you a framework for\nunderstanding how to use language constructs effectively and how to design\ncorrect and elegant programs. By using different languages, you learn to\nthink more deeply than in terms of the particular syntax of one language.\nThe emphasis on functional programming is essential for learning how to\nwrite robust, reusable, composable, and elegant programs \u2013 in any language.Beginning with the Fall 2014 offering, verified certificates are available for this course.  The certificates look slightly different than for courses from other institutions.Here is an example.SyllabusNote: About half the students completing prior offerings report an estimated workload of 8-12\n    hours / week is accurate while most of the other half\n    spent more time -- 15 hours / week or more. Workload naturally differs for different people depending\n    on one's background. Do see the recommended-background section below.Topics (most of which may not mean anything to you until you take the\n    course):Syntax vs. semantics vs. idioms vs. libraries vs. toolsML basics (bindings, conditionals, records, functions)Recursive functions and recursive typesBenefits of no mutationAlgebraic datatypes, pattern matchingTail recursionFirst-class functions and function closuresLexical scopeCurryingSyntactic sugarEquivalence and effectsParametric polymorphism and container typesType inferenceAbstract types and modulesRacket basicsDynamic vs. static typingLaziness, streams, and memoizationImplementing languages, especially higher-order functionsMacrosEvalRuby basicsObject-oriented programming is dynamic dispatchPure object-orientationImplementing dynamic dispatchMultiple inheritance, interfaces, and mixinsOOP vs. functional decomposition and extensibilitySubtyping for records, functions, and objectsSubtypingClass-based subtypingSubtyping vs. parametric polymorphism; bounded polymorphism",
        "desc_html": "Learn many of the concepts that underlie all programming languages. Use\nfunctional programming and contrast it with object-oriented programming.\nThrough experience writing programs and studying three different languages,\nlearn the key issues in designing and using programming languages, such as\nmodularity and the complementary benefits of static and dynamic typing. This\ncourse is neither particularly theoretical nor just about programming\nspecifics \u2013 it will give you a framework for understanding how to use language\nconstructs effectively and how to design correct and elegant programs. By\nusing different languages, you learn to think more deeply than in terms of the\nparticular syntax of one language. The emphasis on functional programming is\nessential for learning how to write robust, reusable, composable, and elegant\nprograms \u2013 in any language.\n\nBeginning with the Fall 2014 offering, verified certificates are available for\nthis course. The certificates look slightly different than for courses from\nother institutions. [Here is an example.](https://drive.google.com/file/d/0B5s\nUgbs6aDNpbE1DQXV2MVdUS1k/view?usp=sharing)\n\n## Syllabus\n\nNote: About half the students completing prior offerings report an estimated\nworkload of 8-12 hours / week is accurate while most of the other half spent\nmore time -- 15 hours / week or more. Workload naturally differs for different\npeople depending on one's background. Do see the recommended-background\nsection below.\n\nTopics (most of which may not mean anything to you until you take the course):\n\n  * Syntax vs. semantics vs. idioms vs. libraries vs. tools\n  * ML basics (bindings, conditionals, records, functions)\n  * Recursive functions and recursive types\n  * Benefits of no mutation\n  * Algebraic datatypes, pattern matching\n  * Tail recursion\n  * First-class functions and function closures\n  * Lexical scope\n  * Currying\n  * Syntactic sugar\n  * Equivalence and effects\n  * Parametric polymorphism and container types\n  * Type inference\n  * Abstract types and modules\n  * Racket basics\n  * Dynamic vs. static typing\n  * Laziness, streams, and memoization\n  * Implementing languages, especially higher-order functions\n  * Macros\n  * Eval\n  * Ruby basics\n  * Object-oriented programming is dynamic dispatch\n  * Pure object-orientation\n  * Implementing dynamic dispatch\n  * Multiple inheritance, interfaces, and mixins\n  * OOP vs. functional decomposition and extensibility\n  * Subtyping for records, functions, and objects\n  * Subtyping\n  * Class-based subtyping\n  * Subtyping vs. parametric polymorphism; bounded polymorphism\n\n",
        "name": "Programming Languages",
        "provider": "Coursera",
        "rating": "4.875",
        "reviews": "8",
        "university": [
            "University of Washington"
        ],
        "url": "https://www.coursera.org/course/proglang",
        "video_url": ""
    },
    {
        "date": "2014-10-01",
        "desc": "Este curso capacita para un primer nivel de desarrollo de aplicaciones m&oacute;viles en HTML5, CSS y JavaScript accesibles desde PC, m&oacute;vil, tableta, SmartTv u otros dispositivos que soporten HTML5. El curso es para principiantes en HTML5 e ilustra los conceptos con ejemplos sencillos y multidisciplinares, tanto de programaci&oacute;n, como de dise&ntilde;o gr&aacute;fico o de dise&ntilde;o de la interacci&oacute;n. Los participantes aprender&aacute;n a dise&ntilde;ar interfaces con HTML y CSS, as&iacute; como a programar en JavaScript nuevas funcionalidades y aplicaciones. Se ense&ntilde;ar&aacute; a crear aplicaciones Web gen&eacute;ricas independientes de dispositivo, as&iacute; como a empaquetarlas para FirefoxOS. Empaquetarlas para Android o iPhone es sencillo, pero no se cubre en este curso.Firefox OS es el nuevo sistema operativo libre para tel&eacute;fonos m&oacute;viles y tabletas de la Fundaci&oacute;n Mozilla, que utiliza software libre y se programa en HTML5, utilizando HTML, CSS y Javascript, igual que las aplicaciones Web de los grandes portales de Internet, Google, Twitter, Facebook, Amazon. etc. Su calidad y car&aacute;cter abierto ha conseguido el apoyo de Telef&oacute;nica, Qualcomm, LG, Huawei Foxconn, etc.Este curso es el primero del programa \"Dise&ntilde;o de servicios en la nube para acceso m&oacute;vil y multi-dispositivo con HTML5 \"impulsado y patrocinado por&nbsp;Red.es,&nbsp;Universia,&nbsp;CENATIC,&nbsp;Telef&oacute;nica Digital&nbsp;y&nbsp;TLS. El programa consta de 5 cursos, que se ir&aacute;n incorporando progresivamente en Mir&iacute;adaX.Esta iniciativa est&aacute; recogida dentro de la medida &ldquo;Formaci&oacute;n para el Empleo&rdquo; del Plan de Inclusi&oacute;n Digital y Empleabilidad de la&nbsp;Agenda Digital para Espa&ntilde;a.&nbsp;Conocimientos necesarios:&nbsp;Si bien el curso ha sido dise&ntilde;ado para principiantes, se recomienda que los asistentes tengan nociones b&aacute;sicas de programaci&oacute;n aunque pueda ser de otros lenguajes como Java, C, Basic, PHP, Python, Pascal, etc. Quien carezca de tales conocimientos puede compensarlo con un trabajo m&aacute;s intenso. El curso tambi&eacute;n es de inter&eacute;s para programadores expertos que quieran adquirir en poco tiempo una panor&aacute;mica del dise&ntilde;o de aplicaciones web en HTML5 y para Firefox OS.SyllabusM&oacute;dulo 0. Introducci&oacute;n al curso y al programa &ldquo;Dise&ntilde;o de servicios en la nube para acceso movil con HTML5&rdquo;Modulo 1: Introducci&oacute;n a Internet, la nube, la arquitectura de la Web, HTML5 y CSSModulo 2: Introducci&oacute;n a JavaScript y a las aplicaciones Web en HTML5, as&iacute; como la publicaci&oacute;n en la nubeModulo 3. Estructuraci&oacute;n y visualizaci&oacute;n de p&aacute;ginas Web en HTML y CSS adaptadas a un entorno multipantalla con PCs, m&oacute;viles y tabletasM&oacute;dulo 4: Tipos string y boolean de JavaScript, sentencias if/else y for/in, y caracteristicas avanzadas de objetos, incluyendo acceso al navegador mediante el arbol DOMM&oacute;dulo 5: Interacci&oacute;n con el usuario, funciones, eventos, manejadores de eventos, formularios, jQuery y ZeptoM&oacute;dulo 6: Ejemplo de un cron&oacute;metro, eventos tactiles y localStorage, as&iacute; como su utilizaci&oacute;n en aplicaciones WebModulo 7. Gr&aacute;ficos, multimedia y animaci&oacute;n en HTML5: SVG, CANVAS y elementos video y audioModulo 8. Arrays, JSON, geolocalizaci&oacute;n y Mash-ups con otros servicios y aplicaciones, tales como Google Maps",
        "desc_html": "Este curso capacita para un primer nivel de desarrollo de aplicaciones moviles\nen HTML5, CSS y JavaScript accesibles desde PC, movil, tableta, SmartTv u\notros dispositivos que soporten HTML5. El curso es para principiantes en HTML5\ne ilustra los conceptos con ejemplos sencillos y multidisciplinares, tanto de\nprogramacion, como de dise\u00f1o grafico o de dise\u00f1o de la interaccion. Los\nparticipantes aprenderan a dise\u00f1ar interfaces con HTML y CSS, asi como a\nprogramar en JavaScript nuevas funcionalidades y aplicaciones. Se ense\u00f1ara a\ncrear aplicaciones Web genericas independientes de dispositivo, asi como a\nempaquetarlas para FirefoxOS. Empaquetarlas para Android o iPhone es sencillo,\npero no se cubre en este curso.\n\nFirefox OS es el nuevo sistema operativo libre para telefonos moviles y\ntabletas de la Fundacion Mozilla, que utiliza software libre y se programa en\nHTML5, utilizando HTML, CSS y Javascript, igual que las aplicaciones Web de\nlos grandes portales de Internet, Google, Twitter, Facebook, Amazon. etc. Su\ncalidad y caracter abierto ha conseguido el apoyo de Telefonica, Qualcomm, LG,\nHuawei Foxconn, etc.\n\nEste curso es el primero del programa \"Dise\u00f1o de servicios en la nube para\nacceso movil y multi-dispositivo con HTML5 \"**impulsado y patrocinado por\n_[Red.es](http://www.red.es/redes/)_,\n_[Universia](http://www.universia.es/index.htm)_,\n_[CENATIC](http://www.cenatic.es/)_, _[Telefonica\nDigital](http://www.telefonica.com/es/digital/html/home/)_ y\n_[TLS](http://www.telefonicalearningservices.com/)_**. El programa consta de 5\ncursos, que se iran incorporando progresivamente en MiriadaX.\n\nEsta iniciativa esta recogida dentro de la medida \"Formacion para el Empleo\"\ndel Plan de Inclusion Digital y Empleabilidad de la _[Agenda Digital para\nEspa\u00f1a](http://www.agendadigital.gob.es/)_.\n\n\n\n**Conocimientos necesarios:**\n\n\n\nSi bien el curso ha sido dise\u00f1ado para principiantes, se recomienda que los\nasistentes tengan nociones basicas de programacion aunque pueda ser de otros\nlenguajes como Java, C, Basic, PHP, Python, Pascal, etc. Quien carezca de\ntales conocimientos puede compensarlo con un trabajo mas intenso. El curso\ntambien es de interes para programadores expertos que quieran adquirir en poco\ntiempo una panoramica del dise\u00f1o de aplicaciones web en HTML5 y para Firefox\nOS.\n\n## Syllabus\n\nModulo 0. Introduccion al curso y al programa \"Dise\u00f1o de servicios en la nube\npara acceso movil con HTML5\"\n\nModulo 1: Introduccion a Internet, la nube, la arquitectura de la Web, HTML5 y\nCSS\n\nModulo 2: Introduccion a JavaScript y a las aplicaciones Web en HTML5, asi\ncomo la publicacion en la nube\n\nModulo 3. Estructuracion y visualizacion de paginas Web en HTML y CSS\nadaptadas a un entorno multipantalla con PCs, moviles y tabletas\n\nModulo 4: Tipos string y boolean de JavaScript, sentencias if/else y for/in, y\ncaracteristicas avanzadas de objetos, incluyendo acceso al navegador mediante\nel arbol DOM\n\nModulo 5: Interaccion con el usuario, funciones, eventos, manejadores de\neventos, formularios, jQuery y Zepto\n\nModulo 6: Ejemplo de un cronometro, eventos tactiles y localStorage, asi como\nsu utilizacion en aplicaciones Web\n\nModulo 7. Graficos, multimedia y animacion en HTML5: SVG, CANVAS y elementos\nvideo y audio\n\nModulo 8. Arrays, JSON, geolocalizacion y Mash-ups con otros servicios y\naplicaciones, tales como Google Maps\n\n",
        "name": "Desarrollo en HTML5, CSS y Javascript de WebApps, incluyendo m\u00f3viles FirefoxOS",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Universidad Polit\u00e9cnica de Madrid"
        ],
        "url": "https://www.miriadax.net/web/html5mooc",
        "video_url": "https://www.youtube.com/embed/p1mNhmAPExQ?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-10-01",
        "desc": "*Note - This is an Archived course*This is a past/archived course. At this time, you can only explore this course in a self-paced fashion. Certain features of this course may not be active, but many people enjoy watching the videos and working with the materials. Make sure to check for reruns of this course.Robots today move far too conservatively, using control systems that attempt to maintain full control authority at all times. Humans and animals move much more aggressively by routinely executing motions which involve a loss of instantaneous control authority. Controlling nonlinear systems without complete control authority requires methods that can reason about and exploit the natural dynamics of our machines.This course introduces nonlinear dynamics and control of underactuated mechanical systems, with an emphasis on computational methods. Topics include the nonlinear dynamics of robotic manipulators, applied optimal and robust control and motion planning. Discussions include examples from biology and applications to legged locomotion, compliant manipulation, underwater robots, and flying machines.",
        "desc_html": "*Note - This is an Archived course*  \n  \nThis is a past/archived course. At this time, you can only explore this course\nin a self-paced fashion. Certain features of this course may not be active,\nbut many people enjoy watching the videos and working with the materials. Make\nsure to check for reruns of this course.  \n  \nRobots today move far too conservatively, using control systems that attempt\nto maintain full control authority at all times. Humans and animals move much\nmore aggressively by routinely executing motions which involve a loss of\ninstantaneous control authority. Controlling nonlinear systems without\ncomplete control authority requires methods that can reason about and exploit\nthe natural dynamics of our machines.  \nThis course introduces nonlinear dynamics and control of underactuated\nmechanical systems, with an emphasis on computational methods. Topics include\nthe nonlinear dynamics of robotic manipulators, applied optimal and robust\ncontrol and motion planning. Discussions include examples from biology and\napplications to legged locomotion, compliant manipulation, underwater robots,\nand flying machines.\n\n",
        "name": "6.832x: Underactuated Robotics",
        "provider": "edX",
        "rating": "4",
        "reviews": "1",
        "university": [
            "Massachusetts Institute of Technology"
        ],
        "url": "https://www.edx.org/course/underactuated-robotics-mitx-6-832x",
        "video_url": "https://www.youtube.com/embed/Z7Xz9N-zPIo?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-09-25",
        "desc": "Have you been dabbling with JavaScript but find your files keep turning into a mess of spaghetti code? Do you find yourself copying and pasting lines of code over and over throughout your application? Surely there&rsquo;s a better way, right?Yes, there is a better way -- object-oriented programming will allow you to build websites using reusable blocks of code known as libraries, similar to using bricks to build a house. This course is designed to teach web developers how to utilize the various object-oriented programming features within JavaScript, and more importantly, how to write reusable and maintainable libraries that will make your life easier.Why Take This Course?As a Front-End Web Developer, JavaScript is one of the most important languages in your toolbox. A strong foundation in the language&rsquo;s features empowers you to write efficient and performant web applications. In this course you&rsquo;ll explore a variety of ways to write object-oriented code in JavaScript.You&rsquo;ll build a variety of JavaScript objects and explore how their different inheritance models affect your code&rsquo;s execution and in-memory model. You&rsquo;ll use these features to write memory efficient code and seek simplicity and modularity in your own code.Prerequisites and RequirementsThis course is for beginner to intermediate web developers with an understanding of JavaScript syntax. Specifically, you should know how to write control structures, how to write simple functions, and recognize the different variable types in JavaScript. As well as be able to read existing JavaScript code with these features and predict its outcome. If you need a refresher on these prerequisites, check out our&nbsp;JavaScript Basics&nbsp;course!ProjectsUse your object-oriented JavaScript skills to develop a performant, organized and easily maintainable version of the classic arcade game, Frogger.SyllabusLesson 1: Scopes and ClosuresWe&rsquo;ll start by discussing JavaScript&rsquo;s functional variable scoping features, including lexical scopes (variable availability as you write your code) and dynamics scopes (variable availability as your code actively runs). We&rsquo;ll then discuss closures, an often misunderstood but incredibly useful feature available in only a handful of languages, including JavaScript.Lesson 2: The Keyword &ldquo;this&rdquo;You&rsquo;ll start your dive into JavaScript object-oriented features by first discovering the parameter &ldquo;this&rdquo;. You&rsquo;ll learn how the value of &ldquo;this&rdquo; is determined within various code structures and why it might be a lot easier to think of &ldquo;this&rdquo; as a parameter rather than a keyword.Lesson 3: Prototype DelegationYou&rsquo;re probably using one of JavaScript&rsquo;s inheritance models already: prototype delegation! In this lesson you&rsquo;ll learn more about this unique feature of JavaScript, how JavaScript uses this feature internally and how you can take advantage of it to maximize your application&rsquo;s memory footprint.Lesson 4: Code ReuseThere are numerous ways to write concise, maintainable and reusable code in JavaScript and you&rsquo;ll practice a number of them in this lesson. We&rsquo;ll start writing a library using basic functions and learn the decorator pattern. Then, we&rsquo;ll refactor this library into the functional, prototypal and pseudoclassical inheritance models. Finally, we&rsquo;ll explore sub-classing -- coding objects that directly inherit from objects we&rsquo;ve previously defined.",
        "desc_html": "Have you been dabbling with JavaScript but find your files keep turning into a\nmess of spaghetti code? Do you find yourself copying and pasting lines of code\nover and over throughout your application? Surely there's a better way, right?\n\nYes, there is a better way -- object-oriented programming will allow you to\nbuild websites using reusable blocks of code known as libraries, similar to\nusing bricks to build a house. This course is designed to teach web developers\nhow to utilize the various object-oriented programming features within\nJavaScript, and more importantly, how to write reusable and maintainable\nlibraries that will make your life easier.\n\n**Why Take This Course?**\n\nAs a Front-End Web Developer, JavaScript is one of the most important\nlanguages in your toolbox. A strong foundation in the language's features\nempowers you to write efficient and performant web applications. In this\ncourse you'll explore a variety of ways to write object-oriented code in\nJavaScript.\n\nYou'll build a variety of JavaScript objects and explore how their different\ninheritance models affect your code's execution and in-memory model. You'll\nuse these features to write memory efficient code and seek simplicity and\nmodularity in your own code.\n\n**Prerequisites and Requirements**\n\nThis course is for beginner to intermediate web developers with an\nunderstanding of JavaScript syntax. Specifically, you should know how to write\ncontrol structures, how to write simple functions, and recognize the different\nvariable types in JavaScript. As well as be able to read existing JavaScript\ncode with these features and predict its outcome. If you need a refresher on\nthese prerequisites, check out our [JavaScript\nBasics](https://www.udacity.com/course/ud804) course!\n\n**Projects**\n\nUse your object-oriented JavaScript skills to develop a performant, organized\nand easily maintainable version of the classic arcade game, Frogger.\n\n## Syllabus\n\n**Lesson 1: Scopes and Closures**\n\nWe'll start by discussing JavaScript's functional variable scoping features,\nincluding lexical scopes (variable availability as you write your code) and\ndynamics scopes (variable availability as your code actively runs). We'll then\ndiscuss closures, an often misunderstood but incredibly useful feature\navailable in only a handful of languages, including JavaScript.\n\n**Lesson 2: The Keyword \"this\"**\n\nYou'll start your dive into JavaScript object-oriented features by first\ndiscovering the parameter \"this\". You'll learn how the value of \"this\" is\ndetermined within various code structures and why it might be a lot easier to\nthink of \"this\" as a parameter rather than a keyword.\n\n**Lesson 3: Prototype Delegation**\n\nYou're probably using one of JavaScript's inheritance models already:\nprototype delegation! In this lesson you'll learn more about this unique\nfeature of JavaScript, how JavaScript uses this feature internally and how you\ncan take advantage of it to maximize your application's memory footprint.\n\n**Lesson 4: Code Reuse**\n\nThere are numerous ways to write concise, maintainable and reusable code in\nJavaScript and you'll practice a number of them in this lesson. We'll start\nwriting a library using basic functions and learn the decorator pattern. Then,\nwe'll refactor this library into the functional, prototypal and\npseudoclassical inheritance models. Finally, we'll explore sub-classing --\ncoding objects that directly inherit from objects we've previously defined.\n\n",
        "name": "Object-Oriented JavaScript",
        "provider": "Udacity",
        "rating": "5",
        "reviews": "1",
        "university": [
            "Hack Reactor"
        ],
        "url": "https://www.udacity.com/course/ud015",
        "video_url": ""
    },
    {
        "date": "2014-09-25",
        "desc": "All SAP products are moving to SAP HANA, the most talked about SAP innovation in recent times. This evolution intensifies the demands on SAP NetWeaver Application Server ABAP (AS ABAP) to best leverage the features and capabilities of the SAP HANA database. As an ABAP developer you might ask, what is important and necessary to know concerning ABAP development for SAP HANA?This course is aimed at answering this and other related questions. You are welcome to follow the course without prior technical knowledge of ABAP development or SAP HANA, although prior knowledge is beneficial.After completing the course, you will understand the important concepts in ABAP development for SAP HANA, how to detect and analyze the performance of your ABAP coding, and which features AS ABAP provides for database-oriented programming.Registration, learning content, and the final exam are free of charge. However, to gain maximum benefit from the course, you can access a fee-based system environment where you can develop your own code. We&rsquo;ll explain how you can access this system environment in the first week of the course.Course RequirementsBasic knowledge of ABAP programming and Open SQLBasic programming skillsBeneficial: A general understanding of SAP HANA, for example, from the openSAP course&nbsp;\"An Introduction to SAP HANA by Dr. Vishal Sikka\"SyllabusWeek 1: Getting StartedThe first week is dedicated to getting you on board and introducing technical concepts and architecture information, primarily from an ABAP developer&rsquo;s point of view. As well as the important concepts of ABAP development for SAP HANA, there will be an introduction to the development tools.Week 2: ABAP Coding &ndash; Where to Optimize?What happens when you migrate coding to SAP HANA? This and related questions are answered in the second week of this course. There are a large variety of tools available in AS ABAP to detect and analyze ABAP coding, for example, to ensure functional correctness and to analyze performance. You&rsquo;ll learn about guided performance analysis tools and optimized components like the well-known ABAP List Viewer, which have been enhanced to dramatically improve performance.Week 3: ABAP Coding &ndash; Ready, Set, Optimize!Having learned about where to optimize ABAP coding, this week is dedicated to introducing the new features and capabilities of AS ABAP 7.4, with special emphasis on database-oriented programming. Beside the Open SQL enhancements, you&rsquo;ll learn about advanced view definition capabilities by means of Core Data Services.Week 4: Digging Deeper and OutlookThe capabilities of AS ABAP 7.4 discussed in the previous week do not span the full feature set of SAP HANA. Therefore, ABAP for SAP HANA developers might need to dig even deeper and work more natively with SAP HANA. We&rsquo;ll see how AS ABAP 7.4 supports this task. Finally, we&rsquo;ll give an example of how the presented features can be used in an analytical app. Beside the Open SQL enhancements, you&rsquo;ll learn about advanced view definition capabilities by means of Core Data Services.Week 5: Final Exam",
        "desc_html": "All SAP products are moving to SAP HANA, the most talked about SAP innovation\nin recent times. This evolution intensifies the demands on SAP NetWeaver\nApplication Server ABAP (AS ABAP) to best leverage the features and\ncapabilities of the SAP HANA database. As an ABAP developer you might ask,\nwhat is important and necessary to know concerning ABAP development for SAP\nHANA?\n\nThis course is aimed at answering this and other related questions. You are\nwelcome to follow the course without prior technical knowledge of ABAP\ndevelopment or SAP HANA, although prior knowledge is beneficial.\n\nAfter completing the course, you will understand the important concepts in\nABAP development for SAP HANA, how to detect and analyze the performance of\nyour ABAP coding, and which features AS ABAP provides for database-oriented\nprogramming.\n\nRegistration, learning content, and the final exam are free of charge.\nHowever, to gain maximum benefit from the course, you can access a fee-based\nsystem environment where you can develop your own code. We'll explain how you\ncan access this system environment in the first week of the course.\n\n**Course Requirements**\n\n  * Basic knowledge of ABAP programming and Open SQL\n  * Basic programming skills\n  * Beneficial: A general understanding of SAP HANA, for example, from the openSAP course [\"An Introduction to SAP HANA by Dr. Vishal Sikka\"](https://open.sap.com/course/hanaintro1)\n\n## Syllabus\n\n**Week 1: Getting Started**\n\nThe first week is dedicated to getting you on board and introducing technical\nconcepts and architecture information, primarily from an ABAP developer's\npoint of view. As well as the important concepts of ABAP development for SAP\nHANA, there will be an introduction to the development tools.\n\n**Week 2: ABAP Coding - Where to Optimize?**\n\nWhat happens when you migrate coding to SAP HANA? This and related questions\nare answered in the second week of this course. There are a large variety of\ntools available in AS ABAP to detect and analyze ABAP coding, for example, to\nensure functional correctness and to analyze performance. You'll learn about\nguided performance analysis tools and optimized components like the well-known\nABAP List Viewer, which have been enhanced to dramatically improve\nperformance.\n\n**Week 3: ABAP Coding - Ready, Set, Optimize!**\n\nHaving learned about where to optimize ABAP coding, this week is dedicated to\nintroducing the new features and capabilities of AS ABAP 7.4, with special\nemphasis on database-oriented programming. Beside the Open SQL enhancements,\nyou'll learn about advanced view definition capabilities by means of Core Data\nServices.\n\n**Week 4: Digging Deeper and Outlook**\n\nThe capabilities of AS ABAP 7.4 discussed in the previous week do not span the\nfull feature set of SAP HANA. Therefore, ABAP for SAP HANA developers might\nneed to dig even deeper and work more natively with SAP HANA. We'll see how AS\nABAP 7.4 supports this task. Finally, we'll give an example of how the\npresented features can be used in an analytical app. Beside the Open SQL\nenhancements, you'll learn about advanced view definition capabilities by\nmeans of Core Data Services.\n\n**Week 5: Final Exam**\n\n",
        "name": "ABAP Development for SAP HANA",
        "provider": "openSAP",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.sap.com/course/a4h1",
        "video_url": ""
    },
    {
        "date": "2014-09-25",
        "desc": "This is an introductory course in machine learning (ML) that covers the basic theory, algorithms, and applications. ML is a key technology in Big Data, and in many financial, medical, commercial, and scientific applications. It enables computational systems to automatically learn how to perform a desired task based on information extracted from the data. ML has become one of the hottest fields of study today, taken up by undergraduate and graduate students from 15 different majors at Caltech. This course balances theory and practice, and covers the mathematical as well as the heuristic aspects. The lectures follow each other in a story-like fashion:What is learning?Can a machine learn?How to do it?How to do it well?Take-home lessons.The topics in the story line are covered by 18 lectures of about 60 minutes each plus Q&A.;Lecture 1: The Learning ProblemLecture 2: Is Learning Feasible?Lecture 3: The Linear Model ILecture 4: Error and NoiseLecture 5: Training versus TestingLecture 6: Theory of GeneralizationLecture 7: The VC DimensionLecture 8: Bias-Variance TradeoffLecture 9: The Linear Model IILecture 10: Neural NetworksLecture 11: OverfittingLecture 12: RegularizationLecture 13: ValidationLecture 14: Support Vector MachinesLecture 15: Kernel MethodsLecture 16: Radial Basis FunctionsLecture 17: Three Learning PrinciplesLecture 18: Epilogue",
        "desc_html": "This is an introductory course in machine learning (ML) that covers the basic\ntheory, algorithms, and applications. ML is a key technology in Big Data, and\nin many financial, medical, commercial, and scientific applications. It\nenables computational systems to automatically learn how to perform a desired\ntask based on information extracted from the data. ML has become one of the\nhottest fields of study today, taken up by undergraduate and graduate students\nfrom 15 different majors at Caltech. This course balances theory and practice,\nand covers the mathematical as well as the heuristic aspects. The lectures\nfollow each other in a story-like fashion:  \n  \nWhat is learning?  \nCan a machine learn?  \nHow to do it?  \nHow to do it well?  \nTake-home lessons.  \nThe topics in the story line are covered by 18 lectures of about 60 minutes\neach plus Q&A.;  \n  \nLecture 1: The Learning Problem  \nLecture 2: Is Learning Feasible?  \nLecture 3: The Linear Model I  \nLecture 4: Error and Noise  \nLecture 5: Training versus Testing  \nLecture 6: Theory of Generalization  \nLecture 7: The VC Dimension  \nLecture 8: Bias-Variance Tradeoff  \nLecture 9: The Linear Model II  \nLecture 10: Neural Networks  \nLecture 11: Overfitting  \nLecture 12: Regularization  \nLecture 13: Validation  \nLecture 14: Support Vector Machines  \nLecture 15: Kernel Methods  \nLecture 16: Radial Basis Functions  \nLecture 17: Three Learning Principles  \nLecture 18: Epilogue\n\n",
        "name": "CS1156x: Learning From Data",
        "provider": "edX",
        "rating": "4.375",
        "reviews": "8",
        "university": [
            "California Institute of Technology"
        ],
        "url": "https://www.edx.org/course/learning-data-caltechx-cs1156x",
        "video_url": "https://www.youtube.com/embed/KlP0DpiM7Lw?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-09-23",
        "desc": "HTML and CSS are markup languages and the building blocks that make up the web. This course will teach you how to use them, but also much more than that. It is called \"Not your Typical Intro...\" because it does not follow the usual pattern of other courses and tutorials that you find on the Internet. Usually HTML and CSS is taught with a focus on language syntax. But knowing syntax alone does not enable you to create a webpage from a design. You need to know where to start and how to approach the task, in other words - you need to learn how to think like a front-end developer.In this course you will learn how to convert digital design mockups into static web pages. We will teach you how to approach page layout, how to break down a design mockup into page elements, and how to implement that in HTML and CSS.You will also learn about responsive design techniques, which are increasingly important in a world where mobile devices and TV screens are used more and more often to look for information and entertainment.Why Take This Course?Front-end Web Developers must have a fundamental understanding of HTML and CSS which we&rsquo;ll accomplish in this course by converting digital design mockups into static web pages. To build the web pages you will use HTML, CSS, and take advantage of the Bootstrap, the popular Twitter framework.After completing this course you will be able to build a responsive portfolio site, with your own CSS framework, with the functionality to add your future projects to it. Most importantly, you will have an understanding of the DOM and how HTML, CSS, and JavaScript all relate to each other.This course's project is part of our Front-End Web Developer Nanodegree.Prerequisites and RequirementsYou should have ability and skills to download and use a text editor for editing your web pages, we recommend&nbsp;Sublime Text&nbsp;or&nbsp;Atom. You can use another text editor if you want, but it should have the ability to highlight code syntax for your own convenience.You should be able to download and install&nbsp;Google Chrome, which is the browser we&rsquo;ll be exploring developer tools with in this course.ProjectsTake a design mockup as a PDF-file and replicate that design in HTML and CSS.SyllabusLesson 1 - From Design to CodeDiligently employ a code/test/refine strategy as you precisely and deliberately translate initial design documents into static web pages. You'll also investigate the Document Object Model (DOM) and its implications for web development.Lesson 2 - Your Own FrameworkTake pride in creating and personalising your own multi-platform, responsive CSS framework for publishing your professional portfolio projects to the web.Lesson 3 - Learning and Using BootstrapStrategically investigate an existing professional CSS framework as you use it to build a website using responsive design principles while maintaining code readability.",
        "desc_html": "HTML and CSS are markup languages and the building blocks that make up the\nweb. This course will teach you how to use them, but also much more than that.\nIt is called \"Not your Typical Intro...\" because it does not follow the usual\npattern of other courses and tutorials that you find on the Internet. Usually\nHTML and CSS is taught with a focus on language syntax. But knowing syntax\nalone does not enable you to create a webpage from a design. You need to know\nwhere to start and how to approach the task, in other words - you need to\nlearn how to think like a front-end developer.\n\nIn this course you will learn how to convert digital design mockups into\nstatic web pages. We will teach you how to approach page layout, how to break\ndown a design mockup into page elements, and how to implement that in HTML and\nCSS.\n\nYou will also learn about responsive design techniques, which are increasingly\nimportant in a world where mobile devices and TV screens are used more and\nmore often to look for information and entertainment.\n\n**Why Take This Course?**\n\nFront-end Web Developers must have a fundamental understanding of HTML and CSS\nwhich we'll accomplish in this course by converting digital design mockups\ninto static web pages. To build the web pages you will use HTML, CSS, and take\nadvantage of the Bootstrap, the popular Twitter framework.\n\nAfter completing this course you will be able to build a responsive portfolio\nsite, with your own CSS framework, with the functionality to add your future\nprojects to it. Most importantly, you will have an understanding of the DOM\nand how HTML, CSS, and JavaScript all relate to each other.\n\nThis course's project is part of our Front-End Web Developer Nanodegree.\n\n**Prerequisites and Requirements**\n\nYou should have ability and skills to download and use a text editor for\nediting your web pages, we recommend [Sublime\nText](http://www.sublimetext.com/) or [Atom](https://atom.io/). You can use\nanother text editor if you want, but it should have the ability to highlight\ncode syntax for your own convenience.\n\nYou should be able to download and install [Google\nChrome](https://www.google.com/intl/en/chrome/browser/), which is the browser\nwe'll be exploring developer tools with in this course.\n\n**Projects**\n\nTake a design mockup as a PDF-file and replicate that design in HTML and CSS.\n\n## Syllabus\n\n**Lesson 1 - From Design to Code**\n\nDiligently employ a code/test/refine strategy as you precisely and\ndeliberately translate initial design documents into static web pages. You'll\nalso investigate the Document Object Model (DOM) and its implications for web\ndevelopment.\n\n**Lesson 2 - Your Own Framework**\n\nTake pride in creating and personalising your own multi-platform, responsive\nCSS framework for publishing your professional portfolio projects to the web.\n\n**Lesson 3 - Learning and Using Bootstrap**\n\nStrategically investigate an existing professional CSS framework as you use it\nto build a website using responsive design principles while maintaining code\nreadability.\n\n",
        "name": "Intro to HTML and CSS",
        "provider": "Udacity",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.udacity.com/course/ud304",
        "video_url": ""
    },
    {
        "date": "2014-09-23",
        "desc": "Effective use of version control is an important and useful skill for any developer working on long-lived (or even medium-lived) projects, especially if more than one developer is involved. This course,&nbsp;built with input from GitHub, will introduce the basics of using version control by focusing on a particular version control system called Git and a collaboration platform called GitHub.Why Take This Course?Git is used by many tech companies, and a public GitHub profile serves as a great portfolio for any developer. But more than that, you&rsquo;ll establish an efficient programming workflow that allows you to:Keep track of multiple versions of a fileTrack bugs by reverting to previous working versions of a fileSeamlessly collaborate with other developers on a projectThe use of tools like Git and GitHub is essential for collaborating with other developers in most professional environments.Prerequisites and RequirementsWhile this course does not involve programming, students should have some experience with a programming or markup language. Additionally, students should be familiar with navigating the command line. If unfamiliar or if you want a refresher, check out&nbsp;these instructions.See the&nbsp;Technology Requirements&nbsp;for using Udacity.ProjectsStudents will publish a repository containing their reflections from the course and submit a pull request to a collaborative Create-Your-Own-Adventure story.&nbsp;SyllabusLesson 1: Navigating a Commit HistoryIn this lesson, you&rsquo;ll learn about a few different types of version control systems and discover what makes Git a great version control system for programmers. You&rsquo;ll also get practice using Git to view the history of an existing project. You&rsquo;ll learn to see all the versions that have been saved, checkout a previous version, and compare two different versions.Lesson 2: Creating and Modifying a RepositoryIn this lesson, you&rsquo;ll learn how to create a repository and save versions of your project. You&rsquo;ll learn about the staging area, committing your code, branching, and merging, and how you can use these to make you more efficient and effective.Lesson 3: Using GitHub to CollaborateIn this lesson, you&rsquo;ll get practice using GitHub or other remote repositories to share your changes with others and collaborate on multi-developer projects. You&rsquo;ll learn how to make and review a pull request on GitHub. Finally, you&rsquo;ll get practice by collaborating with other Udacity students to write a create-your-own-adventure story.",
        "desc_html": "Effective use of version control is an important and useful skill for any\ndeveloper working on long-lived (or even medium-lived) projects, especially if\nmore than one developer is involved. This course, _built with input from\nGitHub_, will introduce the basics of using version control by focusing on a\nparticular version control system called Git and a collaboration platform\ncalled GitHub.\n\n**Why Take This Course?**\n\nGit is used by many tech companies, and a public GitHub profile serves as a\ngreat portfolio for any developer. But more than that, you'll establish an\nefficient programming workflow that allows you to:\n\n  * Keep track of multiple versions of a file\n  * Track bugs by reverting to previous working versions of a file\n  * Seamlessly collaborate with other developers on a project\n\nThe use of tools like Git and GitHub is essential for collaborating with other\ndevelopers in most professional environments.\n\n**Prerequisites and Requirements**\n\nWhile this course does not involve programming, students should have some\nexperience with a programming or markup language. Additionally, students\nshould be familiar with navigating the command line. If unfamiliar or if you\nwant a refresher, check out [these instructions](https://www.udacity.com/wiki\n/command-line-instructions).\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity.\n\n**Projects**\n\nStudents will publish a repository containing their reflections from the\ncourse and submit a pull request to a collaborative Create-Your-Own-Adventure\nstory.\n\n\n\n## Syllabus\n\n**Lesson 1: Navigating a Commit History**\n\nIn this lesson, you'll learn about a few different types of version control\nsystems and discover what makes Git a great version control system for\nprogrammers. You'll also get practice using Git to view the history of an\nexisting project. You'll learn to see all the versions that have been saved,\ncheckout a previous version, and compare two different versions.\n\n**Lesson 2: Creating and Modifying a Repository**\n\nIn this lesson, you'll learn how to create a repository and save versions of\nyour project. You'll learn about the staging area, committing your code,\nbranching, and merging, and how you can use these to make you more efficient\nand effective.\n\n**Lesson 3: Using GitHub to Collaborate**\n\nIn this lesson, you'll get practice using GitHub or other remote repositories\nto share your changes with others and collaborate on multi-developer projects.\nYou'll learn how to make and review a pull request on GitHub. Finally, you'll\nget practice by collaborating with other Udacity students to write a create-\nyour-own-adventure story.\n\n",
        "name": "How to Use Git and GitHub",
        "provider": "Udacity",
        "rating": "4.5",
        "reviews": "2",
        "university": [],
        "url": "https://www.udacity.com/course/ud775",
        "video_url": ""
    },
    {
        "date": "2014-09-23",
        "desc": "We're here to get you started with JavaScript! In the twenty plus years since its inception, JavaScript has become the lingua franca of the Web, that's to say, it's become the main tool to create interactive content on the Internet.In this course, you'll explore the JavaScript programming language by creating an interactive version of your r&eacute;sum&eacute;. You&rsquo;ll learn the JavaScript programming fundamentals you need while building new elements and sections to enhance your r&eacute;sum&eacute;.Why Take This Course?Today, front-end developers work with web designers to create the interactive experiences that make the web the addictive playground we know and love. As the size and influence of the web has expanded, so has the importance of ensuring a website offers users an unforgettable experience.Perhaps your end goal is to create a HTML5 game, code the front-end for an app idea you have, or maybe you want to use one of the growing set of libraries that let you compile code written in another language or for another platform down to JavaScript. With JavaScript, you can do all these things and more.ProjectYou will create an interactive r&eacute;sum&eacute; that you can share to the world and show your growing skills at the time.Having a good r&eacute;sum&eacute; is a key component of securing a better job. We'll give you the template styles and code to create a modern and mobile friendly r&eacute;sum&eacute; (also called a curriculum vitae/CV outside the United States) that you can modify and customize.Prerequisites and RequirementsWe expect that you have&nbsp;some&nbsp;experience programming in another language, such as Python, and can describe concepts like loops, functions and objects. Our&nbsp;Intro to Computer Science&nbsp;and&nbsp;Programming Fundamentals with Python&nbsp;courses are great places to get started.While we do describe the underlying principles behind basic programming techniques, this course focuses on implementing the principles with JavaScript rather than the principles themselves.HTML and CSS are not required, however, knowledge of CSS will help you customize your r&eacute;sum&eacute; project.ProjectsDevelop an interactive resume application that reads your resume content from a JSON file and dynamically displays that content within a provided template.SyllabusLesson 1: Getting Up and RunningLearn about the tools we'll be using throughout the course and begin modifying web pages with a little bit of code.Introduction of r&eacute;sum&eacute; projectComponents of the r&eacute;sum&eacute;Introduction to browser developer toolsRunning commands on the consoleAppending elements to the pageLesson 2: Data TypesDig deeper into JavaScript as we introduce you to the building blocks of the language as you write more complex code using variables and advanced data structures like JSON, Objects, and Arrays.VariablesStringsEvaluating valuesArraysObjectsJSONValidating JSONLesson 3: Flow ControlFinish the r&eacute;sum&eacute; while you learn how to make your code more modular and reusable by using conditional statements, loops, and functions.Conditional statementsFor and while loopsFunctionsEncapsulation",
        "desc_html": "We're here to get you started with JavaScript! In the twenty plus years since\nits inception, JavaScript has become the lingua franca of the Web, that's to\nsay, it's become the main tool to create interactive content on the Internet.\n\nIn this course, you'll explore the JavaScript programming language by creating\nan interactive version of your resume. You'll learn the JavaScript programming\nfundamentals you need while building new elements and sections to enhance your\nresume.\n\n**Why Take This Course?**\n\nToday, front-end developers work with web designers to create the interactive\nexperiences that make the web the addictive playground we know and love. As\nthe size and influence of the web has expanded, so has the importance of\nensuring a website offers users an unforgettable experience.\n\nPerhaps your end goal is to create a HTML5 game, code the front-end for an app\nidea you have, or maybe you want to use one of the growing set of libraries\nthat let you compile code written in another language or for another platform\ndown to JavaScript. With JavaScript, you can do all these things and more.\n\nProject\n\nYou will create an interactive resume that you can share to the world and show\nyour growing skills at the time.\n\nHaving a good resume is a key component of securing a better job. We'll give\nyou the template styles and code to create a modern and mobile friendly resume\n(also called a curriculum vitae/CV outside the United States) that you can\nmodify and customize.\n\n**Prerequisites and Requirements**\n\nWe expect that you have _some_ experience programming in another language,\nsuch as Python, and can describe concepts like loops, functions and objects.\nOur [Intro to Computer Science](https://www.udacity.com/course/cs101) and\n[Programming Fundamentals with Python](https://www.udacity.com/course/ud036)\ncourses are great places to get started.\n\nWhile we do describe the underlying principles behind basic programming\ntechniques, this course focuses on implementing the principles with JavaScript\nrather than the principles themselves.\n\nHTML and CSS are not required, however, knowledge of CSS will help you\ncustomize your resume project.\n\n**Projects**\n\nDevelop an interactive resume application that reads your resume content from\na JSON file and dynamically displays that content within a provided template.\n\n## Syllabus\n\n**Lesson 1: Getting Up and Running**\n\nLearn about the tools we'll be using throughout the course and begin modifying\nweb pages with a little bit of code.\n\n  * Introduction of resume project\n  * Components of the resume\n  * Introduction to browser developer tools\n  * Running commands on the console\n  * Appending elements to the page\n\n**Lesson 2: Data Types**\n\nDig deeper into JavaScript as we introduce you to the building blocks of the\nlanguage as you write more complex code using variables and advanced data\nstructures like JSON, Objects, and Arrays.\n\n  * Variables\n  * Strings\n  * Evaluating values\n  * Arrays\n  * Objects\n  * JSON\n  * Validating JSON\n\n**Lesson 3: Flow Control**\n\nFinish the resume while you learn how to make your code more modular and\nreusable by using conditional statements, loops, and functions.\n\n  * Conditional statements\n  * For and while loops\n  * Functions\n  * Encapsulation\n\n",
        "name": "JavaScript Basics",
        "provider": "Udacity",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.udacity.com/course/ud804",
        "video_url": ""
    },
    {
        "date": "2014-09-23",
        "desc": "From Google Maps to consumer global positioning system (GPS) devices, spatial technology shapes many lives in both ordinary and extraordinary ways. Thanks to spatial computing, a hiker in Yellowstone and a taxi driver in Manhattan can know precisely where\n    they are, discover nearby points of interest and learn how to reach their destinations. Spatial computing technology is what powers the Foursquare check-in, the maps app on your smartphone, the devices used by scientists to track endangered species,\n    the routing directions that help you get from point A to point B, the precision agriculture technology that is revolutionizing farming, and the augmented reality devices like Google Glass that may soon mediate our interaction with the real world.This course introduces the fundamental ideas underlying spatial computing services, systems, and sciences. Topics covered will include the nature of geospatial information, proper statistical frameworks for working with geospatial data, key algorithms\n    and data structures, spatial data mining, and cartography/geovisualization. We will also address applied topics such as where to find spatial data, how to use powerful open source software to analyze and map spatial data, and frameworks for building\n    location-based services.Three Ways to Enjoy this Course:This course is designed to support three different types of students and educational goals:Curiosity Track: Most of us interact with spatial technologies every day. This track is for students who wish to learn about one or two spatial computing topics, but not commit to an entire course. Curiosity track students are not interested in\n    a certificate of accomplishment.Concepts Track: This track is for students who want to learn about spatial computing concepts in order to make informed choices, but who are not programmers and do not have extensive experience with statistical methods. For example, concepts track\n    students will learn about Tobler\u2019s First Law of geography and map projections, but will not delve into the quantifications of either. Students who complete the concepts track with sufficiently high scores will receive a Statement of Accomplishment.Technical Track: This track builds on the concepts track, but adds math and programming. For example, we will cover spatial statistical indicators like Moran\u2019s I and Ripley\u2019s K when discussing Tobler\u2019s First Law and will have students calculate\n    the distance between two points using two different coordinate systems and open-source APIs. Students who complete the technical track with sufficiently high scores will receive a Distinguished Statement of Accomplishment.SyllabusTopics Covered:Module 1 - IntroductionCourse IntroductionDefining Spatial ComputingCourse StructureInterviews with Johannes Sch\u00f6ning, Loren Terveen and Martin RaubalModule 2 - Spatial Query LanguagesWhat is a Query? Query Language?An example database with 3 tablesSQL overviewSELECT statement with 1 tableMulti-table SELECT statementWhy spatial extensions are needed1-table spatial queriesTrendsModule 3 - Spatial NetworksMotivation, Societal use casesExample spatial networksConceptual and mathematical modelsNeed for SQL extensionsCONNECT statementRECURSIVE statementStorage and data structuresAlgorithms for connectivity queryAlgorithms for shortest pathInterviews with Dev Oliver and Betsy GeorgeModule 4 - Spatial Data MiningMotivation, Spatial Pattern FamiliesSpatial data types and relationshipsLimitations of Traditional StatisticsLocation Prediction modelHotspotsSpatial outliersColocations and Co-occurrencesSummary:  What is special about mining spatial data?Module 5 - Volunteered Geographic Information (VGI)Introduction to Volunteered Geographic InformationProducing VGIPros and Cons of VGIInterview with Michael GoodchildModule 6 - PositioningIntroduction to PositioningOverview of GPSOverview of Wifi and Cellular PositioningIntroduction to Content-based PositioningGeoparsingLocation-field PositioningModule 7 - CartographyIntroduction to CartographyOverview of Maps and MappingReference MapsThematic MapsSpatializationModule 8 - Future DirectionsIntroductionSpatial Databases: Representative projectsData Mining: Representative projectsAdvances in CartographyAdvances in PositioningInterviews with Vipin Kumar, Wan Bae, Mohammed Mokbel and Len Kne",
        "desc_html": "From Google Maps to consumer global positioning system (GPS) devices, spatial\ntechnology shapes many lives in both ordinary and extraordinary ways. Thanks\nto spatial computing, a hiker in Yellowstone and a taxi driver in Manhattan\ncan know precisely where they are, discover nearby points of interest and\nlearn how to reach their destinations. Spatial computing technology is what\npowers the Foursquare check-in, the maps app on your smartphone, the devices\nused by scientists to track endangered species, the routing directions that\nhelp you get from point A to point B, the precision agriculture technology\nthat is revolutionizing farming, and the augmented reality devices like Google\nGlass that may soon mediate our interaction with the real world.\n\nThis course introduces the fundamental ideas underlying spatial computing\nservices, systems, and sciences. Topics covered will include the nature of\ngeospatial information, proper statistical frameworks for working with\ngeospatial data, key algorithms and data structures, spatial data mining, and\ncartography/geovisualization. We will also address applied topics such as\nwhere to find spatial data, how to use powerful open source software to\nanalyze and map spatial data, and frameworks for building location-based\nservices.  \n\n  \n**Three Ways to Enjoy this Course:**   \n\nThis course is designed to support three different types of students and\neducational goals:  \n\n_Curiosity Track_: Most of us interact with spatial technologies every day.\nThis track is for students who wish to learn about one or two spatial\ncomputing topics, but not commit to an entire course. Curiosity track students\nare not interested in a certificate of accomplishment.  \n\n_Concepts Track_: This track is for students who want to learn about spatial\ncomputing concepts in order to make informed choices, but who are not\nprogrammers and do not have extensive experience with statistical methods. For\nexample, concepts track students will learn about Tobler\u2019s First Law of\ngeography and map projections, but will not delve into the quantifications of\neither. Students who complete the concepts track with sufficiently high scores\nwill receive a Statement of Accomplishment.  \n\n_Technical Track_: This track builds on the concepts track, but adds math and\nprogramming. For example, we will cover spatial statistical indicators like\nMoran\u2019s I and Ripley\u2019s K when discussing Tobler\u2019s First Law and will have\nstudents calculate the distance between two points using two different\ncoordinate systems and open-source APIs. Students who complete the technical\ntrack with sufficiently high scores will receive a Distinguished Statement of\nAccomplishment.  \n\n## Syllabus\n\n**Topics Covered:**   \nModule 1 - Introduction  \n\n> Course Introduction  \nDefining Spatial Computing  \nCourse Structure  \nInterviews with Johannes Sch\u00f6ning, Loren Terveen and Martin Raubal\n\nModule 2 - Spatial Query Languages\n\n> What is a Query? Query Language?  \nAn example database with 3 tables  \nSQL overview  \nSELECT statement with 1 table  \nMulti-table SELECT statement  \nWhy spatial extensions are needed  \n1-table spatial queries  \nTrends  \n\nModule 3 - Spatial Networks\n\n> Motivation, Societal use cases  \nExample spatial networks  \nConceptual and mathematical models  \nNeed for SQL extensions  \nCONNECT statement  \nRECURSIVE statement  \nStorage and data structures  \nAlgorithms for connectivity query  \nAlgorithms for shortest path  \nInterviews with Dev Oliver and Betsy George\n\nModule 4 - Spatial Data Mining\n\n> Motivation, Spatial Pattern Families  \nSpatial data types and relationships  \nLimitations of Traditional Statistics  \nLocation Prediction model  \nHotspots  \nSpatial outliers  \nColocations and Co-occurrences  \nSummary: What is special about mining spatial data?\n\nModule 5 - Volunteered Geographic Information (VGI)\n\n> Introduction to Volunteered Geographic Information  \nProducing VGI  \nPros and Cons of VGI  \nInterview with Michael Goodchild\n\nModule 6 - Positioning\n\n> Introduction to Positioning  \nOverview of GPS  \nOverview of Wifi and Cellular Positioning  \nIntroduction to Content-based Positioning  \nGeoparsing  \nLocation-field Positioning\n\nModule 7 - Cartography\n\n> Introduction to Cartography  \nOverview of Maps and Mapping  \nReference Maps  \nThematic Maps  \nSpatialization\n\nModule 8 - Future Directions\n\n> Introduction  \nSpatial Databases: Representative projects  \nData Mining: Representative projects  \nAdvances in Cartography  \nAdvances in Positioning  \nInterviews with Vipin Kumar, Wan Bae, Mohammed Mokbel and Len Kne\n\n",
        "name": "From GPS and Google Maps to Spatial Computing",
        "provider": "Coursera",
        "rating": "5",
        "reviews": "1",
        "university": [
            "University of Minnesota"
        ],
        "url": "https://www.coursera.org/course/spatialcomputing",
        "video_url": ""
    },
    {
        "date": "2014-09-23",
        "desc": "*Note - This is an Archived course*This is a past/archived course. At this time, you can only explore this course in a self-paced fashion. Certain features of this course may not be active, but many people enjoy watching the videos and working with the materials. Make sure to check for reruns of this course.This is the second of a two-part course, and corresponds to the second half of the Computer Programming course CS101 at IIT Bombay. This part begins with a brief review of basic programming concepts, discusses how to handle complex computational applications, and then introduces the basics of object oriented programming. Topics include:PointersStructuresFile processingHandling graphicsIntroduction to Object Oriented Programming ConceptsClasses and MethodsStandard Library of C++.Apart from solving relatively larger and more complex programming problems, participants will get exposure to building a typical programming project.",
        "desc_html": "*Note - This is an Archived course*  \n  \nThis is a past/archived course. At this time, you can only explore this course\nin a self-paced fashion. Certain features of this course may not be active,\nbut many people enjoy watching the videos and working with the materials. Make\nsure to check for reruns of this course.  \n  \nThis is the second of a two-part course, and corresponds to the second half of\nthe Computer Programming course CS101 at IIT Bombay. This part begins with a\nbrief review of basic programming concepts, discusses how to handle complex\ncomputational applications, and then introduces the basics of object oriented\nprogramming. Topics include:  \n  \nPointers  \nStructures  \nFile processing  \nHandling graphics  \nIntroduction to Object Oriented Programming Concepts  \nClasses and Methods  \nStandard Library of C++.  \nApart from solving relatively larger and more complex programming problems,\nparticipants will get exposure to building a typical programming project.\n\n",
        "name": "CS101.2x: Introduction to Computer Programming, Part 2",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "IIT(Indian Institute of Technology Bombay)"
        ],
        "url": "https://www.edx.org/course/introduction-computer-programming-part-2-iitbombayx-cs101-2x",
        "video_url": ""
    },
    {
        "date": "2014-09-23",
        "desc": "Welcome! The instructor has decided to teach the course in Mandarin on Coursera, while the slides of the course will be in English to ease the technical illustrations. We \nhope that this choice can help introduce Machine Learning to more \nbeginners in the Mandarin-speaking world. The English-written slides will not require advanced English ability to understand, though. If you can understand the following descriptions of this course, you can probably follow the slides.[\u6b61\u8fce\u5927\u5bb6\uff01\u9019\u9580\u8ab2\u5c07\u63a1\u7528\u82f1\u6587\u6295\u5f71\u7247\u914d\u5408\u83ef\u6587\u7684\u6559\u5b78\u8b1b\u89e3\uff0c\u6211\u5011\u5e0c\u671b\u80fd\u85c9\u9019\u6b21\u83ef\u6587\u6559\u5b78\u7684\u6a5f\u6703\uff0c\u5c07\u6a5f\u5668\u5b78\u7fd2\u4ecb\u7d39\u7d66\u66f4\u591a\u83ef\u4eba\u4e16\u754c\u7684\u5165\u9580\u8005\u3002\u8ab2\u7a0b\u4e2d\u4f7f\u7528\u7684\u82f1\u6587\u6295\u5f71\u7247\u4e0d\u6703\u4f7f\u7528\u5230\u8271\u6df1\u7684\u82f1\u6587\uff0c\u5982\u679c\u4f60\u80fd\u4e86\u89e3\u4ee5\u4e0b\u5169\u6bb5\u7684\u8ab2\u7a0b\u7c21\u4ecb\uff0c\u4f60\u61c9\u8a72\u4e5f\u53ef\u4ee5\u4e86\u89e3\u8ab2\u7a0b\u6240\u4f7f\u7528\u7684\u82f1\u6587\u6295\u5f71\u7247\u3002]Machine learning is an exciting field with lots of applications in engineering, science, finance, and commerce. It is also a very dynamic field, where many new techniques are being designed every day, and the hot techniques and theories at times can rise and disappear rapidly. Thus, users of machine learning from other fields often face the problem of choosing or using the techniques properly. In this course, we emphasize the necessary fundamentals that give any student of machine learning a \nsolid foundation, and enable him or her to exploit current techniques properly, explore \nfurther techniques and theories, or perhaps to contribute their own in the future.The course roughly corresponds to the first half-semester of the National Taiwan University course \"Machine Learning\", and the second half-semester is expected to be on Coursera under the name \"Machine Learning Techniques\" soon in the future. Based on five years of teaching this popular course successfully (including winning the most prestigious teaching award of National Taiwan University) and discussing with many other scholars actively, the instructor chooses to focus on what he believes to be the core topics that every student of the subject should know. The students shall enjoy a story-like flow moving from \"When Can Machines Learn\" to \"Why\", \"How\" and beyond.SyllabusEach of the following items correspond to approximately one hour of video lecture.[\u4ee5\u4e0b\u7684\u6bcf\u500b\u5c0f\u9805\u76ee\u5c0d\u61c9\u5230\u7d04\u4e00\u5c0f\u6642\u7684\u7dda\u4e0a\u8ab2\u7a0b]When Can Machines Learn?[\u4f55\u6642\u53ef\u4ee5\u4f7f\u7528\u6a5f\u5668\u5b78\u7fd2]-- The Learning Problem[\u6a5f\u5668\u5b78\u7fd2\u554f\u984c]-- Learning to Answer Yes/No[\u4e8c\u5143\u5206\u985e]-- Types of Learning[\u5404\u5f0f\u6a5f\u5668\u5b78\u7fd2\u554f\u984c]-- Feasibility of Learning[\u6a5f\u5668\u5b78\u7fd2\u7684\u53ef\u884c\u6027]Why Can Machines Learn?[\u70ba\u4ec0\u9ebc\u6a5f\u5668\u53ef\u4ee5\u5b78\u7fd2]-- Training versus Testing[\u8a13\u7df4\u8207\u6e2c\u8a66]-- Theory of Generalization[\u8209\u4e00\u53cd\u4e09\u7684\u4e00\u822c\u5316\u7406\u8ad6]-- The VC Dimension[VC \u7dad\u5ea6]-- Noise and Error[\u96dc\u8a0a\u4e00\u932f\u8aa4]How Can Machines Learn?[\u6a5f\u5668\u53ef\u4ee5\u600e\u9ebc\u6a23\u5b78\u7fd2]-- Linear Regression[\u7dda\u6027\u8ff4\u6b78]-- Linear `Soft' Classification[\u8edf\u6027\u7684\u7dda\u6027\u5206\u985e]-- Linear Classification beyond Yes/No[\u4e8c\u5143\u5206\u985e\u4ee5\u5916\u7684\u5206\u985e\u554f\u984c]-- Nonlinear Transformation[\u975e\u7dda\u6027\u8f49\u63db]How Can Machines Learn Better?[\u6a5f\u5668\u53ef\u4ee5\u600e\u9ebc\u6a23\u5b78\u5f97\u66f4\u597d]-- Hazard of Overfitting[\u904e\u5ea6\u8a13\u7df4\u7684\u5371\u96aa]-- Preventing Overfitting I: Regularization[\u907f\u514d\u904e\u5ea6\u8a13\u7df4\u4e00\uff1a\u63a7\u5236\u8abf\u9069]-- Preventing Overfitting II: Validation[\u907f\u514d\u904e\u5ea6\u8a13\u7df4\u4e8c\uff1a\u81ea\u6211\u6aa2\u6e2c]-- Three Learning Principles[\u4e09\u500b\u6a5f\u5668\u5b78\u7fd2\u7684\u91cd\u8981\u539f\u5247]",
        "desc_html": "Welcome! The instructor has decided to teach the course in Mandarin on\nCoursera, while the slides of the course will be in English to ease the\ntechnical illustrations. We hope that this choice can help introduce Machine\nLearning to more beginners in the Mandarin-speaking world. The English-written\nslides will not require advanced English ability to understand, though. If you\ncan understand the following descriptions of this course, you can probably\nfollow the slides. **[\u6b61\u8fce\u5927\u5bb6\uff01\u9019\u9580\u8ab2\u5c07\u63a1\u7528\u82f1\u6587\u6295\u5f71\u7247\u914d\u5408\u83ef\u6587\u7684\u6559\u5b78\u8b1b\u89e3\uff0c\u6211\u5011\u5e0c\u671b\u80fd\u85c9\u9019\u6b21\u83ef\u6587\u6559\u5b78\u7684\u6a5f\u6703\uff0c\u5c07\u6a5f\u5668\u5b78\u7fd2\u4ecb\u7d39\u7d66\u66f4\u591a\u83ef\u4eba\u4e16\u754c\n\u7684\u5165\u9580\u8005\u3002\u8ab2\u7a0b\u4e2d\u4f7f\u7528\u7684\u82f1\u6587\u6295\u5f71\u7247\u4e0d\u6703\u4f7f\u7528\u5230\u8271\u6df1\u7684\u82f1\u6587\uff0c\u5982\u679c\u4f60\u80fd\u4e86\u89e3\u4ee5\u4e0b\u5169\u6bb5\u7684\u8ab2\u7a0b\u7c21\u4ecb\uff0c\u4f60\u61c9\u8a72\u4e5f\u53ef\u4ee5\u4e86\u89e3\u8ab2\u7a0b\u6240\u4f7f\u7528\u7684\u82f1\u6587\u6295\u5f71\u7247\u3002]**  \n  \nMachine learning is an exciting field with lots of applications in\nengineering, science, finance, and commerce. It is also a very dynamic field,\nwhere many new techniques are being designed every day, and the hot techniques\nand theories at times can rise and disappear rapidly. Thus, users of machine\nlearning from other fields often face the problem of choosing or using the\ntechniques properly. In this course, we emphasize the necessary fundamentals\nthat give any student of machine learning a solid foundation, and enable him\nor her to exploit current techniques properly, explore further techniques and\ntheories, or perhaps to contribute their own in the future.  \n  \nThe course roughly corresponds to the first half-semester of the National\nTaiwan University course \"Machine Learning\", and the second half-semester is\nexpected to be on Coursera under the name \"Machine Learning Techniques\" soon\nin the future. Based on five years of teaching this popular course\nsuccessfully (including winning the most prestigious teaching award of\nNational Taiwan University) and discussing with many other scholars actively,\nthe instructor chooses to focus on what he believes to be the core topics that\nevery student of the subject should know. The students shall enjoy a story-\nlike flow moving from \"When Can Machines Learn\" to \"Why\", \"How\" and beyond.  \n  \n\n## Syllabus\n\nEach of the following items correspond to approximately one hour of video\nlecture.** [\u4ee5\u4e0b\u7684\u6bcf\u500b\u5c0f\u9805\u76ee\u5c0d\u61c9\u5230\u7d04\u4e00\u5c0f\u6642\u7684\u7dda\u4e0a\u8ab2\u7a0b]**  \n  \nWhen Can Machines Learn? **[\u4f55\u6642\u53ef\u4ee5\u4f7f\u7528\u6a5f\u5668\u5b78\u7fd2]**  \n\\-- The Learning Problem **[\u6a5f\u5668\u5b78\u7fd2\u554f\u984c]**  \n\\-- Learning to Answer Yes/No **[\u4e8c\u5143\u5206\u985e]**  \n\\-- Types of Learning **[\u5404\u5f0f\u6a5f\u5668\u5b78\u7fd2\u554f\u984c]**  \n\\-- Feasibility of Learning **[\u6a5f\u5668\u5b78\u7fd2\u7684\u53ef\u884c\u6027]**  \n  \nWhy Can Machines Learn? **[\u70ba\u4ec0\u9ebc\u6a5f\u5668\u53ef\u4ee5\u5b78\u7fd2]**  \n\\-- Training versus Testing **[\u8a13\u7df4\u8207\u6e2c\u8a66]**  \n\\-- Theory of Generalization **[\u8209\u4e00\u53cd\u4e09\u7684\u4e00\u822c\u5316\u7406\u8ad6]**  \n\\-- The VC Dimension **[VC \u7dad\u5ea6]**  \n\\-- Noise and Error **[********\u96dc\u8a0a\u4e00**\u932f\u8aa4]  \n  \nHow Can Machines Learn? **[\u6a5f\u5668\u53ef\u4ee5\u600e\u9ebc\u6a23\u5b78\u7fd2]**  \n\\-- Linear Regression **[\u7dda\u6027\u8ff4\u6b78]**  \n\\-- Linear `Soft' Classification **[\u8edf\u6027\u7684\u7dda\u6027\u5206\u985e]**  \n\\-- Linear Classification beyond Yes/No **[\u4e8c\u5143\u5206\u985e\u4ee5\u5916\u7684\u5206\u985e\u554f\u984c]**  \n\\-- Nonlinear Transformation **[\u975e\u7dda\u6027\u8f49\u63db]**  \n  \nHow Can Machines Learn Better? **[\u6a5f\u5668****\u53ef\u4ee5\u600e\u9ebc\u6a23\u5b78\u5f97\u66f4\u597d]**  \n\\-- Hazard of Overfitting **[\u904e\u5ea6\u8a13\u7df4\u7684\u5371\u96aa]**  \n\\-- Preventing Overfitting I: Regularization **[\u907f\u514d\u904e\u5ea6\u8a13\u7df4\u4e00\uff1a\u63a7\u5236\u8abf\u9069]**  \n** **\\-- Preventing Overfitting II: Validation **[\u907f\u514d\u904e\u5ea6\u8a13\u7df4\u4e8c\uff1a\u81ea\u6211\u6aa2\u6e2c]**  \n\\-- Three Learning Principles **[\u4e09\u500b\u6a5f\u5668\u5b78\u7fd2\u7684\u91cd\u8981\u539f\u5247]**  \n  \n\n",
        "name": "\u6a5f\u5668\u5b78\u7fd2\u57fa\u77f3 (Machine Learning Foundations)",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "National Taiwan University"
        ],
        "url": "https://www.coursera.org/course/ntumlone",
        "video_url": ""
    },
    {
        "date": "2014-09-22",
        "desc": "*Note - This is an Archived course*This is a past/archived course. At this time, you can only explore this course in a self-paced fashion. Certain features of this course may not be active, but many people enjoy watching the videos and working with the materials. Make sure to check for reruns of this course.Louv1.1x\u00a0(starting Sep. 22, 2014) and Louv1.2x (coming in Nov. 2014) together give an introduction to all major programming concepts, techniques, and paradigms in a unified framework. We cover the three main programming paradigms : functional, object-oriented, and declarative dataflow.The two courses are targeted toward people with a basic knowledge of programming. It will be most useful to beginning programming students, but the unconventional approach should be insightful even to seasoned professionals.Louv1.1x covers fundamental concepts. You\u2019ll learn functional programming, its techniques and its data structures. You\u2019ll use simple formal semantics for all concepts, and see those concepts illustrated with practical code that runs on the accompanying open-source platform, the Mozart Programming System.Louv1.2x covers data abstraction, state, and concurrency. You\u2019ll learn the four ways to do data abstraction and discuss the trade-offs between objects and abstract data types. You\u2019ll be exposed to deterministic dataflow, the most useful paradigm for concurrent programming, and learn how it avoids race conditions.To learn more about the practical organization of the two courses, watch the introductory video.At the end of Louv1.1x and Louv1.2x, the successful participant will be able to :Specify problems, break them down into their basic steps, and design algorithms and abstractions to solve themChoose the right programming paradigm and write a program in this paradigm to solve a problemUse formal semantics to reason about program correctnessWrite small concurrent programs in the deterministic dataflow paradigm",
        "desc_html": "*Note - This is an Archived course*  \n  \nThis is a past/archived course. At this time, you can only explore this course\nin a self-paced fashion. Certain features of this course may not be active,\nbut many people enjoy watching the videos and working with the materials. Make\nsure to check for reruns of this course.  \n  \nLouv1.1x\u00a0(starting Sep. 22, 2014) and Louv1.2x (coming in Nov. 2014) together\ngive an introduction to all major programming concepts, techniques, and\nparadigms in a unified framework. We cover the three main programming\nparadigms : functional, object-oriented, and declarative dataflow.  \n  \nThe two courses are targeted toward people with a basic knowledge of\nprogramming. It will be most useful to beginning programming students, but the\nunconventional approach should be insightful even to seasoned professionals.  \n  \nLouv1.1x covers fundamental concepts. You\u2019ll learn functional programming, its\ntechniques and its data structures. You\u2019ll use simple formal semantics for all\nconcepts, and see those concepts illustrated with practical code that runs on\nthe accompanying open-source platform, the Mozart Programming System.  \n  \nLouv1.2x covers data abstraction, state, and concurrency. You\u2019ll learn the\nfour ways to do data abstraction and discuss the trade-offs between objects\nand abstract data types. You\u2019ll be exposed to deterministic dataflow, the most\nuseful paradigm for concurrent programming, and learn how it avoids race\nconditions.  \n  \nTo learn more about the practical organization of the two courses, watch the\nintroductory video.  \n  \nAt the end of Louv1.1x and Louv1.2x, the successful participant will be able\nto :  \n  \nSpecify problems, break them down into their basic steps, and design\nalgorithms and abstractions to solve them  \nChoose the right programming paradigm and write a program in this paradigm to\nsolve a problem  \nUse formal semantics to reason about program correctness  \nWrite small concurrent programs in the deterministic dataflow paradigm\n\n",
        "name": "Louv1.1x: Paradigms of Computer Programming \u2013 Fundamentals",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Universit\u00e9 catholique de Louvain"
        ],
        "url": "https://www.edx.org/course/paradigms-computer-programming-louvainx-louv1-1x",
        "video_url": "https://www.youtube.com/embed/qTHGxZpbjfk?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-09-22",
        "desc": "Many web and media designers believe that the design process begins and ends with information architecture and visual design. Although these elements are important, other factors are equally if not more crucial for the design of successful websites and other digital media. This course will examine the standards and methods for designing digital material, primarily websites, that are not only accessible for persons with disabilities&mdash;a particularly important requirement for the websites of public entities&mdash;but also effective and usable for all users and across platforms.This course will review standards for usability and accessibility, focusing on the concepts of universal design, Web Standards, and accessibility best practices. Topics to be covered include html standards, semantic web design, user-centered design, and validation tools, among others.",
        "desc_html": "Many web and media designers believe that the design process begins and ends\nwith information architecture and visual design. Although these elements are\nimportant, other factors are equally if not more crucial for the design of\nsuccessful websites and other digital media. This course will examine the\nstandards and methods for designing digital material, primarily websites, that\nare not only accessible for persons with disabilities--a particularly\nimportant requirement for the websites of public entities--but also effective\nand usable for all users and across platforms.\n\nThis course will review standards for usability and accessibility, focusing on\nthe concepts of universal design, Web Standards, and accessibility best\npractices. Topics to be covered include html standards, semantic web design,\nuser-centered design, and validation tools, among others.\n\n",
        "name": "Universal Design for Digital Media",
        "provider": "Canvas.net",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of Colorado Boulder"
        ],
        "url": "https://www.canvas.net/courses/universal-design-for-digital-media",
        "video_url": ""
    },
    {
        "date": "2014-09-22",
        "desc": "This course provides an overview of the evolving field of cybersecurity, with an introduction to cybersecurity standards and law. Students will learn about common cyber attacks and the techniques for identifying, detecting, and defending against cybersecurity threats. They will also gain a basic understanding of personal, physical, network, web, and wireless security, as well as a foundation for more advanced study of cybersecurity.",
        "desc_html": "This course provides an overview of the evolving field of cybersecurity, with\nan introduction to cybersecurity standards and law. Students will learn about\ncommon cyber attacks and the techniques for identifying, detecting, and\ndefending against cybersecurity threats. They will also gain a basic\nunderstanding of personal, physical, network, web, and wireless security, as\nwell as a foundation for more advanced study of cybersecurity.\n\n",
        "name": "Introduction to Cybersecurity",
        "provider": "Canvas.net",
        "rating": "0",
        "reviews": "0",
        "university": [
            "National Cybersecurity Institute at Excelsior College"
        ],
        "url": "https://www.canvas.net/courses/introduction-to-cybersecurity-1",
        "video_url": ""
    },
    {
        "date": "2014-09-22",
        "desc": "How it was never to learn the basics of programming playful.To participate in the course, you do not need special knowledge, only an internet connection and a computer.No special software needs to be installed on the computer.Necessary are only a current browser and an e-mail address with which you can log on openhpi.At the beginning of the free four-week course focuses on simple programming exercises.You learn to control a virtual turtle by your programming.In the following weeks you will be familiarized that will give you a basic understanding of the structure of programming with loops, and functions.In the openhpi course you'll see tutorials and check in the quiz, if you understood everything.Directly in the browser, you can then apply the learned knowledge and program drauflos.If you're stuck once, you can in the forum or the learning groups find support from other students.Upon successful completion you will receive after the course a openhpi certificate.SyllabusWeek 1:Programming and operating instructions.In the first week you will learn how a computer works and how he gets his instructions.Be presented with the programming of the keyboard, formulas, variables, and the turtle (turtle graphics)Week 2:This week you will learn how the computer can handle similar data one by one and itself makes decisions.Presents the conditional statement, loop and lists.Week 3:A major task consists of many small.This week you will learn how programs organized and the same code can be used multiple times.Are presented functions, parameters, and dictionaries.Week 4:Ask the user.In this last week of the course you will learn how the computer can react to user input.Are presented input from keyboard and mouse input, and error handling.",
        "desc_html": "How it was never to learn the basics of programming playful. To participate in\nthe course, you do not need special knowledge, only an internet connection and\na computer. No special software needs to be installed on the computer.\nNecessary are only a current browser and an e-mail address with which you can\nlog on openhpi.\n\nAt the beginning of the free four-week course focuses on simple programming\nexercises. You learn to control a virtual turtle by your programming. In the\nfollowing weeks you will be familiarized that will give you a basic\nunderstanding of the structure of programming with loops, and functions. In\nthe openhpi course you'll see tutorials and check in the quiz, if you\nunderstood everything. Directly in the browser, you can then apply the learned\nknowledge and program drauflos.\n\nIf you're stuck once, you can in the forum or the learning groups find support\nfrom other students. Upon successful completion you will receive after the\ncourse a openhpi certificate.\n\n## Syllabus\n\n  * **Week 1:** Programming and operating instructions. In the first week you will learn how a computer works and how he gets his instructions. Be presented with the programming of the keyboard, formulas, variables, and the turtle (turtle graphics)\n  * **Week 2:** This week you will learn how the computer can handle similar data one by one and itself makes decisions. Presents the conditional statement, loop and lists.\n  * **Week 3:** A major task consists of many small. This week you will learn how programs organized and the same code can be used multiple times. Are presented functions, parameters, and dictionaries.\n  * **Week 4:** Ask the user. In this last week of the course you will learn how the computer can react to user input. Are presented input from keyboard and mouse input, and error handling.\n\n",
        "name": "Grundlagen des Programmierens",
        "provider": "openHPI",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.hpi.de/courses/43f44f93-ae42-4141-8b61-ca9dea9dae4d",
        "video_url": ""
    },
    {
        "date": "2014-09-20",
        "desc": "This course forms a strong foundation in the understanding and design of modern computing systems. Building on a computer organization base, this course explores techniques that go into designing a modern microprocessor. Fundamental understanding of computer architecture is key not only for students interested in hardware and processor design, but is a foundation for students interested in compilers, operating systems, and high performance programming. This course will explore how the computer architect can utilize the increasing number of transistors available to improve the performance of a processor. Focus will be given to architectures that can exploit different forms of parallelism, whether they be implicit or explicit. This course covers architectural techniques such as multi-issue superscalar processors, out-of-order processors, Very Long Instruction Word (VLIW) processors, advanced caching, and multiprocessor systems.",
        "desc_html": "This course forms a strong foundation in the understanding and design of\nmodern computing systems. Building on a computer organization base, this\ncourse explores techniques that go into designing a modern microprocessor.\nFundamental understanding of computer architecture is key not only for\nstudents interested in hardware and processor design, but is a foundation for\nstudents interested in compilers, operating systems, and high performance\nprogramming. This course will explore how the computer architect can utilize\nthe increasing number of transistors available to improve the performance of a\nprocessor. Focus will be given to architectures that can exploit different\nforms of parallelism, whether they be implicit or explicit. This course covers\narchitectural techniques such as multi-issue superscalar processors, out-of-\norder processors, Very Long Instruction Word (VLIW) processors, advanced\ncaching, and multiprocessor systems.\n\n",
        "name": "Computer Architecture",
        "provider": "Coursera",
        "rating": "5",
        "reviews": "1",
        "university": [
            "Princeton University"
        ],
        "url": "https://www.coursera.org/course/comparch",
        "video_url": ""
    },
    {
        "date": "2014-09-19",
        "desc": "Ce cours pr\u00e9sente des concepts de base de la programmation tels que&nbsp;&nbsp; : variables, expressions, structures de contr\u00f4le, fonctions/m\u00e9thodes, ...en les illustrant dans la syntaxe du langage C++.Ces notions simples seront pratiqu\u00e9es de fa\u00e7on intensive pour vous faire r\u00e9aliser de fa\u00e7on de plus en plus autonome&nbsp; les \u00e9tapes allant de la conception d'un programme (algorithme) \u00e0 sa mise en oeuvre concr\u00e8te.Ce cours est con\u00e7u pour \u00eatre prolong\u00e9 par les aspects orient\u00e9-objet, pr\u00e9sent\u00e9s dans le cours&nbsp;&nbsp;\u00abIntroduction \u00e0 la programmation orient\u00e9e objet (en C++)\u00bb.&nbsp;SyllabusIntroduction \u00e0 C++Structures de contr\u00f4leTableaux, cha\u00eenes de caract\u00e8resFonctions et r\u00e9utilisabilit\u00e9Structures de donn\u00e9esPointeurs et r\u00e9f\u00e9rences",
        "desc_html": "Ce cours pr\u00e9sente des concepts de base de la programmation tels que   :\nvariables, expressions, structures de contr\u00f4le, fonctions/m\u00e9thodes, ...  \nen les illustrant dans la syntaxe du langage C++.  \n  \nCes notions simples seront pratiqu\u00e9es de fa\u00e7on intensive pour vous faire\nr\u00e9aliser de fa\u00e7on de plus en plus autonome  les \u00e9tapes allant de la conception\nd'un programme (algorithme) \u00e0 sa mise en oeuvre concr\u00e8te.  \n  \nCe cours est con\u00e7u pour \u00eatre prolong\u00e9 par les aspects orient\u00e9-objet, pr\u00e9sent\u00e9s\ndans le cours  [\u00abIntroduction \u00e0 la programmation orient\u00e9e objet (en\nC++)\u00bb](https://www.coursera.org/course/intropoocpp).  \n\n## Syllabus\n\n* Introduction \u00e0 C++\n* Structures de contr\u00f4le\n* Tableaux, cha\u00eenes de caract\u00e8res  \n\n* Fonctions et r\u00e9utilisabilit\u00e9\n* Structures de donn\u00e9es\n* Pointeurs et r\u00e9f\u00e9rences\n\n",
        "name": "Initiation \u00e0 la programmation (en C++)",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne"
        ],
        "url": "https://www.coursera.org/course/initprogcpp",
        "video_url": ""
    },
    {
        "date": "2014-09-15",
        "desc": "\u8bfe\u7a0b\u4ecb\u7ecd\u89c6\u9891\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u91cc\u3002\u672c\u8bfe\u7a0b\u7684\u5185\u5bb9\u4e3b\u8981\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff1a\uff081\uff09\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6\uff0c\u7ea6\u5360\u8bfe\u65f6\u91cf\u768415%\uff1b\uff082\uff09C\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\uff0c\u7ea6\u5360\u8bfe\u65f6\u91cf\u768485%\uff1b\u5728\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u4e3a\u5927\u5bb6\u89e3\u7b54\u4e00\u4e9b\u4e0e\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u76f8\u5173\u7684\u57fa\u7840\u95ee\u9898\uff0c\u4f8b\u5982\uff0c\u201c\u8ba1\u7b97\u673a\u4e3a\u4ec0\u4e48\u80fd\u591f\u8fdb\u884c\u8ba1\u7b97\uff1f\u201d\uff0c\u201c\u8ba1\u7b97\u673a\u7a0b\u5e8f\u5728\u8ba1\u7b97\u673a\u4e2d\u662f\u5982\u4f55\u8fd0\u884c\u7684\uff1f\u201d\uff0c\u201c\u8ba1\u7b97\u673a\u7684\u53d1\u5c55\u89c4\u5f8b\u662f\u4ec0\u4e48\uff1f\u201d\uff0c\u201c\u4e0b\u4e00\u4ee3\u7684\u8ba1\u7b97\u673a\u5c06\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\uff1f\u201d\u7b49\u7b49\u3002\u6211\u4eec\u5e0c\u671b\u901a\u8fc7\u5bf9\u8fd9\u4e9b\u95ee\u9898\u7684\u89e3\u7b54\uff0c\u8fbe\u5230\u4e24\u4e2a\u76ee\u7684\uff1aA \u57f9\u517b\u8d77\u5927\u5bb6\u5bf9\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u5174\u8da3\uff1bB \u5e2e\u52a9\u5927\u5bb6\u5efa\u7acb\u8d77\u5b66\u4e60\u8ba1\u7b97\u673a\u79d1\u5b66\u6240\u9700\u8981\u7684\u201c\u80cc\u666f\u77e5\u8bc6\u6846\u67b6\u201d\u3002\u5728C\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u4ee5\u201cC \u8bed\u8a00\u201d\u4e3a\u4e3b\u8981\u5b66\u4e60\u5bf9\u8c61\uff0c\u4ee5\u5178\u578b\u7684C++\u7f16\u7a0b\u73af\u5883\uff08\u5982Visual Studio C++, Eclipse\u7b49\uff09\u4e3a\u5de5\u5177\uff0c\u5b66\u4e60\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u5e76\u57f9\u517b\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u57fa\u672c\u6280\u80fd\u3002\u901a\u4fd7\u8bb2\uff0c\u5728\u8fd9\u4e2a\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u6559\u4f1a\u5927\u5bb6\u201c\u5982\u4f55\u4f7f\u7528C\u8bed\u8a00\u7f16\u5199\u8ba1\u7b97\u673a\u7a0b\u5e8f\uff0c\u751a\u81f3\u7f16\u5199\u5177\u6709\u4e00\u5b9a\u6280\u672f\u96be\u5ea6\u7684\u7a0b\u5e8f\u201d\u3002\u5bf9\u4e8e\u7b2c\u4e00\u6b21\u5b66\u4e60\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u540c\u5b66\u800c\u8a00\uff0c\u901a\u5e38\u4f1a\u89c9\u5f97\u5b66\u4e60\u8fc7\u7a0b\u6bd4\u8f83\u56f0\u96be\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u7279\u522b\u63d0\u793a\u5927\u5bb6\uff1a\u201c\u5bf9\u4e8e\u96be\u5b66\u7684\u4e1c\u897f\uff0c\u66f4\u8981\u5faa\u5e8f\u6e10\u8fdb\uff0c\u66f4\u8981\u9075\u5faa\u5b66\u4e60\u89c4\u5f8b\u2014\u2014\u5148\u6253\u597d\u57fa\u7840\uff0c\u9010\u6b65\u8fdb\u9636\uff01\u201d\u4e3a\u6b64\uff0c\u6211\u4eec\u628a\u201c\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u201d\u90e8\u5206\u7684\u5b66\u4e60\u5212\u5206\u4e3a\u56db\u4e2a\u8fed\u4ee3\u5468\u671f\uff1a\u5468\u671f\u4e00\uff1a \u611f\u6027\u8ba4\u8bc6\u8ba1\u7b97\u673a\u7a0b\u5e8f\uff1b\u5468\u671f\u4e8c\uff1a \u7406\u6027\u8ba4\u8bc6\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\uff1b\u5468\u671f\u4e09\uff1a \u5b66\u4f1a\u4f7f\u7528\u2014\u2014\u51fd\u6570\uff1b\u5468\u671f\u56db\uff1a \u5b66\u4e60\u4f7f\u7528C\u7a0b\u5e8f\u4e2d\u7684\u590d\u6742\u6210\u5206\uff08\u6307\u9488\u3001\u7ed3\u6784\u4f53\u3001\u94fe\u8868\u3001\u6587\u4ef6\u7b49\uff09\uff1b\u4e4b\u6240\u4ee5\u79f0\u4e3a\u201c\u8fed\u4ee3\u5468\u671f\u201d\uff0c\u662f\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u5728\u6bcf\u4e2a\u5468\u671f\u4e2d\uff0c\u540c\u5b66\u4eec\u90fd\u80fd\u591f\u7f16\u5199\u51fa\u5b8c\u6574\u3001\u53ef\u8fd0\u884c\u3001\u80fd\u89e3\u51b3\u95ee\u9898\u7684\u8ba1\u7b97\u673a\u7a0b\u5e8f\uff0c\u800c\u4e0d\u662f\u4ec5\u4ec5\u5b66\u4e60\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u7684\u67d0\u4e2a\u90e8\u5206\uff01\u6240\u4ee5\uff0c\u5b66\u4e60\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u8fc7\u7a0b\uff0c\u5e94\u8be5\u662f\u4e00\u4e2a\u201c\u5728\u5b9e\u6218\u4e2d\u8fdb\u9636\u201d\u7684\u8fc7\u7a0b\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u201c\u77e5\u8bc6\u5806\u780c\u201d\u7684\u8fc7\u7a0b\u3002\u5e0c\u671b\u8fd9\u4e2a\u8fed\u4ee3\u8fdb\u9636\u7684\u5b66\u4e60\u8fc7\u7a0b\u53ef\u4ee5\u5e2e\u52a9\u5927\u5bb6\u987a\u5229\u8fbe\u6210\u5b66\u4e60\u76ee\u6807\u3002\u8be5\u8bfe\u7a0b\u662f\u201c\u5317\u5927-\u5fb7\u7a3b\u7f51\u7edc\u516c\u5f00\u8bfe\u7a0b\u201d\u4e2d\u7684\u4e00\u95e8\uff0c\u7531\u5317\u4eac\u5927\u5b66\u4e0e\u5fb7\u7a3b\u6559\u80b2\u8054\u5408\u63d0\u4f9b\u3002Syllabus\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6&nbsp;&nbsp;&nbsp; \u8ba1\u7b97\u673a\u7684\u57fa\u672c\u539f\u7406--------------------------------- Week 1&nbsp;&nbsp;&nbsp; \u8ba1\u7b97\u673a\u7684\u5386\u53f2\u4e0e\u672a\u6765------------------------------ Week 2&nbsp;&nbsp;&nbsp; \u7a0b\u5e8f\u8fd0\u884c\u7684\u57fa\u672c\u539f\u7406------------------------------ Week 3\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840&nbsp;&nbsp;&nbsp;&nbsp;\u5468\u671f\u4e00\uff1a\u611f\u6027\u8ba4\u8bc6\u8ba1\u7b97\u673a\u7a0b\u5e8f&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \u611f\u6027\u8ba4\u8bc6\u8ba1\u7b97\u673a\u7a0b\u5e8f--------------------------- Week 4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \u4ece\u73b0\u5b9e\u95ee\u9898\u5230\u8ba1\u7b97\u673a\u7a0b\u5e8f---------------------- Week 5&nbsp;&nbsp;&nbsp;&nbsp;\u5468\u671f\u4e8c\uff1a\u7406\u6027\u8ba4\u8bc6\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;C++\u8bed\u8a00\u7684\u57fa\u672c\u6210\u5206\u2013\u6570\u636e\u6210\u5206--------------- Week 6&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; C++\u8bed\u8a00\u7684\u57fa\u672c\u6210\u5206\u2013\u8fd0\u7b97\u6210\u5206--------------- Week 7&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; C++\u8bed\u8a00\u7684\u57fa\u672c\u6210\u5206\u2013\u63a7\u5236\u6210\u5206--------------- Week 7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; C++\u7a0b\u5e8f\u4e2d\u7684\u6570\u7ec4------------------------------- Week 8&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; \u5b57\u7b26\u6570\u7ec4\u4e0e\u5b57\u7b26\u4e32------------------------------- Week 8&nbsp;&nbsp;&nbsp;&nbsp;\u5468\u671f\u4e09\uff1a\u5b66\u4f1a\u4f7f\u7528\u2014\u2014\u51fd\u6570&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;C++\u7a0b\u5e8f\u4e2d\u7684\u51fd\u6570------------------------------- Week 9&nbsp; &nbsp; &nbsp; &nbsp; \u5d4c\u5957\u3001\u9012\u63a8\u3001\u9012\u5f52------------------------------- Week 10&nbsp;&nbsp;&nbsp;\u5468\u671f\u56db\uff1a\u5b66\u4e60\u4f7f\u7528C\u7a0b\u5e8f\u4e2d\u7684\u590d\u6742\u6210\u5206&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; \u53ef\u7231\u7684 \u6307\u9488\uff081\uff09------------------------------- Week 11&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \u53ef\u7231\u7684 \u6307\u9488\uff082\uff09------------------------------- Week 12&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; \u7ed3\u6784\u4f53\u4e0e\u94fe\u8868-------------------------------------Week 13&nbsp;&nbsp;&nbsp; &nbsp; \u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u603b\u7ed3 --------------------------------- Week 14",
        "desc_html": "\u8bfe\u7a0b\u4ecb\u7ecd\u89c6\u9891\u53ef\u4ee5\u8bbf\u95ee[\u8fd9\u91cc](http://video.study.163.com/edu-\nvideo/nos/mp4/2013/11/20/303418_sd.mp4)\u3002\n\n****\u00a0\u00a0\u00a0 \u672c\u8bfe\u7a0b\u7684**\u5185\u5bb9**\u4e3b\u8981**\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206**\uff1a\uff081\uff09**\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6**\uff0c\u7ea6\u5360\u8bfe\u65f6\u91cf\u7684**15%**\uff1b\uff082\uff09**C\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840**\uff0c\u7ea6\u5360\u8bfe\u65f6\u91cf\u7684**85%**\uff1b\n\n\u00a0\u00a0\u00a0 \u5728\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u4e3a\u5927\u5bb6**\u89e3\u7b54\u4e00\u4e9b\u4e0e\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u76f8\u5173\u7684\u57fa\u7840\u95ee\u9898**\uff0c\u4f8b\u5982**\uff0c\u201c\u8ba1\u7b97\u673a\u4e3a\u4ec0\u4e48\u80fd\u591f\u8fdb\u884c\u8ba1\u7b97\uff1f\u201d\uff0c\u201c\u8ba1\u7b97\u673a\u7a0b\u5e8f\u5728\u8ba1\u7b97\u673a\u4e2d\u662f\n\u5982\u4f55\u8fd0\u884c\u7684\uff1f\u201d\uff0c\u201c\u8ba1\u7b97\u673a\u7684\u53d1\u5c55\u89c4\u5f8b\u662f\u4ec0\u4e48\uff1f\u201d\uff0c\u201c\u4e0b\u4e00\u4ee3\u7684\u8ba1\u7b97\u673a\u5c06\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\uff1f\u201d**\u7b49\u7b49\u3002\u6211\u4eec\u5e0c\u671b\u901a\u8fc7\u5bf9\u8fd9\u4e9b\u95ee\u9898\u7684\u89e3\u7b54\uff0c\u8fbe\u5230\u4e24\u4e2a\u76ee\u7684\uff1aA\n\u57f9\u517b\u8d77\u5927\u5bb6\u5bf9\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u5174\u8da3\uff1bB \u5e2e\u52a9\u5927\u5bb6\u5efa\u7acb\u8d77\u5b66\u4e60\u8ba1\u7b97\u673a\u79d1\u5b66\u6240\u9700\u8981\u7684\u201c\u80cc\u666f\u77e5\u8bc6\u6846\u67b6\u201d\u3002\n\n\u00a0\u00a0\u00a0 \u5728C\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u90e8\u5206\uff0c\u6211\u4eec\u5c06**\u4ee5\u201cC \u8bed\u8a00\u201d\u4e3a\u4e3b\u8981\u5b66\u4e60\u5bf9\u8c61\uff0c\u4ee5\u5178\u578b\u7684C++\u7f16\u7a0b\u73af\u5883\uff08\u5982Visual Studio C++, Eclipse\u7b49\uff09\u4e3a\u5de5\n\u5177\uff0c\u5b66\u4e60\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u76f8\u5173\u77e5\u8bc6**\uff0c\u5e76\u57f9\u517b\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u57fa\u672c\u6280\u80fd\u3002\u901a\u4fd7\u8bb2\uff0c\u5728\u8fd9\u4e2a\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u6559\u4f1a\u5927\u5bb6\u201c\u5982\u4f55\u4f7f\u7528C\u8bed\u8a00\u7f16\u5199\u8ba1\u7b97\u673a\u7a0b\u5e8f\uff0c\u751a\u81f3\u7f16\u5199\u5177\u6709\u4e00\u5b9a\u6280\u672f\u96be\u5ea6\u7684\n\u7a0b\u5e8f\u201d\u3002\n\n\u00a0\u00a0\u00a0 \u5bf9\u4e8e\u7b2c\u4e00\u6b21\u5b66\u4e60\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u540c\u5b66\u800c\u8a00\uff0c\u901a\u5e38\u4f1a\u89c9\u5f97\u5b66\u4e60\u8fc7\u7a0b\u6bd4\u8f83\u56f0\u96be\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u7279\u522b\u63d0\u793a\u5927\u5bb6\uff1a\u201c\u5bf9\u4e8e\u96be\u5b66\u7684\u4e1c\u897f\uff0c\u66f4\u8981\u5faa\u5e8f\u6e10\u8fdb\uff0c\u66f4\u8981\u9075\u5faa\u5b66\u4e60\u89c4\u5f8b\u2014\u2014\u5148\n\u6253\u597d\u57fa\u7840\uff0c\u9010\u6b65\u8fdb\u9636\uff01\u201d\u4e3a\u6b64\uff0c**\u6211\u4eec\u628a\u201c\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u201d\u90e8\u5206\u7684\u5b66\u4e60\u5212\u5206\u4e3a\u56db\u4e2a\u8fed\u4ee3\u5468\u671f**\uff1a\n\n**\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u5468\u671f\u4e00**\uff1a \u611f\u6027\u8ba4\u8bc6\u8ba1\u7b97\u673a\u7a0b\u5e8f\uff1b   \n**\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u5468\u671f\u4e8c**\uff1a \u7406\u6027\u8ba4\u8bc6\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\uff1b\u00a0   \n**\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u5468\u671f\u4e09**\uff1a \u5b66\u4f1a\u4f7f\u7528\u2014\u2014\u51fd\u6570\uff1b   \n**\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u5468\u671f\u56db**\uff1a \u5b66\u4e60\u4f7f\u7528C\u7a0b\u5e8f\u4e2d\u7684\u590d\u6742\u6210\u5206\uff08\u6307\u9488\u3001\u7ed3\u6784\u4f53\u3001\u94fe\u8868\u3001\u6587\u4ef6\u7b49\uff09\uff1b\n\n\u00a0\u00a0\u00a0 \u4e4b\u6240\u4ee5\u79f0\u4e3a\u201c\u8fed\u4ee3\u5468\u671f\u201d\uff0c\u662f\u56e0\u4e3a**\u6211\u4eec\u5e0c\u671b\u5728\u6bcf\u4e2a\u5468\u671f\u4e2d\uff0c\u540c\u5b66\u4eec\u90fd\u80fd\u591f\u7f16\u5199\u51fa\u5b8c\u6574\u3001\u53ef\u8fd0\u884c\u3001\u80fd\u89e3\u51b3\u95ee\u9898\u7684\u8ba1\u7b97\u673a\u7a0b\u5e8f\uff0c\u800c\u4e0d\u662f\u4ec5\u4ec5\u5b66\u4e60\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u7684\u67d0\n\u4e2a\u90e8\u5206\uff01**\u6240\u4ee5\uff0c\u5b66\u4e60\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u8fc7\u7a0b\uff0c\u5e94\u8be5\u662f\u4e00\u4e2a**\u201c\u5728\u5b9e\u6218\u4e2d\u8fdb\u9636\u201d\u7684\u8fc7\u7a0b\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u201c\u77e5\u8bc6\u5806\u780c\u201d\u7684\u8fc7\u7a0b**\u3002\u5e0c\u671b\u8fd9\u4e2a\u8fed\u4ee3\u8fdb\u9636\u7684\u5b66\u4e60\u8fc7\u7a0b\u53ef\u4ee5\u5e2e\u52a9\u5927\u5bb6\u987a\u5229\u8fbe\u6210\n\u5b66\u4e60\u76ee\u6807\u3002\n\n\u8be5\u8bfe\u7a0b\u662f\u201c\u5317\u5927-\u5fb7\u7a3b\u7f51\u7edc\u516c\u5f00\u8bfe\u7a0b\u201d\u4e2d\u7684\u4e00\u95e8\uff0c\u7531\u5317\u4eac\u5927\u5b66\u4e0e\u5fb7\u7a3b\u6559\u80b2\u8054\u5408\u63d0\u4f9b\u3002  \n\n## Syllabus\n\n**\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6**\n\n    \u8ba1\u7b97\u673a\u7684\u57fa\u672c\u539f\u7406--------------------------------- Week 1  \n    \u8ba1\u7b97\u673a\u7684\u5386\u53f2\u4e0e\u672a\u6765------------------------------ Week 2  \n    \u7a0b\u5e8f\u8fd0\u884c\u7684\u57fa\u672c\u539f\u7406------------------------------ Week 3\n\n**\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840**  \n    \n    _**\u5468\u671f\u4e00\uff1a\u611f\u6027\u8ba4\u8bc6\u8ba1\u7b97\u673a\u7a0b\u5e8f**_\n\n        \u611f\u6027\u8ba4\u8bc6\u8ba1\u7b97\u673a\u7a0b\u5e8f--------------------------- Week 4  \n        \u4ece\u73b0\u5b9e\u95ee\u9898\u5230\u8ba1\u7b97\u673a\u7a0b\u5e8f---------------------- Week 5  \n    \n    **_\u5468\u671f\u4e8c\uff1a\u7406\u6027\u8ba4\u8bc6\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00_**\n\n        C++\u8bed\u8a00\u7684\u57fa\u672c\u6210\u5206\u2013\u6570\u636e\u6210\u5206--------------- Week 6  \n        C++\u8bed\u8a00\u7684\u57fa\u672c\u6210\u5206\u2013\u8fd0\u7b97\u6210\u5206--------------- Week 7  \n        C++\u8bed\u8a00\u7684\u57fa\u672c\u6210\u5206\u2013\u63a7\u5236\u6210\u5206--------------- Week 7  \n        C++\u7a0b\u5e8f\u4e2d\u7684\u6570\u7ec4------------------------------- Week 8  \n       \u5b57\u7b26\u6570\u7ec4\u4e0e\u5b57\u7b26\u4e32------------------------------- Week 8  \n    \n    **_\u5468\u671f\u4e09\uff1a\u5b66\u4f1a\u4f7f\u7528\u2014\u2014\u51fd\u6570_**\n\n        C++\u7a0b\u5e8f\u4e2d\u7684\u51fd\u6570------------------------------- Week 9  \n        \u5d4c\u5957\u3001\u9012\u63a8\u3001\u9012\u5f52------------------------------- Week 10  \n  \n    **_\u5468\u671f\u56db\uff1a\u5b66\u4e60\u4f7f\u7528C\u7a0b\u5e8f\u4e2d\u7684\u590d\u6742\u6210\u5206_**\n\n        \u53ef\u7231\u7684 \u6307\u9488\uff081\uff09------------------------------- Week 11  \n        \u53ef\u7231\u7684 \u6307\u9488\uff082\uff09------------------------------- Week 12  \n        \u7ed3\u6784\u4f53\u4e0e\u94fe\u8868-------------------------------------Week 13  \n    \n    \u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u603b\u7ed3 --------------------------------- Week 14\n\n",
        "name": "Introduction to Computing \u8ba1\u7b97\u6982\u8bbaA",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Peking University"
        ],
        "url": "https://www.coursera.org/course/pkuic",
        "video_url": ""
    },
    {
        "date": "2014-09-15",
        "desc": "*Note - This is an Archived course*This is a past/archived course. At this time, you can only explore this course in a self-paced fashion. Certain features of this course may not be active, but many people enjoy watching the videos and working with the materials. Make sure to check for reruns of this course.\u8bfe\u7a0b\u4ecb\u7ecd\u89c6\u9891\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u4e2d\u56fd\u7f51\u7ad9\u8ba1\u7b97\u673a\u662f\u73b0\u4ee3\u793e\u4f1a\u4e2d\u7528\u4e8e\u89e3\u51b3\u95ee\u9898\u7684\u91cd\u8981\u5de5\u5177\u3002\u5229\u7528\u8ba1\u7b97\u673a\u89e3\u51b3\u5b9e\u9645\u95ee\u9898\u9700\u8981\u5c06\u95ee\u9898\u62bd\u8c61\uff0c\u5e76\u5bf9\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff0c\u6700\u540e\u901a\u8fc7\u8ba1\u7b97\u673a\u7a0b\u5e8f\u6c42\u89e3\u95ee\u9898\u3002\u800c\u672c\u95e8\u8bfe\u7a0b\u4e3b\u8981\u5185\u5bb9\u5c31\u662f\u5bf9\u4ee5\u4e0a\u5185\u5bb9\u8fdb\u884c\u7814\u7a76\u3002\u56fe\u7075\u5956\u83b7\u5f97\u8005N.Wirth\u5199\u4e86\u4e00\u672c\u7ecf\u5178\u8457\u4f5c\u201c\u7a0b\u5e8f=\u7b97\u6cd5+\u6570\u636e\u7ed3\u6784\u201d\u3002\u6570\u636e\u7ed3\u6784\uff0c\u662f\u62bd\u8c61\u7684\u8868\u793a\u6570\u636e\u7684\u65b9\u5f0f\uff1b\u7b97\u6cd5\uff0c\u5219\u662f\u8ba1\u7b97\u7684\u4e00\u7cfb\u5217\u6709\u6548\u3001\u901a\u7528\u7684\u6b65\u9aa4\u3002\u7b97\u6cd5\u4e0e\u6570\u636e\u7ed3\u6784\u662f\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u76f8\u8f85\u76f8\u6210\u7684\u4e24\u4e2a\u65b9\u9762\u3002\u6211\u4eec\u4f1a\u56f4\u7ed5\u7740\u201c\u7b97\u6cd5+\u6570\u636e\u7ed3\u6784=\u7a0b\u5e8f\u201d\u7684\u601d\u8def\uff0c\u4ee5\u95ee\u9898\u6c42\u89e3\u4e3a\u5bfc\u5411\u8fdb\u884c\u5b66\u4e60\u3002\u5e0c\u671b\u80fd\u591f\u5e2e\u52a9\u5927\u5bb6\u63d0\u9ad8\u7406\u8bba\u3001\u62bd\u8c61\u3001\u8bbe\u8ba1\u7684\u80fd\u529b\u3002\u5728\u624e\u5b9e\u7684\u7ecf\u5178\u7406\u8bba\u57fa\u7840\u4e0a\uff0c\u8fd0\u7528\u95ee\u9898\u62bd\u8c61\u3001\u6570\u636e\u62bd\u8c61\u3001\u7b97\u6cd5\u62bd\u8c61\u6765\u5206\u6790\u95ee\u9898\uff0c\u5e94\u7528\u9002\u5f53\u7684\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u6765\u8bbe\u8ba1\u548c\u5b9e\u73b0\u76f8\u5e94\u7684\u7a0b\u5e8f\u3002\u901a\u8fc7\u8bfe\u7a0b\u5b66\u4e60\uff0c\u5927\u5bb6\u7684\u62bd\u8c61\u601d\u7ef4\u80fd\u529b\u3001\u95ee\u9898\u6c42\u89e3\u80fd\u529b\u5c06\u5f97\u5230\u8f83\u5927\u63d0\u5347\uff0c\u7f16\u7a0b\u80fd\u529b\u548c\u4ee3\u7801\u8d28\u91cf\u4f1a\u6709\u8d28\u7684\u98de\u8dc3\uff01\u5728\u6c42\u89e3\u5b9e\u9645\u95ee\u9898\u65b9\u9762\uff0c\u6211\u4eec\u4f1a\u5b66\u4e60\u5230\u901a\u8fc7\u6743\u8861\u65f6\u7a7a\u548c\u5176\u4ed6\u8d44\u6e90\u5f00\u9500\uff0c\u5229\u7528\u6570\u636e\u7ed3\u6784\u6765\u7ec4\u7ec7\u6570\u636e\u3001\u8bbe\u8ba1\u9ad8\u6548\u7684\u7b97\u6cd5\u3001\u5b8c\u6210\u9ad8\u8d28\u91cf\u7684\u7a0b\u5e8f\u4ee5\u6ee1\u8db3\u9519\u7efc\u590d\u6742\u7684\u5b9e\u9645\u5e94\u7528\u9700\u8981\u3002\u6b64\u5916\uff0c\u8bfe\u7a0b\u6240\u5b66\u5230\u7684\u5185\u5bb9\u4f1a\u88ab\u5229\u7528\u5230\u8ba1\u7b97\u673a\u79d1\u5b66\u540e\u7eed\u7684\u5404\u4e2a\u8bfe\u7a0b\u4e2d\uff0c\u5982\u64cd\u4f5c\u7cfb\u7edf\u3001\u8f6f\u4ef6\u5de5\u7a0b\u3001\u6570\u636e\u5e93\u6982\u8bba\u3001\u7f16\u8bd1\u6280\u672f\u3001\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u3001\u4eba\u673a\u4ea4\u4e92\u7b49\u3002\u5e0c\u671b\u53ef\u4ee5\u4e3a\u5927\u5bb6\u5c06\u6765\u4ece\u4e8b\u8ba1\u7b97\u673a\u76f8\u5173\u7684\u5b66\u4e60\u3001\u7814\u7a76\u548c\u5f00\u53d1\u5de5\u4f5c\u6253\u4e0b\u624e\u5b9e\u7684\u57fa\u7840\u3002\u672c\u8bfe\u7a0b\u91c7\u7528\u5f20\u94ed\u4e3b\u7f16\u7684\u56fd\u5bb6\u201c\u5341\u4e00\u4e94\u201d\u89c4\u5212\u6559\u6750\u300a\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u300b\uff08\u9ad8\u7b49\u6559\u80b2\u51fa\u7248\u793e\uff09\u3002\u9002\u5408\u8ba1\u7b97\u673a\u4ee5\u53ca\u76f8\u5173\u7406\u5de5\u4e13\u4e1a\u7684\u5927\u4e8c\u672c\u79d1\u751f\u5b66\u4e60\uff0c\u9700\u8981\u5148\u4fee\u8fc7\u8ba1\u7b97\u6982\u8bba\u7b49\u8bfe\u7a0b\uff0c\u5177\u6709\u7ed3\u6784\u5316\u548c\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u3002\u8bfe\u7a0b\u4e3b\u8981\u5305\u62ec\u7684\u5185\u5bb9\u6709\uff1a\u7ebf\u6027\u8868\uff0c\u6808\u4e0e\u961f\u5217\uff0c\u5b57\u7b26\u4e32\uff0c\u4e8c\u53c9\u6811\uff0c\u6811\uff0c\u56fe\uff0c\u6392\u5e8f\uff08\u5185\u6392\u5e8f\uff0c\u5916\u6392\u5e8f\uff09\uff0c\u68c0\u7d22\uff0c\u7d22\u5f15\uff0c\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u3001\u4ee5\u53ca\u6570\u636e\u7ed3\u6784\u5e94\u7528\u3002\u8bfe\u7a0b\u6301\u7eed16\u5468\uff08\u5206\u4e3a\u4e24\u4e2asession\uff0c\u6bcf\u4e2a8\u5468\uff09\uff0c\u5b66\u4e60\u8005\u6bcf\u5468\u5728\u672c\u8bfe\u7a0b\u4e0a\u9700\u8981\u6295\u51654\uff0d8\u5c0f\u65f6\u3002\u672c\u8bfe\u7a0b\u7684\u672c\u6b21\u5f00\u8bbe\u5f97\u5230Google\u7814\u7a76\u7ecf\u8d39\u652f\u6301\u3002Computers are an important tool for\u00a0problem\u00a0solving and are deeply involved\u00a0in modern life.\u00a0Computers perform operations on data. What is the logical relationship among data? How is data stored in computers? What algorithms are required to solve particular problems? These are the questions that will be answered in \u201cData Structures and Algorithms,\u201d an important core course in Computer Science. The course also introduces students to fundamental data structures and classical algorithms used in more specialized courses,\u00a0including Operating Systems, Software Engineering, Database Systems, Compiler\u00a0Principles, Computer Graphics and Human Computer Interaction.Niklaus Wirth described the important and indivisible link between algorithms and data structure in his book, Algorithms + Data Structures = Programs.The course will build on Wirth\u2019s ideas as it helps students improve their knowledge of theory and their ability to think abstractly to solve problems.\u00a0Building on a solid theoretical foundation, students\u00a0will analyze problems using data and algorithm abstraction. Students will learn how to organize data efficiently and make tradeoffs between space and time complexity, design efficient and effective algorithms, and implement high quality programs to solve complex real-world problems.\u00a0After studying this course, students will be well prepared for further study and research in engineering and other computer-related areas.This is an intermediate-level course appropriate for sophomore students majoring in computer science or other science/engineering disciplines. Students should\u00a0have learned \"introduction to computing\",\u00a0with the knowledge of structured and object-oriented programming.This course is presented in two eight-week sessions.Students who score 60% or higher will receive an Honor Code Certificate.The Autumn 2014 Sessions of this course are supported by Google.",
        "desc_html": "*Note - This is an Archived course*  \n  \nThis is a past/archived course. At this time, you can only explore this course\nin a self-paced fashion. Certain features of this course may not be active,\nbut many people enjoy watching the videos and working with the materials. Make\nsure to check for reruns of this course.  \n  \n\u8bfe\u7a0b\u4ecb\u7ecd\u89c6\u9891\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u4e2d\u56fd\u7f51\u7ad9  \n  \n\u8ba1\u7b97\u673a\u662f\u73b0\u4ee3\u793e\u4f1a\u4e2d\u7528\u4e8e\u89e3\u51b3\u95ee\u9898\u7684\u91cd\u8981\u5de5\u5177\u3002\u5229\u7528\u8ba1\u7b97\u673a\u89e3\u51b3\u5b9e\u9645\u95ee\u9898\u9700\u8981\u5c06\u95ee\u9898\u62bd\u8c61\uff0c\u5e76\u5bf9\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff0c\u6700\u540e\u901a\u8fc7\u8ba1\u7b97\u673a\u7a0b\u5e8f\u6c42\u89e3\u95ee\u9898\u3002\u800c\u672c\u95e8\u8bfe\u7a0b\u4e3b\u8981\u5185\u5bb9\u5c31\u662f\u5bf9\u4ee5\u4e0a\u5185\n\u5bb9\u8fdb\u884c\u7814\u7a76\u3002  \n  \n\u56fe\u7075\u5956\u83b7\u5f97\u8005N.Wirth\u5199\u4e86\u4e00\u672c\u7ecf\u5178\u8457\u4f5c\u201c\u7a0b\u5e8f=\u7b97\u6cd5+\u6570\u636e\u7ed3\u6784\u201d\u3002\u6570\u636e\u7ed3\u6784\uff0c\u662f\u62bd\u8c61\u7684\u8868\u793a\u6570\u636e\u7684\u65b9\u5f0f\uff1b\u7b97\u6cd5\uff0c\u5219\u662f\u8ba1\u7b97\u7684\u4e00\u7cfb\u5217\u6709\u6548\u3001\u901a\u7528\u7684\u6b65\u9aa4\u3002\u7b97\u6cd5\u4e0e\u6570\u636e\u7ed3\u6784\n\u662f\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u76f8\u8f85\u76f8\u6210\u7684\u4e24\u4e2a\u65b9\u9762\u3002  \n  \n\u6211\u4eec\u4f1a\u56f4\u7ed5\u7740\u201c\u7b97\u6cd5+\u6570\u636e\u7ed3\u6784=\u7a0b\u5e8f\u201d\u7684\u601d\u8def\uff0c\u4ee5\u95ee\u9898\u6c42\u89e3\u4e3a\u5bfc\u5411\u8fdb\u884c\u5b66\u4e60\u3002\u5e0c\u671b\u80fd\u591f\u5e2e\u52a9\u5927\u5bb6\u63d0\u9ad8\u7406\u8bba\u3001\u62bd\u8c61\u3001\u8bbe\u8ba1\u7684\u80fd\u529b\u3002\u5728\u624e\u5b9e\u7684\u7ecf\u5178\u7406\u8bba\u57fa\u7840\u4e0a\uff0c\u8fd0\u7528\u95ee\u9898\u62bd\u8c61\u3001\u6570\u636e\n\u62bd\u8c61\u3001\u7b97\u6cd5\u62bd\u8c61\u6765\u5206\u6790\u95ee\u9898\uff0c\u5e94\u7528\u9002\u5f53\u7684\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u6765\u8bbe\u8ba1\u548c\u5b9e\u73b0\u76f8\u5e94\u7684\u7a0b\u5e8f\u3002\u901a\u8fc7\u8bfe\u7a0b\u5b66\u4e60\uff0c\u5927\u5bb6\u7684\u62bd\u8c61\u601d\u7ef4\u80fd\u529b\u3001\u95ee\u9898\u6c42\u89e3\u80fd\u529b\u5c06\u5f97\u5230\u8f83\u5927\u63d0\u5347\uff0c\u7f16\u7a0b\u80fd\u529b\u548c\u4ee3\u7801\u8d28\u91cf\u4f1a\n\u6709\u8d28\u7684\u98de\u8dc3\uff01  \n  \n\u5728\u6c42\u89e3\u5b9e\u9645\u95ee\u9898\u65b9\u9762\uff0c\u6211\u4eec\u4f1a\u5b66\u4e60\u5230\u901a\u8fc7\u6743\u8861\u65f6\u7a7a\u548c\u5176\u4ed6\u8d44\u6e90\u5f00\u9500\uff0c\u5229\u7528\u6570\u636e\u7ed3\u6784\u6765\u7ec4\u7ec7\u6570\u636e\u3001\u8bbe\u8ba1\u9ad8\u6548\u7684\u7b97\u6cd5\u3001\u5b8c\u6210\u9ad8\u8d28\u91cf\u7684\u7a0b\u5e8f\u4ee5\u6ee1\u8db3\u9519\u7efc\u590d\u6742\u7684\u5b9e\u9645\u5e94\u7528\u9700\u8981\u3002  \n  \n\u6b64\u5916\uff0c\u8bfe\u7a0b\u6240\u5b66\u5230\u7684\u5185\u5bb9\u4f1a\u88ab\u5229\u7528\u5230\u8ba1\u7b97\u673a\u79d1\u5b66\u540e\u7eed\u7684\u5404\u4e2a\u8bfe\u7a0b\u4e2d\uff0c\u5982\u64cd\u4f5c\u7cfb\u7edf\u3001\u8f6f\u4ef6\u5de5\u7a0b\u3001\u6570\u636e\u5e93\u6982\u8bba\u3001\u7f16\u8bd1\u6280\u672f\u3001\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u3001\u4eba\u673a\u4ea4\u4e92\u7b49\u3002\u5e0c\u671b\u53ef\u4ee5\u4e3a\u5927\u5bb6\u5c06\u6765\u4ece\u4e8b\u8ba1\u7b97\n\u673a\u76f8\u5173\u7684\u5b66\u4e60\u3001\u7814\u7a76\u548c\u5f00\u53d1\u5de5\u4f5c\u6253\u4e0b\u624e\u5b9e\u7684\u57fa\u7840\u3002  \n  \n\u672c\u8bfe\u7a0b\u91c7\u7528\u5f20\u94ed\u4e3b\u7f16\u7684\u56fd\u5bb6\u201c\u5341\u4e00\u4e94\u201d\u89c4\u5212\u6559\u6750\u300a\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u300b\uff08\u9ad8\u7b49\u6559\u80b2\u51fa\u7248\u793e\uff09\u3002\u9002\u5408\u8ba1\u7b97\u673a\u4ee5\u53ca\u76f8\u5173\u7406\u5de5\u4e13\u4e1a\u7684\u5927\u4e8c\u672c\u79d1\u751f\u5b66\u4e60\uff0c\u9700\u8981\u5148\u4fee\u8fc7\u8ba1\u7b97\u6982\u8bba\u7b49\u8bfe\u7a0b\uff0c\u5177\u6709\u7ed3\n\u6784\u5316\u548c\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u3002  \n  \n\u8bfe\u7a0b\u4e3b\u8981\u5305\u62ec\u7684\u5185\u5bb9\u6709\uff1a\u7ebf\u6027\u8868\uff0c\u6808\u4e0e\u961f\u5217\uff0c\u5b57\u7b26\u4e32\uff0c\u4e8c\u53c9\u6811\uff0c\u6811\uff0c\u56fe\uff0c\u6392\u5e8f\uff08\u5185\u6392\u5e8f\uff0c\u5916\u6392\u5e8f\uff09\uff0c\u68c0\u7d22\uff0c\u7d22\u5f15\uff0c\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u3001\u4ee5\u53ca\u6570\u636e\u7ed3\u6784\u5e94\u7528\u3002\u8bfe\u7a0b\u6301\u7eed16\u5468\uff08\u5206\u4e3a\u4e24\u4e2a\nsession\uff0c\u6bcf\u4e2a8\u5468\uff09\uff0c\u5b66\u4e60\u8005\u6bcf\u5468\u5728\u672c\u8bfe\u7a0b\u4e0a\u9700\u8981\u6295\u51654\uff0d8\u5c0f\u65f6\u3002  \n  \n\u672c\u8bfe\u7a0b\u7684\u672c\u6b21\u5f00\u8bbe\u5f97\u5230Google\u7814\u7a76\u7ecf\u8d39\u652f\u6301\u3002  \n  \nComputers are an important tool for\u00a0problem\u00a0solving and are deeply involved\u00a0in\nmodern life.\u00a0Computers perform operations on data. What is the logical\nrelationship among data? How is data stored in computers? What algorithms are\nrequired to solve particular problems? These are the questions that will be\nanswered in \u201cData Structures and Algorithms,\u201d an important core course in\nComputer Science. The course also introduces students to fundamental data\nstructures and classical algorithms used in more specialized courses,\nincluding Operating Systems, Software Engineering, Database Systems, Compiler\nPrinciples, Computer Graphics and Human Computer Interaction.  \n  \nNiklaus Wirth described the important and indivisible link between algorithms\nand data structure in his book, Algorithms + Data Structures = Programs.  \n  \nThe course will build on Wirth\u2019s ideas as it helps students improve their\nknowledge of theory and their ability to think abstractly to solve problems.\nBuilding on a solid theoretical foundation, students\u00a0will analyze problems\nusing data and algorithm abstraction. Students will learn how to organize data\nefficiently and make tradeoffs between space and time complexity, design\nefficient and effective algorithms, and implement high quality programs to\nsolve complex real-world problems.\u00a0After studying this course, students will\nbe well prepared for further study and research in engineering and other\ncomputer-related areas.  \n  \nThis is an intermediate-level course appropriate for sophomore students\nmajoring in computer science or other science/engineering disciplines.\nStudents should\u00a0have learned \"introduction to computing\",\u00a0with the knowledge\nof structured and object-oriented programming.  \n  \nThis course is presented in two eight-week sessions.  \n  \nStudents who score 60% or higher will receive an Honor Code Certificate.  \n  \nThe Autumn 2014 Sessions of this course are supported by Google.\n\n",
        "name": "04830050x: \u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u7b2c\u4e00\u90e8\u5206 | Data Structures and Algorithms Part 1",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Peking University"
        ],
        "url": "https://www.edx.org/course/shu-ju-jie-gou-yu-suan-fa-di-yi-bu-fen-pekingx-04830050x",
        "video_url": "https://www.youtube.com/embed/13AKQjGCKE8?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-09-15",
        "desc": "You pick up your iPhone while waiting in line at a coffee shop. You google a not-so-famous actor, get linked to a Wikipedia entry listing his recent movies and popular YouTube clips of several of them. You check out user reviews on Amazon and pick one,\ndownload that movie on BitTorrent or stream that in Netflix. But suddenly the WiFi logo on your phone is gone and you're on 3G. Video quality starts to degrade, but you don't know if it's the server getting crowded or the Internet is congested somewhere.\nIn any case, it costs you $10 per Gigabyte, and you decide to stop watching the movie, and instead multitask between sending tweets and calling your friend on Skype, while songs stream from iCloud to your phone. You're happy with the call quality, but\nget a little irritated when you see there're no new followers on Twitter. You may wonder how they all kind of work, and why sometimes they don't. Take a look at the list of 20 questions below. Each question is selected not just for its relevance to our\ndaily lives, but also for the core concepts in the field of networking illustrated by its answers. This course is about formulating and answering some of these 20 questions.SyllabusWhat makes CDMA work for my smartphone?How does Google rank webpages?How does Netflix recommend movies?Why do AT&amp;T and Verizon Wireless charge me $10 a GB?How does traffic get through the Internet?Why doesn't the Internet collapse under congestion?Why is WiFi faster at home than at a hotspot?",
        "desc_html": "You pick up your iPhone while waiting in line at a coffee shop. You google a\nnot-so-famous actor, get linked to a Wikipedia entry listing his recent movies\nand popular YouTube clips of several of them. You check out user reviews on\nAmazon and pick one, download that movie on BitTorrent or stream that in\nNetflix. But suddenly the WiFi logo on your phone is gone and you're on 3G.\nVideo quality starts to degrade, but you don't know if it's the server getting\ncrowded or the Internet is congested somewhere. In any case, it costs you $10\nper Gigabyte, and you decide to stop watching the movie, and instead multitask\nbetween sending tweets and calling your friend on Skype, while songs stream\nfrom iCloud to your phone. You're happy with the call quality, but get a\nlittle irritated when you see there're no new followers on Twitter. You may\nwonder how they all kind of work, and why sometimes they don't. Take a look at\nthe list of 20 questions below. Each question is selected not just for its\nrelevance to our daily lives, but also for the core concepts in the field of\nnetworking illustrated by its answers. This course is about formulating and\nanswering some of these 20 questions.  \n\n## Syllabus\n\n  1. What makes CDMA work for my smartphone?\n  2. How does Google rank webpages?\n  3. How does Netflix recommend movies?\n  4. Why do AT&T and Verizon Wireless charge me $10 a GB?\n  5. How does traffic get through the Internet?\n  6. Why doesn't the Internet collapse under congestion?\n  7. Why is WiFi faster at home than at a hotspot?\n\n",
        "name": "Networks: Friends, Money, and Bytes",
        "provider": "Coursera",
        "rating": "3",
        "reviews": "1",
        "university": [
            "Princeton University"
        ],
        "url": "https://www.coursera.org/course/friendsmoneybytes",
        "video_url": ""
    },
    {
        "date": "2014-09-15",
        "desc": "\u5f00\u5c55\u4e00\u9879\u6d41\u884c\u75c5\u5b66\u7814\u7a76\u9700\u8981\u7ecf\u5386\u7814\u7a76\u8bbe\u8ba1\u3001\u73b0\u573a\u6570\u636e\u91c7\u96c6\u548c\u5f55\u5165\u3001\u6570\u636e\u6e05\u7406\u548c\u5206\u6790\u3001\u62a5\u544a\u64b0\u5199\u7b49\u4f17\u591a\u73af\u8282\u3002\u968f\u7740\u8ba1\u7b97\u673a\u8f6f\u4ef6\u5305\u7684\u53d1\u5c55\uff0c\u4e0a\u8ff0\u7684\u6bcf\u4e2a\u73af\u8282\u90fd\u53ef\u4ee5\u901a\u8fc7\u5229\u7528\u4e0d\u540c\u7684\u8f6f\u4ef6\u5305\u9ad8\u6548\u7387\u3001\u9ad8\u8d28\u91cf\u7684\u5b9e\u73b0\u3002\u672c\u8bfe\u7a0b\u671f\u671b\u901a\u8fc7\u4f17\u591a\u7684\u5b9e\u4f8b\u7ec3\u4e60\uff0c\u5e76\u914d\u4ee5\u5fc5\u8981\u7684\u6d41\u884c\u75c5\u5b66\u57fa\u7840\u77e5\u8bc6\u8bb2\u89e3\uff0c\u4f7f\u5b66\u751f\u80fd\u591f\u4e86\u89e3\u51e0\u79cd\u5e38\u89c1\u8f6f\u4ef6\u5305\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u5e76\u80fd\u5c06\u6d41\u884c\u75c5\u5b66\u57fa\u7840\u7406\u8bba\u7b49\u4e66\u672c\u77e5\u8bc6\u66f4\u52a0\u7075\u6d3b\u5730\u5e94\u7528\u4e8e\u5b9e\u9645\u7684\u7814\u7a76\u4e2d\u3002\u8ba1\u7b97\u6837\u672c\u91cf\u662f\u7814\u7a76\u8bbe\u8ba1\u73af\u8282\u4e2d\u7684\u5173\u952e\u5185\u5bb9\u4e4b\u4e00\u3002\u5728\u5f88\u591a\u6d41\u884c\u75c5\u5b66\u7684\u6559\u79d1\u4e66\u4e2d\u53ef\u8f83\u5bb9\u6613\u7684\u67e5\u5230\u4e0d\u540c\u7c7b\u578b\u7814\u7a76\u8bbe\u8ba1\u7684\u6837\u672c\u91cf\u8ba1\u7b97\u516c\u5f0f\uff1b\u5728Google\u4e2d\u641c\u7d22\uff0c\u4e5f\u53ef\u4ee5\u627e\u5230\u4e00\u4e9b\u57fa\u4e8eWeb\u7684\u6837\u672c\u91cf\u8ba1\u7b97\u6a21\u5757\u3002\u4f46\u662f\uff0c\u901a\u8fc7\u8fd9\u4e9b\u9014\u5f84\u53ea\u53ef\u4ee5\u8ba1\u7b97\u6709\u9650\u8bbe\u8ba1\u7c7b\u578b\u7684\u6837\u672c\u91cf\u3002\u672c\u8bfe\u7a0b\u5c06\u91cd\u70b9\u4ecb\u7ecdPASS\u8f6f\u4ef6\u7684\u4f7f\u7528\u65b9\u6cd5\u3002\u8be5\u8f6f\u4ef6\u53ef\u4ee5\u7528\u4e8e230\u4f59\u79cd\u7edf\u8ba1\u68c0\u9a8c\u548c\u53ef\u4fe1\u533a\u95f4\u4f30\u8ba1\u7684\u6837\u672c\u91cf\u8ba1\u7b97\u53ca\u529f\u6548\u5206\u6790\u3002\u6d41\u884c\u75c5\u5b66\u7814\u7a76\u4e2d\u7684\u6570\u636e\u53ef\u4ee5\u901a\u8fc7\u95ee\u5377\u8c03\u67e5\u3001\u4f53\u683c\u68c0\u67e5\u3001\u751f\u7269\u6837\u672c\u7684\u5b9e\u9a8c\u5ba4\u68c0\u6d4b\u3001\u73af\u5883\u8c03\u67e5\u4e0e\u68c0\u6d4b\u3001\u65e2\u5f80\u8bb0\u5f55\u6216\u6863\u6848\u67e5\u9605\u7b49\u65b9\u5f0f\u83b7\u53d6\u3002\u73b0\u9636\u6bb5\uff0c\u901a\u8fc7\u8fd9\u4e9b\u8fc7\u7a0b\u76f4\u63a5\u83b7\u53d6\u7684\u4ecd\u7136\u4ee5\u7eb8\u4ecb\u8d28\u6570\u636e\u4e3a\u4e3b\uff0c\u9700\u8981\u5229\u7528\u4e00\u4e9b\u6570\u636e\u5f55\u5165\u8f6f\u4ef6\u8f6c\u5f55\u4e3a\u53ef\u5206\u6790\u7684\u6570\u636e\u5e93\u3002\u672c\u8bfe\u7a0b\u5c06\u91cd\u70b9\u4ecb\u7ecdEpiData\u8f6f\u4ef6\u7684\u4f7f\u7528\u65b9\u6cd5\u3002\u8be5\u8f6f\u4ef6\u7684\u4f18\u52bf\u5728\u4e8e\u8f6f\u4ef6\u5c0f\u5de7\u548c\u514d\u8d39\uff0c\u53ef\u6ee1\u8db3\u6570\u636e\u5f55\u5165\u7684\u57fa\u672c\u529f\u80fd\u8981\u6c42\u3002\u901a\u8fc7\u7eb8\u8d28\u95ee\u5377\u6536\u96c6\u8c03\u67e5\u5bf9\u8c61\u7684\u4fe1\u606f\uff0c\u7136\u540e\u518d\u5f55\u5165\u5230\u7535\u8111\u4e2d\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u5c3d\u7ba1\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u57f9\u8bad\u8c03\u67e5\u5458\u3001\u5728\u95ee\u5377\u4e0a\u7a81\u51fa\u6ce8\u660e\u5fc5\u8981\u7684\u8df3\u8f6c\u6216\u5408\u6cd5\u503c\u8981\u6c42\u3001\u8c03\u67e5\u5458\u81ea\u67e5\u548c\u4e92\u67e5\u95ee\u5377\u3001\u5728\u5f55\u5165\u6570\u636e\u5e93\u4e2d\u8bbe\u7f6e\u5fc5\u8981\u7684\u6838\u67e5\u8bed\u53e5\u7b49\u8d28\u91cf\u63a7\u5236\u63aa\u65bd\u4fdd\u8bc1\u6570\u636e\u8d28\u91cf\uff0c\u4f46\u4ecd\u7136\u5e38\u89c1\u6570\u636e\u7f3a\u5931\u3001\u903b\u8f91\u9519\u8bef\u7b49\u95ee\u9898\u3002\u5e73\u884c\u53cc\u5f55\u5165\u8017\u65f6\u8017\u529b\uff0c\u53d1\u73b0\u95ee\u9898\u540e\u53ef\u80fd\u8fd8\u9700\u8981\u56de\u8bbf\u3001\u4fee\u6b63\u6570\u636e\u3002\u6574\u4e2a\u8fc7\u7a0b\u8017\u4eba\u5fc3\u529b\u3002\u672c\u8bfe\u7a0b\u5c06\u7b80\u8981\u4ecb\u7ecd\u57fa\u4e8e\u79fb\u52a8\u8bbe\u5907\u548c\u7f51\u7edc\u6280\u672f\u7684\u65e0\u7eb8\u8c03\u67e5\u65b9\u5f0f\uff0c\u5e2e\u52a9\u7406\u89e3\u5982\u4f55\u5c06\u6570\u636e\u8d28\u91cf\u63a7\u5236\u7684\u5173\u53e3\u524d\u79fb\u5230\u8c03\u67e5\u5f53\u65f6\u3002\u6d41\u884c\u75c5\u5b66\u7814\u7a76\u6709\u591a\u79cd\u4e0d\u540c\u7684\u8bbe\u8ba1\u7c7b\u578b\uff0c\u6bcf\u79cd\u8bbe\u8ba1\u53c8\u5bf9\u5e94\u7740\u4e00\u4e9b\u7279\u6709\u7684\u5206\u6790\u6307\u6807\u3002\u5e38\u7528\u7684\u7edf\u8ba1\u8f6f\u4ef6\u5305\u53ef\u4ee5\u83b7\u5f97\u8fd9\u4e9b\u6307\u6807\uff0c\u4f46\u662f\u7531\u4e8e\u8f6f\u4ef6\u662f\u6309\u7edf\u8ba1\u5206\u6790\u65b9\u6cd5\u7ec4\u7ec7\u6a21\u5757\uff0c\u9700\u8981\u4f7f\u7528\u8005\u719f\u6089\u54ea\u4e2a\u6307\u6807\u5bf9\u5e94\u7684\u662f\u54ea\u79cd\u7edf\u8ba1\u65b9\u6cd5\u5f97\u6765\u3002STATA\u4f5c\u4e3a\u5e38\u7528\u7684\u7edf\u8ba1\u8f6f\u4ef6\u5305\u4e4b\u4e00\uff0c\u4e13\u95e8\u8bbe\u8ba1\u6709\u4e00\u4e2a\u6d41\u884c\u75c5\u5b66\u76f8\u5173\u7684\u5206\u6790\u6a21\u5757\uff0c\u6309\u7814\u7a76\u8bbe\u8ba1\u7ec4\u7ec7\u83dc\u5355\u3002\u56e0\u6b64\uff0c\u672c\u8bfe\u7a0b\u4ee5STATA\u8f6f\u4ef6\u5305\u4e3a\u57fa\u7840\uff0c\u4ecb\u7ecd\u5e38\u7528\u6d41\u884c\u75c5\u5b66\u6307\u6807\u7684\u8ba1\u7b97\u3002\u62bd\u6837\u8c03\u67e5\u662f\u6700\u5e38\u5f00\u5c55\u7684\u6d41\u884c\u75c5\u5b66\u7814\u7a76\u7c7b\u578b\u4e4b\u4e00\u3002\u5728\u8f83\u5927\u8303\u56f4\u7684\u62bd\u6837\u8c03\u67e5\u4e2d\uff0c\u5f88\u5c11\u5355\u72ec\u4f7f\u7528\u5355\u7eaf\u968f\u673a\u62bd\u6837\uff0c\u66f4\u591a\u7684\u662f\u4f7f\u7528\u6574\u7fa4\u62bd\u6837\u6216\u6574\u5408\u5355\u7eaf\u3001\u7cfb\u7edf\u3001\u5206\u5c42\u3001\u6574\u7fa4\u62bd\u6837\u7684\u591a\u9636\u6bb5\u62bd\u6837\u3002\u8fd9\u6837\u62bd\u6837\u8bbe\u8ba1\u5f97\u6765\u7684\u6570\u636e\u901a\u5e38\u88ab\u79f0\u4e3a\u590d\u6742\u62bd\u6837\u8c03\u67e5\u6570\u636e\uff08complex survey data\uff09\u3002\u5e38\u89c1\u7684\u6d41\u884c\u75c5\u5b66\u6559\u79d1\u4e66\u4e2d\u901a\u5e38\u53ea\u4ecb\u7ecd\u5355\u7eaf\u968f\u673a\u62bd\u6837\u65f6\u7684\u6837\u672c\u91cf\u8ba1\u7b97\u65b9\u6cd5\uff0c\u7136\u540e\u7ed9\u51fa\u201c\u6574\u7fa4\u62bd\u6837\u65f6\u518d\u589e\u52a0\u4e00\u5b9a\u6570\u91cf\u201d\u7684\u7b80\u5355\u539f\u5219\u3002\u800c\u901a\u5e38\u7edf\u8ba1\u6559\u5b66\u4e2d\u4ecb\u7ecd\u7684\u7edf\u8ba1\u65b9\u6cd5\u66f4\u9002\u7528\u4e8e\u9488\u5bf9\u5355\u7eaf\u968f\u673a\u62bd\u6837\u83b7\u5f97\u7684\u6570\u636e\u3002\u672c\u8bfe\u7a0b\u901a\u8fc7\u4ecb\u7ecdCSurvey\u8f6f\u4ef6\u5305\u7684\u4f7f\u7528\uff0c\u5e2e\u52a9\u5b66\u751f\u66f4\u597d\u5730\u7406\u89e3\u590d\u6742\u62bd\u6837\u8c03\u67e5\u65f6\u6837\u672c\u91cf\u8ba1\u7b97\u7684\u901a\u7528\u539f\u5219\uff1b\u901a\u8fc7\u4ecb\u7ecdSTATA\u4e2d\u4e13\u95e8\u9488\u5bf9\u590d\u6742\u8c03\u67e5\u6570\u636e\u7684\u5206\u6790\u6a21\u5757\uff0c\u4f7f\u5b66\u751f\u80fd\u591f\u4e86\u89e3\u9488\u5bf9\u6b64\u7c7b\u6570\u636e\u5408\u7406\u7684\u5206\u6790\u65b9\u6cd5\u3002\u300a\u8f6f\u4ef6\u5305\u5728\u6d41\u884c\u75c5\u5b66\u7814\u7a76\u4e2d\u7684\u5e94\u7528\u300b\u662f\u5317\u4eac\u5927\u5b66\u533b\u5b66\u90e8\u6d41\u884c\u75c5\u4e0e\u536b\u751f\u7edf\u8ba1\u5b66\u5b66\u79d1\u7814\u7a76\u751f\u7684\u4e13\u4e1a\u5fc5\u4fee\u8bfe\u3002\u672c\u8bfe\u7a0b\u4e5f\u5728\u540c\u671f\u9762\u5411\u5317\u4eac\u5927\u5b66\u533b\u5b66\u90e8\u6b63\u5e38\u9009\u8bfe\u7684\u7814\u7a76\u751f\u5f00\u8bfe\uff0c\u91c7\u7528\u7ffb\u8f6c\u8bfe\u5802\u7684\u6559\u5b66\u6a21\u5f0f\uff0c\u9009\u8bfe\u5b66\u751f\u5728\u89c2\u770bMOOC\u89c6\u9891\u3001\u81ea\u5b66\u76f8\u5173\u8d44\u6e90\u548c\u5b8c\u6210\u7ec3\u4e60\u540e\uff0c\u8fd8\u9700\u53c2\u4e0e\u6559\u5ba4\u5185\u7684\u7b54\u7591\u4e92\u52a8\u3002Syllabus\u7b2c\u4e00\u5468\uff1aPASS\u8f6f\u4ef6\u5305\u5728\u6837\u672c\u91cf\u4e0e\u529f\u6548\u8ba1\u7b97\u4e2d\u7684\u5e94\u7528\u4ecb\u7ecd\u5229\u7528PASS\u8f6f\u4ef6\u5305\u8fdb\u884c\u5e38\u7528\u6d41\u884c\u75c5\u5b66\u7814\u7a76\u8bbe\u8ba1\u7684\u6837\u672c\u91cf\u548c\u529f\u6548\u8ba1\u7b97\u3002\u7b2c\u4e8c\u5468\uff1aCSurvey\u8f6f\u4ef6\u5305\u5728\u6574\u7fa4\u62bd\u6837\u8c03\u67e5\u4e2d\u7684\u5e94\u7528\u4ecb\u7ecd\u5728\u4e24\u9636\u6bb5\u6574\u7fa4\u62bd\u6837\u8c03\u67e5\u4e2d\u5229\u7528CSurvey\u8f6f\u4ef6\u5305\u5b9e\u73b0\u6837\u672c\u91cf\u8ba1\u7b97\u3001PPS\u62bd\u6837\u548c\u751f\u6210\u968f\u673a\u6570\u5b57\u8868\u3002\u7b2c\u4e09\u5468\uff1aEpiData\u8f6f\u4ef6\u5305\u5728\u6570\u636e\u5f55\u5165\u8fc7\u7a0b\u4e2d\u7684\u5e94\u7528\u4ecb\u7ecd\u5229\u7528EpiData\u8f6f\u4ef6\u5305\u5efa\u7acb\u8c03\u67e5\u95ee\u5377\u6570\u636e\u5e93\u3001\u8bbe\u7f6e\u6838\u67e5\u8bed\u53e5\u548c\u5f55\u5165\u6570\u636e\u3002\u7b2c\u56db\u5468\uff1aEpiData\u8f6f\u4ef6\u5305\u5728\u6570\u636e\u5f55\u5165\u8fc7\u7a0b\u4e2d\u7684\u5e94\u7528\u4ecb\u7ecd\u5229\u7528EpiData\u8f6f\u4ef6\u5305\u5efa\u7acb\u5173\u8054\u6570\u636e\u5e93\uff0c\u4ee5\u53ca\u540e\u671f\u5e73\u884c\u53cc\u5f55\u5165\u7684\u8bbe\u7f6e\u3001\u6570\u636e\u5bfc\u51fa\u7b49\u529f\u80fd\u3002\u7b2c\u4e94\u5468\uff1a\u57fa\u4e8e\u79fb\u52a8\u8bbe\u5907\u548c\u7f51\u7edc\u6280\u672f\u7684\u65e0\u7eb8\u8c03\u67e5\u65b9\u5f0f\u5728\u8c03\u67e5\u6570\u636e\u91c7\u96c6\u8fc7\u7a0b\u4e2d\u7684\u5e94\u7528\u4ecb\u7ecd\u57fa\u4e8eB/S\u7ed3\u6784\u7684\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u4e2d\u8c03\u67e5\u95ee\u5377\u7684\u8bbe\u7f6e\u65b9\u6cd5\uff0c\u4f53\u9a8c\u57fa\u4e8eAndroid\u5e73\u53f0\u7684\u8c03\u67e5\u8f6f\u4ef6\u6216\u57fa\u4e8eB/S\u7ed3\u6784\u7684\u6d4f\u89c8\u5668\uff08WAP\uff09\u5ba2\u6237\u7aef\u5728\u73b0\u573a\u8c03\u67e5\u6570\u636e\u91c7\u96c6\u4e2d\u7684\u5e94\u7528\u3002\u7b2c\u516d\u5468\uff1aSTATA\u8f6f\u4ef6\u5305\u7684\u57fa\u672c\u64cd\u4f5c\u4ecb\u7ecdSTATA\u8f6f\u4ef6\u5305\u7684\u57fa\u672c\u64cd\u4f5c\u65b9\u6cd5\u3002\u7b2c\u4e03\u5468\uff1aSTATA\u8f6f\u4ef6\u5305\u5728\u5e38\u7528\u6d41\u884c\u75c5\u5b66\u6307\u6807\u5206\u6790\u4e2d\u7684\u5e94\u7528\u91cd\u70b9\u4ecb\u7ecdSTATA\u4e2dTables for Epidemiologists\u6a21\u5757\u7684\u5e94\u7528\uff0c\u540c\u65f6\u8bb2\u89e3\u4e0e\u5176\u4ed6\u5e38\u7528\u5206\u6790\u6a21\u5757\u7684\u5bf9\u5e94\u6027\u3002\u7b2c\u516b\u5468\uff1aSTATA\u8f6f\u4ef6\u5305\u5728\u590d\u6742\u62bd\u6837\u8c03\u67e5\u6570\u636e\u5206\u6790\u4e2d\u7684\u5e94\u7528\u4ecb\u7ecdSTATA\u4e2dSurvey data analysis\u6a21\u5757\u5728\u590d\u6742\u62bd\u6837\u8c03\u67e5\u6570\u636e\u5206\u6790\u4e2d\u7684\u5e94\u7528\u3002\u7b2c\u4e5d\u5468\uff1aSublime Text\u8bed\u53e5\u7f16\u8f91\u5668\u7684\u7b80\u5355\u5e94\u7528\u4ecb\u7ecd\u5229\u7528\u8bed\u53e5\u7f16\u8f91\u5668Sublime Text\u8f6f\u4ef6\u5305\u63d0\u9ad8\u7edf\u8ba1\u8bed\u53e5\u7f16\u5199\u7684\u6548\u7387\u548c\u51c6\u786e\u6027\u3002\u7b2c\u5341\u5468\uff1a\u8003\u8bd5",
        "desc_html": "\u5f00\u5c55\u4e00\u9879\u6d41\u884c\u75c5\u5b66\u7814\u7a76\u9700\u8981\u7ecf\u5386\u7814\u7a76\u8bbe\u8ba1\u3001\u73b0\u573a\u6570\u636e\u91c7\u96c6\u548c\u5f55\u5165\u3001\u6570\u636e\u6e05\u7406\u548c\u5206\u6790\u3001\u62a5\u544a\u64b0\u5199\u7b49\u4f17\u591a\u73af\u8282\u3002\u968f\u7740\u8ba1\u7b97\u673a\u8f6f\u4ef6\u5305\u7684\u53d1\u5c55\uff0c\u4e0a\u8ff0\u7684\u6bcf\u4e2a\u73af\u8282\u90fd\u53ef\u4ee5\u901a\u8fc7\u5229\u7528\u4e0d\u540c\u7684\u8f6f\u4ef6\n\u5305\u9ad8\u6548\u7387\u3001\u9ad8\u8d28\u91cf\u7684\u5b9e\u73b0\u3002\u672c\u8bfe\u7a0b\u671f\u671b\u901a\u8fc7\u4f17\u591a\u7684\u5b9e\u4f8b\u7ec3\u4e60\uff0c\u5e76\u914d\u4ee5\u5fc5\u8981\u7684\u6d41\u884c\u75c5\u5b66\u57fa\u7840\u77e5\u8bc6\u8bb2\u89e3\uff0c\u4f7f\u5b66\u751f\u80fd\u591f\u4e86\u89e3\u51e0\u79cd\u5e38\u89c1\u8f6f\u4ef6\u5305\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u5e76\u80fd\u5c06\u6d41\u884c\u75c5\u5b66\u57fa\u7840\u7406\u8bba\u7b49\u4e66\u672c\n\u77e5\u8bc6\u66f4\u52a0\u7075\u6d3b\u5730\u5e94\u7528\u4e8e\u5b9e\u9645\u7684\u7814\u7a76\u4e2d\u3002\n\n  * \u8ba1\u7b97\u6837\u672c\u91cf\u662f\u7814\u7a76\u8bbe\u8ba1\u73af\u8282\u4e2d\u7684\u5173\u952e\u5185\u5bb9\u4e4b\u4e00\u3002\u5728\u5f88\u591a\u6d41\u884c\u75c5\u5b66\u7684\u6559\u79d1\u4e66\u4e2d\u53ef\u8f83\u5bb9\u6613\u7684\u67e5\u5230\u4e0d\u540c\u7c7b\u578b\u7814\u7a76\u8bbe\u8ba1\u7684\u6837\u672c\u91cf\u8ba1\u7b97\u516c\u5f0f\uff1b\u5728Google\u4e2d\u641c\u7d22\uff0c\u4e5f\u53ef\u4ee5\u627e\u5230\u4e00\u4e9b\u57fa\u4e8eWeb\u7684\u6837\u672c\u91cf\u8ba1\u7b97\u6a21\u5757\u3002\u4f46\u662f\uff0c\u901a\u8fc7\u8fd9\u4e9b\u9014\u5f84\u53ea\u53ef\u4ee5\u8ba1\u7b97\u6709\u9650\u8bbe\u8ba1\u7c7b\u578b\u7684\u6837\u672c\u91cf\u3002\u672c\u8bfe\u7a0b\u5c06\u91cd\u70b9\u4ecb\u7ecdPASS\u8f6f\u4ef6\u7684\u4f7f\u7528\u65b9\u6cd5\u3002\u8be5\u8f6f\u4ef6\u53ef\u4ee5\u7528\u4e8e230\u4f59\u79cd\u7edf\u8ba1\u68c0\u9a8c\u548c\u53ef\u4fe1\u533a\u95f4\u4f30\u8ba1\u7684\u6837\u672c\u91cf\u8ba1\u7b97\u53ca\u529f\u6548\u5206\u6790\u3002  \n\n  * \u6d41\u884c\u75c5\u5b66\u7814\u7a76\u4e2d\u7684\u6570\u636e\u53ef\u4ee5\u901a\u8fc7\u95ee\u5377\u8c03\u67e5\u3001\u4f53\u683c\u68c0\u67e5\u3001\u751f\u7269\u6837\u672c\u7684\u5b9e\u9a8c\u5ba4\u68c0\u6d4b\u3001\u73af\u5883\u8c03\u67e5\u4e0e\u68c0\u6d4b\u3001\u65e2\u5f80\u8bb0\u5f55\u6216\u6863\u6848\u67e5\u9605\u7b49\u65b9\u5f0f\u83b7\u53d6\u3002\u73b0\u9636\u6bb5\uff0c\u901a\u8fc7\u8fd9\u4e9b\u8fc7\u7a0b\u76f4\u63a5\u83b7\u53d6\u7684\u4ecd\u7136\u4ee5\u7eb8\u4ecb\u8d28\u6570\u636e\u4e3a\u4e3b\uff0c\u9700\u8981\u5229\u7528\u4e00\u4e9b\u6570\u636e\u5f55\u5165\u8f6f\u4ef6\u8f6c\u5f55\u4e3a\u53ef\u5206\u6790\u7684\u6570\u636e\u5e93\u3002\u672c\u8bfe\u7a0b\u5c06\u91cd\u70b9\u4ecb\u7ecdEpiData\u8f6f\u4ef6\u7684\u4f7f\u7528\u65b9\u6cd5\u3002\u8be5\u8f6f\u4ef6\u7684\u4f18\u52bf\u5728\u4e8e\u8f6f\u4ef6\u5c0f\u5de7\u548c\u514d\u8d39\uff0c\u53ef\u6ee1\u8db3\u6570\u636e\u5f55\u5165\u7684\u57fa\u672c\u529f\u80fd\u8981\u6c42\u3002  \n\n  * \u901a\u8fc7\u7eb8\u8d28\u95ee\u5377\u6536\u96c6\u8c03\u67e5\u5bf9\u8c61\u7684\u4fe1\u606f\uff0c\u7136\u540e\u518d\u5f55\u5165\u5230\u7535\u8111\u4e2d\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u5c3d\u7ba1\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u57f9\u8bad\u8c03\u67e5\u5458\u3001\u5728\u95ee\u5377\u4e0a\u7a81\u51fa\u6ce8\u660e\u5fc5\u8981\u7684\u8df3\u8f6c\u6216\u5408\u6cd5\u503c\u8981\u6c42\u3001\u8c03\u67e5\u5458\u81ea\u67e5\u548c\u4e92\u67e5\u95ee\u5377\u3001\u5728\u5f55\u5165\u6570\u636e\u5e93\u4e2d\u8bbe\u7f6e\u5fc5\u8981\u7684\u6838\u67e5\u8bed\u53e5\u7b49\u8d28\u91cf\u63a7\u5236\u63aa\u65bd\u4fdd\u8bc1\u6570\u636e\u8d28\u91cf\uff0c\u4f46\u4ecd\u7136\u5e38\u89c1\u6570\u636e\u7f3a\u5931\u3001\u903b\u8f91\u9519\u8bef\u7b49\u95ee\u9898\u3002\u5e73\u884c\u53cc\u5f55\u5165\u8017\u65f6\u8017\u529b\uff0c\u53d1\u73b0\u95ee\u9898\u540e\u53ef\u80fd\u8fd8\u9700\u8981\u56de\u8bbf\u3001\u4fee\u6b63\u6570\u636e\u3002\u6574\u4e2a\u8fc7\u7a0b\u8017\u4eba\u5fc3\u529b\u3002\u672c\u8bfe\u7a0b\u5c06\u7b80\u8981\u4ecb\u7ecd\u57fa\u4e8e\u79fb\u52a8\u8bbe\u5907\u548c\u7f51\u7edc\u6280\u672f\u7684\u65e0\u7eb8\u8c03\u67e5\u65b9\u5f0f\uff0c\u5e2e\u52a9\u7406\u89e3\u5982\u4f55\u5c06\u6570\u636e\u8d28\u91cf\u63a7\u5236\u7684\u5173\u53e3\u524d\u79fb\u5230\u8c03\u67e5\u5f53\u65f6\u3002  \n\n  * \u6d41\u884c\u75c5\u5b66\u7814\u7a76\u6709\u591a\u79cd\u4e0d\u540c\u7684\u8bbe\u8ba1\u7c7b\u578b\uff0c\u6bcf\u79cd\u8bbe\u8ba1\u53c8\u5bf9\u5e94\u7740\u4e00\u4e9b\u7279\u6709\u7684\u5206\u6790\u6307\u6807\u3002\u5e38\u7528\u7684\u7edf\u8ba1\u8f6f\u4ef6\u5305\u53ef\u4ee5\u83b7\u5f97\u8fd9\u4e9b\u6307\u6807\uff0c\u4f46\u662f\u7531\u4e8e\u8f6f\u4ef6\u662f\u6309\u7edf\u8ba1\u5206\u6790\u65b9\u6cd5\u7ec4\u7ec7\u6a21\u5757\uff0c\u9700\u8981\u4f7f\u7528\u8005\u719f\u6089\u54ea\u4e2a\u6307\u6807\u5bf9\u5e94\u7684\u662f\u54ea\u79cd\u7edf\u8ba1\u65b9\u6cd5\u5f97\u6765\u3002STATA\u4f5c\u4e3a\u5e38\u7528\u7684\u7edf\u8ba1\u8f6f\u4ef6\u5305\u4e4b\u4e00\uff0c\u4e13\u95e8\u8bbe\u8ba1\u6709\u4e00\u4e2a\u6d41\u884c\u75c5\u5b66\u76f8\u5173\u7684\u5206\u6790\u6a21\u5757\uff0c\u6309\u7814\u7a76\u8bbe\u8ba1\u7ec4\u7ec7\u83dc\u5355\u3002\u56e0\u6b64\uff0c\u672c\u8bfe\u7a0b\u4ee5STATA\u8f6f\u4ef6\u5305\u4e3a\u57fa\u7840\uff0c\u4ecb\u7ecd\u5e38\u7528\u6d41\u884c\u75c5\u5b66\u6307\u6807\u7684\u8ba1\u7b97\u3002  \n\n  * \u62bd\u6837\u8c03\u67e5\u662f\u6700\u5e38\u5f00\u5c55\u7684\u6d41\u884c\u75c5\u5b66\u7814\u7a76\u7c7b\u578b\u4e4b\u4e00\u3002\u5728\u8f83\u5927\u8303\u56f4\u7684\u62bd\u6837\u8c03\u67e5\u4e2d\uff0c\u5f88\u5c11\u5355\u72ec\u4f7f\u7528\u5355\u7eaf\u968f\u673a\u62bd\u6837\uff0c\u66f4\u591a\u7684\u662f\u4f7f\u7528\u6574\u7fa4\u62bd\u6837\u6216\u6574\u5408\u5355\u7eaf\u3001\u7cfb\u7edf\u3001\u5206\u5c42\u3001\u6574\u7fa4\u62bd\u6837\u7684\u591a\u9636\u6bb5\u62bd\u6837\u3002\u8fd9\u6837\u62bd\u6837\u8bbe\u8ba1\u5f97\u6765\u7684\u6570\u636e\u901a\u5e38\u88ab\u79f0\u4e3a\u590d\u6742\u62bd\u6837\u8c03\u67e5\u6570\u636e\uff08complex survey data\uff09\u3002\u5e38\u89c1\u7684\u6d41\u884c\u75c5\u5b66\u6559\u79d1\u4e66\u4e2d\u901a\u5e38\u53ea\u4ecb\u7ecd\u5355\u7eaf\u968f\u673a\u62bd\u6837\u65f6\u7684\u6837\u672c\u91cf\u8ba1\u7b97\u65b9\u6cd5\uff0c\u7136\u540e\u7ed9\u51fa\u201c\u6574\u7fa4\u62bd\u6837\u65f6\u518d\u589e\u52a0\u4e00\u5b9a\u6570\u91cf\u201d\u7684\u7b80\u5355\u539f\u5219\u3002\u800c\u901a\u5e38\u7edf\u8ba1\u6559\u5b66\u4e2d\u4ecb\u7ecd\u7684\u7edf\u8ba1\u65b9\u6cd5\u66f4\u9002\u7528\u4e8e\u9488\u5bf9\u5355\u7eaf\u968f\u673a\u62bd\u6837\u83b7\u5f97\u7684\u6570\u636e\u3002\u672c\u8bfe\u7a0b\u901a\u8fc7\u4ecb\u7ecdCSurvey\u8f6f\u4ef6\u5305\u7684\u4f7f\u7528\uff0c\u5e2e\u52a9\u5b66\u751f\u66f4\u597d\u5730\u7406\u89e3\u590d\u6742\u62bd\u6837\u8c03\u67e5\u65f6\u6837\u672c\u91cf\u8ba1\u7b97\u7684\u901a\u7528\u539f\u5219\uff1b\u901a\u8fc7\u4ecb\u7ecdSTATA\u4e2d\u4e13\u95e8\u9488\u5bf9\u590d\u6742\u8c03\u67e5\u6570\u636e\u7684\u5206\u6790\u6a21\u5757\uff0c\u4f7f\u5b66\u751f\u80fd\u591f\u4e86\u89e3\u9488\u5bf9\u6b64\u7c7b\u6570\u636e\u5408\u7406\u7684\u5206\u6790\u65b9\u6cd5\u3002  \n\n\u300a\u8f6f\u4ef6\u5305\u5728\u6d41\u884c\u75c5\u5b66\u7814\u7a76\u4e2d\u7684\u5e94\u7528\u300b\u662f\u5317\u4eac\u5927\u5b66\u533b\u5b66\u90e8\u6d41\u884c\u75c5\u4e0e\u536b\u751f\u7edf\u8ba1\u5b66\u5b66\u79d1\u7814\u7a76\u751f\u7684\u4e13\u4e1a\u5fc5\u4fee\u8bfe\u3002\u672c\u8bfe\u7a0b\u4e5f\u5728\u540c\u671f\u9762\u5411\u5317\u4eac\u5927\u5b66\u533b\u5b66\u90e8\u6b63\u5e38\u9009\u8bfe\u7684\u7814\u7a76\u751f\u5f00\u8bfe\uff0c\u91c7\u7528\u7ffb\u8f6c\u8bfe\u5802\n\u7684\u6559\u5b66\u6a21\u5f0f\uff0c\u9009\u8bfe\u5b66\u751f\u5728\u89c2\u770bMOOC\u89c6\u9891\u3001\u81ea\u5b66\u76f8\u5173\u8d44\u6e90\u548c\u5b8c\u6210\u7ec3\u4e60\u540e\uff0c\u8fd8\u9700\u53c2\u4e0e\u6559\u5ba4\u5185\u7684\u7b54\u7591\u4e92\u52a8\u3002\n\n## Syllabus\n\n**\u7b2c\u4e00\u5468\uff1a****PASS****\u8f6f\u4ef6\u5305\u5728\u6837\u672c\u91cf\u4e0e\u529f\u6548\u8ba1\u7b97\u4e2d\u7684\u5e94\u7528******\n\n\u4ecb\u7ecd\u5229\u7528PASS\u8f6f\u4ef6\u5305\u8fdb\u884c\u5e38\u7528\u6d41\u884c\u75c5\u5b66\u7814\u7a76\u8bbe\u8ba1\u7684\u6837\u672c\u91cf\u548c\u529f\u6548\u8ba1\u7b97\u3002\n\n**\u7b2c\u4e8c\u5468\uff1a****CSurvey****\u8f6f\u4ef6\u5305\u5728\u6574\u7fa4\u62bd\u6837\u8c03\u67e5\u4e2d\u7684\u5e94\u7528******\n\n\u4ecb\u7ecd\u5728\u4e24\u9636\u6bb5\u6574\u7fa4\u62bd\u6837\u8c03\u67e5\u4e2d\u5229\u7528CSurvey\u8f6f\u4ef6\u5305\u5b9e\u73b0\u6837\u672c\u91cf\u8ba1\u7b97\u3001PPS\u62bd\u6837\u548c\u751f\u6210\u968f\u673a\u6570\u5b57\u8868\u3002\n\n**\u7b2c\u4e09\u5468\uff1a****EpiData****\u8f6f\u4ef6\u5305\u5728\u6570\u636e\u5f55\u5165\u8fc7\u7a0b\u4e2d\u7684\u5e94\u7528******\n\n\u4ecb\u7ecd\u5229\u7528EpiData\u8f6f\u4ef6\u5305\u5efa\u7acb\u8c03\u67e5\u95ee\u5377\u6570\u636e\u5e93\u3001\u8bbe\u7f6e\u6838\u67e5\u8bed\u53e5\u548c\u5f55\u5165\u6570\u636e\u3002\n\n**\u7b2c\u56db\u5468\uff1a****EpiData****\u8f6f\u4ef6\u5305\u5728\u6570\u636e\u5f55\u5165\u8fc7\u7a0b\u4e2d\u7684\u5e94\u7528******\n\n\u4ecb\u7ecd\u5229\u7528EpiData\u8f6f\u4ef6\u5305\u5efa\u7acb\u5173\u8054\u6570\u636e\u5e93\uff0c\u4ee5\u53ca\u540e\u671f\u5e73\u884c\u53cc\u5f55\u5165\u7684\u8bbe\u7f6e\u3001\u6570\u636e\u5bfc\u51fa\u7b49\u529f\u80fd\u3002\n\n**\u7b2c\u4e94\u5468\uff1a\u57fa\u4e8e\u79fb\u52a8\u8bbe\u5907\u548c\u7f51\u7edc\u6280\u672f\u7684\u65e0\u7eb8\u8c03\u67e5\u65b9\u5f0f\u5728\u8c03\u67e5\u6570\u636e\u91c7\u96c6\u8fc7\u7a0b\u4e2d\u7684\u5e94\u7528******\n\n\u4ecb\u7ecd\u57fa\u4e8eB/S\u7ed3\u6784\u7684\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u4e2d\u8c03\u67e5\u95ee\u5377\u7684\u8bbe\u7f6e\u65b9\u6cd5\uff0c\u4f53\u9a8c\u57fa\u4e8eAndroid\u5e73\u53f0\u7684\u8c03\u67e5\u8f6f\u4ef6\u6216\u57fa\u4e8eB/S\u7ed3\u6784\u7684\u6d4f\u89c8\u5668\uff08WAP\uff09\u5ba2\u6237\u7aef\u5728\u73b0\u573a\u8c03\u67e5\u6570\u636e\u91c7\u96c6\u4e2d\u7684\u5e94\u7528\n\u3002\n\n**\u7b2c\u516d\u5468\uff1a****STATA****\u8f6f\u4ef6\u5305\u7684\u57fa\u672c\u64cd\u4f5c******\n\n\u4ecb\u7ecdSTATA\u8f6f\u4ef6\u5305\u7684\u57fa\u672c\u64cd\u4f5c\u65b9\u6cd5\u3002\n\n**\u7b2c\u4e03\u5468\uff1a****STATA****\u8f6f\u4ef6\u5305\u5728\u5e38\u7528\u6d41\u884c\u75c5\u5b66\u6307\u6807\u5206\u6790\u4e2d\u7684\u5e94\u7528******\n\n\u91cd\u70b9\u4ecb\u7ecdSTATA\u4e2dTables for Epidemiologists\u6a21\u5757\u7684\u5e94\u7528\uff0c\u540c\u65f6\u8bb2\u89e3\u4e0e\u5176\u4ed6\u5e38\u7528\u5206\u6790\u6a21\u5757\u7684\u5bf9\u5e94\u6027\u3002\n\n**\u7b2c\u516b\u5468\uff1a****STATA****\u8f6f\u4ef6\u5305\u5728\u590d\u6742\u62bd\u6837\u8c03\u67e5\u6570\u636e\u5206\u6790\u4e2d\u7684\u5e94\u7528******\n\n\u4ecb\u7ecdSTATA\u4e2dSurvey data analysis\u6a21\u5757\u5728\u590d\u6742\u62bd\u6837\u8c03\u67e5\u6570\u636e\u5206\u6790\u4e2d\u7684\u5e94\u7528\u3002\n\n**\u7b2c\u4e5d\u5468\uff1a****Sublime Text****\u8bed\u53e5\u7f16\u8f91\u5668\u7684\u7b80\u5355\u5e94\u7528******\n\n\u4ecb\u7ecd\u5229\u7528\u8bed\u53e5\u7f16\u8f91\u5668Sublime Text\u8f6f\u4ef6\u5305\u63d0\u9ad8\u7edf\u8ba1\u8bed\u53e5\u7f16\u5199\u7684\u6548\u7387\u548c\u51c6\u786e\u6027\u3002\n\n**\u7b2c\u5341\u5468\uff1a\u8003\u8bd5******\n\n",
        "name": "\u8f6f\u4ef6\u5305\u5728\u6d41\u884c\u75c5\u5b66\u7814\u7a76\u4e2d\u7684\u5e94\u7528 Using software apps in epidemiological research",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Peking University"
        ],
        "url": "https://www.coursera.org/course/epiapps",
        "video_url": ""
    },
    {
        "date": "2014-09-15",
        "desc": "This course introduces the cornerstones of functional programming using the Scala programming language. Functional programming has become more and more popular in recent years because it promotes code that\u2019s safe, concise, and elegant. Furthermore, functional programming makes it easier to write parallel code for today\u2019s and tomorrow\u2019s multiprocessors by replacing mutable variables and loops with powerful ways to define and compose functions.Scala is a language that fuses functional and object-oriented programming in a practical package. It interoperates seamlessly with Java and its tools. Scala is now used in a rapidly increasing number of open source projects and companies. It provides the core infrastructure for sites such as Twitter, LinkedIn, Foursquare, Tumblr, and Klout.In this course you will discover the elements of the functional programming style and learn how to apply them usefully in your daily programming tasks. You will also develop a solid foundation for reasoning about functional programs, by touching upon proofs of invariants and the tracing of execution symbolically.The course is hands on; most units introduce short programs that serve as illustrations of important concepts and invite you to play with them, modifying and improving them. The course is complemented by a series of assignments, most of which are also programming projects.SyllabusWeek One:Programming paradigms; overview of functional programming and the Scala programming language.Week Two:Defining and using functions, recursion and non-termination, working with functions as values, reasoning by reduction.Week Three:Defining and using immutable objects, review of inheritance and dynamic binding.Week Four:Types and Pattern MatchingWeek Five:Working with ListsWeek Six:Collections and Combinatorial SearchWeek Seven:Lazy Evaluation",
        "desc_html": "This course introduces the cornerstones of functional programming using the\nScala programming language. Functional programming has become more and more\npopular in recent years because it promotes code that\u2019s safe, concise, and\nelegant. Furthermore, functional programming makes it easier to write parallel\ncode for today\u2019s and tomorrow\u2019s multiprocessors by replacing mutable variables\nand loops with powerful ways to define and compose functions.  \n  \nScala is a language that fuses functional and object-oriented programming in a\npractical package. It interoperates seamlessly with Java and its tools. Scala\nis now used in a rapidly increasing number of open source projects and\ncompanies. It provides the core infrastructure for sites such as Twitter,\nLinkedIn, Foursquare, Tumblr, and Klout.  \n  \nIn this course you will discover the elements of the functional programming\nstyle and learn how to apply them usefully in your daily programming tasks.\nYou will also develop a solid foundation for reasoning about functional\nprograms, by touching upon proofs of invariants and the tracing of execution\nsymbolically.  \n  \nThe course is hands on; most units introduce short programs that serve as\nillustrations of important concepts and invite you to play with them,\nmodifying and improving them. The course is complemented by a series of\nassignments, most of which are also programming projects.\n\n## Syllabus\n\n**Week One:** Programming paradigms; overview of functional programming and the Scala programming language.\n\n**Week Two:** Defining and using functions, recursion and non-termination, working with functions as values, reasoning by reduction.\u00a0\n\n**Week Three:** Defining and using immutable objects, review of inheritance and dynamic binding.\n\n**Week Four:** Types and Pattern Matching\n\n**Week Five:**\u00a0Working with Lists\n\n**Week Six:**\u00a0Collections and Combinatorial Search\n\n**Week Seven:** Lazy Evaluation\n\n",
        "name": "Functional Programming Principles in Scala",
        "provider": "Coursera",
        "rating": "4.8571428571429",
        "reviews": "21",
        "university": [
            "\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne"
        ],
        "url": "https://www.coursera.org/course/progfun",
        "video_url": ""
    },
    {
        "date": "2014-09-15",
        "desc": "*Note - This is an Archived course*This is a past/archived course. At this time, you can only explore this course in a self-paced fashion. Certain features of this course may not be active, but many people enjoy watching the videos and working with the materials. Make sure to check for reruns of this course.\u672c\u8bfe\u7a0b\u7684\u6559\u5b66\u5185\u5bb9\u5305\u62ec\uff1a\u5f62\u5f0f\u8bed\u8a00\u4e0e\u81ea\u52a8\u673a\u7406\u8bba\u3001\u53ef\u8ba1\u7b97\u6027\u7406\u8bba\u3001\u8ba1\u7b97\u590d\u6742\u6027\u7406\u8bba\u7b49\u4e09\u4e2a\u90e8\u5206\u3002\u8fd9\u4e9b\u5185\u5bb9\u5206\u522b\u56de\u7b54\u4e0b\u5217\u95ee\u9898\uff1a\uff081\uff09\u6709\u54ea\u4e9b\u8ba1\u7b97\u88c5\u7f6e\uff1f\u5b83\u4eec\u7684\u80fd\u529b\u5982\u4f55\uff1f\uff082\uff09\u4ec0\u4e48\u662f\u8ba1\u7b97\uff1f\u54ea\u4e9b\u95ee\u9898\u662f\uff08\u4e0d\uff09\u53ef\u8ba1\u7b97\u7684\uff1f\uff083\uff09\u4ec0\u4e48\u662f\u6709\u6548\u8ba1\u7b97\uff1f\u54ea\u4e9b\u95ee\u9898\u662f\uff08\u4e0d\uff09\u53ef\u6709\u6548\u8ba1\u7b97\u7684\uff1f\u901a\u8fc7\u8fd9\u95e8\u8bfe\u7a0b\u7684\u5b66\u4e60\uff0c\u5b66\u751f\u5c06\u4e86\u89e3\u8ba1\u7b97\u7406\u8bba\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u638c\u63e1\u6709\u6548\u8ba1\u7b97\u7684\u6982\u5ff5\u3002\u672c\u8bfe\u7a0b\u7684\u6559\u5b66\u65b9\u5f0f\u5305\u62ec\u6559\u5b66\u5f55\u50cf\u7247\u6bb5\uff08\u6bcf\u6bb5\u5f55\u50cf8-20\u5206\u949f\uff0c\u5185\u542b1-2\u4e2a\u6d4b\u9a8c\u95ee\u9898\uff09\uff0c\u6559\u5b66\u5f55\u50cf\u4e4b\u5916\u7684\u4e66\u9762\u4f5c\u4e1a\uff0c\u4ee5\u53ca\uff08\u5fc5\u987b\u53c2\u52a0\u7684\uff09\u671f\u672b\u8003\u8bd5\u3002\u672c\u8bfe\u7a0b\u8bfe\u7a0b\u7684\u603b\u957f\u5ea6\u4e3a8\u5468\uff0c\u6bcf\u5468\u6559\u5b66\u5f55\u50cf\u957f\u5ea6\u5927\u7ea6120\u5206\u949f\u3002\u9700\u8981\u7684\u9884\u5907\u77e5\u8bc6\u662f\u79bb\u6563\u6570\u5b66\uff08\u96c6\u5408\u8bba\u3001\u6570\u7406\u903b\u8f91\u3001\u56fe\u8bba\u7b49\uff09\u7684\u57fa\u672c\u6982\u5ff5\u3002",
        "desc_html": "*Note - This is an Archived course*  \nThis is a past/archived course. At this time, you can only explore this course\nin a self-paced fashion. Certain features of this course may not be active,\nbut many people enjoy watching the videos and working with the materials. Make\nsure to check for reruns of this course.  \n\u672c\u8bfe\u7a0b\u7684\u6559\u5b66\u5185\u5bb9\u5305\u62ec\uff1a\u5f62\u5f0f\u8bed\u8a00\u4e0e\u81ea\u52a8\u673a\u7406\u8bba\u3001\u53ef\u8ba1\u7b97\u6027\u7406\u8bba\u3001\u8ba1\u7b97\u590d\u6742\u6027\u7406\u8bba\u7b49\u4e09\u4e2a\u90e8\u5206\u3002\u8fd9\u4e9b\u5185\u5bb9\u5206\u522b\u56de\u7b54\u4e0b\u5217\u95ee\u9898\uff1a\uff081\uff09\u6709\u54ea\u4e9b\u8ba1\u7b97\u88c5\u7f6e\uff1f\u5b83\u4eec\u7684\u80fd\u529b\u5982\u4f55\uff1f\uff082\uff09\u4ec0\n\u4e48\u662f\u8ba1\u7b97\uff1f\u54ea\u4e9b\u95ee\u9898\u662f\uff08\u4e0d\uff09\u53ef\u8ba1\u7b97\u7684\uff1f\uff083\uff09\u4ec0\u4e48\u662f\u6709\u6548\u8ba1\u7b97\uff1f\u54ea\u4e9b\u95ee\u9898\u662f\uff08\u4e0d\uff09\u53ef\u6709\u6548\u8ba1\u7b97\u7684\uff1f\u901a\u8fc7\u8fd9\u95e8\u8bfe\u7a0b\u7684\u5b66\u4e60\uff0c\u5b66\u751f\u5c06\u4e86\u89e3\u8ba1\u7b97\u7406\u8bba\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u638c\u63e1\u6709\u6548\u8ba1\u7b97\u7684\u6982\u5ff5\n\u3002  \n\u672c\u8bfe\u7a0b\u7684\u6559\u5b66\u65b9\u5f0f\u5305\u62ec\u6559\u5b66\u5f55\u50cf\u7247\u6bb5\uff08\u6bcf\u6bb5\u5f55\u50cf8-20\u5206\u949f\uff0c\u5185\u542b1-2\u4e2a\u6d4b\u9a8c\u95ee\u9898\uff09\uff0c\u6559\u5b66\u5f55\u50cf\u4e4b\u5916\u7684\u4e66\u9762\u4f5c\u4e1a\uff0c\u4ee5\u53ca\uff08\u5fc5\u987b\u53c2\u52a0\u7684\uff09\u671f\u672b\u8003\u8bd5\u3002  \n\u672c\u8bfe\u7a0b\u8bfe\u7a0b\u7684\u603b\u957f\u5ea6\u4e3a8\u5468\uff0c\u6bcf\u5468\u6559\u5b66\u5f55\u50cf\u957f\u5ea6\u5927\u7ea6120\u5206\u949f\u3002\u9700\u8981\u7684\u9884\u5907\u77e5\u8bc6\u662f\u79bb\u6563\u6570\u5b66\uff08\u96c6\u5408\u8bba\u3001\u6570\u7406\u903b\u8f91\u3001\u56fe\u8bba\u7b49\uff09\u7684\u57fa\u672c\u6982\u5ff5\u3002\n\n",
        "name": "04830260x: \u7406\u8bba\u8ba1\u7b97\u673a\u79d1\u5b66\u57fa\u7840 | Introduction to Theoretical Computer Science",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Peking University"
        ],
        "url": "https://www.edx.org/course/li-lun-ji-suan-ji-ke-xue-ji-chu-pekingx-04830260x",
        "video_url": ""
    },
    {
        "date": "2014-09-15",
        "desc": "\u8bfe\u7a0b\u4ecb\u7ecd\u89c6\u9891\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u91cc\u3002\u64cd\u4f5c\u7cfb\u7edf\u662f\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u57fa\u7840\u8f6f\u4ef6\uff0c\u800c\u7cfb\u7edf\u865a\u62df\u5316\u5df2\u6210\u4e3a\u4e91\u8ba1\u7b97\u5e73\u53f0\u7684\u6838\u5fc3\u6280\u672f\uff0c\u6ca1\u6709\u5b83\u4eec\u63d0\u4f9b\u7684\u5b89\u5168\u6027\uff0c\u8fd9\u4e9b\u8ba1\u7b97\u673a\u7cfb\u7edf\u53ca\u5176\u4e0a\u6570\u636e\u7684\u5b89\u5168\u6027\u90fd\u5c06\u65e0\u6cd5\u4fdd\u969c\u3002\u672c\u8bfe\u7a0b\u5c06\u4ece\u7406\u8bba\u4e0e\u5de5\u7a0b\u5b9e\u8df5\u76f8\u7ed3\u5408\u7684\u89d2\u5ea6\uff0c\u4ecb\u7ecd\u64cd\u4f5c\u7cfb\u7edf(Linux)\u4e0e\u7cfb\u7edf\u865a\u62df\u5316(Xen)\u5b89\u5168\u76f8\u5173\u7406\u8bba\u3001\u6280\u672f\u548c\u65b9\u6cd5\uff0c\u5305\u62ec\uff1a\u5b89\u5168\u6982\u5ff5\u3001\u5b89\u5168\u673a\u5236\u3001\u5b89\u5168\u6a21\u578b\u3001\u5b89\u5168\u4f53\u7cfb\u7ed3\u6784\u3001\u5b89\u5168\u5f00\u53d1\u65b9\u6cd5\u3001\u5b89\u5168\u6807\u51c6\u4e0e\u8bc4\u6d4b\u65b9\u6cd5\u7b49\uff0c\u5e2e\u52a9\u4f60\u6df1\u5165\u5b66\u4e60\u548c\u7406\u89e3\u8be5\u9886\u57df\u7684\u77e5\u8bc6\u4f53\u7cfb\u3001\u5b9e\u8df5\u6280\u672f\u548c\u65b9\u6cd5\u3002\u8fd9\u662f\u4e00\u95e8\u9002\u5408\u672c\u79d1\u751f\u3001\u4ee5\u53ca\u7814\u7a76\u751f\u7684\u8bfe\u7a0b\uff0c\u9002\u5408\u8ba1\u7b97\u673a\u3001\u8f6f\u4ef6\u5de5\u7a0b\u548c\u4fe1\u606f\u5b89\u5168\u7c7b\u4e13\u4e1a\uff1b\u540c\u65f6\u4e5f\u53ef\u4f9b\u6709\u5174\u8da3\u7684\u76f8\u5173\u7814\u7a76\u4eba\u5458\u3001\u5de5\u7a0b\u6280\u672f\u4eba\u5458\u3001\u7ba1\u7406\u4eba\u5458\u548c\u7231\u597d\u8005\u7b49\u5b66\u4e60\u548c\u501f\u9274\u3002\u8bfe\u7a0b\u7684\u5185\u5bb9\u4e3b\u8981\u57fa\u4e8e\u6559\u6750\u300a\u64cd\u4f5c\u7cfb\u7edf\u5b89\u5168\u8bbe\u8ba1\u300b\uff08\u673a\u68b0\u5de5\u4e1a\u51fa\u7248\u793e\uff0c2013.9\uff09\u3002\u8be5\u8bfe\u7a0b\u662f\u5317\u4eac\u5927\u5b66\u7cbe\u54c1\u8bfe\u7a0b\uff0cIntelUPO\u8d44\u52a9\u7684\u56fd\u5185\u9996\u6279\u8ba1\u7b97\u673a\u5b89\u5168\u7c7b\u8bfe\u7a0b\u4e4b\u4e00.Syllabus\u7b2c1\u5468. \u8ba1\u7b97\u673a\u7cfb\u7edf\u5b89\u5168\u7684\u91cd\u8981\u6027\u4e0e\u8bc4\u6d4b\u6807\u51c6\u7b2c2\u5468. \u8ba1\u7b97\u673a\u7cfb\u7edf\u57fa\u672c\u5b89\u5168\u6982\u5ff5\u548c\u8bbe\u8ba1\u601d\u60f3\u7b2c3\u5468. \u8bbf\u95ee\u63a7\u5236\u673a\u5236\uff08\u81ea\u4e3b\u8bbf\u95ee\u673a\u5236\uff0c\u5f3a\u5236\u8bbf\u95ee\u63a7\u5236\uff0c\u5ba2\u4f53\u91cd\u7528\uff09\u7b2c4\u5468. \u53ef\u8ffd\u7a76\u673a\u5236\uff08\u6807\u8bc6\u4e0e\u9274\u522b\uff0c\u53ef\u4fe1\u901a\u8def\uff0c\u5b89\u5168\u5ba1\u8ba1\uff09\u7b2c5\u5468. \u8fde\u7eed\u4fdd\u62a4\u673a\u5236\uff08I\uff09\uff08\u6700\u5c0f\u7279\u6743\u7ba1\u7406\uff0c \u7cfb\u7edf\u5b8c\u6574\u6027\uff09\u7b2c6\u5468. \u8fde\u7eed\u4fdd\u62a4\u673a\u5236\uff08II\uff09\uff08\u9690\u853d\u901a\u9053\u5206\u6790\uff1b\u53ef\u4fe1\u6062\u590d\uff09\u7b2c7\u5468. \u5b89\u5168\u6a21\u578b\uff08BLP\u6a21\u578b\uff0cBIBA\u6a21\u578b\uff0c\u4e2d\u56fd\u5899\u6a21\u578b\uff0cRBAC\u6a21\u578b\u4e0eDTE\u6a21\u578b\uff09\u7b2c8\u5468. \u5b89\u5168\u4f53\u7cfb\u7ed3\u6784\uff08Flask\u5b89\u5168\u4f53\u7cfb\u7ed3\u6784\u3001LSM\u5b89\u5168\u6846\u67b6\uff0cXSM\u5b89\u5168\u6846\u67b6\uff09\u7b2c9\u5468. \u53ef\u4fe1\u8ba1\u7b97\u6280\u672f\uff08\u8bbf\u8c08\u537f\u65af\u6c49\u6559\u6388\u3001\u738b\u7ecd\u658c\u535a\u58eb\uff09\u7b2c10\u5468. \u5b89\u5168\u64cd\u4f5c\u7cfb\u7edf\u7684\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\u6280\u672f\u6848\u4f8b\uff08\u8bbf\u8c08\u537f\u65af\u6c49\u6559\u6388\uff09\u7b2c11\u5468. \u57fa\u4e8e\u5b89\u5168\u64cd\u4f5c\u7cfb\u7edf\u7684\u5e94\u7528-\u6570\u636e\u5e93\u5b89\u5168\uff08\u5f20\u654f\u8001\u5e08\u7684\u4e13\u9898\uff09\u7b2c12\u5468. \u7cfb\u7edf\u865a\u62df\u5316\u5b89\u5168\u4e0e\u865a\u62df\u53ef\u4fe1\u5e73\u53f0\u6280\u672f",
        "desc_html": "\u8bfe\u7a0b\u4ecb\u7ecd\u89c6\u9891\u53ef\u4ee5\u8bbf\u95ee[\u8fd9\u91cc](http://video.study.163.com/edu-\nvideo/nos/mp4/2014/07/25/527141_hd.mp4)\u3002\n\n  \n\u64cd\u4f5c\u7cfb\u7edf\u662f\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u57fa\u7840\u8f6f\u4ef6\uff0c\u800c\u7cfb\u7edf\u865a\u62df\u5316\u5df2\u6210\u4e3a\u4e91\u8ba1\u7b97\u5e73\u53f0\u7684\u6838\u5fc3\u6280\u672f\uff0c\u6ca1\u6709\u5b83\u4eec\u63d0\u4f9b\u7684\u5b89\u5168\u6027\uff0c\u8fd9\u4e9b\u8ba1\u7b97\u673a\u7cfb\u7edf\u53ca\u5176\u4e0a\u6570\u636e\u7684\u5b89\u5168\u6027\u90fd\u5c06\u65e0\u6cd5\u4fdd\u969c\u3002\u672c\u8bfe\u7a0b\u5c06\u4ece\u7406\u8bba\u4e0e\n\u5de5\u7a0b\u5b9e\u8df5\u76f8\u7ed3\u5408\u7684\u89d2\u5ea6\uff0c\u4ecb\u7ecd\u64cd\u4f5c\u7cfb\u7edf(Linux)\u4e0e\u7cfb\u7edf\u865a\u62df\u5316(Xen)\u5b89\u5168\u76f8\u5173\u7406\u8bba\u3001\u6280\u672f\u548c\u65b9\u6cd5\uff0c\u5305\u62ec\uff1a\u5b89\u5168\u6982\u5ff5\u3001\u5b89\u5168\u673a\u5236\u3001\u5b89\u5168\u6a21\u578b\u3001\u5b89\u5168\u4f53\u7cfb\u7ed3\u6784\u3001\u5b89\u5168\u5f00\u53d1\u65b9\n\u6cd5\u3001\u5b89\u5168\u6807\u51c6\u4e0e\u8bc4\u6d4b\u65b9\u6cd5\u7b49\uff0c\u5e2e\u52a9\u4f60\u6df1\u5165\u5b66\u4e60\u548c\u7406\u89e3\u8be5\u9886\u57df\u7684\u77e5\u8bc6\u4f53\u7cfb\u3001\u5b9e\u8df5\u6280\u672f\u548c\u65b9\u6cd5\u3002  \n  \n\u8fd9\u662f\u4e00\u95e8\u9002\u5408\u672c\u79d1\u751f\u3001\u4ee5\u53ca\u7814\u7a76\u751f\u7684\u8bfe\u7a0b\uff0c\u9002\u5408\u8ba1\u7b97\u673a\u3001\u8f6f\u4ef6\u5de5\u7a0b\u548c\u4fe1\u606f\u5b89\u5168\u7c7b\u4e13\u4e1a\uff1b\u540c\u65f6\u4e5f\u53ef\u4f9b\u6709\u5174\u8da3\u7684\u76f8\u5173\u7814\u7a76\u4eba\u5458\u3001\u5de5\u7a0b\u6280\u672f\u4eba\u5458\u3001\u7ba1\u7406\u4eba\u5458\u548c\u7231\u597d\u8005\u7b49\u5b66\u4e60\u548c\u501f\u9274\u3002  \n  \n\n\u8bfe\u7a0b\u7684\u5185\u5bb9\u4e3b\u8981\u57fa\u4e8e\u6559\u6750[\u300a\u64cd\u4f5c\u7cfb\u7edf\u5b89\u5168\u8bbe\u8ba1\u300b\uff08\u673a\u68b0\u5de5\u4e1a\u51fa\u7248\u793e\uff0c2013.9\uff09](http://www.amazon.cn/%E9%AB%98%E7%AD%8\n9%E9%99%A2%E6%A0%A1%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E4%B8%93%E4%B8%9A%E8%A\n7%84%E5%88%92%E6%95%99%E6%9D%90-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AE%89%\nE5%85%A8%E8%AE%BE%E8%AE%A1-%E6%B2%88%E6%99%B4%E9%9C%93/dp/B00FIY49GO/ref=sr_1_\n1?ie=UTF8&qid=1404639920&sr=8-1&keywords=%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%\nE5%AE%89%E5%85%A8%E8%AE%BE%E8%AE%A1)\u3002\n\n[\u8be5\u8bfe\u7a0b\u662f\u5317\u4eac\u5927\u5b66\u7cbe\u54c1\u8bfe\u7a0b\uff0c](http://www.intel.com/content/www/us/en/education/university\n/intel-labs-security-curriculum-list.html)[Intel\n](http://www.intel.com/content/www/us/en/education/university/intel-labs-\nsecurity-curriculum-list.html)[UPO\u8d44\u52a9\u7684\u56fd\u5185\u9996\u6279\u8ba1\u7b97\u673a\u5b89\u5168\u7c7b\u8bfe\u7a0b\u4e4b\u4e00](http://www.intel.com/cont\nent/www/us/en/education/university/intel-labs-security-curriculum-list.html).  \n  \n\n## Syllabus\n\n\u7b2c1\u5468. \u8ba1\u7b97\u673a\u7cfb\u7edf\u5b89\u5168\u7684\u91cd\u8981\u6027\u4e0e\u8bc4\u6d4b\u6807\u51c6  \n\u7b2c2\u5468. \u8ba1\u7b97\u673a\u7cfb\u7edf\u57fa\u672c\u5b89\u5168\u6982\u5ff5\u548c\u8bbe\u8ba1\u601d\u60f3  \n\u7b2c3\u5468. \u8bbf\u95ee\u63a7\u5236\u673a\u5236\uff08\u81ea\u4e3b\u8bbf\u95ee\u673a\u5236\uff0c\u5f3a\u5236\u8bbf\u95ee\u63a7\u5236\uff0c\u5ba2\u4f53\u91cd\u7528\uff09  \n\u7b2c4\u5468. \u53ef\u8ffd\u7a76\u673a\u5236\uff08\u6807\u8bc6\u4e0e\u9274\u522b\uff0c\u53ef\u4fe1\u901a\u8def\uff0c\u5b89\u5168\u5ba1\u8ba1\uff09  \n\u7b2c5\u5468. \u8fde\u7eed\u4fdd\u62a4\u673a\u5236\uff08I\uff09\uff08\u6700\u5c0f\u7279\u6743\u7ba1\u7406\uff0c \u7cfb\u7edf\u5b8c\u6574\u6027\uff09  \n\u7b2c6\u5468. \u8fde\u7eed\u4fdd\u62a4\u673a\u5236\uff08II\uff09\uff08\u9690\u853d\u901a\u9053\u5206\u6790\uff1b\u53ef\u4fe1\u6062\u590d\uff09  \n\u7b2c7\u5468. \u5b89\u5168\u6a21\u578b\uff08BLP\u6a21\u578b\uff0cBIBA\u6a21\u578b\uff0c\u4e2d\u56fd\u5899\u6a21\u578b\uff0cRBAC\u6a21\u578b\u4e0eDTE\u6a21\u578b\uff09  \n\u7b2c8\u5468. \u5b89\u5168\u4f53\u7cfb\u7ed3\u6784\uff08Flask\u5b89\u5168\u4f53\u7cfb\u7ed3\u6784\u3001LSM\u5b89\u5168\u6846\u67b6\uff0cXSM\u5b89\u5168\u6846\u67b6\uff09  \n\u7b2c9\u5468. \u53ef\u4fe1\u8ba1\u7b97\u6280\u672f\uff08\u8bbf\u8c08\u537f\u65af\u6c49\u6559\u6388\u3001\u738b\u7ecd\u658c\u535a\u58eb\uff09  \n\u7b2c10\u5468. \u5b89\u5168\u64cd\u4f5c\u7cfb\u7edf\u7684\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\u6280\u672f\u6848\u4f8b\uff08\u8bbf\u8c08\u537f\u65af\u6c49\u6559\u6388\uff09  \n\u7b2c11\u5468. \u57fa\u4e8e\u5b89\u5168\u64cd\u4f5c\u7cfb\u7edf\u7684\u5e94\u7528-\u6570\u636e\u5e93\u5b89\u5168\uff08\u5f20\u654f\u8001\u5e08\u7684\u4e13\u9898\uff09  \n\u7b2c12\u5468. \u7cfb\u7edf\u865a\u62df\u5316\u5b89\u5168\u4e0e\u865a\u62df\u53ef\u4fe1\u5e73\u53f0\u6280\u672f  \n\n",
        "name": "\u64cd\u4f5c\u7cfb\u7edf\u4e0e\u865a\u62df\u5316\u5b89\u5168",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Peking University"
        ],
        "url": "https://www.coursera.org/course/osvirtsecurity",
        "video_url": ""
    },
    {
        "date": "2014-09-12",
        "desc": "Functional analysis is the branch of mathematics dealing with spaces of\nfunctions. It is a valuable tool in theoretical mathematics as well as\nengineering. It is at the very core of numerical simulation.In this class, I will explain the concepts of convergence and talk about\ntopology. You will understand the difference between strong convergence\nand weak convergence. You will also see how these two concepts can be used.You will learn about different types of spaces including metric spaces,\nBanach Spaces, Hilbert Spaces and what property can be expected. You will\nsee beautiful lemmas and theorems such as Riesz and Lax-Milgram and I will\nalso describe Lp spaces, Sobolev spaces and provide a few details about\nPDEs, or Partial Differential Equations.SyllabusWeek 1: Topology; continuity and convergence of a sequence in a topological space.Week 2: Metric and normed spaces; completenessWeek 3: Banach spaces; linear continuous functions; weak topologyWeek 4: Hilbert spaces; The Riesz representation theoremWeek 5: The Lax-Milgram LemmaWeek 6: Properties of the Lp spacesWeek 7: Distributions and Sobolev SpacesWeek 8: Application: simulating a membrane",
        "desc_html": "Functional analysis is the branch of mathematics dealing with spaces of\nfunctions. It is a valuable tool in theoretical mathematics as well as\nengineering. It is at the very core of numerical simulation.  \n  \nIn this class, I will explain the concepts of convergence and talk about\ntopology. You will understand the difference between strong convergence and\nweak convergence. You will also see how these two concepts can be used.  \n  \nYou will learn about different types of spaces including metric spaces, Banach\nSpaces, Hilbert Spaces and what property can be expected. You will see\nbeautiful lemmas and theorems such as Riesz and Lax-Milgram and I will also\ndescribe Lp spaces, Sobolev spaces and provide a few details about PDEs, or\nPartial Differential Equations.  \n  \n\n## Syllabus\n\nWeek 1: Topology; continuity and convergence of a sequence in a topological\nspace.  \nWeek 2: Metric and normed spaces; completeness  \nWeek 3: Banach spaces; linear continuous functions; weak topology  \nWeek 4: Hilbert spaces; The Riesz representation theorem  \nWeek 5: The Lax-Milgram Lemma  \nWeek 6: Properties of the Lp spaces  \nWeek 7: Distributions and Sobolev Spaces  \nWeek 8: Application: simulating a membrane  \n  \n\n",
        "name": "An Introduction to Functional Analysis",
        "provider": "Coursera",
        "rating": "3",
        "reviews": "1",
        "university": [
            "\u00c9cole Centrale Paris"
        ],
        "url": "https://www.coursera.org/course/functionalanalysis",
        "video_url": ""
    },
    {
        "date": "2014-09-11",
        "desc": "This course will introduce computer programming in C. This freshman CS course will assume no prior experience about computer science. We will cover basic operations about computers, then move on to how to write computer programs in a language called C. Various C concepts will be introduced.SyllabusWeek 1: Basic programming concepts (book chapter 1, 2, 3), slides:introduction,basic, andcomputation.What is in a program?What is a variable in a program?How to edit/compile/run a program?How to read/write a value with a program?How to assign values into variables?How to add/subtract/multiply/divide numbers?How to compare numbers?How to make logical decision?Week 2: Flow control and loops (book chapter 4, 5), slides:branchandloop.How to make a program run different parts on different conditions?How to make a program run repeatedly?How to stop/continue a loop?How to solve problems with conditions and loops?Week 3: Arrays and Floating point Numbers (book  chapter 6, 7), slides:arrayandfloating point numbers.What is an array?How to store data into array/retrieve data from\n  array?How to read/write data into/from array?What is a multi-dimensional array?How computers place arrays in memory?What is a floating point number?How to read/write a floating point number?Week 4: Functions (book chapter 8), slides:function.What is a function?Why do we need function?How a function communicates with your program?Where are the variables in a function? How do they differ from variables in your main program?Week 5: Pointers (book chapter 9), slides:pointer.What is memory address?What is a pointer?How to access other variables with pointers?What is the relation between pointers and arrays?How to access array elements with pointers?Week 6: Strings and characters (book chapter 10, 11), slides:characterandstring.What is a character?How to read/write a character?What are the library we can use to process characters?What is a string?How to read/write a string?What is the relation between a character and a string?What is the relation between a string and a pointer?What are the library we can use to process strings?",
        "desc_html": "This course will introduce computer programming in C. This freshman CS course\nwill assume no prior experience about computer science. We will cover basic\noperations about computers, then move on to how to write computer programs in\na language called C. Various C concepts will be introduced.\n\n## Syllabus\n\n  * Week 1: Basic programming concepts (book chapter 1, 2, 3), slides: [introduction](https://www.dropbox.com/s/ma45j4a3eb0s003/introduction-slide.pdf), [basic](https://www.dropbox.com/s/aw2fvmd1kz5rhxs/basic-slide.pdf), and [computation](https://www.dropbox.com/s/wf6rn4q435m2g55/comp-slide.pdf).\n    * What is in a program?\n    * What is a variable in a program?\n    * How to edit/compile/run a program?\n    * How to read/write a value with a program?\n    * How to assign values into variables?\n    * How to add/subtract/multiply/divide numbers?\n    * How to compare numbers?\n    * How to make logical decision?\n  * Week 2: Flow control and loops (book chapter 4, 5), slides: [branch](https://www.dropbox.com/s/tjwxow7chzfczk7/branch-slide.pdf) and [loop](https://www.dropbox.com/s/qa0yv0h92yicj43/loop-slide.pdf).\n    * How to make a program run different parts on different conditions?\n    * How to make a program run repeatedly?\n    * How to stop/continue a loop?\n    * How to solve problems with conditions and loops?\n  * Week 3: Arrays and Floating point Numbers (book chapter 6, 7), slides: [array](https://www.dropbox.com/s/3vujo55s6bcaa96/array-slide.pdf) and [floating point numbers](https://www.dropbox.com/s/y9ib5qv2zm2j6hc/fpnumber-slide.pdf).\n    * What is an array?\n    * How to store data into array/retrieve data from array?\n    * How to read/write data into/from array?\n    * What is a multi-dimensional array?\n    * How computers place arrays in memory?\n    * What is a floating point number?\n    * How to read/write a floating point number?\n  * Week 4: Functions (book chapter 8), slides: [function](https://www.dropbox.com/s/yq62v6tm290b19q/function-slide.pdf).\n    * What is a function?\n    * Why do we need function?\n    * How a function communicates with your program?\n    * Where are the variables in a function? How do they differ from variables in your main program?\n  * Week 5: Pointers (book chapter 9), slides: [pointer](https://www.dropbox.com/s/puzoq0a4if71gxf/pointer-slide.pdf).\n    * What is memory address?\n    * What is a pointer?\n    * How to access other variables with pointers?\n    * What is the relation between pointers and arrays?\n    * How to access array elements with pointers?\n  * Week 6: Strings and characters (book chapter 10, 11), slides: [character](https://www.dropbox.com/s/p82lsegw579las3/char-slide.pdf) and [string](https://www.dropbox.com/s/h0r6lmcs7v5qn47/string-slide.pdf).\n    * What is a character?\n    * How to read/write a character?\n    * What are the library we can use to process characters?\n    * What is a string?\n    * How to read/write a string?\n    * What is the relation between a character and a string?\n    * What is the relation between a string and a pointer?\n    * What are the library we can use to process strings?\n\n",
        "name": "\u8a08\u7b97\u6a5f\u7a0b\u5f0f\u8a2d\u8a08 (Computer Programming)",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "National Taiwan University"
        ],
        "url": "https://www.coursera.org/course/cprogramming",
        "video_url": ""
    },
    {
        "date": "2014-09-10",
        "desc": "This course will bring you to the next level about how to use SAP HANA Cloud Platform. You'll learn how you can use the platform to develop and manage SAP HANA native apps and HTML5 apps, as well as how to apply advanced security features, develop widgets on SAP HANA Cloud Portal, and much more. To follow all the units, you should have already walked through the openSAP course Introduction to SAP HANA Cloud Platform.Course RequirementsParticipation in the openSAP course&nbsp;Introduction to SAP HANA Cloud Platform (Repeat)Basic programming skillsBasic knowledge of how to use an Eclipse development environmentSyllabusWeek 1: SAP HANA Native DevelopmentWeek 2: Git and HTML5 Apps &ndash; Part 1Week 3: Git and HTML5 Apps &ndash; Part 2Week 4: Advanced Identity ManagementWeek 5: Securing Web APIsWeek 6: Additional FeaturesWeek 7: Final Exam",
        "desc_html": "This course will bring you to the next level about how to use SAP HANA Cloud\nPlatform. You'll learn how you can use the platform to develop and manage SAP\nHANA native apps and HTML5 apps, as well as how to apply advanced security\nfeatures, develop widgets on SAP HANA Cloud Portal, and much more. To follow\nall the units, you should have already walked through the openSAP course\nIntroduction to SAP HANA Cloud Platform.\n\n**Course Requirements**\n\n  * Participation in the openSAP course [Introduction to SAP HANA Cloud Platform (Repeat)](https://open.sap.com/course/hanacloud1-1)\n  * Basic programming skills\n  * Basic knowledge of how to use an Eclipse development environment\n\n## Syllabus\n\nWeek 1: SAP HANA Native Development\n\nWeek 2: Git and HTML5 Apps - Part 1\n\nWeek 3: Git and HTML5 Apps - Part 2\n\nWeek 4: Advanced Identity Management\n\nWeek 5: Securing Web APIs\n\nWeek 6: Additional Features\n\nWeek 7: Final Exam\n\n",
        "name": "Next Steps in SAP HANA Cloud Platform",
        "provider": "openSAP",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.sap.com/course/hanacloud2-1",
        "video_url": ""
    },
    {
        "date": "2014-09-09",
        "desc": "*Note - This is an Archived course*This is a past/archived course. At this time, you can only explore this course in a self-paced fashion. Certain features of this course may not be active, but many people enjoy watching the videos and working with the materials. Make sure to check for reruns of this course.Do you want to learn how to harvest health science data from the internet? Do you want to understand the world through data analysis? Start by exploring statistics with R!Skilled persons who can process and analyze data are in great demand today. In this course you will explore concepts in statistics that help you make sense out of data. You will learn the practical skills necessary to find, import, analyze and visualize data. We will take a look under the hood of statistics and equip you with broad tools for understanding statistical inference and statistical methods. You will also get to perform some really complicated calculations and visualizations, following in the footsteps of Karolinska Institutet\u2019s researchers.You are probably reading this course description because you know that statistics and statistical programming are essential skills in our golden age of data abundance. Let\u2019s say it again: Health science has become a field of big data, just like so many other fields of study. New techniques make it possible and affordable to generate massive data sets in biology. Researchers and clinicians can measure the activity for each of 30000 genes of a patient. They can read the complete genome sequence of a patient. Thanks to another trend of the decade, open access publishing, the results of such large scale health science are very often published for you to read free of charge. You can even access the raw data from open databases such as the gene expression database of the NCBI, National Center for Biotechnology Information.In this course you will learn the basics of R, a powerful open source statistical programming language. Why has R become the tool of choice in bioinformatics, the health sciences and many other fields? One reason is surely that it\u2019s powerful and that you can download it for free right now. But more importantly, it\u2019s supported by an active user community.\u00a0In this course you will learn how to use peer reviewed packages for solving problems at the frontline of health science research. Commercial actors just can\u2019t keep up implementing the latest algorithms and methods. When algorithms are first published, they are already implemented in R. Join us in a gold digging expedition. Explore statistics with R.",
        "desc_html": "*Note - This is an Archived course*  \n  \nThis is a past/archived course. At this time, you can only explore this course\nin a self-paced fashion. Certain features of this course may not be active,\nbut many people enjoy watching the videos and working with the materials. Make\nsure to check for reruns of this course.  \n  \nDo you want to learn how to harvest health science data from the internet? Do\nyou want to understand the world through data analysis? Start by exploring\nstatistics with R!  \n  \nSkilled persons who can process and analyze data are in great demand today. In\nthis course you will explore concepts in statistics that help you make sense\nout of data. You will learn the practical skills necessary to find, import,\nanalyze and visualize data. We will take a look under the hood of statistics\nand equip you with broad tools for understanding statistical inference and\nstatistical methods. You will also get to perform some really complicated\ncalculations and visualizations, following in the footsteps of Karolinska\nInstitutet\u2019s researchers.  \n  \nYou are probably reading this course description because you know that\nstatistics and statistical programming are essential skills in our golden age\nof data abundance. Let\u2019s say it again: Health science has become a field of\nbig data, just like so many other fields of study. New techniques make it\npossible and affordable to generate massive data sets in biology. Researchers\nand clinicians can measure the activity for each of 30000 genes of a patient.\nThey can read the complete genome sequence of a patient. Thanks to another\ntrend of the decade, open access publishing, the results of such large scale\nhealth science are very often published for you to read free of charge. You\ncan even access the raw data from open databases such as the gene expression\ndatabase of the NCBI, National Center for Biotechnology Information.  \n  \nIn this course you will learn the basics of R, a powerful open source\nstatistical programming language. Why has R become the tool of choice in\nbioinformatics, the health sciences and many other fields? One reason is\nsurely that it\u2019s powerful and that you can download it for free right now. But\nmore importantly, it\u2019s supported by an active user community.\u00a0In this course\nyou will learn how to use peer reviewed packages for solving problems at the\nfrontline of health science research. Commercial actors just can\u2019t keep up\nimplementing the latest algorithms and methods. When algorithms are first\npublished, they are already implemented in R. Join us in a gold digging\nexpedition. Explore statistics with R.\n\n",
        "name": "KIExploRx: Explore Statistics with R",
        "provider": "edX",
        "rating": "5",
        "reviews": "1",
        "university": [
            "Karolinska Institutet"
        ],
        "url": "https://www.edx.org/course/explore-statistics-r-kix-kiexplorx",
        "video_url": "https://www.youtube.com/embed/Hqgk7TQKvys?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-09-09",
        "desc": "The internet is now part of our daily life and is accessible on any device. People have become used to the speed and simplicity of consumer apps, and so business users expect the same simplicity from our business software.SAP Fiori is our new user experience (UX) for SAP software. By applying modern design principles, it completely reinvents the user experience. When combined with the power of the SAP HANA platform, the SAP Fiori UX delivers unmatched responsiveness. Personalized and role-based, the new user experience enables enterprise-wide engagement across lines of business. It provides optimal usability on multiple devices for better business interactions and ease of use.This course will introduce you to the fundamentals and latest features of the SAP Fiori UX. You will learn about product installation, configuration, and best practices for extensibility.Course RequirementsBasic understanding of business processes typically addressed in solutions like SAP ERP, SAP CRM, and SAP SCMBasic programming knowledge including HTML / JavaScript / SAPUI5SyllabusCourse ContentWeek 1: SAP Fiori UX BasicsWeek 2: SAP Fiori UX DeploymentWeek 3: SAP Fiori UX ConfigurationWeek 4: Securing SAP Fiori UXWeek 5: SAP UI ToolsWeek 6: Extending SAP Fiori UXWeek 7: Final Exam",
        "desc_html": "The internet is now part of our daily life and is accessible on any device.\nPeople have become used to the speed and simplicity of consumer apps, and so\nbusiness users expect the same simplicity from our business software.\n\nSAP Fiori is our new user experience (UX) for SAP software. By applying modern\ndesign principles, it completely reinvents the user experience. When combined\nwith the power of the SAP HANA platform, the SAP Fiori UX delivers unmatched\nresponsiveness. Personalized and role-based, the new user experience enables\nenterprise-wide engagement across lines of business. It provides optimal\nusability on multiple devices for better business interactions and ease of\nuse.\n\nThis course will introduce you to the fundamentals and latest features of the\nSAP Fiori UX. You will learn about product installation, configuration, and\nbest practices for extensibility.\n\n**Course Requirements**\n\n  * Basic understanding of business processes typically addressed in solutions like SAP ERP, SAP CRM, and SAP SCM\n  * Basic programming knowledge including HTML / JavaScript / SAPUI5\n\n## Syllabus\n\n**Course Content**\n\nWeek 1: SAP Fiori UX Basics\n\nWeek 2: SAP Fiori UX Deployment\n\nWeek 3: SAP Fiori UX Configuration\n\nWeek 4: Securing SAP Fiori UX\n\nWeek 5: SAP UI Tools\n\nWeek 6: Extending SAP Fiori UX\n\nWeek 7: Final Exam\n\n",
        "name": "Introduction to SAP Fiori UX",
        "provider": "openSAP",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.sap.com/course/fiori1",
        "video_url": ""
    },
    {
        "date": "2014-09-08",
        "desc": "Calculus is one of the grandest achievements of human thought, explaining everything from planetary orbits to the optimal size of a city to the periodicity of a heartbeat. This brisk course covers the core ideas of single-variable Calculus with emphases\n    on conceptual understanding and applications. The course is ideal for students beginning in the engineering, physical, and social sciences. Distinguishing features of the course include:the introduction and use of Taylor series and approximations from the beginning;a novel synthesis of discrete and continuous forms of Calculus;an emphasis on the conceptual over the computational; anda clear, dynamic, unified approach.THE SIGNATURE TRACK OPTIONSignature Track is an optional path you may choose for this course. By signing up and paying a nominal fee (financial aid can be provided), you can add a higher level of identity verification to your Coursera coursework. If you achieve the threshold score,\n    you have the opportunity to earn a Verified Certificate issued jointly by Penn and Coursera. For each assignment, your identity is confirmed through your photo and unique typing pattern. If you earn a Verified Certificate, you will also be given a\n    personal URL through which your course records can be shared with employers and educational institutions.THE COLLEGE CREDIT RECOMMENDATION OPTIONNote: The following only applies to sessions starting on September 8th, 2014, and prior. This Calculus course has been evaluated and recommended by the American Council on Education\u2019s College Credit Recommendation Service (ACE CREDIT) for college credit so you can get a head start on your college education. More than 2,000 higher education institutions consider ACE credit recommendations for transfer to degree programs. If you add this option to sessions starting on or prior to September 8th, 2014, towards the end of the course, you will take an online proctored exam which will be combined with your coursework to determine your eligibility for college credit recommendation.SyllabusThe course is divided into five \"chapters\":CHAPTER 1: FunctionsAfter a brief review of the basics, we will dive into Taylor series as a way of working with and approximating complicated functions. The chapter will use a series-based approach to understanding limits and asymptotics.CHAPTER 2: DifferentiationThough you already know how to differentiate some functions, you may not know what differentiation means. This chapter will emphasize conceptual understanding and applications of derivatives.CHAPTER 3: IntegrationWe will use the indefinite integral (an anti-derivative) as a motivation to look at differential equations in applications ranging from population models to linguistics to coupled oscillators. Techniques of integration up to and including computer-assisted\nmethods will lead to Riemann sums and the definite integral.CHAPTER 4: ApplicationsWe will get busy in this chapter with applications of the definite integral to problems in geometry, physics, economics, biology, probability,&nbsp;and more. You will learn how to solve a wide array of problems using a consistent conceptual approach.CHAPTER 5: DiscretizationHaving covered Calculus for functions with a single real input and a single real output, we turn to functions with adiscreteinput and a real output: sequences. We will re-develop all of Calculus (limits, derivatives, integrals, differential equations)\nin this new context, and return to the beginning of the course with a deeper consideration of Taylor series.",
        "desc_html": "Calculus is one of the grandest achievements of human thought, explaining\neverything from planetary orbits to the optimal size of a city to the\nperiodicity of a heartbeat. This brisk course covers the core ideas of single-\nvariable Calculus with emphases on conceptual understanding and applications.\nThe course is ideal for students beginning in the engineering, physical, and\nsocial sciences. Distinguishing features of the course include:\n\n  * the introduction and use of Taylor series and approximations from the beginning; \n  * a novel synthesis of discrete and continuous forms of Calculus;\n  * an emphasis on the conceptual over the computational; and\n  * a clear, dynamic, unified approach.\n  \nTHE SIGNATURE TRACK OPTION\n\nSignature Track is an optional path you may choose for this course. By signing\nup and paying a nominal fee (financial aid can be provided), you can add a\nhigher level of identity verification to your Coursera coursework. If you\nachieve the threshold score, you have the opportunity to earn a Verified\nCertificate issued jointly by Penn and Coursera. For each assignment, your\nidentity is confirmed through your photo and unique typing pattern. If you\nearn a Verified Certificate, you will also be given a personal URL through\nwhich your course records can be shared with employers and educational\ninstitutions.\n\n  \nTHE COLLEGE CREDIT RECOMMENDATION OPTION\n\nNote: The following only applies to sessions starting on September 8th, 2014,\nand prior. This Calculus course has been evaluated and recommended by the\nAmerican Council on Education\u2019s College Credit Recommendation Service (ACE\nCREDIT) for college credit so you can get a head start on your college\neducation. More than 2,000 higher education institutions consider ACE credit\nrecommendations for transfer to degree programs. If you add this option to\nsessions starting on or prior to September 8th, 2014, towards the end of the\ncourse, you will take an online proctored exam which will be combined with\nyour coursework to determine your eligibility for college credit\nrecommendation.\n\n## Syllabus\n\nThe course is divided into five \"chapters\":  \n  \n**CHAPTER 1: Functions**   \nAfter a brief review of the basics, we will dive into Taylor series as a way\nof working with and approximating complicated functions. The chapter will use\na series-based approach to understanding limits and asymptotics.  \n  \n**CHAPTER 2: Differentiation**   \nThough you already know how to differentiate some functions, you may not know\nwhat differentiation means. This chapter will emphasize conceptual\nunderstanding and applications of derivatives.  \n  \n**CHAPTER 3: Integration**   \nWe will use the indefinite integral (an anti-derivative) as a motivation to\nlook at differential equations in applications ranging from population models\nto linguistics to coupled oscillators. Techniques of integration up to and\nincluding computer-assisted methods will lead to Riemann sums and the definite\nintegral.  \n  \n**CHAPTER 4: Applications**   \nWe will get busy in this chapter with applications of the definite integral to\nproblems in geometry, physics, economics, biology, probability, and more. You\nwill learn how to solve a wide array of problems using a consistent conceptual\napproach.  \n  \n**CHAPTER 5: Discretization**   \nHaving covered Calculus for functions with a single real input and a single\nreal output, we turn to functions with a _discrete_ input and a real output:\nsequences. We will re-develop all of Calculus (limits, derivatives, integrals,\ndifferential equations) in this new context, and return to the beginning of\nthe course with a deeper consideration of Taylor series.  \n\n",
        "name": "Calculus: Single Variable",
        "provider": "Coursera",
        "rating": "5",
        "reviews": "8",
        "university": [
            "University of Pennsylvania"
        ],
        "url": "https://www.coursera.org/course/calcsing",
        "video_url": ""
    },
    {
        "date": "2014-09-08",
        "desc": "A partir d&rsquo;exemples concrets et actuels touchant des secteurs vari&eacute;s tels que l&rsquo;automobile ou encore la sant&eacute; et de concepts issus de la sociologie et des sciences cognitives, ce cours propose des m&eacute;thodes pour une exploitation &ldquo;intelligente&rdquo; et efficace de ces donn&eacute;es. Quelques unes des multiples facettes du Big Data seront abord&eacute;es : les enjeux qu&rsquo;il repr&eacute;sente, la convergence entre l&rsquo;Homme et la machine, les diff&eacute;rentes technologies mobilisables et la nouvelle donne concernant la collecte, le travail et l&rsquo;exposition des donn&eacute;es notamment. Des interviews de professionnels du secteur de la gestion de donn&eacute;es illustreront les concepts de mani&egrave;re pragmatique et des questions jalonneront votre apprentissage pour vous permettre de vous auto&eacute;valuer. Et &agrave; la fin des 5 semaines de cours une certification vous sera propos&eacute;e pour attester de vos connaissances sur le Big Data.Pr&eacute;requisAucun pr&eacute;requis sp&eacute;cifique n&rsquo;est n&eacute;cessaire pour suivre ce cours.SyllabusIntroductionModule 1 - La donn&eacute;e&nbsp;: un nouveau secteur &eacute;conomique&nbsp;?Module 2 - Big Data&nbsp;: dans la continuit&eacute; ou dans la rupture&nbsp;?Module 3 - L&rsquo;Homme&nbsp;: une machine Big Data - La donn&eacute;e&nbsp;: un nouveau secteur &eacute;conomique&nbsp;?Module 4 - Le Big Data&nbsp;: avec quelle techno&nbsp;?Module 5 - La collecte de la donn&eacute;e&nbsp;: qu&rsquo;est ce qui change&nbsp;?Module 6 - Le travail sur la donn&eacute;e&nbsp;: qu&rsquo;est ce qui change&nbsp;?Module 7 - L&rsquo;exposition des donn&eacute;es&nbsp;: qu&rsquo;est ce qui change&nbsp;?Module 8 - Les donn&eacute;es crawl&eacute;es sur internet&nbsp;: quels sont les pi&egrave;ges&nbsp;?",
        "desc_html": "A partir d'exemples concrets et actuels touchant des secteurs varies tels que\nl'automobile ou encore la sante et de concepts issus de la sociologie et des\nsciences cognitives, ce cours propose des methodes pour une exploitation\n\"intelligente\" et efficace de ces donnees. Quelques unes des multiples\nfacettes du Big Data seront abordees : les enjeux qu'il represente, la\nconvergence entre l'Homme et la machine, les differentes technologies\nmobilisables et la nouvelle donne concernant la collecte, le travail et\nl'exposition des donnees notamment. Des interviews de professionnels du\nsecteur de la gestion de donnees illustreront les concepts de maniere\npragmatique et des questions jalonneront votre apprentissage pour vous\npermettre de vous autoevaluer. Et a la fin des 5 semaines de cours une\ncertification vous sera proposee pour attester de vos connaissances sur le Big\nData.\n\n**Prerequis**\n\nAucun prerequis specifique n'est necessaire pour suivre ce cours.\n\n## Syllabus\n\n  * Introduction\n  * Module 1 - La donnee : un nouveau secteur economique ?\n  * Module 2 - Big Data : dans la continuite ou dans la rupture ?\n  * Module 3 - L'Homme : une machine Big Data - La donnee : un nouveau secteur economique ?\n  * Module 4 - Le Big Data : avec quelle techno ?\n  * Module 5 - La collecte de la donnee : qu'est ce qui change ?\n  * Module 6 - Le travail sur la donnee : qu'est ce qui change ?\n  * Module 7 - L'exposition des donnees : qu'est ce qui change ?\n  * Module 8 - Les donnees crawlees sur internet : quels sont les pieges ?\n\n",
        "name": "Datascience et Analyse situationnelle : dans les coulisses du Big Data",
        "provider": "IONIS",
        "rating": "0",
        "reviews": "0",
        "university": [
            "IONIS"
        ],
        "url": "https://courses.ionisx.com/courses/IONISx/002-002-003/2014-FALL/about",
        "video_url": "https://www.youtube.com/embed/vslOxn7uHBY?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-09-08",
        "desc": "This MOOC will teach you&nbsp;how to create a mobile game using GameSalad Creator.&nbsp;In the space of just a few&nbsp;weeks we will go through the whole game creation process using GameSalad, teaching the steps and tricks on creating your very own mobile game.This course is targeted to secondary school levers however anyone can register into this&nbsp;course and participate in the activities.SyllabusFrom week-1 to week-3, we will cover topics from installation to&nbsp;game development. There will be also tips for you to develop a good mobile game. If you encounter problem at any point of the development, do feel free to raise&nbsp;your questions in the forum. In week-4, it will be an online discussion session that helps you to complete the final product for the competition.",
        "desc_html": "This MOOC will teach you **how to create a mobile game using GameSalad\nCreator**. In the space of just a few weeks we will go through the whole game\ncreation process using GameSalad, teaching the steps and tricks on creating\nyour very own mobile game.\n\nThis course is targeted to secondary school levers however anyone can register\ninto this course and participate in the activities.\n\n## Syllabus\n\nFrom week-1 to week-3, we will cover topics from installation to game\ndevelopment. There will be also tips for you to develop a good mobile game. If\nyou encounter problem at any point of the development, do feel free to raise\nyour questions in the forum. In week-4, it will be an online discussion\nsession that helps you to complete the final product for the competition.\n\n",
        "name": "Mobile Game Development with GameSalad",
        "provider": "OpenLearning",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Taylor's University"
        ],
        "url": "https://www.openlearning.com/courses/MobileGameDevelopmentWit",
        "video_url": "https://www.youtube.com/embed/fMu95XLbGxU?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-09-08",
        "desc": "Ce cours est une introduction au langage Python et &agrave; ses biblioth&egrave;ques scientifiques les plus courantes. Il vous montrera comment cr&eacute;er et partager vos feuilles d'exercices gr&acirc;ce &agrave; l'utilisation du notebook IPython. Compos&eacute; d'exercices et de cas pratiques, il est aussi une zone d'aide et de ressources.IntroductionChapitre 1 - Premiers Pas avec PythonChapitre 2 - Les Principales Biblioth&egrave;ques ScientifiquesVariables et Cas Pratiques.Pr&eacute;requisUn premi&egrave;re exp&eacute;rience avec un langage de programmation est souhait&eacute;e mais pas indispensable.",
        "desc_html": "Ce cours est une introduction au langage Python et a ses bibliotheques\nscientifiques les plus courantes. Il vous montrera comment creer et partager\nvos feuilles d'exercices grace a l'utilisation du notebook IPython. Compose\nd'exercices et de cas pratiques, il est aussi une zone d'aide et de\nressources.\n\n  * Introduction\n  * Chapitre 1 - Premiers Pas avec Python\n  * Chapitre 2 - Les Principales Bibliotheques Scientifiques\n  * Variables et Cas Pratiques.\n**Prerequis**\n\nUn premiere experience avec un langage de programmation est souhaitee mais pas\nindispensable.\n\n",
        "name": "Python pour les scientifiques",
        "provider": "IONIS",
        "rating": "0",
        "reviews": "0",
        "university": [
            "\u00c9cole Pour l'Informatique et les Techniques Avanc\u00e9es (EPITA)"
        ],
        "url": "https://courses.ionisx.com/courses/EPITA/002-001-002/2014-FALL/about",
        "video_url": "https://www.youtube.com/embed/rh9COpswpKc?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-09-05",
        "desc": "Ce cours pr\u00e9sente des concepts de base de la programmation tels que&nbsp;&nbsp; : variables, expressions, structures de contr\u00f4le, fonctions/m\u00e9thodes, ...en les illustrant dans la syntaxe du langage Java.Ces notions simples seront pratiqu\u00e9es de fa\u00e7on intensive pour vous faire r\u00e9aliser de fa\u00e7on de plus en plus autonome&nbsp; les \u00e9tapes allant de la conception d'un programme (algorithme) \u00e0 sa mise en oeuvre concr\u00e8te.Ce cours de base&nbsp; est con\u00e7u pour \u00eatre prolong\u00e9 par les aspects orient\u00e9-objet, pr\u00e9sent\u00e9s dans le cours&nbsp;&nbsp;\u00abIntroduction \u00e0 la programmation orient\u00e9e objet (en Java)\u00bb.&nbsp;SyllabusIntroduction \u00e0 JavaVariablesExpressionsStructures de contr\u00f4le en JavaTableauxCha\u00eenes de caract\u00e8resFonctions/M\u00e9thodes et r\u00e9utilisabilit\u00e9E/S de base",
        "desc_html": "Ce cours pr\u00e9sente des concepts de base de la programmation tels que   :\nvariables, expressions, structures de contr\u00f4le, fonctions/m\u00e9thodes, ...  \nen les illustrant dans la syntaxe du langage Java.  \n  \nCes notions simples seront pratiqu\u00e9es de fa\u00e7on intensive pour vous faire\nr\u00e9aliser de fa\u00e7on de plus en plus autonome  les \u00e9tapes allant de la conception\nd'un programme (algorithme) \u00e0 sa mise en oeuvre concr\u00e8te.  \n  \nCe cours de base  est con\u00e7u pour \u00eatre prolong\u00e9 par les aspects orient\u00e9-objet,\npr\u00e9sent\u00e9s dans le cours  [\u00abIntroduction \u00e0 la programmation orient\u00e9e objet (en\nJava)\u00bb](https://www.coursera.org/course/intropoojava).  \n\n## Syllabus\n\n* Introduction \u00e0 Java\n* Variables\n* Expressions  \n\n* Structures de contr\u00f4le en Java\n* Tableaux\n* Cha\u00eenes de caract\u00e8res  \n\n* Fonctions/M\u00e9thodes et r\u00e9utilisabilit\u00e9\n* E/S de base\n\n",
        "name": "Initiation \u00e0 la programmation (en Java)",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne"
        ],
        "url": "https://www.coursera.org/course/initprogjava",
        "video_url": ""
    },
    {
        "date": "2014-09-03",
        "desc": "\u5728\u73b0\u4eca\u7684\u5546\u52a1\u4e16\u754c\u4e2d\uff0c\u4e3a\u4fdd\u6301\u5f3a\u52b2\u7684\u7ade\u4e89\u529b\u548c\u76f8\u5173\u6027\uff0c\u4e00\u4e2a\u597d\u7684IT\u89e3\u51b3\u65b9\u6848\u5fc5\u987b\u505a\u5230\uff1a\u5728\u4efb\u4f55\u5730\u70b9\uff0c\u4efb\u4f55\u65f6\u95f4\uff0c\u4efb\u4f55\u8bbe\u5907\u4e0a\u652f\u6301\u4e1a\u52a1\u6d41\u7a0b\u5feb\u901f\u7b80\u5355\u7684\u5927\u6570\u636e\u5904\u7406\u4e3a\u5ba2\u6237\u7684\u7279\u6b8a\u9700\u6c42\u91cf\u8eab\u5b9a\u505a&nbsp;\u8ba9\u6211\u4eec\u53c2\u52a0\u8fd9\u4e9b\u8be5\u95e8\u8bfe\u7a0b\uff0c\u5b66\u4e60SAP\u5982\u4f55\u5e94\u5bf9\u8fd9\u4e9b\u6311\u6218\u3002\u901a\u8fc7\u63a5\u4e0b\u6765\u7684\u516d\u5468\u65f6\u95f4\u7684\u8bfe\u7a0b\uff0c\u60a8\u53ef\u4ee5\u6709\u673a\u4f1a\u5bf9SAP\u7684\u6700\u65b0\u6280\u672f\u505a\u4e00\u4e2a\u5168\u9762\u7684\u6d4f\u89c8\uff0c\u6db5\u76d6\u4e86\u5f88\u591a\u76f8\u5173\u7684\u8bdd\u9898\uff0c\u6bd4\u5982SAP HANA\u548cSAP Cloud\u3002 \u60a8\u8fd8\u53ef\u4ee5\u5b66\u4e60SAP\u5982\u4f55\u4e3a\u5ba2\u6237\u7684\u4e1a\u52a1\u9700\u6c42\u91cf\u8eab\u5b9a\u505a\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u6bd4\u5982SAP\u5546\u52a1\u5957\u4ef6\u548c\u7b80\u5316\u7684\u65b9\u6848\u90e8\u7f72\u7b49\u3002\u672c\u8bfe\u7a0b\u662f\u4e13\u95e8\u4e3a\u4e2d\u56fd\u7684\u7528\u6237\u91cf\u8eab\u8bbe\u8ba1\u7684\u3002\u672c\u8bfe\u7a0b\u662f\u4e3a\u4e2d\u56fd\u7528\u6237\u91cf\u8eab\u8bbe\u8ba1\u7684\u3002\u6240\u6709\u7684\u5b8c\u5168\u4e2d\u6587\u5316\u7684\u8bfe\u7a0b\u6750\u6599\uff0c\u81ea\u6211\u6d4b\u8bd5\uff0c\u8ba8\u8bba\u8bba\u575b\uff0c\u6bcf\u5468\u7ec3\u4e60\uff0c\u89c6\u9891\u5185\u5bb9\u4ee5\u53ca\u6700\u7ec8\u6d4b\u8bd5\u3002Syllabus\u8bfe\u7a0b\u5185\u5bb9\u7b2c\u4e00\u5468\uff1aSAP\u5386\u53f2\u53ca\u5e94\u7528\u7b2c\u4e8c\u5468\uff1aSAP\u5206\u6790\u7b2c\u4e09\u5468\uff1a\u79fb\u52a8\u5e94\u7528\u548c\u7528\u6237\u754c\u9762\u7b2c\u56db\u5468\uff1aSAP HANA\u7b2c\u4e94\u5468\uff1aSAP Cloud\u7b2c\u516d\u5468\uff1a\u7b80\u5316\u7684\u89e3\u51b3\u65b9\u6848\u90e8\u7f72\u7b2c\u4e03\u5468\uff1a\u6700\u7ec8\u6d4b\u8bd5",
        "desc_html": "\u5728\u73b0\u4eca\u7684\u5546\u52a1\u4e16\u754c\u4e2d\uff0c\u4e3a\u4fdd\u6301\u5f3a\u52b2\u7684\u7ade\u4e89\u529b\u548c\u76f8\u5173\u6027\uff0c\u4e00\u4e2a\u597d\u7684IT\u89e3\u51b3\u65b9\u6848\u5fc5\u987b\u505a\u5230\uff1a\n\n  * \u5728\u4efb\u4f55\u5730\u70b9\uff0c\u4efb\u4f55\u65f6\u95f4\uff0c\u4efb\u4f55\u8bbe\u5907\u4e0a\u652f\u6301\u4e1a\u52a1\u6d41\u7a0b\n  * \u5feb\u901f\u7b80\u5355\u7684\u5927\u6570\u636e\u5904\u7406\n  * \u4e3a\u5ba2\u6237\u7684\u7279\u6b8a\u9700\u6c42\u91cf\u8eab\u5b9a\u505a\n\n\n\n\u8ba9\u6211\u4eec\u53c2\u52a0\u8fd9\u4e9b\u8be5\u95e8\u8bfe\u7a0b\uff0c\u5b66\u4e60SAP\u5982\u4f55\u5e94\u5bf9\u8fd9\u4e9b\u6311\u6218\u3002\n\n\u901a\u8fc7\u63a5\u4e0b\u6765\u7684\u516d\u5468\u65f6\u95f4\u7684\u8bfe\u7a0b\uff0c\u60a8\u53ef\u4ee5\u6709\u673a\u4f1a\u5bf9SAP\u7684\u6700\u65b0\u6280\u672f\u505a\u4e00\u4e2a\u5168\u9762\u7684\u6d4f\u89c8\uff0c\u6db5\u76d6\u4e86\u5f88\u591a\u76f8\u5173\u7684\u8bdd\u9898\uff0c\u6bd4\u5982SAP HANA\u548cSAP Cloud\u3002\n\u60a8\u8fd8\u53ef\u4ee5\u5b66\u4e60SAP\u5982\u4f55\u4e3a\u5ba2\u6237\u7684\u4e1a\u52a1\u9700\u6c42\u91cf\u8eab\u5b9a\u505a\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u6bd4\u5982SAP\u5546\u52a1\u5957\u4ef6\u548c\u7b80\u5316\u7684\u65b9\u6848\u90e8\u7f72\u7b49\u3002\n\n\u672c\u8bfe\u7a0b\u662f\u4e13\u95e8\u4e3a\u4e2d\u56fd\u7684\u7528\u6237\u91cf\u8eab\u8bbe\u8ba1\u7684\u3002\n\n\u672c\u8bfe\u7a0b\u662f\u4e3a\u4e2d\u56fd\u7528\u6237\u91cf\u8eab\u8bbe\u8ba1\u7684\u3002\u6240\u6709\u7684\u5b8c\u5168\u4e2d\u6587\u5316\u7684\u8bfe\u7a0b\u6750\u6599\uff0c\u81ea\u6211\u6d4b\u8bd5\uff0c\u8ba8\u8bba\u8bba\u575b\uff0c\u6bcf\u5468\u7ec3\u4e60\uff0c\u89c6\u9891\u5185\u5bb9\u4ee5\u53ca\u6700\u7ec8\u6d4b\u8bd5\u3002\n\n## Syllabus\n\n**\u8bfe\u7a0b\u5185\u5bb9**\n\n  * \u7b2c\u4e00\u5468\uff1aSAP\u5386\u53f2\u53ca\u5e94\u7528\n  * \u7b2c\u4e8c\u5468\uff1aSAP\u5206\u6790\n  * \u7b2c\u4e09\u5468\uff1a\u79fb\u52a8\u5e94\u7528\u548c\u7528\u6237\u754c\u9762\n  * \u7b2c\u56db\u5468\uff1aSAP HANA\n  * \u7b2c\u4e94\u5468\uff1aSAP Cloud\n  * \u7b2c\u516d\u5468\uff1a\u7b80\u5316\u7684\u89e3\u51b3\u65b9\u6848\u90e8\u7f72\n  * \u7b2c\u4e03\u5468\uff1a\u6700\u7ec8\u6d4b\u8bd5\n\n",
        "name": "\u8ba9\u6211\u4eec\u5f00\u59cb\u4e86\u89e3SAP\u7684\u521b\u65b0\u4f01\u4e1a\u89e3\u51b3\u65b9\u6848 (Get to know SAP\u2019s Innovative Enterprise Solutions)",
        "provider": "openSAP",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.sap.com/course/sapintro1",
        "video_url": ""
    },
    {
        "date": "2014-09-03",
        "desc": "To be competitive and remain relevant in today&rsquo;s business world, a good IT solution has to:Enable business anywhere at any time, on any deviceCrunch big data easily and quicklyBe tailored to the specific needs of the customerJoin our lectures and learn how SAP responds to these challenges.This six week course provides you with a broad overview of SAP&rsquo;s latest technologies, covering many engaging topics like SAP HANA, SAP Mobile Platform, and SAP Cloud. It begins with an overview of SAP enterprise solutions and an introduction to SAP Business Suite powered by SAP HANA. You will then learn about SAP solutions in key areas such as analytics and mobile security; you will be introduced to SAP&rsquo;s cloud-based solutions like SuccessFactors and Ariba, and you will also have the chance to discover the new SAP Fiori user experience. In addition to this, you will see how SAP offers tailored solutions to meet customers&rsquo; business needs, for example with best practices provided through simplified solution deployment.SyllabusWeek 1: SAP History and ApplicationsWeek 2: SAP AnalyticsWeek 3: Mobility and User InterfacesWeek 4: SAP HANAWeek 5: SAP CloudWeek 6: Simplified Solution DeploymentWeek 7: Final Exam",
        "desc_html": "To be competitive and remain relevant in today's business world, a good IT\nsolution has to:\n\n  * Enable business anywhere at any time, on any device\n  * Crunch big data easily and quickly\n  * Be tailored to the specific needs of the customer\n\nJoin our lectures and learn how SAP responds to these challenges.\n\nThis six week course provides you with a broad overview of SAP's latest\ntechnologies, covering many engaging topics like SAP HANA, SAP Mobile\nPlatform, and SAP Cloud. It begins with an overview of SAP enterprise\nsolutions and an introduction to SAP Business Suite powered by SAP HANA. You\nwill then learn about SAP solutions in key areas such as analytics and mobile\nsecurity; you will be introduced to SAP's cloud-based solutions like\nSuccessFactors and Ariba, and you will also have the chance to discover the\nnew SAP Fiori user experience. In addition to this, you will see how SAP\noffers tailored solutions to meet customers' business needs, for example with\nbest practices provided through simplified solution deployment.\n\n## Syllabus\n\n  * Week 1: SAP History and Applications\n  * Week 2: SAP Analytics\n  * Week 3: Mobility and User Interfaces\n  * Week 4: SAP HANA\n  * Week 5: SAP Cloud\n  * Week 6: Simplified Solution Deployment\n  * Week 7: Final Exam\n\n",
        "name": "Get to Know SAP\u2019s Innovative Enterprise Solutions",
        "provider": "openSAP",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.sap.com/courses/introsap1",
        "video_url": ""
    },
    {
        "date": "2014-09-02",
        "desc": "Instalaci&oacute;n del programa y manejo de sus herramientas (de dibujo, selcci&oacute;n y tranformaci&oacute;nAclaraci&oacute;n de procedimientos como descarga de im&aacute;genes, su creaci&oacute;n, adquisici&oacute;n desde diversos dispositivos, impresi&oacute;n, etc&hellip;Uso de las capas y los textosManejo del colorUso y aplicaci&oacute;n de filtros&nbsp;Conocimientos necesarios:&nbsp;Ninguno obligatorioSyllabusM&oacute;dulo 0. Presentaci&oacute;nModulo 1. Instalaci&oacute;n y arranqueM&oacute;dulo 2. Nueva imagen y herramientasM&oacute;dulo 3. Otras operaciones comunesM&oacute;dulo 4. Los textos y las capasM&oacute;dulo 5. M&aacute;scaras y seleccionesM&oacute;dulo 6. Los coloresM&oacute;dulo 7. Los filtros IM&oacute;dulo 8. Los filtros IIM&oacute;dulo 9. Otros filtros y Script-Fu",
        "desc_html": "Instalacion del programa y manejo de sus herramientas (de dibujo, selccion y\ntranformacion\n\nAclaracion de procedimientos como descarga de imagenes, su creacion,\nadquisicion desde diversos dispositivos, impresion, etc\u2026\n\nUso de las capas y los textos\n\nManejo del color\n\nUso y aplicacion de filtros\n\n\n\n**Conocimientos necesarios:**\n\n\n\nNinguno obligatorio\n\n## Syllabus\n\nModulo 0. Presentacion\n\nModulo 1. Instalacion y arranque\n\nModulo 2. Nueva imagen y herramientas\n\nModulo 3. Otras operaciones comunes\n\nModulo 4. Los textos y las capas\n\nModulo 5. Mascaras y selecciones\n\nModulo 6. Los colores\n\nModulo 7. Los filtros I\n\nModulo 8. Los filtros II\n\nModulo 9. Otros filtros y Script-Fu\n\n",
        "name": "Creaci\u00f3n y retoque de im\u00e1genes con software libre",
        "provider": "Mir\u00edada X",
        "rating": "3",
        "reviews": "1",
        "university": [
            "Universidad de Malaga"
        ],
        "url": "https://www.miriadax.net/web/creacion-y-retoque-de-imagenesn-con-software-libre",
        "video_url": "https://www.youtube.com/embed/3TiN0WMQZdg?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-09-02",
        "desc": "The ability to reason is fundamental to human beings. Whatever the discipline or discourse it is important to be able to distinguish correct reasoning from incorrect reasoning. The consequences of incorrect reasoning can be minor, like getting lost on the way to a birthday party, or more significant, for example launching nuclear missiles at a flock of ducks, or permanently losing contact with a space craft.The fundamental question that we will address in this course is \"when does one statement necessarily follow from another\" --- or in the terminology of the course, \"when is one statement a&nbsp;logical consequence&nbsp;of another\". This is an issue of some importance, since an answer to the question would allow us to examine an argument presented in a blog, for example, and to decide whether it really demonstrates the truth of the conclusion of the argument. Our own reasoning might also improve, since we would also be able to analyze our own arguments to see whether they really do demonstrate their conclusions.In this course you will be introduced to the concepts and techniques used in logic. We will start right from the beginning, assuming no prior exposure to this or similar material, and progress through discussions of the proof and model theories of propositional and first-order logic.We will proceed by giving a theory of truth, and of logical consequence, based on a formal language called FOL (the language of First-Order Logic). We adopt a formal language for making statements, since natural languages (like English, for example) are far too vague and ambiguous for us to analyze sufficiently. Armed with the formal language, we will be able to model the notions of truth, proof and consequence, among others.While logic is technical in nature, the key concepts in the course will be developed by considering natural English statements, and we will focus the relationships between such statements and their FOL counterparts. The goal of the course is to show how natural English statements and arguments can be formalized and analyzed.PREREQUISITESThis course has no prerequisites except an interest in the way in which we use language to construct arguments and justify conclusions. If that interests you, then you're all set! Go sign up.",
        "desc_html": "The ability to reason is fundamental to human beings. Whatever the discipline\nor discourse it is important to be able to distinguish correct reasoning from\nincorrect reasoning. The consequences of incorrect reasoning can be minor,\nlike getting lost on the way to a birthday party, or more significant, for\nexample launching nuclear missiles at a flock of ducks, or permanently losing\ncontact with a space craft.\n\nThe fundamental question that we will address in this course is \"when does one\nstatement necessarily follow from another\" --- or in the terminology of the\ncourse, \"when is one statement a _logical consequence_ of another\". This is an\nissue of some importance, since an answer to the question would allow us to\nexamine an argument presented in a blog, for example, and to decide whether it\nreally demonstrates the truth of the conclusion of the argument. Our own\nreasoning might also improve, since we would also be able to analyze our own\narguments to see whether they really do demonstrate their conclusions.\n\nIn this course you will be introduced to the concepts and techniques used in\nlogic. We will start right from the beginning, assuming no prior exposure to\nthis or similar material, and progress through discussions of the proof and\nmodel theories of propositional and first-order logic.\n\nWe will proceed by giving a theory of truth, and of logical consequence, based\non a formal language called FOL (the language of First-Order Logic). We adopt\na formal language for making statements, since natural languages (like\nEnglish, for example) are far too vague and ambiguous for us to analyze\nsufficiently. Armed with the formal language, we will be able to model the\nnotions of truth, proof and consequence, among others.\n\nWhile logic is technical in nature, the key concepts in the course will be\ndeveloped by considering natural English statements, and we will focus the\nrelationships between such statements and their FOL counterparts. The goal of\nthe course is to show how natural English statements and arguments can be\nformalized and analyzed.\n\n**PREREQUISITES**\n\nThis course has no prerequisites except an interest in the way in which we use\nlanguage to construct arguments and justify conclusions. If that interests\nyou, then you're all set! Go sign up.\n\n",
        "name": "LPL: Language, Proof and Logic",
        "provider": "Stanford OpenEdx",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Stanford University"
        ],
        "url": "https://class.stanford.edu/courses/Philosophy/LPL/2014/about",
        "video_url": "https://www.youtube.com/embed/aLHioqq9_M8?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-09-02",
        "desc": "This is not a class as it is commonly understood; it is the set of materials from a summer school offered by Caltech and JPL, in the sense used by most scientists: an intensive period of learning of some advanced topics, not on an introductory level.&nbsp;The school will cover a variety of topics, with a focus on practical \ncomputing applications in research: the skills needed for a \ncomputational (\"big data\") science, not computer science. &nbsp;The specific \nfocus will be on applications in astrophysics, earth science (e.g., \nclimate science) and other areas of space science, but with an emphasis \non the general tools, methods, and skills that would apply across other \ndomains as well.&nbsp; It is aimed at an audience of practicing researchers who already have a strong background in computation and data analysis.&nbsp; The lecturers include computational science and \ntechnology experts from Caltech and JPL.Students can evaluate their own progress, but there will be no tests, exams, and no formal credit or certificates will be offered.SyllabusThe anticipated schedule of lectures (subject to changes):Each bullet bellow corresponds to a set of materials that includes approximately 2 hours of video lectures, various links and supplementary materials, plus some on-line, hands-on exercises.1. Introduction to the school.&nbsp; Software architectures.&nbsp; Introduction to Machine Learning.2. Best programming practices.&nbsp; Information retrieval.3. Introduction to R.&nbsp; Markov Chain Monte Carlo.4. Statistical resampling and inference.5. Databases.6. Data visualization.7. Clustering and classification.8. Decision trees and random forests.9. Dimensionality reduction.&nbsp; Closing remarks.",
        "desc_html": "This is not a class as it is commonly understood; it is the set of materials\nfrom a summer school offered by Caltech and JPL, in the sense used by most\nscientists: an intensive period of learning of some advanced topics, not on an\nintroductory level.  \n  \nThe school will cover a variety of topics, with a focus on practical computing\napplications in research: the skills needed for a computational (\"big data\")\nscience, not computer science.  The specific focus will be on applications in\nastrophysics, earth science (e.g., climate science) and other areas of space\nscience, but with an emphasis on the general tools, methods, and skills that\nwould apply across other domains as well.  It is aimed at an audience of\npracticing researchers who already have a strong background in computation and\ndata analysis.  The lecturers include computational science and technology\nexperts from Caltech and JPL.  \n  \nStudents can evaluate their own progress, but there will be no tests, exams,\nand no formal credit or certificates will be offered.  \n\n## Syllabus\n\nThe anticipated schedule of lectures (subject to changes):  \n\nEach bullet bellow corresponds to a set of materials that includes\napproximately 2 hours of video lectures, various links and supplementary\nmaterials, plus some on-line, hands-on exercises.  \n\n1\\. Introduction to the school.  Software architectures.  Introduction to\nMachine Learning.  \n  \n\n2\\. Best programming practices.  Information retrieval.  \n  \n3\\. Introduction to R.  Markov Chain Monte Carlo.  \n  \n4\\. Statistical resampling and inference.  \n  \n5\\. Databases.  \n  \n6\\. Data visualization.  \n  \n7\\. Clustering and classification.  \n  \n8\\. Decision trees and random forests.  \n  \n9\\. Dimensionality reduction.  Closing remarks.  \n\n",
        "name": "The Caltech-JPL Summer School on Big Data Analytics",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "California Institute of Technology"
        ],
        "url": "https://www.coursera.org/course/bigdataschool",
        "video_url": ""
    },
    {
        "date": "2014-09-01",
        "desc": "This MOOC (Massive Open Online Course) has been created by the Cambridge-based partnership of exam board OCR, Cambridge University Press (CUP) and the Raspberry Pi Foundation.&nbsp;The course is based on OCR&rsquo;s GCSE Computing curriculum and gives participants an excellent opportunity to investigate how computers work, how they are used, and to develop computer programming and problem-solving skills.&nbsp;The course has been designed for 14-16 year olds; but is free and open to all, and can be used either as a course or a resource to support teachers.",
        "desc_html": "This MOOC (Massive Open Online Course) has been created by the Cambridge-based\npartnership of exam board OCR, Cambridge University Press (CUP) and the\nRaspberry Pi Foundation. The course is based on OCR's GCSE Computing\ncurriculum and gives participants an excellent opportunity to investigate how\ncomputers work, how they are used, and to develop computer programming and\nproblem-solving skills. The course has been designed for 14-16 year olds; but\nis free and open to all, and can be used either as a course or a resource to\nsupport teachers.\n\n",
        "name": "Cambridge GSCE Computing Online",
        "provider": "Cambridge University Press",
        "rating": "5",
        "reviews": "1",
        "university": [],
        "url": "http://www.cambridgegcsecomputing.org/",
        "video_url": "https://www.youtube.com/embed/0ygBWsa3njg?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-09-01",
        "desc": "Enterprise computing is a computer hardware/software environment that is typically used to anchor corporate and government Information Technology data center infrastructures. Enterprise computers are generally used to solve very large complex problems where high availability, high performance, high reliability and ultra-high security are required for addressing high volatility transaction volumes and where these key performance criteria are needed for delivering mission critical solutions.The iSchool\u2019s Enterprise Computing Strategies (ECS) MOOC is a free, self-guided, self-paced open online course. The course content will help participants develop a new appreciation for the issues and challenges faced by the modern technology manager. Upon successful completion of this course, participants will develop the tools necessary for making more informed computing infrastructure decisions. Participants will learn strategies in computing resource provisioning, since not all computing resources are created equal and since solving enterprise problems is not as easy as just adding more hardware. After this course participants will have an appreciation for developing a computing strategy that can help their organizations save money on equipment acquisition and labor, reduce energy consumption, and simplify and secure their IT infrastructure. Successfully completed coursework will result in a certificate of completion from Syracuse University\u2019s School of Information Studies (iSchool) and IBM.Instructors for the course are Susan Dischiave - associate professor and director of the Bachelor of Science in Information Management & Technology program for the iSchool at Syracuse - and Dave Dischiave - associate professor and director of the Global Enterprise Technology Programs and the Systems & Information Science Program for the iSchool at Syracuse.",
        "desc_html": "Enterprise computing is a computer hardware/software environment that is\ntypically used to anchor corporate and government Information Technology data\ncenter infrastructures. Enterprise computers are generally used to solve very\nlarge complex problems where high availability, high performance, high\nreliability and ultra-high security are required for addressing high\nvolatility transaction volumes and where these key performance criteria are\nneeded for delivering mission critical solutions.  \n  \nThe iSchool\u2019s Enterprise Computing Strategies (ECS) MOOC is a free, self-\nguided, self-paced open online course. The course content will help\nparticipants develop a new appreciation for the issues and challenges faced by\nthe modern technology manager. Upon successful completion of this course,\nparticipants will develop the tools necessary for making more informed\ncomputing infrastructure decisions. Participants will learn strategies in\ncomputing resource provisioning, since not all computing resources are created\nequal and since solving enterprise problems is not as easy as just adding more\nhardware. After this course participants will have an appreciation for\ndeveloping a computing strategy that can help their organizations save money\non equipment acquisition and labor, reduce energy consumption, and simplify\nand secure their IT infrastructure. Successfully completed coursework will\nresult in a certificate of completion from Syracuse University\u2019s School of\nInformation Studies (iSchool) and IBM.  \n  \nInstructors for the course are Susan Dischiave - associate professor and\ndirector of the Bachelor of Science in Information Management & Technology\nprogram for the iSchool at Syracuse - and Dave Dischiave - associate professor\nand director of the Global Enterprise Technology Programs and the Systems &\nInformation Science Program for the iSchool at Syracuse.\n\n",
        "name": "Enterprise Computing Strategies",
        "provider": "CourseSites",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Marist College",
            "Syracuse University"
        ],
        "url": "http://ischool.syr.edu/contact/forms/ecsmooc.aspx",
        "video_url": ""
    },
    {
        "date": "2014-09-01",
        "desc": "I am pleased to be able to offer free over the Internet a course on Automata Theory, based on the material I have taught periodically at Stanford in the course CS154. Participants have access to screencast lecture videos, are given quiz questions, assignments and exams, receive regular feedback on progress, and can participate in a discussion forum. Those who successfully complete the course will receive a statement of accomplishment. You will need a decent Internet connection for accessing course materials, but should be able to watch the videos on your smartphone.The course covers four broad areas: (1) Finite automata and regular expressions, (2) Context-free grammars, (3) Turing machines and decidability, and (4) the theory of intractability, or NP-complete problems.Why Study Automata Theory?This subject is not just for those planning to enter the field of complexity theory, although it is a good place to start if that is your goal. Rather, the course will emphasize those aspects of the theory that people really use in practice. Finite automata, regular expressions, and context-free grammars are ideas that have stood the test of time. They are essential tools for compilers. But more importantly, they are used in many systems that require input that is less general than a full programming language yet more complex than \"push this button.\"The concepts of undecidable problems and intractable problems serve a different purpose. Undecidable problems are those for which no computer solution can ever exist, while intractable problems are those for which there is strong evidence that, although they can be solved by a computer, they cannot be solved sufficiently fast that the solution is truly useful in practice. Understanding this theory, and in particular being able to prove that a problem you are facing belongs to one of these classes, allows you to justify taking another approach \u2014 simplifying the problem or writing code to approximate the solution, for example.During the course, I'm going to prove a number of things. The purpose of these proofs is not to torture you or confuse you. Neither are the proofs there because I doubt you would believe me were I merely to state some well-known fact. Rather, understanding how these proofs, especially inductive proofs, work, lets you think more clearly about your own work. I do not advocate proofs that programs are correct, but whenever you attempt something a bit complex, it is good to have in mind the inductive proofs that would be needed to guarantee that what you are doing really works in all cases.SyllabusWeek 1: Finite AutomataWeek 2: Regular Expressions and Properties of Regular LanguagesWeek 3: Context-Free Grammars and LanguagesWeek 4: Properties of Context-Free Languages, plus introduction to Turing MachinesWeek 5: Turing Machines and UndecidabilityWeek 6: Intractable Problems (NP-Completeness)",
        "desc_html": "I am pleased to be able to offer free over the Internet a course on Automata\nTheory, based on the material I have taught periodically at Stanford in the\ncourse CS154. Participants have access to screencast lecture videos, are given\nquiz questions, assignments and exams, receive regular feedback on progress,\nand can participate in a discussion forum. Those who successfully complete the\ncourse will receive a statement of accomplishment. You will need a decent\nInternet connection for accessing course materials, but should be able to\nwatch the videos on your smartphone.\n\nThe course covers four broad areas: (1) Finite automata and regular\nexpressions, (2) Context-free grammars, (3) Turing machines and decidability,\nand (4) the theory of intractability, or NP-complete problems.  \n**  \nWhy Study Automata Theory?**  \n  \nThis subject is not just for those planning to enter the field of complexity\ntheory, although it is a good place to start if that is your goal. Rather, the\ncourse will emphasize those aspects of the theory that people really use in\npractice. Finite automata, regular expressions, and context-free grammars are\nideas that have stood the test of time. They are essential tools for\ncompilers. But more importantly, they are used in many systems that require\ninput that is less general than a full programming language yet more complex\nthan \"push this button.\"  \n  \nThe concepts of undecidable problems and intractable problems serve a\ndifferent purpose. Undecidable problems are those for which no computer\nsolution can ever exist, while intractable problems are those for which there\nis strong evidence that, although they can be solved by a computer, they\ncannot be solved sufficiently fast that the solution is truly useful in\npractice. Understanding this theory, and in particular being able to prove\nthat a problem you are facing belongs to one of these classes, allows you to\njustify taking another approach \u2014 simplifying the problem or writing code to\napproximate the solution, for example.  \n  \nDuring the course, I'm going to prove a number of things. The purpose of these\nproofs is not to torture you or confuse you. Neither are the proofs there\nbecause I doubt you would believe me were I merely to state some well-known\nfact. Rather, understanding how these proofs, especially inductive proofs,\nwork, lets you think more clearly about your own work. I do not advocate\nproofs that programs are correct, but whenever you attempt something a bit\ncomplex, it is good to have in mind the inductive proofs that would be needed\nto guarantee that what you are doing really works in all cases.\n\n## Syllabus\n\nWeek 1: Finite Automata  \nWeek 2: Regular Expressions and Properties of Regular Languages  \nWeek 3: Context-Free Grammars and Languages  \nWeek 4: Properties of Context-Free Languages, plus introduction to Turing\nMachines  \nWeek 5: Turing Machines and Undecidability  \nWeek 6: Intractable Problems (NP-Completeness)\n\n",
        "name": "Automata",
        "provider": "Coursera",
        "rating": "4",
        "reviews": "3",
        "university": [
            "Stanford University"
        ],
        "url": "https://www.coursera.org/course/automata",
        "video_url": ""
    },
    {
        "date": "2014-08-27",
        "desc": "The SAP User Experience (UX) strategy is aimed at bringing great products to our customers. Using the principles of design thinking, we maintain our core value of listening to our customers&rsquo; needs and quickly incorporating their feedback into SAP products. With the influence of consumer software making its way into the enterprise, SAP&rsquo;s UX strategy aims to meet users&rsquo; expectations of easy-to-use software in the workplace. Join Sam Yen, SAP&rsquo;s Chief Design Officer as he explains SAP&rsquo;s UX strategy. He reviews the history of design thinking at SAP, the core elements and products we provide to meet the strategy, and the real business value it brings to our customers.This course is aimed at anyone interested in learning about SAP&rsquo;s UX strategy. You don&rsquo;t need to have any technical knowledge to understand the concept of this strategy, which is explained easily and informally by Sam Yen.After completing the course, you will have an understanding of the core elements of SAP&rsquo;s UX strategy. You will understand how products like SAP Fiori UX and SAP Screen Personas are helping to renew traditional SAP software to meet customers&rsquo; expectations of great software in the workplace, and enabling customers to make solutions that meet their specific needs.This is a special edition openSAP course; your total learning time will be just two to three hours and all the content is already available. The course is broken down into six units consisting of one video per unit, with self-tests for you to complete after each section. Your results will not be saved; they are just for your personal use. At the end of the course, there is a course assignment. You can complete the assignment at any time. If you complete the course assignment successfully, you will receive a Record of Achievement.The online discussion forum will be available for you to collaborate with other learners and SAP UX strategy experts. The forum will be monitored from August 27 to October 22. After this time, you can still access the course content, but you will not be able to reply to or create new discussions within the forum.You don&rsquo;t need to complete the course in one sitting. Feel free to dip in whenever you have a few minutes spare to complete the next unit and learn about how the SAP UX strategy is transforming business software into an easy-to-use experience that provides real value for our customers&rsquo; business.SyllabusUnit 1: Introduction of Design Thinking at SAPUnit 2: Consumer Experience for Enterprise ApplicationsUnit 3: SAP Fiori UXUnit 4: SAP Screen PersonasUnit 5: Business Case for User ExperienceUnit 6: Wrap-Up",
        "desc_html": "The SAP User Experience (UX) strategy is aimed at bringing great products to\nour customers. Using the principles of design thinking, we maintain our core\nvalue of listening to our customers' needs and quickly incorporating their\nfeedback into SAP products. With the influence of consumer software making its\nway into the enterprise, SAP's UX strategy aims to meet users' expectations of\neasy-to-use software in the workplace. Join Sam Yen, SAP's Chief Design\nOfficer as he explains SAP's UX strategy. He reviews the history of design\nthinking at SAP, the core elements and products we provide to meet the\nstrategy, and the real business value it brings to our customers.\n\nThis course is aimed at anyone interested in learning about SAP's UX strategy.\nYou don't need to have any technical knowledge to understand the concept of\nthis strategy, which is explained easily and informally by Sam Yen.\n\nAfter completing the course, you will have an understanding of the core\nelements of SAP's UX strategy. You will understand how products like SAP Fiori\nUX and SAP Screen Personas are helping to renew traditional SAP software to\nmeet customers' expectations of great software in the workplace, and enabling\ncustomers to make solutions that meet their specific needs.\n\nThis is a special edition openSAP course; your total learning time will be\njust two to three hours and all the content is already available. The course\nis broken down into six units consisting of one video per unit, with self-\ntests for you to complete after each section. Your results will not be saved;\nthey are just for your personal use. At the end of the course, there is a\ncourse assignment. You can complete the assignment at any time. If you\ncomplete the course assignment successfully, you will receive a Record of\nAchievement.\n\nThe online discussion forum will be available for you to collaborate with\nother learners and SAP UX strategy experts. The forum will be monitored from\nAugust 27 to October 22. After this time, you can still access the course\ncontent, but you will not be able to reply to or create new discussions within\nthe forum.\n\nYou don't need to complete the course in one sitting. Feel free to dip in\nwhenever you have a few minutes spare to complete the next unit and learn\nabout how the SAP UX strategy is transforming business software into an easy-\nto-use experience that provides real value for our customers' business.\n\n## Syllabus\n\nUnit 1: Introduction of Design Thinking at SAP\n\nUnit 2: Consumer Experience for Enterprise Applications\n\nUnit 3: SAP Fiori UX\n\nUnit 4: SAP Screen Personas\n\nUnit 5: Business Case for User Experience\n\nUnit 6: Wrap-Up\n\n",
        "name": "SAP's UX Strategy in a Nutshell by Sam Yen",
        "provider": "openSAP",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.sap.com/course/uxn1",
        "video_url": ""
    },
    {
        "date": "2014-08-26",
        "desc": "Explore the latest techniques for securing information and its systems, from policies and&nbsp;procedures to technologies and audit. Learn from leading experts who share proven practices&nbsp;in areas such as mobile workforce safety, security metrics, electronic evidence oversight and coping with e-crime and e-discovery. Study the protection of Cloud computing information. Discover&nbsp;how to foster the development of future information security leaders.Topics covered include:Information security strategies and individual privacyLegal security implicationsMedical health record confidentiality and integrityCutting-edge technologies",
        "desc_html": "Explore the latest techniques for securing information and its systems, from\npolicies and procedures to technologies and audit. Learn from leading experts\nwho share proven practices in areas such as mobile workforce safety, security\nmetrics, electronic evidence oversight and coping with e-crime and\ne-discovery. Study the protection of Cloud computing information. Discover how\nto foster the development of future information security leaders.  \n  \nTopics covered include:  \n\n  * Information security strategies and individual privacy\n  * Legal security implications\n  * Medical health record confidentiality and integrity\n  * Cutting-edge technologies\n  \n\n",
        "name": "Information Security and Risk Management in Context",
        "provider": "Coursera",
        "rating": "2.3333333333333",
        "reviews": "9",
        "university": [
            "University of Washington"
        ],
        "url": "https://www.coursera.org/course/inforiskman",
        "video_url": ""
    },
    {
        "date": "2014-08-26",
        "desc": "In this course, you will explore several structured, risk management approaches that guide information security decision-making. Course topics include: developing and maintaining risk assessments (RA); developing and maintaining risk management plans (RM); regulatory and legal compliance issues affecting risk plans; developing a control framework for mitigating risks; risk transfer; business continuity and disaster recovery planning from the information security perspective.Consider\nupgrading to an enhanced, more rigorous version of this course offered online\nat theUniversity of Washington. You\u2019ll gain access to\nmeaningful interaction with instructors and additional assignments, readings\nand multimedia material, as well as earn a valuable University of Washington\ncredential.",
        "desc_html": "In this course, you will explore several structured, risk management\napproaches that guide information security decision-making. Course topics\ninclude: developing and maintaining risk assessments (RA); developing and\nmaintaining risk management plans (RM); regulatory and legal compliance issues\naffecting risk plans; developing a control framework for mitigating risks;\nrisk transfer; business continuity and disaster recovery planning from the\ninformation security perspective.  \n  \n\nConsider upgrading to an enhanced, more rigorous version of this course\noffered online at the [University of Washington](http://www.pce.uw.edu/courses\n/building-information-risk-management-toolkit-coursera/online-winter-2013/).\nYou\u2019ll gain access to meaningful interaction with instructors and additional\nassignments, readings and multimedia material, as well as earn a valuable\nUniversity of Washington credential.\n\n",
        "name": "Building an Information Risk Management Toolkit",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of Washington"
        ],
        "url": "https://www.coursera.org/course/inforisk",
        "video_url": ""
    },
    {
        "date": "2014-08-26",
        "desc": "This course provides you with opportunities to integrate and\napply your information security knowledge.This course provides you with opportunities to integrate and\napply your information security knowledge. Following the case-study approach,\nyou will be introduced to current, real-world cases developed and presented by\nthe practitioner community. You will design and execute information assurance\nstrategies to solve these cases.Topics explored include:Analysis and problem solving using\ncases&nbsp;contracted&nbsp;from real world problems in Information Assurance\nincluding:Selection and application of controlsConstruction of security policiesUnderstanding and application of regulatory\n     requirementsUnderstanding and application of business\n     constraints&nbsp;Communication of risk to non-information assurance\n     professionalsIdentification and remediation of new threatsAnalysis and performance of incident responseCommunication of Information Assurance\nprinciples and conceptsPeer reviewed analysis of each caseReading and class explanation of good and bad examples\n     (from news and public sources)Reading and peer discussion of current events in\n     Information AssuranceSyllabusWith successful completion of the course students should be able to:Describe the nature of security risk in a business and an IT contextCompare and apply several models for security risk assessmentFacilitate a risk assessment process and gain consensus on risk-based decisionsIncorporate risk assessment into an IT security plan",
        "desc_html": "This course provides you with opportunities to integrate and apply your\ninformation security knowledge.\n\nThis course provides you with opportunities to integrate and apply your\ninformation security knowledge. Following the case-study approach, you will be\nintroduced to current, real-world cases developed and presented by the\npractitioner community. You will design and execute information assurance\nstrategies to solve these cases.\n\nTopics explored include:  \nAnalysis and problem solving using cases contracted from real world problems\nin Information Assurance including:\n\n  * Selection and application of controls\n  * Construction of security policies\n  * Understanding and application of regulatory requirements\n  * Understanding and application of business constraints \n  * Communication of risk to non-information assurance professionals\n  * Identification and remediation of new threats\n  * Analysis and performance of incident response\n  * Communication of Information Assurance principles and concepts \n  * Peer reviewed analysis of each case\n  * Reading and class explanation of good and bad examples (from news and public sources)\n  * Reading and peer discussion of current events in Information Assurance\n\n## Syllabus\n\nWith successful completion of the course students should be able to:  \n\n  * ****Describe the nature of security risk in a business and an IT context\n  * Compare and apply several models for security risk assessment\n  * Facilitate a risk assessment process and gain consensus on risk-based decisions\n  * Incorporate risk assessment into an IT security plan  \n\n",
        "name": "Designing and Executing Information Security Strategies",
        "provider": "Coursera",
        "rating": "5",
        "reviews": "1",
        "university": [
            "University of Washington"
        ],
        "url": "https://www.coursera.org/course/infosec",
        "video_url": ""
    },
    {
        "date": "2014-08-26",
        "desc": "Investigate  the flexibility and power of project-oriented computational\n analysis. Practice  using this\u00a0technique to resolve complicated \nproblems in a range of fields  including the physical and \nengineering\u00a0sciences, finance and economics,  medical, social and \nbiological sciences. Enhance communication  of\u00a0information by creating \nvisual representations of scientific data.This course is a  survey of numerical solution techniques for ordinary \nand partial differential  equations. Emphasis will be on the application\n of numerical schemes to  practical problems in the engineering and \nphysical sciences. Apply advanced  MATLAB routines and toolboxes to \nsolve problems. Review and practice graphical  techniques for \ninformation presentation and learn to create visual  illustrations of \nscientific results",
        "desc_html": "Investigate the flexibility and power of project-oriented computational\nanalysis. Practice using this\u00a0technique to resolve complicated problems in a\nrange of fields including the physical and engineering\u00a0sciences, finance and\neconomics, medical, social and biological sciences. Enhance communication of\ninformation by creating visual representations of scientific data.  \n  \nThis course is a survey of numerical solution techniques for ordinary and\npartial differential equations. Emphasis will be on the application of\nnumerical schemes to practical problems in the engineering and physical\nsciences. Apply advanced MATLAB routines and toolboxes to solve problems.\nReview and practice graphical techniques for information presentation and\nlearn to create visual illustrations of scientific results\n\n",
        "name": "Scientific Computing",
        "provider": "Coursera",
        "rating": "3.5",
        "reviews": "2",
        "university": [
            "University of Washington"
        ],
        "url": "https://www.coursera.org/course/scientificcomp",
        "video_url": ""
    },
    {
        "date": "2014-08-18",
        "desc": "This course is a collaboration between faculty at three institutions across the world: the George Washington University (Washington, DC, USA); University of Southampton (UK) and Pontifical Catholic University of Chile (Santiago, Chile).* A credit-bearing course will run at each institution at the same time as this MOOC, and students at all locations will participate in the same learning community with MOOC participants.The course aims for students to achieve the following:connect the physics represented by a mathematical model to the characteristics of numerical methods to be able to&nbsp;select&nbsp;a good solution method;implement a numerical solution method in a well-designed, correct computer program;interpret the numerical solutions that were obtained in regards to their accuracy and suitability for applications.WHO IS THE COURSE FOR?Numerical methods for differential equations are relevant across all of science and engineering. This course is for anyone with mathematical, scientific or engineering backgrounds who wishes to develop a grounding in scientific computing. Using a range of hands-on lessons, participants in the course will develop the basic skills to tackle modern computational modelling problems.In developing this course, the instructors are inspired by the philosophy of open-source software. One of the tenets of the course is that we can use the web to interact, connect our learning, teach each other by sharing our learning objects. Therefore, this course is especially for those who are eager to participate in distributed knowledge creation on the web. Join us in this adventure!PREREQUISITESThe connected courses and MOOC are aimed at first-year graduate students or advanced seniors, but assume only a background in vector calculus, linear algebra, and differential equations. We won't assume more than a beginner's programming experience and will guide students to develop a foundation in numerical methods, and hands-on experience coding up solutions to differential equations.SyllabusThe course will consist of six learning modules that are somewhat self-contained. Each one will be motivated by a problem that can be modeled by a differential equation (or system of DEs) and will build new concepts in numerical computing, new coding skills and ideas about analysis of numerical solutions.The learning modules are roughly as follows:The phugoid model of glider flight.Described by a set of two nonlinear ordinary differential equations, the phugoid model motivates numerical time integration methods, and we will build it starting from an even simpler model (e.g., simple harmonic motion), building up to the full nonlinear model in 4 or 5 lessons on initial-value problems. Roughly, this module would include: a) Forward/backward differencing and Euler's method for simple harmonic motion; b) extension to the phugoid model; c) the midpoint method, convergence testing, local vs. global error; d) Runge-Kutta methods.Space and Time&mdash;Introduction to finite-difference solutions of PDEsStarting with the simplest model represented by a partial differential equation (PDE)&mdash;the linear convection equation in one dimension&mdash;, this module builds the foundation of using finite differencing in PDEs. (The module is based on the &ldquo;CFD Python&rdquo; collection, steps 1 through 4.) It also motivates CFL condition, numerical diffusion, accuracy of finite-difference approximations via Taylor series, consistency and stability, and the physical idea of conservation laws.Riding the wave: convection problems.Starting with the inviscid Burgers&rsquo; equation in conservation form and a 1D shock wave, cover a sampling of finite-difference convection schemes of various types: upwind, Lax-Friedrichs, Lax-Wendroff, MacCormack, then MUSCL (discussing limiters). Traffic-flow equation with MUSCL (from HyperPython). Reinforce concepts of numerical diffusion and stability, in the context of solutions with shocks. It will motivate spectral analysis of schemes, dispersion errors, Gibbs phenomenon, conservative schemes.Spreading out: diffusion problemsStart with heat equation in 2D (first introduction of two-dimensional FD discretization). Introduce implicit methods: backward Euler, trapezoidal rule (Crank-Nicolson), backward-differentiation formula (BDF). Pattern formation models (reaction-diffusion). Theory content: A-stability (unconditional stability), L-stability. Fourier spectral methods and splitting.Relax and hold steady: elliptic problems.Laplace and Poisson equations (steps 9 and 10 of &ldquo;CFD Python&rdquo;), explained as systems relaxing under the influence of the boundary conditions and the Laplace operator; introducing the idea of pseudo-time and iterative methods. Linear solvers for PDEs : Jacobi&rsquo;s method, slow convergence of low-frequency modes (matrix analysis of Jacobi), Jacobi as a smoother, Multigrid.Boundaries take over: the boundary element method (BEM)Weak and boundary integral formulation of elliptic partial differential equations; the free space Green's function. Boundary discretization: basis functions; collocation and Galerkin systems. The BEM stiffness matrix: dense versus sparse; matrix conditioning. Solving the BEM system: singular and near-singular integrals; Gauss quadrature integration.",
        "desc_html": "This course is a collaboration between faculty at three institutions across\nthe world: the George Washington University (Washington, DC, USA); University\nof Southampton (UK) and Pontifical Catholic University of Chile (Santiago,\nChile).* A credit-bearing course will run at each institution at the same time\nas this MOOC, and students at all locations will participate in the same\nlearning community with MOOC participants.\n\nThe course aims for students to achieve the following:\n\n  * connect the physics represented by a mathematical model to the characteristics of numerical methods to be able to _select_ a good solution method;\n  * implement a numerical solution method in a well-designed, correct computer program;\n  * interpret the numerical solutions that were obtained in regards to their accuracy and suitability for applications.\n**WHO IS THE COURSE FOR?**\n\nNumerical methods for differential equations are relevant across all of\nscience and engineering. This course is for anyone with mathematical,\nscientific or engineering backgrounds who wishes to develop a grounding in\nscientific computing. Using a range of hands-on lessons, participants in the\ncourse will develop the basic skills to tackle modern computational modelling\nproblems.\n\nIn developing this course, the instructors are inspired by the philosophy of\nopen-source software. One of the tenets of the course is that we can use the\nweb to interact, connect our learning, teach each other by sharing our\nlearning objects. Therefore, this course is especially for those who are eager\nto participate in distributed knowledge creation on the web. Join us in this\nadventure!\n\n**PREREQUISITES**\n\nThe connected courses and MOOC are aimed at first-year graduate students or\nadvanced seniors, but assume only a background in vector calculus, linear\nalgebra, and differential equations. We won't assume more than a beginner's\nprogramming experience and will guide students to develop a foundation in\nnumerical methods, and hands-on experience coding up solutions to differential\nequations.\n\n## Syllabus\n\nThe course will consist of six learning modules that are somewhat self-\ncontained. Each one will be motivated by a problem that can be modeled by a\ndifferential equation (or system of DEs) and will build new concepts in\nnumerical computing, new coding skills and ideas about analysis of numerical\nsolutions.\n\nThe learning modules are roughly as follows:\n\n**The phugoid model of glider flight.**\n\nDescribed by a set of two nonlinear ordinary differential equations, the\nphugoid model motivates numerical time integration methods, and we will build\nit starting from an even simpler model (e.g., simple harmonic motion),\nbuilding up to the full nonlinear model in 4 or 5 lessons on initial-value\nproblems. Roughly, this module would include: a) Forward/backward differencing\nand Euler's method for simple harmonic motion; b) extension to the phugoid\nmodel; c) the midpoint method, convergence testing, local vs. global error; d)\nRunge-Kutta methods.\n\n**Space and Time--Introduction to finite-difference solutions of PDEs**\n\nStarting with the simplest model represented by a partial differential\nequation (PDE)--the linear convection equation in one dimension--, this module\nbuilds the foundation of using finite differencing in PDEs. (The module is\nbased on the \"CFD Python\" collection, steps 1 through 4.) It also motivates\nCFL condition, numerical diffusion, accuracy of finite-difference\napproximations via Taylor series, consistency and stability, and the physical\nidea of conservation laws.\n\n**Riding the wave: convection problems.**\n\nStarting with the inviscid Burgers' equation in conservation form and a 1D\nshock wave, cover a sampling of finite-difference convection schemes of\nvarious types: upwind, Lax-Friedrichs, Lax-Wendroff, MacCormack, then MUSCL\n(discussing limiters). Traffic-flow equation with MUSCL (from HyperPython).\nReinforce concepts of numerical diffusion and stability, in the context of\nsolutions with shocks. It will motivate spectral analysis of schemes,\ndispersion errors, Gibbs phenomenon, conservative schemes.\n\n**Spreading out: diffusion problems**\n\nStart with heat equation in 2D (first introduction of two-dimensional FD\ndiscretization). Introduce implicit methods: backward Euler, trapezoidal rule\n(Crank-Nicolson), backward-differentiation formula (BDF). Pattern formation\nmodels (reaction-diffusion). Theory content: A-stability (unconditional\nstability), L-stability. Fourier spectral methods and splitting.\n\n**Relax and hold steady: elliptic problems.**\n\nLaplace and Poisson equations (steps 9 and 10 of \"CFD Python\"), explained as\nsystems relaxing under the influence of the boundary conditions and the\nLaplace operator; introducing the idea of pseudo-time and iterative methods.\nLinear solvers for PDEs : Jacobi's method, slow convergence of low-frequency\nmodes (matrix analysis of Jacobi), Jacobi as a smoother, Multigrid.\n\n**Boundaries take over: the boundary element method (BEM)**\n\nWeak and boundary integral formulation of elliptic partial differential\nequations; the free space Green's function. Boundary discretization: basis\nfunctions; collocation and Galerkin systems. The BEM stiffness matrix: dense\nversus sparse; matrix conditioning. Solving the BEM system: singular and near-\nsingular integrals; Gauss quadrature integration.\n\n",
        "name": "Practical Numerical Methods with Python",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [
            "George Washington University"
        ],
        "url": "http://openedx.seas.gwu.edu/courses/GW/MAE6286/2014_fall/about",
        "video_url": "https://www.youtube.com/embed/nwXepIXILhA?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-08-17",
        "desc": "\u062a\u0639\u0631\u064a\u0641 \u0628\u0628\u0631\u0648\u062a\u0643\u0648\u0644\u0627\u062a \u0627\u0644\u0625\u062a\u0635\u0627\u0644 \u0627\u0644\u0634\u0628\u0643\u064a \u064a\u0628\u062f\u0623 \u0645\u0646 \u0648\u0627\u062c\u0647\u0629 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0625\u0644\u0649 \u0631\u0648\u0627\u0628\u0637 \u0627\u0644\u0625\u062a\u0635\u0627\u0644 \u0627\u0644\u0645\u0627\u062f\u064a\u0629 \u0643\u0645\u0627 \u064a\u0634\u0645\u0644 \u0628\u0631\u0645\u062c\u0629 \u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u0634\u0628\u0643\u0629 \u0628\u0644\u063a\u0629 \u0628\u0627\u064a\u062b\u0648\u0646.\u0627\u0644\u0645\u0627\u062f\u0629 \u0623\u0643\u0627\u062f\u064a\u0645\u064a\u0629 \u062a\u062f\u0631\u0633 \u0641\u064a \u0627\u0644\u062c\u0627\u0645\u0639\u0627\u062a \u0648\u0644\u064a\u0633\u062a \u062a\u062c\u0627\u0631\u064a\u0629 \u0648\u0647\u064a \u0636\u0631\u0648\u0631\u064a\u0629 \u0643\u0623\u0633\u0627\u0633 \u0644\u0641\u0647\u0645 \u0627\u0644\u0625\u062a\u0635\u0627\u0644 \u0627\u0644\u0634\u0628\u0643\u064a \u0642\u0628\u0644 \u0627\u0644\u062f\u062e\u0648\u0644 \u0641\u064a \u0627\u0644\u0645\u0646\u0627\u0647\u062c \u0627\u0644\u062a\u062c\u0627\u0631\u064a\u0629 \u0627\u0644\u062a\u0627\u0628\u0639\u0629 \u0644\u0644\u0634\u0631\u0643\u0627\u062a \u0627\u0644\u0645\u0635\u0646\u0639\u0629 \u0644\u0645\u0639\u062f\u0627\u062a \u0627\u0644\u0625\u062a\u0635\u0627\u0644.",
        "desc_html": "\u062a\u0639\u0631\u064a\u0641 \u0628\u0628\u0631\u0648\u062a\u0643\u0648\u0644\u0627\u062a \u0627\u0644\u0625\u062a\u0635\u0627\u0644 \u0627\u0644\u0634\u0628\u0643\u064a \u064a\u0628\u062f\u0623 \u0645\u0646 \u0648\u0627\u062c\u0647\u0629 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0625\u0644\u0649 \u0631\u0648\u0627\u0628\u0637 \u0627\u0644\u0625\u062a\u0635\u0627\u0644\n\u0627\u0644\u0645\u0627\u062f\u064a\u0629 \u0643\u0645\u0627 \u064a\u0634\u0645\u0644 \u0628\u0631\u0645\u062c\u0629 \u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u0634\u0628\u0643\u0629 \u0628\u0644\u063a\u0629 \u0628\u0627\u064a\u062b\u0648\u0646.\n\n  \n  \n\n\u0627\u0644\u0645\u0627\u062f\u0629 \u0623\u0643\u0627\u062f\u064a\u0645\u064a\u0629 \u062a\u062f\u0631\u0633 \u0641\u064a \u0627\u0644\u062c\u0627\u0645\u0639\u0627\u062a \u0648\u0644\u064a\u0633\u062a \u062a\u062c\u0627\u0631\u064a\u0629 \u0648\u0647\u064a \u0636\u0631\u0648\u0631\u064a\u0629 \u0643\u0623\u0633\u0627\u0633 \u0644\u0641\u0647\u0645 \u0627\u0644\u0625\u062a\u0635\u0627\u0644\n\u0627\u0644\u0634\u0628\u0643\u064a \u0642\u0628\u0644 \u0627\u0644\u062f\u062e\u0648\u0644 \u0641\u064a \u0627\u0644\u0645\u0646\u0627\u0647\u062c \u0627\u0644\u062a\u062c\u0627\u0631\u064a\u0629 \u0627\u0644\u062a\u0627\u0628\u0639\u0629 \u0644\u0644\u0634\u0631\u0643\u0627\u062a \u0627\u0644\u0645\u0635\u0646\u0639\u0629 \u0644\u0645\u0639\u062f\u0627\u062a \u0627\u0644\u0625\u062a\u0635\u0627\u0644.\n\n",
        "name": "\u0634\u0628\u0643\u0627\u062a \u0627\u0644\u062d\u0627\u0633\u0628 - \u062a\u062d\u0644\u064a\u0644 \u0634\u0628\u0643\u0627\u062a \u0627\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a",
        "provider": "Rwaq (\u0631\u0648\u0627\u0642)",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "http://www.rwaq.org/courses/networks",
        "video_url": "https://www.youtube.com/embed/l7wfacDIAt8?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-08-15",
        "desc": "This is a course in programming in C. No prior programming experience is assumed; however, mathematical maturity at the level of a second year science or engineering undergraduate is assumed.We emphasize solving problems using the language, and introduce standard programming techniques like alternation, iteration and recursion. We will briefly glimpse the basics of software engineering practices like modularization, commenting, and naming conventions which help in collaborating and programming in teams.&nbsp;Given a problem, we pay attention to the following questions:What is an algorithmic solution to the problem?How do we translate the algorithm into C code?How efficient is the code?How maintainable is the code?It is expected that by the end of the course, students will be comfortable in :-Attempting algorithmic solutions to problemsDesigning and coding moderate sized programs running to the order of a few hundred lines of code, andReading, understanding and modifying code written by others.SyllabusIntroduction. Straight-Line Code. Variables, Operators, Expressions and Conditionals.LoopsFunctionsOne-Dimensional Arrays and PointersRecursionMulti-dimensional Arrays, Linked Lists.Operating on FilesOrganizing C projects, working with multiple source directories, makefiles.",
        "desc_html": "This is a course in programming in C. No prior programming experience is\nassumed; however, mathematical maturity at the level of a second year science\nor engineering undergraduate is assumed.  \nWe emphasize solving problems using the language, and introduce standard\nprogramming techniques like alternation, iteration and recursion. We will\nbriefly glimpse the basics of software engineering practices like\nmodularization, commenting, and naming conventions which help in collaborating\nand programming in teams.  \nGiven a problem, we pay attention to the following questions:\n\n  1. What is an algorithmic solution to the problem?\n  2. How do we translate the algorithm into C code?\n  3. How efficient is the code?\n  4. How maintainable is the code?\n\n_It is expected that by the end of the course, students will be comfortable in\n:-_\n\n  1. Attempting algorithmic solutions to problems\n  2. Designing and coding moderate sized programs running to the order of a few hundred lines of code, and\n  3. Reading, understanding and modifying code written by others.\n\n## Syllabus\n\n  1. Introduction. Straight-Line Code. Variables, Operators, Expressions and Conditionals.\n  2. Loops\n  3. Functions\n  4. One-Dimensional Arrays and Pointers\n  5. Recursion\n  6. Multi-dimensional Arrays, Linked Lists.\n  7. Operating on Files\n  8. Organizing C projects, working with multiple source directories, makefiles.\n\n",
        "name": "Introduction to Programming in C",
        "provider": "NPTEL",
        "rating": "1",
        "reviews": "1",
        "university": [],
        "url": "https://onlinecourses.nptel.ac.in/iitk_cs_101/preview",
        "video_url": "https://www.youtube.com/embed/JpN0GTJOxTk?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-08-05",
        "desc": "Computer graphics can be a powerful tool for supporting visual problem solving, and interactivity plays a central role in harnessing the users' creativity. This course will introduce various interactive tools developed in computer graphics research field with their design rationales and algorithms. Examples include enhancements to graphical user interfaces, authoring tools for 2D drawings and 3D animations, and interactive computer-aided design systems. Rich live demonstrations and course assignments will give you insights and skills to design and implement such tools for your own problems.SyllabusWeek 1: Graphical User InterfacesWeek 2: 2D Drawings and AnimationWeek 3: 3D Geometric ModelingWeek 4: Deformation and AnimationWeek 5: FabricationWeek 6: Computer-aided DesignWeek 7: Real World Interaction",
        "desc_html": "Computer graphics can be a powerful tool for supporting visual problem\nsolving, and interactivity plays a central role in harnessing the users'\ncreativity. This course will introduce various interactive tools developed in\ncomputer graphics research field with their design rationales and algorithms.\nExamples include enhancements to graphical user interfaces, authoring tools\nfor 2D drawings and 3D animations, and interactive computer-aided design\nsystems. Rich live demonstrations and course assignments will give you\ninsights and skills to design and implement such tools for your own problems.\n\n## Syllabus\n\nWeek 1: Graphical User Interfaces\n\nWeek 2: 2D Drawings and Animation\n\nWeek 3: 3D Geometric Modeling\n\nWeek 4: Deformation and Animation\n\nWeek 5: Fabrication\n\nWeek 6: Computer-aided Design\n\nWeek 7: Real World Interaction  \n\n",
        "name": "Interactive Computer Graphics",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "The University of Tokyo"
        ],
        "url": "https://www.coursera.org/course/interactivegraphics",
        "video_url": ""
    },
    {
        "date": "2014-08-01",
        "desc": "This course is aimed at anyone interested in learning about SAP HANA. You don\u2019t need to have any technical knowledge to understand the concept of SAP HANA in this overview as explained easily and informally by Vishal.After the course, you will have an understanding of how SAP HANA works, how quickly it can perform tasks and how it has helped existing SAP customers.This is a special edition openSAP course as your total learning time will be just two to three hours and all content is already available. The course is broken down into five units consisting of nine videos with self-tests for you to complete after each section. Your results will not be saved; they are just for your personal use.",
        "desc_html": "This course is aimed at anyone interested in learning about SAP HANA. You\ndon\u2019t need to have any technical knowledge to understand the concept of SAP\nHANA in this overview as explained easily and informally by Vishal.  \n  \nAfter the course, you will have an understanding of how SAP HANA works, how\nquickly it can perform tasks and how it has helped existing SAP customers.  \n  \nThis is a special edition openSAP course as your total learning time will be\njust two to three hours and all content is already available. The course is\nbroken down into five units consisting of nine videos with self-tests for you\nto complete after each section. Your results will not be saved; they are just\nfor your personal use.\n\n",
        "name": "An Introduction to SAP HANA",
        "provider": "openSAP",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.sap.com/course/hanaintro1",
        "video_url": ""
    },
    {
        "date": "2014-07-29",
        "desc": "*Note - This is an Archived course*This is a past/archived course. At this time, you can only explore this course in a self-paced fashion. Certain features of this course may not be active, but many people enjoy watching the videos and working with the materials. Make sure to check for reruns of this course.This is the first of a two-part course, and corresponds to the first half of the Computer Programming course CS101 at IIT Bombay. In this part, basic concepts of computer programming are introduced starting with the notion of an algorithm. Emphasis is on developing the ability to write programs to solve practical computational problems. Topics include:AlgorithmsElements of C/C++ programming languagesBasic data typesSequential and conditional executionIterative solutionsArrays, matrices, and their applicationsFunctionsSorting and searchingElements of string processingIntroduction to pointersBasics of Software Engineering.Participants will get to read and understand many sample programs, and will have to write several on their own. This course deals with procedural programming, and attempts to inculcate good programming practices in a novice programmer.",
        "desc_html": "*Note - This is an Archived course*  \n  \nThis is a past/archived course. At this time, you can only explore this course\nin a self-paced fashion. Certain features of this course may not be active,\nbut many people enjoy watching the videos and working with the materials. Make\nsure to check for reruns of this course.  \n  \nThis is the first of a two-part course, and corresponds to the first half of\nthe Computer Programming course CS101 at IIT Bombay. In this part, basic\nconcepts of computer programming are introduced starting with the notion of an\nalgorithm. Emphasis is on developing the ability to write programs to solve\npractical computational problems. Topics include:  \n  \nAlgorithms  \nElements of C/C++ programming languages  \nBasic data types  \nSequential and conditional execution  \nIterative solutions  \nArrays, matrices, and their applications  \nFunctions  \nSorting and searching  \nElements of string processing  \nIntroduction to pointers  \nBasics of Software Engineering.  \nParticipants will get to read and understand many sample programs, and will\nhave to write several on their own. This course deals with procedural\nprogramming, and attempts to inculcate good programming practices in a novice\nprogrammer.\n\n",
        "name": "CS101.1x: Introduction to Computer Programming, Part 1",
        "provider": "edX",
        "rating": "1.5714285714286",
        "reviews": "7",
        "university": [
            "IIT(Indian Institute of Technology Bombay)"
        ],
        "url": "https://www.edx.org/course/introduction-computer-programming-part-1-iitbombayx-cs101-1x",
        "video_url": ""
    },
    {
        "date": "2014-07-28",
        "desc": "The web has become an object of our daily life and the amount of information in the web is ever growing. Besides plain texts, especially multimedia information such as graphics, audio or video have become a predominant part of the web's information traffic. But, how can we find useful information within this huge information space? How can we make use of the knowledge contained in those web documents? Traditional search engines for example will reach the limits of their power, when it comes to understanding information content. The Semantic Web is an extension of the traditional web in the sense that information in the form of natural language text in the web will be complemented by its explicit semantics based on a formal knowledge representation. Thus, the meaning of information expressed in natural language can be accessed in an automated way and interpreted correctly, i.e. it can be &lsquo;understood&rsquo; by machines.Semantic Web technologies enable the explicit representation of knowledge and its further processing to deduce new knowledge from implicitly hidden knowledge. Thus, information access and information search will be more precise and more complete compared to today's traditional information retrieval technology. Previously heterogeneous data can be mapped and combined based on common knowledge representation and schemata easily extended in a dynamic way.In this course, you will learn the fundamentals of Semantic Web technologies and how they are applied for knowledge representation in the World Wide Web. You will learn how to represent knowledge with ontologies and how to access and benefit from semantic data on the Web. Furthermore, you will also learn how to make use of Linked Data and the Web of Data, currently the most popular applications based on Semantic Web technologies.Requirements for this course:a basic knowledge of the foundations of mathematical logics, i.e. propositional logics and first order logicsa basic understanding of web technologies, such as URL, http, HTML, and XML-based technologiesa basic knowledge of database technology, esp. relational databasesand SQL query languageSyllabusWeek 1:Knowledge Engineering and the Web of DataWeek 2:Semantic Web Technologies - Part 1Week 3:Semantic Web Technologies - Part 2Week 4:Knowledge Representation - Part 1Week 5:Knowledge Representation - Part 2Week 6:Knowledge EngineeringFinal examination:Final examination",
        "desc_html": "The web has become an object of our daily life and the amount of information\nin the web is ever growing. Besides plain texts, especially multimedia\ninformation such as graphics, audio or video have become a predominant part of\nthe web's information traffic. But, how can we find useful information within\nthis huge information space? How can we make use of the knowledge contained in\nthose web documents? Traditional search engines for example will reach the\nlimits of their power, when it comes to understanding information content. The\nSemantic Web is an extension of the traditional web in the sense that\ninformation in the form of natural language text in the web will be\ncomplemented by its explicit semantics based on a formal knowledge\nrepresentation. Thus, the meaning of information expressed in natural language\ncan be accessed in an automated way and interpreted correctly, i.e. it can be\n'understood' by machines.\n\nSemantic Web technologies enable the explicit representation of knowledge and\nits further processing to deduce new knowledge from implicitly hidden\nknowledge. Thus, information access and information search will be more\nprecise and more complete compared to today's traditional information\nretrieval technology. Previously heterogeneous data can be mapped and combined\nbased on common knowledge representation and schemata easily extended in a\ndynamic way.\n\nIn this course, you will learn the fundamentals of Semantic Web technologies\nand how they are applied for knowledge representation in the World Wide Web.\nYou will learn how to represent knowledge with ontologies and how to access\nand benefit from semantic data on the Web. Furthermore, you will also learn\nhow to make use of Linked Data and the Web of Data, currently the most popular\napplications based on Semantic Web technologies.\n\nRequirements for this course:\n\n  * a basic knowledge of the foundations of mathematical logics, i.e. propositional logics and first order logics\n  * a basic understanding of web technologies, such as URL, http, HTML, and XML-based technologies\n  * a basic knowledge of database technology, esp. relational databases  \nand SQL query language\n\n## Syllabus\n\n  *     * **Week 1:** Knowledge Engineering and the Web of Data\n    * **Week 2:** Semantic Web Technologies - Part 1\n    * **Week 3:** Semantic Web Technologies - Part 2\n    * **Week 4:** Knowledge Representation - Part 1\n    * **Week 5:** Knowledge Representation - Part 2\n    * **Week 6:** Knowledge Engineering\n    * **Final examination:** Final examination\n\n",
        "name": "Knowledge Engineering with Semantic Web Technologies",
        "provider": "openHPI",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.hpi.de/courses/semanticweb2014",
        "video_url": ""
    },
    {
        "date": "2014-09-25",
        "desc": "This is an introductory course in machine learning (ML) that covers the basic theory, algorithms, and applications. ML is a key technology in Big Data, and in many financial, medical, commercial, and scientific applications. It enables computational systems to automatically learn how to perform a desired task based on information extracted from the data. ML has become one of the hottest fields of study today, taken up by undergraduate and graduate students from 15 different majors at Caltech. This course balances theory and practice, and covers the mathematical as well as the heuristic aspects. The lectures follow each other in a story-like fashion:What is learning?Can a machine learn?How to do it?How to do it well?Take-home lessons.The topics in the story line are covered by 18 lectures of about 60 minutes each plus Q&A.;Lecture 1: The Learning ProblemLecture 2: Is Learning Feasible?Lecture 3: The Linear Model ILecture 4: Error and NoiseLecture 5: Training versus TestingLecture 6: Theory of GeneralizationLecture 7: The VC DimensionLecture 8: Bias-Variance TradeoffLecture 9: The Linear Model IILecture 10: Neural NetworksLecture 11: OverfittingLecture 12: RegularizationLecture 13: ValidationLecture 14: Support Vector MachinesLecture 15: Kernel MethodsLecture 16: Radial Basis FunctionsLecture 17: Three Learning PrinciplesLecture 18: Epilogue",
        "desc_html": "This is an introductory course in machine learning (ML) that covers the basic\ntheory, algorithms, and applications. ML is a key technology in Big Data, and\nin many financial, medical, commercial, and scientific applications. It\nenables computational systems to automatically learn how to perform a desired\ntask based on information extracted from the data. ML has become one of the\nhottest fields of study today, taken up by undergraduate and graduate students\nfrom 15 different majors at Caltech. This course balances theory and practice,\nand covers the mathematical as well as the heuristic aspects. The lectures\nfollow each other in a story-like fashion:  \n  \nWhat is learning?  \nCan a machine learn?  \nHow to do it?  \nHow to do it well?  \nTake-home lessons.  \nThe topics in the story line are covered by 18 lectures of about 60 minutes\neach plus Q&A.;  \n  \nLecture 1: The Learning Problem  \nLecture 2: Is Learning Feasible?  \nLecture 3: The Linear Model I  \nLecture 4: Error and Noise  \nLecture 5: Training versus Testing  \nLecture 6: Theory of Generalization  \nLecture 7: The VC Dimension  \nLecture 8: Bias-Variance Tradeoff  \nLecture 9: The Linear Model II  \nLecture 10: Neural Networks  \nLecture 11: Overfitting  \nLecture 12: Regularization  \nLecture 13: Validation  \nLecture 14: Support Vector Machines  \nLecture 15: Kernel Methods  \nLecture 16: Radial Basis Functions  \nLecture 17: Three Learning Principles  \nLecture 18: Epilogue\n\n",
        "name": "CS1156x: Learning From Data",
        "provider": "edX",
        "rating": "4.375",
        "reviews": "8",
        "university": [
            "California Institute of Technology"
        ],
        "url": "https://www.edx.org/course/learning-data-caltechx-cs1156x",
        "video_url": "https://www.youtube.com/embed/KlP0DpiM7Lw?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-09-23",
        "desc": "HTML and CSS are markup languages and the building blocks that make up the web. This course will teach you how to use them, but also much more than that. It is called \"Not your Typical Intro...\" because it does not follow the usual pattern of other courses and tutorials that you find on the Internet. Usually HTML and CSS is taught with a focus on language syntax. But knowing syntax alone does not enable you to create a webpage from a design. You need to know where to start and how to approach the task, in other words - you need to learn how to think like a front-end developer.In this course you will learn how to convert digital design mockups into static web pages. We will teach you how to approach page layout, how to break down a design mockup into page elements, and how to implement that in HTML and CSS.You will also learn about responsive design techniques, which are increasingly important in a world where mobile devices and TV screens are used more and more often to look for information and entertainment.Why Take This Course?Front-end Web Developers must have a fundamental understanding of HTML and CSS which we&rsquo;ll accomplish in this course by converting digital design mockups into static web pages. To build the web pages you will use HTML, CSS, and take advantage of the Bootstrap, the popular Twitter framework.After completing this course you will be able to build a responsive portfolio site, with your own CSS framework, with the functionality to add your future projects to it. Most importantly, you will have an understanding of the DOM and how HTML, CSS, and JavaScript all relate to each other.This course's project is part of our Front-End Web Developer Nanodegree.Prerequisites and RequirementsYou should have ability and skills to download and use a text editor for editing your web pages, we recommend&nbsp;Sublime Text&nbsp;or&nbsp;Atom. You can use another text editor if you want, but it should have the ability to highlight code syntax for your own convenience.You should be able to download and install&nbsp;Google Chrome, which is the browser we&rsquo;ll be exploring developer tools with in this course.ProjectsTake a design mockup as a PDF-file and replicate that design in HTML and CSS.SyllabusLesson 1 - From Design to CodeDiligently employ a code/test/refine strategy as you precisely and deliberately translate initial design documents into static web pages. You'll also investigate the Document Object Model (DOM) and its implications for web development.Lesson 2 - Your Own FrameworkTake pride in creating and personalising your own multi-platform, responsive CSS framework for publishing your professional portfolio projects to the web.Lesson 3 - Learning and Using BootstrapStrategically investigate an existing professional CSS framework as you use it to build a website using responsive design principles while maintaining code readability.",
        "desc_html": "HTML and CSS are markup languages and the building blocks that make up the\nweb. This course will teach you how to use them, but also much more than that.\nIt is called \"Not your Typical Intro...\" because it does not follow the usual\npattern of other courses and tutorials that you find on the Internet. Usually\nHTML and CSS is taught with a focus on language syntax. But knowing syntax\nalone does not enable you to create a webpage from a design. You need to know\nwhere to start and how to approach the task, in other words - you need to\nlearn how to think like a front-end developer.\n\nIn this course you will learn how to convert digital design mockups into\nstatic web pages. We will teach you how to approach page layout, how to break\ndown a design mockup into page elements, and how to implement that in HTML and\nCSS.\n\nYou will also learn about responsive design techniques, which are increasingly\nimportant in a world where mobile devices and TV screens are used more and\nmore often to look for information and entertainment.\n\n**Why Take This Course?**\n\nFront-end Web Developers must have a fundamental understanding of HTML and CSS\nwhich we'll accomplish in this course by converting digital design mockups\ninto static web pages. To build the web pages you will use HTML, CSS, and take\nadvantage of the Bootstrap, the popular Twitter framework.\n\nAfter completing this course you will be able to build a responsive portfolio\nsite, with your own CSS framework, with the functionality to add your future\nprojects to it. Most importantly, you will have an understanding of the DOM\nand how HTML, CSS, and JavaScript all relate to each other.\n\nThis course's project is part of our Front-End Web Developer Nanodegree.\n\n**Prerequisites and Requirements**\n\nYou should have ability and skills to download and use a text editor for\nediting your web pages, we recommend [Sublime\nText](http://www.sublimetext.com/) or [Atom](https://atom.io/). You can use\nanother text editor if you want, but it should have the ability to highlight\ncode syntax for your own convenience.\n\nYou should be able to download and install [Google\nChrome](https://www.google.com/intl/en/chrome/browser/), which is the browser\nwe'll be exploring developer tools with in this course.\n\n**Projects**\n\nTake a design mockup as a PDF-file and replicate that design in HTML and CSS.\n\n## Syllabus\n\n**Lesson 1 - From Design to Code**\n\nDiligently employ a code/test/refine strategy as you precisely and\ndeliberately translate initial design documents into static web pages. You'll\nalso investigate the Document Object Model (DOM) and its implications for web\ndevelopment.\n\n**Lesson 2 - Your Own Framework**\n\nTake pride in creating and personalising your own multi-platform, responsive\nCSS framework for publishing your professional portfolio projects to the web.\n\n**Lesson 3 - Learning and Using Bootstrap**\n\nStrategically investigate an existing professional CSS framework as you use it\nto build a website using responsive design principles while maintaining code\nreadability.\n\n",
        "name": "Intro to HTML and CSS",
        "provider": "Udacity",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.udacity.com/course/ud304",
        "video_url": ""
    },
    {
        "date": "2014-09-23",
        "desc": "Effective use of version control is an important and useful skill for any developer working on long-lived (or even medium-lived) projects, especially if more than one developer is involved. This course,&nbsp;built with input from GitHub, will introduce the basics of using version control by focusing on a particular version control system called Git and a collaboration platform called GitHub.Why Take This Course?Git is used by many tech companies, and a public GitHub profile serves as a great portfolio for any developer. But more than that, you&rsquo;ll establish an efficient programming workflow that allows you to:Keep track of multiple versions of a fileTrack bugs by reverting to previous working versions of a fileSeamlessly collaborate with other developers on a projectThe use of tools like Git and GitHub is essential for collaborating with other developers in most professional environments.Prerequisites and RequirementsWhile this course does not involve programming, students should have some experience with a programming or markup language. Additionally, students should be familiar with navigating the command line. If unfamiliar or if you want a refresher, check out&nbsp;these instructions.See the&nbsp;Technology Requirements&nbsp;for using Udacity.ProjectsStudents will publish a repository containing their reflections from the course and submit a pull request to a collaborative Create-Your-Own-Adventure story.&nbsp;SyllabusLesson 1: Navigating a Commit HistoryIn this lesson, you&rsquo;ll learn about a few different types of version control systems and discover what makes Git a great version control system for programmers. You&rsquo;ll also get practice using Git to view the history of an existing project. You&rsquo;ll learn to see all the versions that have been saved, checkout a previous version, and compare two different versions.Lesson 2: Creating and Modifying a RepositoryIn this lesson, you&rsquo;ll learn how to create a repository and save versions of your project. You&rsquo;ll learn about the staging area, committing your code, branching, and merging, and how you can use these to make you more efficient and effective.Lesson 3: Using GitHub to CollaborateIn this lesson, you&rsquo;ll get practice using GitHub or other remote repositories to share your changes with others and collaborate on multi-developer projects. You&rsquo;ll learn how to make and review a pull request on GitHub. Finally, you&rsquo;ll get practice by collaborating with other Udacity students to write a create-your-own-adventure story.",
        "desc_html": "Effective use of version control is an important and useful skill for any\ndeveloper working on long-lived (or even medium-lived) projects, especially if\nmore than one developer is involved. This course, _built with input from\nGitHub_, will introduce the basics of using version control by focusing on a\nparticular version control system called Git and a collaboration platform\ncalled GitHub.\n\n**Why Take This Course?**\n\nGit is used by many tech companies, and a public GitHub profile serves as a\ngreat portfolio for any developer. But more than that, you'll establish an\nefficient programming workflow that allows you to:\n\n  * Keep track of multiple versions of a file\n  * Track bugs by reverting to previous working versions of a file\n  * Seamlessly collaborate with other developers on a project\n\nThe use of tools like Git and GitHub is essential for collaborating with other\ndevelopers in most professional environments.\n\n**Prerequisites and Requirements**\n\nWhile this course does not involve programming, students should have some\nexperience with a programming or markup language. Additionally, students\nshould be familiar with navigating the command line. If unfamiliar or if you\nwant a refresher, check out [these instructions](https://www.udacity.com/wiki\n/command-line-instructions).\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity.\n\n**Projects**\n\nStudents will publish a repository containing their reflections from the\ncourse and submit a pull request to a collaborative Create-Your-Own-Adventure\nstory.\n\n\n\n## Syllabus\n\n**Lesson 1: Navigating a Commit History**\n\nIn this lesson, you'll learn about a few different types of version control\nsystems and discover what makes Git a great version control system for\nprogrammers. You'll also get practice using Git to view the history of an\nexisting project. You'll learn to see all the versions that have been saved,\ncheckout a previous version, and compare two different versions.\n\n**Lesson 2: Creating and Modifying a Repository**\n\nIn this lesson, you'll learn how to create a repository and save versions of\nyour project. You'll learn about the staging area, committing your code,\nbranching, and merging, and how you can use these to make you more efficient\nand effective.\n\n**Lesson 3: Using GitHub to Collaborate**\n\nIn this lesson, you'll get practice using GitHub or other remote repositories\nto share your changes with others and collaborate on multi-developer projects.\nYou'll learn how to make and review a pull request on GitHub. Finally, you'll\nget practice by collaborating with other Udacity students to write a create-\nyour-own-adventure story.\n\n",
        "name": "How to Use Git and GitHub",
        "provider": "Udacity",
        "rating": "4.5",
        "reviews": "2",
        "university": [],
        "url": "https://www.udacity.com/course/ud775",
        "video_url": ""
    },
    {
        "date": "2014-09-23",
        "desc": "We're here to get you started with JavaScript! In the twenty plus years since its inception, JavaScript has become the lingua franca of the Web, that's to say, it's become the main tool to create interactive content on the Internet.In this course, you'll explore the JavaScript programming language by creating an interactive version of your r&eacute;sum&eacute;. You&rsquo;ll learn the JavaScript programming fundamentals you need while building new elements and sections to enhance your r&eacute;sum&eacute;.Why Take This Course?Today, front-end developers work with web designers to create the interactive experiences that make the web the addictive playground we know and love. As the size and influence of the web has expanded, so has the importance of ensuring a website offers users an unforgettable experience.Perhaps your end goal is to create a HTML5 game, code the front-end for an app idea you have, or maybe you want to use one of the growing set of libraries that let you compile code written in another language or for another platform down to JavaScript. With JavaScript, you can do all these things and more.ProjectYou will create an interactive r&eacute;sum&eacute; that you can share to the world and show your growing skills at the time.Having a good r&eacute;sum&eacute; is a key component of securing a better job. We'll give you the template styles and code to create a modern and mobile friendly r&eacute;sum&eacute; (also called a curriculum vitae/CV outside the United States) that you can modify and customize.Prerequisites and RequirementsWe expect that you have&nbsp;some&nbsp;experience programming in another language, such as Python, and can describe concepts like loops, functions and objects. Our&nbsp;Intro to Computer Science&nbsp;and&nbsp;Programming Fundamentals with Python&nbsp;courses are great places to get started.While we do describe the underlying principles behind basic programming techniques, this course focuses on implementing the principles with JavaScript rather than the principles themselves.HTML and CSS are not required, however, knowledge of CSS will help you customize your r&eacute;sum&eacute; project.ProjectsDevelop an interactive resume application that reads your resume content from a JSON file and dynamically displays that content within a provided template.SyllabusLesson 1: Getting Up and RunningLearn about the tools we'll be using throughout the course and begin modifying web pages with a little bit of code.Introduction of r&eacute;sum&eacute; projectComponents of the r&eacute;sum&eacute;Introduction to browser developer toolsRunning commands on the consoleAppending elements to the pageLesson 2: Data TypesDig deeper into JavaScript as we introduce you to the building blocks of the language as you write more complex code using variables and advanced data structures like JSON, Objects, and Arrays.VariablesStringsEvaluating valuesArraysObjectsJSONValidating JSONLesson 3: Flow ControlFinish the r&eacute;sum&eacute; while you learn how to make your code more modular and reusable by using conditional statements, loops, and functions.Conditional statementsFor and while loopsFunctionsEncapsulation",
        "desc_html": "We're here to get you started with JavaScript! In the twenty plus years since\nits inception, JavaScript has become the lingua franca of the Web, that's to\nsay, it's become the main tool to create interactive content on the Internet.\n\nIn this course, you'll explore the JavaScript programming language by creating\nan interactive version of your resume. You'll learn the JavaScript programming\nfundamentals you need while building new elements and sections to enhance your\nresume.\n\n**Why Take This Course?**\n\nToday, front-end developers work with web designers to create the interactive\nexperiences that make the web the addictive playground we know and love. As\nthe size and influence of the web has expanded, so has the importance of\nensuring a website offers users an unforgettable experience.\n\nPerhaps your end goal is to create a HTML5 game, code the front-end for an app\nidea you have, or maybe you want to use one of the growing set of libraries\nthat let you compile code written in another language or for another platform\ndown to JavaScript. With JavaScript, you can do all these things and more.\n\nProject\n\nYou will create an interactive resume that you can share to the world and show\nyour growing skills at the time.\n\nHaving a good resume is a key component of securing a better job. We'll give\nyou the template styles and code to create a modern and mobile friendly resume\n(also called a curriculum vitae/CV outside the United States) that you can\nmodify and customize.\n\n**Prerequisites and Requirements**\n\nWe expect that you have _some_ experience programming in another language,\nsuch as Python, and can describe concepts like loops, functions and objects.\nOur [Intro to Computer Science](https://www.udacity.com/course/cs101) and\n[Programming Fundamentals with Python](https://www.udacity.com/course/ud036)\ncourses are great places to get started.\n\nWhile we do describe the underlying principles behind basic programming\ntechniques, this course focuses on implementing the principles with JavaScript\nrather than the principles themselves.\n\nHTML and CSS are not required, however, knowledge of CSS will help you\ncustomize your resume project.\n\n**Projects**\n\nDevelop an interactive resume application that reads your resume content from\na JSON file and dynamically displays that content within a provided template.\n\n## Syllabus\n\n**Lesson 1: Getting Up and Running**\n\nLearn about the tools we'll be using throughout the course and begin modifying\nweb pages with a little bit of code.\n\n  * Introduction of resume project\n  * Components of the resume\n  * Introduction to browser developer tools\n  * Running commands on the console\n  * Appending elements to the page\n\n**Lesson 2: Data Types**\n\nDig deeper into JavaScript as we introduce you to the building blocks of the\nlanguage as you write more complex code using variables and advanced data\nstructures like JSON, Objects, and Arrays.\n\n  * Variables\n  * Strings\n  * Evaluating values\n  * Arrays\n  * Objects\n  * JSON\n  * Validating JSON\n\n**Lesson 3: Flow Control**\n\nFinish the resume while you learn how to make your code more modular and\nreusable by using conditional statements, loops, and functions.\n\n  * Conditional statements\n  * For and while loops\n  * Functions\n  * Encapsulation\n\n",
        "name": "JavaScript Basics",
        "provider": "Udacity",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.udacity.com/course/ud804",
        "video_url": ""
    },
    {
        "date": "2014-09-23",
        "desc": "From Google Maps to consumer global positioning system (GPS) devices, spatial technology shapes many lives in both ordinary and extraordinary ways. Thanks to spatial computing, a hiker in Yellowstone and a taxi driver in Manhattan can know precisely where\n    they are, discover nearby points of interest and learn how to reach their destinations. Spatial computing technology is what powers the Foursquare check-in, the maps app on your smartphone, the devices used by scientists to track endangered species,\n    the routing directions that help you get from point A to point B, the precision agriculture technology that is revolutionizing farming, and the augmented reality devices like Google Glass that may soon mediate our interaction with the real world.This course introduces the fundamental ideas underlying spatial computing services, systems, and sciences. Topics covered will include the nature of geospatial information, proper statistical frameworks for working with geospatial data, key algorithms\n    and data structures, spatial data mining, and cartography/geovisualization. We will also address applied topics such as where to find spatial data, how to use powerful open source software to analyze and map spatial data, and frameworks for building\n    location-based services.Three Ways to Enjoy this Course:This course is designed to support three different types of students and educational goals:Curiosity Track: Most of us interact with spatial technologies every day. This track is for students who wish to learn about one or two spatial computing topics, but not commit to an entire course. Curiosity track students are not interested in\n    a certificate of accomplishment.Concepts Track: This track is for students who want to learn about spatial computing concepts in order to make informed choices, but who are not programmers and do not have extensive experience with statistical methods. For example, concepts track\n    students will learn about Tobler\u2019s First Law of geography and map projections, but will not delve into the quantifications of either. Students who complete the concepts track with sufficiently high scores will receive a Statement of Accomplishment.Technical Track: This track builds on the concepts track, but adds math and programming. For example, we will cover spatial statistical indicators like Moran\u2019s I and Ripley\u2019s K when discussing Tobler\u2019s First Law and will have students calculate\n    the distance between two points using two different coordinate systems and open-source APIs. Students who complete the technical track with sufficiently high scores will receive a Distinguished Statement of Accomplishment.SyllabusTopics Covered:Module 1 - IntroductionCourse IntroductionDefining Spatial ComputingCourse StructureInterviews with Johannes Sch\u00f6ning, Loren Terveen and Martin RaubalModule 2 - Spatial Query LanguagesWhat is a Query? Query Language?An example database with 3 tablesSQL overviewSELECT statement with 1 tableMulti-table SELECT statementWhy spatial extensions are needed1-table spatial queriesTrendsModule 3 - Spatial NetworksMotivation, Societal use casesExample spatial networksConceptual and mathematical modelsNeed for SQL extensionsCONNECT statementRECURSIVE statementStorage and data structuresAlgorithms for connectivity queryAlgorithms for shortest pathInterviews with Dev Oliver and Betsy GeorgeModule 4 - Spatial Data MiningMotivation, Spatial Pattern FamiliesSpatial data types and relationshipsLimitations of Traditional StatisticsLocation Prediction modelHotspotsSpatial outliersColocations and Co-occurrencesSummary:  What is special about mining spatial data?Module 5 - Volunteered Geographic Information (VGI)Introduction to Volunteered Geographic InformationProducing VGIPros and Cons of VGIInterview with Michael GoodchildModule 6 - PositioningIntroduction to PositioningOverview of GPSOverview of Wifi and Cellular PositioningIntroduction to Content-based PositioningGeoparsingLocation-field PositioningModule 7 - CartographyIntroduction to CartographyOverview of Maps and MappingReference MapsThematic MapsSpatializationModule 8 - Future DirectionsIntroductionSpatial Databases: Representative projectsData Mining: Representative projectsAdvances in CartographyAdvances in PositioningInterviews with Vipin Kumar, Wan Bae, Mohammed Mokbel and Len Kne",
        "desc_html": "From Google Maps to consumer global positioning system (GPS) devices, spatial\ntechnology shapes many lives in both ordinary and extraordinary ways. Thanks\nto spatial computing, a hiker in Yellowstone and a taxi driver in Manhattan\ncan know precisely where they are, discover nearby points of interest and\nlearn how to reach their destinations. Spatial computing technology is what\npowers the Foursquare check-in, the maps app on your smartphone, the devices\nused by scientists to track endangered species, the routing directions that\nhelp you get from point A to point B, the precision agriculture technology\nthat is revolutionizing farming, and the augmented reality devices like Google\nGlass that may soon mediate our interaction with the real world.\n\nThis course introduces the fundamental ideas underlying spatial computing\nservices, systems, and sciences. Topics covered will include the nature of\ngeospatial information, proper statistical frameworks for working with\ngeospatial data, key algorithms and data structures, spatial data mining, and\ncartography/geovisualization. We will also address applied topics such as\nwhere to find spatial data, how to use powerful open source software to\nanalyze and map spatial data, and frameworks for building location-based\nservices.  \n\n  \n**Three Ways to Enjoy this Course:**   \n\nThis course is designed to support three different types of students and\neducational goals:  \n\n_Curiosity Track_: Most of us interact with spatial technologies every day.\nThis track is for students who wish to learn about one or two spatial\ncomputing topics, but not commit to an entire course. Curiosity track students\nare not interested in a certificate of accomplishment.  \n\n_Concepts Track_: This track is for students who want to learn about spatial\ncomputing concepts in order to make informed choices, but who are not\nprogrammers and do not have extensive experience with statistical methods. For\nexample, concepts track students will learn about Tobler\u2019s First Law of\ngeography and map projections, but will not delve into the quantifications of\neither. Students who complete the concepts track with sufficiently high scores\nwill receive a Statement of Accomplishment.  \n\n_Technical Track_: This track builds on the concepts track, but adds math and\nprogramming. For example, we will cover spatial statistical indicators like\nMoran\u2019s I and Ripley\u2019s K when discussing Tobler\u2019s First Law and will have\nstudents calculate the distance between two points using two different\ncoordinate systems and open-source APIs. Students who complete the technical\ntrack with sufficiently high scores will receive a Distinguished Statement of\nAccomplishment.  \n\n## Syllabus\n\n**Topics Covered:**   \nModule 1 - Introduction  \n\n> Course Introduction  \nDefining Spatial Computing  \nCourse Structure  \nInterviews with Johannes Sch\u00f6ning, Loren Terveen and Martin Raubal\n\nModule 2 - Spatial Query Languages\n\n> What is a Query? Query Language?  \nAn example database with 3 tables  \nSQL overview  \nSELECT statement with 1 table  \nMulti-table SELECT statement  \nWhy spatial extensions are needed  \n1-table spatial queries  \nTrends  \n\nModule 3 - Spatial Networks\n\n> Motivation, Societal use cases  \nExample spatial networks  \nConceptual and mathematical models  \nNeed for SQL extensions  \nCONNECT statement  \nRECURSIVE statement  \nStorage and data structures  \nAlgorithms for connectivity query  \nAlgorithms for shortest path  \nInterviews with Dev Oliver and Betsy George\n\nModule 4 - Spatial Data Mining\n\n> Motivation, Spatial Pattern Families  \nSpatial data types and relationships  \nLimitations of Traditional Statistics  \nLocation Prediction model  \nHotspots  \nSpatial outliers  \nColocations and Co-occurrences  \nSummary: What is special about mining spatial data?\n\nModule 5 - Volunteered Geographic Information (VGI)\n\n> Introduction to Volunteered Geographic Information  \nProducing VGI  \nPros and Cons of VGI  \nInterview with Michael Goodchild\n\nModule 6 - Positioning\n\n> Introduction to Positioning  \nOverview of GPS  \nOverview of Wifi and Cellular Positioning  \nIntroduction to Content-based Positioning  \nGeoparsing  \nLocation-field Positioning\n\nModule 7 - Cartography\n\n> Introduction to Cartography  \nOverview of Maps and Mapping  \nReference Maps  \nThematic Maps  \nSpatialization\n\nModule 8 - Future Directions\n\n> Introduction  \nSpatial Databases: Representative projects  \nData Mining: Representative projects  \nAdvances in Cartography  \nAdvances in Positioning  \nInterviews with Vipin Kumar, Wan Bae, Mohammed Mokbel and Len Kne\n\n",
        "name": "From GPS and Google Maps to Spatial Computing",
        "provider": "Coursera",
        "rating": "5",
        "reviews": "1",
        "university": [
            "University of Minnesota"
        ],
        "url": "https://www.coursera.org/course/spatialcomputing",
        "video_url": ""
    },
    {
        "date": "2014-09-23",
        "desc": "*Note - This is an Archived course*This is a past/archived course. At this time, you can only explore this course in a self-paced fashion. Certain features of this course may not be active, but many people enjoy watching the videos and working with the materials. Make sure to check for reruns of this course.This is the second of a two-part course, and corresponds to the second half of the Computer Programming course CS101 at IIT Bombay. This part begins with a brief review of basic programming concepts, discusses how to handle complex computational applications, and then introduces the basics of object oriented programming. Topics include:PointersStructuresFile processingHandling graphicsIntroduction to Object Oriented Programming ConceptsClasses and MethodsStandard Library of C++.Apart from solving relatively larger and more complex programming problems, participants will get exposure to building a typical programming project.",
        "desc_html": "*Note - This is an Archived course*  \n  \nThis is a past/archived course. At this time, you can only explore this course\nin a self-paced fashion. Certain features of this course may not be active,\nbut many people enjoy watching the videos and working with the materials. Make\nsure to check for reruns of this course.  \n  \nThis is the second of a two-part course, and corresponds to the second half of\nthe Computer Programming course CS101 at IIT Bombay. This part begins with a\nbrief review of basic programming concepts, discusses how to handle complex\ncomputational applications, and then introduces the basics of object oriented\nprogramming. Topics include:  \n  \nPointers  \nStructures  \nFile processing  \nHandling graphics  \nIntroduction to Object Oriented Programming Concepts  \nClasses and Methods  \nStandard Library of C++.  \nApart from solving relatively larger and more complex programming problems,\nparticipants will get exposure to building a typical programming project.\n\n",
        "name": "CS101.2x: Introduction to Computer Programming, Part 2",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "IIT(Indian Institute of Technology Bombay)"
        ],
        "url": "https://www.edx.org/course/introduction-computer-programming-part-2-iitbombayx-cs101-2x",
        "video_url": ""
    },
    {
        "date": "2014-09-23",
        "desc": "Welcome! The instructor has decided to teach the course in Mandarin on Coursera, while the slides of the course will be in English to ease the technical illustrations. We \nhope that this choice can help introduce Machine Learning to more \nbeginners in the Mandarin-speaking world. The English-written slides will not require advanced English ability to understand, though. If you can understand the following descriptions of this course, you can probably follow the slides.[\u6b61\u8fce\u5927\u5bb6\uff01\u9019\u9580\u8ab2\u5c07\u63a1\u7528\u82f1\u6587\u6295\u5f71\u7247\u914d\u5408\u83ef\u6587\u7684\u6559\u5b78\u8b1b\u89e3\uff0c\u6211\u5011\u5e0c\u671b\u80fd\u85c9\u9019\u6b21\u83ef\u6587\u6559\u5b78\u7684\u6a5f\u6703\uff0c\u5c07\u6a5f\u5668\u5b78\u7fd2\u4ecb\u7d39\u7d66\u66f4\u591a\u83ef\u4eba\u4e16\u754c\u7684\u5165\u9580\u8005\u3002\u8ab2\u7a0b\u4e2d\u4f7f\u7528\u7684\u82f1\u6587\u6295\u5f71\u7247\u4e0d\u6703\u4f7f\u7528\u5230\u8271\u6df1\u7684\u82f1\u6587\uff0c\u5982\u679c\u4f60\u80fd\u4e86\u89e3\u4ee5\u4e0b\u5169\u6bb5\u7684\u8ab2\u7a0b\u7c21\u4ecb\uff0c\u4f60\u61c9\u8a72\u4e5f\u53ef\u4ee5\u4e86\u89e3\u8ab2\u7a0b\u6240\u4f7f\u7528\u7684\u82f1\u6587\u6295\u5f71\u7247\u3002]Machine learning is an exciting field with lots of applications in engineering, science, finance, and commerce. It is also a very dynamic field, where many new techniques are being designed every day, and the hot techniques and theories at times can rise and disappear rapidly. Thus, users of machine learning from other fields often face the problem of choosing or using the techniques properly. In this course, we emphasize the necessary fundamentals that give any student of machine learning a \nsolid foundation, and enable him or her to exploit current techniques properly, explore \nfurther techniques and theories, or perhaps to contribute their own in the future.The course roughly corresponds to the first half-semester of the National Taiwan University course \"Machine Learning\", and the second half-semester is expected to be on Coursera under the name \"Machine Learning Techniques\" soon in the future. Based on five years of teaching this popular course successfully (including winning the most prestigious teaching award of National Taiwan University) and discussing with many other scholars actively, the instructor chooses to focus on what he believes to be the core topics that every student of the subject should know. The students shall enjoy a story-like flow moving from \"When Can Machines Learn\" to \"Why\", \"How\" and beyond.SyllabusEach of the following items correspond to approximately one hour of video lecture.[\u4ee5\u4e0b\u7684\u6bcf\u500b\u5c0f\u9805\u76ee\u5c0d\u61c9\u5230\u7d04\u4e00\u5c0f\u6642\u7684\u7dda\u4e0a\u8ab2\u7a0b]When Can Machines Learn?[\u4f55\u6642\u53ef\u4ee5\u4f7f\u7528\u6a5f\u5668\u5b78\u7fd2]-- The Learning Problem[\u6a5f\u5668\u5b78\u7fd2\u554f\u984c]-- Learning to Answer Yes/No[\u4e8c\u5143\u5206\u985e]-- Types of Learning[\u5404\u5f0f\u6a5f\u5668\u5b78\u7fd2\u554f\u984c]-- Feasibility of Learning[\u6a5f\u5668\u5b78\u7fd2\u7684\u53ef\u884c\u6027]Why Can Machines Learn?[\u70ba\u4ec0\u9ebc\u6a5f\u5668\u53ef\u4ee5\u5b78\u7fd2]-- Training versus Testing[\u8a13\u7df4\u8207\u6e2c\u8a66]-- Theory of Generalization[\u8209\u4e00\u53cd\u4e09\u7684\u4e00\u822c\u5316\u7406\u8ad6]-- The VC Dimension[VC \u7dad\u5ea6]-- Noise and Error[\u96dc\u8a0a\u4e00\u932f\u8aa4]How Can Machines Learn?[\u6a5f\u5668\u53ef\u4ee5\u600e\u9ebc\u6a23\u5b78\u7fd2]-- Linear Regression[\u7dda\u6027\u8ff4\u6b78]-- Linear `Soft' Classification[\u8edf\u6027\u7684\u7dda\u6027\u5206\u985e]-- Linear Classification beyond Yes/No[\u4e8c\u5143\u5206\u985e\u4ee5\u5916\u7684\u5206\u985e\u554f\u984c]-- Nonlinear Transformation[\u975e\u7dda\u6027\u8f49\u63db]How Can Machines Learn Better?[\u6a5f\u5668\u53ef\u4ee5\u600e\u9ebc\u6a23\u5b78\u5f97\u66f4\u597d]-- Hazard of Overfitting[\u904e\u5ea6\u8a13\u7df4\u7684\u5371\u96aa]-- Preventing Overfitting I: Regularization[\u907f\u514d\u904e\u5ea6\u8a13\u7df4\u4e00\uff1a\u63a7\u5236\u8abf\u9069]-- Preventing Overfitting II: Validation[\u907f\u514d\u904e\u5ea6\u8a13\u7df4\u4e8c\uff1a\u81ea\u6211\u6aa2\u6e2c]-- Three Learning Principles[\u4e09\u500b\u6a5f\u5668\u5b78\u7fd2\u7684\u91cd\u8981\u539f\u5247]",
        "desc_html": "Welcome! The instructor has decided to teach the course in Mandarin on\nCoursera, while the slides of the course will be in English to ease the\ntechnical illustrations. We hope that this choice can help introduce Machine\nLearning to more beginners in the Mandarin-speaking world. The English-written\nslides will not require advanced English ability to understand, though. If you\ncan understand the following descriptions of this course, you can probably\nfollow the slides. **[\u6b61\u8fce\u5927\u5bb6\uff01\u9019\u9580\u8ab2\u5c07\u63a1\u7528\u82f1\u6587\u6295\u5f71\u7247\u914d\u5408\u83ef\u6587\u7684\u6559\u5b78\u8b1b\u89e3\uff0c\u6211\u5011\u5e0c\u671b\u80fd\u85c9\u9019\u6b21\u83ef\u6587\u6559\u5b78\u7684\u6a5f\u6703\uff0c\u5c07\u6a5f\u5668\u5b78\u7fd2\u4ecb\u7d39\u7d66\u66f4\u591a\u83ef\u4eba\u4e16\u754c\n\u7684\u5165\u9580\u8005\u3002\u8ab2\u7a0b\u4e2d\u4f7f\u7528\u7684\u82f1\u6587\u6295\u5f71\u7247\u4e0d\u6703\u4f7f\u7528\u5230\u8271\u6df1\u7684\u82f1\u6587\uff0c\u5982\u679c\u4f60\u80fd\u4e86\u89e3\u4ee5\u4e0b\u5169\u6bb5\u7684\u8ab2\u7a0b\u7c21\u4ecb\uff0c\u4f60\u61c9\u8a72\u4e5f\u53ef\u4ee5\u4e86\u89e3\u8ab2\u7a0b\u6240\u4f7f\u7528\u7684\u82f1\u6587\u6295\u5f71\u7247\u3002]**  \n  \nMachine learning is an exciting field with lots of applications in\nengineering, science, finance, and commerce. It is also a very dynamic field,\nwhere many new techniques are being designed every day, and the hot techniques\nand theories at times can rise and disappear rapidly. Thus, users of machine\nlearning from other fields often face the problem of choosing or using the\ntechniques properly. In this course, we emphasize the necessary fundamentals\nthat give any student of machine learning a solid foundation, and enable him\nor her to exploit current techniques properly, explore further techniques and\ntheories, or perhaps to contribute their own in the future.  \n  \nThe course roughly corresponds to the first half-semester of the National\nTaiwan University course \"Machine Learning\", and the second half-semester is\nexpected to be on Coursera under the name \"Machine Learning Techniques\" soon\nin the future. Based on five years of teaching this popular course\nsuccessfully (including winning the most prestigious teaching award of\nNational Taiwan University) and discussing with many other scholars actively,\nthe instructor chooses to focus on what he believes to be the core topics that\nevery student of the subject should know. The students shall enjoy a story-\nlike flow moving from \"When Can Machines Learn\" to \"Why\", \"How\" and beyond.  \n  \n\n## Syllabus\n\nEach of the following items correspond to approximately one hour of video\nlecture.** [\u4ee5\u4e0b\u7684\u6bcf\u500b\u5c0f\u9805\u76ee\u5c0d\u61c9\u5230\u7d04\u4e00\u5c0f\u6642\u7684\u7dda\u4e0a\u8ab2\u7a0b]**  \n  \nWhen Can Machines Learn? **[\u4f55\u6642\u53ef\u4ee5\u4f7f\u7528\u6a5f\u5668\u5b78\u7fd2]**  \n\\-- The Learning Problem **[\u6a5f\u5668\u5b78\u7fd2\u554f\u984c]**  \n\\-- Learning to Answer Yes/No **[\u4e8c\u5143\u5206\u985e]**  \n\\-- Types of Learning **[\u5404\u5f0f\u6a5f\u5668\u5b78\u7fd2\u554f\u984c]**  \n\\-- Feasibility of Learning **[\u6a5f\u5668\u5b78\u7fd2\u7684\u53ef\u884c\u6027]**  \n  \nWhy Can Machines Learn? **[\u70ba\u4ec0\u9ebc\u6a5f\u5668\u53ef\u4ee5\u5b78\u7fd2]**  \n\\-- Training versus Testing **[\u8a13\u7df4\u8207\u6e2c\u8a66]**  \n\\-- Theory of Generalization **[\u8209\u4e00\u53cd\u4e09\u7684\u4e00\u822c\u5316\u7406\u8ad6]**  \n\\-- The VC Dimension **[VC \u7dad\u5ea6]**  \n\\-- Noise and Error **[********\u96dc\u8a0a\u4e00**\u932f\u8aa4]  \n  \nHow Can Machines Learn? **[\u6a5f\u5668\u53ef\u4ee5\u600e\u9ebc\u6a23\u5b78\u7fd2]**  \n\\-- Linear Regression **[\u7dda\u6027\u8ff4\u6b78]**  \n\\-- Linear `Soft' Classification **[\u8edf\u6027\u7684\u7dda\u6027\u5206\u985e]**  \n\\-- Linear Classification beyond Yes/No **[\u4e8c\u5143\u5206\u985e\u4ee5\u5916\u7684\u5206\u985e\u554f\u984c]**  \n\\-- Nonlinear Transformation **[\u975e\u7dda\u6027\u8f49\u63db]**  \n  \nHow Can Machines Learn Better? **[\u6a5f\u5668****\u53ef\u4ee5\u600e\u9ebc\u6a23\u5b78\u5f97\u66f4\u597d]**  \n\\-- Hazard of Overfitting **[\u904e\u5ea6\u8a13\u7df4\u7684\u5371\u96aa]**  \n\\-- Preventing Overfitting I: Regularization **[\u907f\u514d\u904e\u5ea6\u8a13\u7df4\u4e00\uff1a\u63a7\u5236\u8abf\u9069]**  \n** **\\-- Preventing Overfitting II: Validation **[\u907f\u514d\u904e\u5ea6\u8a13\u7df4\u4e8c\uff1a\u81ea\u6211\u6aa2\u6e2c]**  \n\\-- Three Learning Principles **[\u4e09\u500b\u6a5f\u5668\u5b78\u7fd2\u7684\u91cd\u8981\u539f\u5247]**  \n  \n\n",
        "name": "\u6a5f\u5668\u5b78\u7fd2\u57fa\u77f3 (Machine Learning Foundations)",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "National Taiwan University"
        ],
        "url": "https://www.coursera.org/course/ntumlone",
        "video_url": ""
    },
    {
        "date": "2014-09-22",
        "desc": "*Note - This is an Archived course*This is a past/archived course. At this time, you can only explore this course in a self-paced fashion. Certain features of this course may not be active, but many people enjoy watching the videos and working with the materials. Make sure to check for reruns of this course.Louv1.1x\u00a0(starting Sep. 22, 2014) and Louv1.2x (coming in Nov. 2014) together give an introduction to all major programming concepts, techniques, and paradigms in a unified framework. We cover the three main programming paradigms : functional, object-oriented, and declarative dataflow.The two courses are targeted toward people with a basic knowledge of programming. It will be most useful to beginning programming students, but the unconventional approach should be insightful even to seasoned professionals.Louv1.1x covers fundamental concepts. You\u2019ll learn functional programming, its techniques and its data structures. You\u2019ll use simple formal semantics for all concepts, and see those concepts illustrated with practical code that runs on the accompanying open-source platform, the Mozart Programming System.Louv1.2x covers data abstraction, state, and concurrency. You\u2019ll learn the four ways to do data abstraction and discuss the trade-offs between objects and abstract data types. You\u2019ll be exposed to deterministic dataflow, the most useful paradigm for concurrent programming, and learn how it avoids race conditions.To learn more about the practical organization of the two courses, watch the introductory video.At the end of Louv1.1x and Louv1.2x, the successful participant will be able to :Specify problems, break them down into their basic steps, and design algorithms and abstractions to solve themChoose the right programming paradigm and write a program in this paradigm to solve a problemUse formal semantics to reason about program correctnessWrite small concurrent programs in the deterministic dataflow paradigm",
        "desc_html": "*Note - This is an Archived course*  \n  \nThis is a past/archived course. At this time, you can only explore this course\nin a self-paced fashion. Certain features of this course may not be active,\nbut many people enjoy watching the videos and working with the materials. Make\nsure to check for reruns of this course.  \n  \nLouv1.1x\u00a0(starting Sep. 22, 2014) and Louv1.2x (coming in Nov. 2014) together\ngive an introduction to all major programming concepts, techniques, and\nparadigms in a unified framework. We cover the three main programming\nparadigms : functional, object-oriented, and declarative dataflow.  \n  \nThe two courses are targeted toward people with a basic knowledge of\nprogramming. It will be most useful to beginning programming students, but the\nunconventional approach should be insightful even to seasoned professionals.  \n  \nLouv1.1x covers fundamental concepts. You\u2019ll learn functional programming, its\ntechniques and its data structures. You\u2019ll use simple formal semantics for all\nconcepts, and see those concepts illustrated with practical code that runs on\nthe accompanying open-source platform, the Mozart Programming System.  \n  \nLouv1.2x covers data abstraction, state, and concurrency. You\u2019ll learn the\nfour ways to do data abstraction and discuss the trade-offs between objects\nand abstract data types. You\u2019ll be exposed to deterministic dataflow, the most\nuseful paradigm for concurrent programming, and learn how it avoids race\nconditions.  \n  \nTo learn more about the practical organization of the two courses, watch the\nintroductory video.  \n  \nAt the end of Louv1.1x and Louv1.2x, the successful participant will be able\nto :  \n  \nSpecify problems, break them down into their basic steps, and design\nalgorithms and abstractions to solve them  \nChoose the right programming paradigm and write a program in this paradigm to\nsolve a problem  \nUse formal semantics to reason about program correctness  \nWrite small concurrent programs in the deterministic dataflow paradigm\n\n",
        "name": "Louv1.1x: Paradigms of Computer Programming \u2013 Fundamentals",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Universit\u00e9 catholique de Louvain"
        ],
        "url": "https://www.edx.org/course/paradigms-computer-programming-louvainx-louv1-1x",
        "video_url": "https://www.youtube.com/embed/qTHGxZpbjfk?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-09-22",
        "desc": "Many web and media designers believe that the design process begins and ends with information architecture and visual design. Although these elements are important, other factors are equally if not more crucial for the design of successful websites and other digital media. This course will examine the standards and methods for designing digital material, primarily websites, that are not only accessible for persons with disabilities&mdash;a particularly important requirement for the websites of public entities&mdash;but also effective and usable for all users and across platforms.This course will review standards for usability and accessibility, focusing on the concepts of universal design, Web Standards, and accessibility best practices. Topics to be covered include html standards, semantic web design, user-centered design, and validation tools, among others.",
        "desc_html": "Many web and media designers believe that the design process begins and ends\nwith information architecture and visual design. Although these elements are\nimportant, other factors are equally if not more crucial for the design of\nsuccessful websites and other digital media. This course will examine the\nstandards and methods for designing digital material, primarily websites, that\nare not only accessible for persons with disabilities--a particularly\nimportant requirement for the websites of public entities--but also effective\nand usable for all users and across platforms.\n\nThis course will review standards for usability and accessibility, focusing on\nthe concepts of universal design, Web Standards, and accessibility best\npractices. Topics to be covered include html standards, semantic web design,\nuser-centered design, and validation tools, among others.\n\n",
        "name": "Universal Design for Digital Media",
        "provider": "Canvas.net",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of Colorado Boulder"
        ],
        "url": "https://www.canvas.net/courses/universal-design-for-digital-media",
        "video_url": ""
    },
    {
        "date": "2014-09-22",
        "desc": "This course provides an overview of the evolving field of cybersecurity, with an introduction to cybersecurity standards and law. Students will learn about common cyber attacks and the techniques for identifying, detecting, and defending against cybersecurity threats. They will also gain a basic understanding of personal, physical, network, web, and wireless security, as well as a foundation for more advanced study of cybersecurity.",
        "desc_html": "This course provides an overview of the evolving field of cybersecurity, with\nan introduction to cybersecurity standards and law. Students will learn about\ncommon cyber attacks and the techniques for identifying, detecting, and\ndefending against cybersecurity threats. They will also gain a basic\nunderstanding of personal, physical, network, web, and wireless security, as\nwell as a foundation for more advanced study of cybersecurity.\n\n",
        "name": "Introduction to Cybersecurity",
        "provider": "Canvas.net",
        "rating": "0",
        "reviews": "0",
        "university": [
            "National Cybersecurity Institute at Excelsior College"
        ],
        "url": "https://www.canvas.net/courses/introduction-to-cybersecurity-1",
        "video_url": ""
    },
    {
        "date": "2014-09-22",
        "desc": "How it was never to learn the basics of programming playful.To participate in the course, you do not need special knowledge, only an internet connection and a computer.No special software needs to be installed on the computer.Necessary are only a current browser and an e-mail address with which you can log on openhpi.At the beginning of the free four-week course focuses on simple programming exercises.You learn to control a virtual turtle by your programming.In the following weeks you will be familiarized that will give you a basic understanding of the structure of programming with loops, and functions.In the openhpi course you'll see tutorials and check in the quiz, if you understood everything.Directly in the browser, you can then apply the learned knowledge and program drauflos.If you're stuck once, you can in the forum or the learning groups find support from other students.Upon successful completion you will receive after the course a openhpi certificate.SyllabusWeek 1:Programming and operating instructions.In the first week you will learn how a computer works and how he gets his instructions.Be presented with the programming of the keyboard, formulas, variables, and the turtle (turtle graphics)Week 2:This week you will learn how the computer can handle similar data one by one and itself makes decisions.Presents the conditional statement, loop and lists.Week 3:A major task consists of many small.This week you will learn how programs organized and the same code can be used multiple times.Are presented functions, parameters, and dictionaries.Week 4:Ask the user.In this last week of the course you will learn how the computer can react to user input.Are presented input from keyboard and mouse input, and error handling.",
        "desc_html": "How it was never to learn the basics of programming playful. To participate in\nthe course, you do not need special knowledge, only an internet connection and\na computer. No special software needs to be installed on the computer.\nNecessary are only a current browser and an e-mail address with which you can\nlog on openhpi.\n\nAt the beginning of the free four-week course focuses on simple programming\nexercises. You learn to control a virtual turtle by your programming. In the\nfollowing weeks you will be familiarized that will give you a basic\nunderstanding of the structure of programming with loops, and functions. In\nthe openhpi course you'll see tutorials and check in the quiz, if you\nunderstood everything. Directly in the browser, you can then apply the learned\nknowledge and program drauflos.\n\nIf you're stuck once, you can in the forum or the learning groups find support\nfrom other students. Upon successful completion you will receive after the\ncourse a openhpi certificate.\n\n## Syllabus\n\n  * **Week 1:** Programming and operating instructions. In the first week you will learn how a computer works and how he gets his instructions. Be presented with the programming of the keyboard, formulas, variables, and the turtle (turtle graphics)\n  * **Week 2:** This week you will learn how the computer can handle similar data one by one and itself makes decisions. Presents the conditional statement, loop and lists.\n  * **Week 3:** A major task consists of many small. This week you will learn how programs organized and the same code can be used multiple times. Are presented functions, parameters, and dictionaries.\n  * **Week 4:** Ask the user. In this last week of the course you will learn how the computer can react to user input. Are presented input from keyboard and mouse input, and error handling.\n\n",
        "name": "Grundlagen des Programmierens",
        "provider": "openHPI",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.hpi.de/courses/43f44f93-ae42-4141-8b61-ca9dea9dae4d",
        "video_url": ""
    },
    {
        "date": "2014-09-20",
        "desc": "This course forms a strong foundation in the understanding and design of modern computing systems. Building on a computer organization base, this course explores techniques that go into designing a modern microprocessor. Fundamental understanding of computer architecture is key not only for students interested in hardware and processor design, but is a foundation for students interested in compilers, operating systems, and high performance programming. This course will explore how the computer architect can utilize the increasing number of transistors available to improve the performance of a processor. Focus will be given to architectures that can exploit different forms of parallelism, whether they be implicit or explicit. This course covers architectural techniques such as multi-issue superscalar processors, out-of-order processors, Very Long Instruction Word (VLIW) processors, advanced caching, and multiprocessor systems.",
        "desc_html": "This course forms a strong foundation in the understanding and design of\nmodern computing systems. Building on a computer organization base, this\ncourse explores techniques that go into designing a modern microprocessor.\nFundamental understanding of computer architecture is key not only for\nstudents interested in hardware and processor design, but is a foundation for\nstudents interested in compilers, operating systems, and high performance\nprogramming. This course will explore how the computer architect can utilize\nthe increasing number of transistors available to improve the performance of a\nprocessor. Focus will be given to architectures that can exploit different\nforms of parallelism, whether they be implicit or explicit. This course covers\narchitectural techniques such as multi-issue superscalar processors, out-of-\norder processors, Very Long Instruction Word (VLIW) processors, advanced\ncaching, and multiprocessor systems.\n\n",
        "name": "Computer Architecture",
        "provider": "Coursera",
        "rating": "5",
        "reviews": "1",
        "university": [
            "Princeton University"
        ],
        "url": "https://www.coursera.org/course/comparch",
        "video_url": ""
    },
    {
        "date": "2014-09-19",
        "desc": "Ce cours pr\u00e9sente des concepts de base de la programmation tels que&nbsp;&nbsp; : variables, expressions, structures de contr\u00f4le, fonctions/m\u00e9thodes, ...en les illustrant dans la syntaxe du langage C++.Ces notions simples seront pratiqu\u00e9es de fa\u00e7on intensive pour vous faire r\u00e9aliser de fa\u00e7on de plus en plus autonome&nbsp; les \u00e9tapes allant de la conception d'un programme (algorithme) \u00e0 sa mise en oeuvre concr\u00e8te.Ce cours est con\u00e7u pour \u00eatre prolong\u00e9 par les aspects orient\u00e9-objet, pr\u00e9sent\u00e9s dans le cours&nbsp;&nbsp;\u00abIntroduction \u00e0 la programmation orient\u00e9e objet (en C++)\u00bb.&nbsp;SyllabusIntroduction \u00e0 C++Structures de contr\u00f4leTableaux, cha\u00eenes de caract\u00e8resFonctions et r\u00e9utilisabilit\u00e9Structures de donn\u00e9esPointeurs et r\u00e9f\u00e9rences",
        "desc_html": "Ce cours pr\u00e9sente des concepts de base de la programmation tels que   :\nvariables, expressions, structures de contr\u00f4le, fonctions/m\u00e9thodes, ...  \nen les illustrant dans la syntaxe du langage C++.  \n  \nCes notions simples seront pratiqu\u00e9es de fa\u00e7on intensive pour vous faire\nr\u00e9aliser de fa\u00e7on de plus en plus autonome  les \u00e9tapes allant de la conception\nd'un programme (algorithme) \u00e0 sa mise en oeuvre concr\u00e8te.  \n  \nCe cours est con\u00e7u pour \u00eatre prolong\u00e9 par les aspects orient\u00e9-objet, pr\u00e9sent\u00e9s\ndans le cours  [\u00abIntroduction \u00e0 la programmation orient\u00e9e objet (en\nC++)\u00bb](https://www.coursera.org/course/intropoocpp).  \n\n## Syllabus\n\n* Introduction \u00e0 C++\n* Structures de contr\u00f4le\n* Tableaux, cha\u00eenes de caract\u00e8res  \n\n* Fonctions et r\u00e9utilisabilit\u00e9\n* Structures de donn\u00e9es\n* Pointeurs et r\u00e9f\u00e9rences\n\n",
        "name": "Initiation \u00e0 la programmation (en C++)",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne"
        ],
        "url": "https://www.coursera.org/course/initprogcpp",
        "video_url": ""
    },
    {
        "date": "2014-09-15",
        "desc": "\u8bfe\u7a0b\u4ecb\u7ecd\u89c6\u9891\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u91cc\u3002\u672c\u8bfe\u7a0b\u7684\u5185\u5bb9\u4e3b\u8981\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff1a\uff081\uff09\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6\uff0c\u7ea6\u5360\u8bfe\u65f6\u91cf\u768415%\uff1b\uff082\uff09C\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\uff0c\u7ea6\u5360\u8bfe\u65f6\u91cf\u768485%\uff1b\u5728\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u4e3a\u5927\u5bb6\u89e3\u7b54\u4e00\u4e9b\u4e0e\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u76f8\u5173\u7684\u57fa\u7840\u95ee\u9898\uff0c\u4f8b\u5982\uff0c\u201c\u8ba1\u7b97\u673a\u4e3a\u4ec0\u4e48\u80fd\u591f\u8fdb\u884c\u8ba1\u7b97\uff1f\u201d\uff0c\u201c\u8ba1\u7b97\u673a\u7a0b\u5e8f\u5728\u8ba1\u7b97\u673a\u4e2d\u662f\u5982\u4f55\u8fd0\u884c\u7684\uff1f\u201d\uff0c\u201c\u8ba1\u7b97\u673a\u7684\u53d1\u5c55\u89c4\u5f8b\u662f\u4ec0\u4e48\uff1f\u201d\uff0c\u201c\u4e0b\u4e00\u4ee3\u7684\u8ba1\u7b97\u673a\u5c06\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\uff1f\u201d\u7b49\u7b49\u3002\u6211\u4eec\u5e0c\u671b\u901a\u8fc7\u5bf9\u8fd9\u4e9b\u95ee\u9898\u7684\u89e3\u7b54\uff0c\u8fbe\u5230\u4e24\u4e2a\u76ee\u7684\uff1aA \u57f9\u517b\u8d77\u5927\u5bb6\u5bf9\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u5174\u8da3\uff1bB \u5e2e\u52a9\u5927\u5bb6\u5efa\u7acb\u8d77\u5b66\u4e60\u8ba1\u7b97\u673a\u79d1\u5b66\u6240\u9700\u8981\u7684\u201c\u80cc\u666f\u77e5\u8bc6\u6846\u67b6\u201d\u3002\u5728C\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u4ee5\u201cC \u8bed\u8a00\u201d\u4e3a\u4e3b\u8981\u5b66\u4e60\u5bf9\u8c61\uff0c\u4ee5\u5178\u578b\u7684C++\u7f16\u7a0b\u73af\u5883\uff08\u5982Visual Studio C++, Eclipse\u7b49\uff09\u4e3a\u5de5\u5177\uff0c\u5b66\u4e60\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u5e76\u57f9\u517b\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u57fa\u672c\u6280\u80fd\u3002\u901a\u4fd7\u8bb2\uff0c\u5728\u8fd9\u4e2a\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u6559\u4f1a\u5927\u5bb6\u201c\u5982\u4f55\u4f7f\u7528C\u8bed\u8a00\u7f16\u5199\u8ba1\u7b97\u673a\u7a0b\u5e8f\uff0c\u751a\u81f3\u7f16\u5199\u5177\u6709\u4e00\u5b9a\u6280\u672f\u96be\u5ea6\u7684\u7a0b\u5e8f\u201d\u3002\u5bf9\u4e8e\u7b2c\u4e00\u6b21\u5b66\u4e60\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u540c\u5b66\u800c\u8a00\uff0c\u901a\u5e38\u4f1a\u89c9\u5f97\u5b66\u4e60\u8fc7\u7a0b\u6bd4\u8f83\u56f0\u96be\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u7279\u522b\u63d0\u793a\u5927\u5bb6\uff1a\u201c\u5bf9\u4e8e\u96be\u5b66\u7684\u4e1c\u897f\uff0c\u66f4\u8981\u5faa\u5e8f\u6e10\u8fdb\uff0c\u66f4\u8981\u9075\u5faa\u5b66\u4e60\u89c4\u5f8b\u2014\u2014\u5148\u6253\u597d\u57fa\u7840\uff0c\u9010\u6b65\u8fdb\u9636\uff01\u201d\u4e3a\u6b64\uff0c\u6211\u4eec\u628a\u201c\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u201d\u90e8\u5206\u7684\u5b66\u4e60\u5212\u5206\u4e3a\u56db\u4e2a\u8fed\u4ee3\u5468\u671f\uff1a\u5468\u671f\u4e00\uff1a \u611f\u6027\u8ba4\u8bc6\u8ba1\u7b97\u673a\u7a0b\u5e8f\uff1b\u5468\u671f\u4e8c\uff1a \u7406\u6027\u8ba4\u8bc6\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\uff1b\u5468\u671f\u4e09\uff1a \u5b66\u4f1a\u4f7f\u7528\u2014\u2014\u51fd\u6570\uff1b\u5468\u671f\u56db\uff1a \u5b66\u4e60\u4f7f\u7528C\u7a0b\u5e8f\u4e2d\u7684\u590d\u6742\u6210\u5206\uff08\u6307\u9488\u3001\u7ed3\u6784\u4f53\u3001\u94fe\u8868\u3001\u6587\u4ef6\u7b49\uff09\uff1b\u4e4b\u6240\u4ee5\u79f0\u4e3a\u201c\u8fed\u4ee3\u5468\u671f\u201d\uff0c\u662f\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u5728\u6bcf\u4e2a\u5468\u671f\u4e2d\uff0c\u540c\u5b66\u4eec\u90fd\u80fd\u591f\u7f16\u5199\u51fa\u5b8c\u6574\u3001\u53ef\u8fd0\u884c\u3001\u80fd\u89e3\u51b3\u95ee\u9898\u7684\u8ba1\u7b97\u673a\u7a0b\u5e8f\uff0c\u800c\u4e0d\u662f\u4ec5\u4ec5\u5b66\u4e60\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u7684\u67d0\u4e2a\u90e8\u5206\uff01\u6240\u4ee5\uff0c\u5b66\u4e60\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u8fc7\u7a0b\uff0c\u5e94\u8be5\u662f\u4e00\u4e2a\u201c\u5728\u5b9e\u6218\u4e2d\u8fdb\u9636\u201d\u7684\u8fc7\u7a0b\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u201c\u77e5\u8bc6\u5806\u780c\u201d\u7684\u8fc7\u7a0b\u3002\u5e0c\u671b\u8fd9\u4e2a\u8fed\u4ee3\u8fdb\u9636\u7684\u5b66\u4e60\u8fc7\u7a0b\u53ef\u4ee5\u5e2e\u52a9\u5927\u5bb6\u987a\u5229\u8fbe\u6210\u5b66\u4e60\u76ee\u6807\u3002\u8be5\u8bfe\u7a0b\u662f\u201c\u5317\u5927-\u5fb7\u7a3b\u7f51\u7edc\u516c\u5f00\u8bfe\u7a0b\u201d\u4e2d\u7684\u4e00\u95e8\uff0c\u7531\u5317\u4eac\u5927\u5b66\u4e0e\u5fb7\u7a3b\u6559\u80b2\u8054\u5408\u63d0\u4f9b\u3002Syllabus\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6&nbsp;&nbsp;&nbsp; \u8ba1\u7b97\u673a\u7684\u57fa\u672c\u539f\u7406--------------------------------- Week 1&nbsp;&nbsp;&nbsp; \u8ba1\u7b97\u673a\u7684\u5386\u53f2\u4e0e\u672a\u6765------------------------------ Week 2&nbsp;&nbsp;&nbsp; \u7a0b\u5e8f\u8fd0\u884c\u7684\u57fa\u672c\u539f\u7406------------------------------ Week 3\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840&nbsp;&nbsp;&nbsp;&nbsp;\u5468\u671f\u4e00\uff1a\u611f\u6027\u8ba4\u8bc6\u8ba1\u7b97\u673a\u7a0b\u5e8f&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \u611f\u6027\u8ba4\u8bc6\u8ba1\u7b97\u673a\u7a0b\u5e8f--------------------------- Week 4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \u4ece\u73b0\u5b9e\u95ee\u9898\u5230\u8ba1\u7b97\u673a\u7a0b\u5e8f---------------------- Week 5&nbsp;&nbsp;&nbsp;&nbsp;\u5468\u671f\u4e8c\uff1a\u7406\u6027\u8ba4\u8bc6\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;C++\u8bed\u8a00\u7684\u57fa\u672c\u6210\u5206\u2013\u6570\u636e\u6210\u5206--------------- Week 6&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; C++\u8bed\u8a00\u7684\u57fa\u672c\u6210\u5206\u2013\u8fd0\u7b97\u6210\u5206--------------- Week 7&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; C++\u8bed\u8a00\u7684\u57fa\u672c\u6210\u5206\u2013\u63a7\u5236\u6210\u5206--------------- Week 7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; C++\u7a0b\u5e8f\u4e2d\u7684\u6570\u7ec4------------------------------- Week 8&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; \u5b57\u7b26\u6570\u7ec4\u4e0e\u5b57\u7b26\u4e32------------------------------- Week 8&nbsp;&nbsp;&nbsp;&nbsp;\u5468\u671f\u4e09\uff1a\u5b66\u4f1a\u4f7f\u7528\u2014\u2014\u51fd\u6570&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;C++\u7a0b\u5e8f\u4e2d\u7684\u51fd\u6570------------------------------- Week 9&nbsp; &nbsp; &nbsp; &nbsp; \u5d4c\u5957\u3001\u9012\u63a8\u3001\u9012\u5f52------------------------------- Week 10&nbsp;&nbsp;&nbsp;\u5468\u671f\u56db\uff1a\u5b66\u4e60\u4f7f\u7528C\u7a0b\u5e8f\u4e2d\u7684\u590d\u6742\u6210\u5206&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; \u53ef\u7231\u7684 \u6307\u9488\uff081\uff09------------------------------- Week 11&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \u53ef\u7231\u7684 \u6307\u9488\uff082\uff09------------------------------- Week 12&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; \u7ed3\u6784\u4f53\u4e0e\u94fe\u8868-------------------------------------Week 13&nbsp;&nbsp;&nbsp; &nbsp; \u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u603b\u7ed3 --------------------------------- Week 14",
        "desc_html": "\u8bfe\u7a0b\u4ecb\u7ecd\u89c6\u9891\u53ef\u4ee5\u8bbf\u95ee[\u8fd9\u91cc](http://video.study.163.com/edu-\nvideo/nos/mp4/2013/11/20/303418_sd.mp4)\u3002\n\n****\u00a0\u00a0\u00a0 \u672c\u8bfe\u7a0b\u7684**\u5185\u5bb9**\u4e3b\u8981**\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206**\uff1a\uff081\uff09**\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6**\uff0c\u7ea6\u5360\u8bfe\u65f6\u91cf\u7684**15%**\uff1b\uff082\uff09**C\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840**\uff0c\u7ea6\u5360\u8bfe\u65f6\u91cf\u7684**85%**\uff1b\n\n\u00a0\u00a0\u00a0 \u5728\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u4e3a\u5927\u5bb6**\u89e3\u7b54\u4e00\u4e9b\u4e0e\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u76f8\u5173\u7684\u57fa\u7840\u95ee\u9898**\uff0c\u4f8b\u5982**\uff0c\u201c\u8ba1\u7b97\u673a\u4e3a\u4ec0\u4e48\u80fd\u591f\u8fdb\u884c\u8ba1\u7b97\uff1f\u201d\uff0c\u201c\u8ba1\u7b97\u673a\u7a0b\u5e8f\u5728\u8ba1\u7b97\u673a\u4e2d\u662f\n\u5982\u4f55\u8fd0\u884c\u7684\uff1f\u201d\uff0c\u201c\u8ba1\u7b97\u673a\u7684\u53d1\u5c55\u89c4\u5f8b\u662f\u4ec0\u4e48\uff1f\u201d\uff0c\u201c\u4e0b\u4e00\u4ee3\u7684\u8ba1\u7b97\u673a\u5c06\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\uff1f\u201d**\u7b49\u7b49\u3002\u6211\u4eec\u5e0c\u671b\u901a\u8fc7\u5bf9\u8fd9\u4e9b\u95ee\u9898\u7684\u89e3\u7b54\uff0c\u8fbe\u5230\u4e24\u4e2a\u76ee\u7684\uff1aA\n\u57f9\u517b\u8d77\u5927\u5bb6\u5bf9\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u5174\u8da3\uff1bB \u5e2e\u52a9\u5927\u5bb6\u5efa\u7acb\u8d77\u5b66\u4e60\u8ba1\u7b97\u673a\u79d1\u5b66\u6240\u9700\u8981\u7684\u201c\u80cc\u666f\u77e5\u8bc6\u6846\u67b6\u201d\u3002\n\n\u00a0\u00a0\u00a0 \u5728C\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u90e8\u5206\uff0c\u6211\u4eec\u5c06**\u4ee5\u201cC \u8bed\u8a00\u201d\u4e3a\u4e3b\u8981\u5b66\u4e60\u5bf9\u8c61\uff0c\u4ee5\u5178\u578b\u7684C++\u7f16\u7a0b\u73af\u5883\uff08\u5982Visual Studio C++, Eclipse\u7b49\uff09\u4e3a\u5de5\n\u5177\uff0c\u5b66\u4e60\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u76f8\u5173\u77e5\u8bc6**\uff0c\u5e76\u57f9\u517b\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u57fa\u672c\u6280\u80fd\u3002\u901a\u4fd7\u8bb2\uff0c\u5728\u8fd9\u4e2a\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u6559\u4f1a\u5927\u5bb6\u201c\u5982\u4f55\u4f7f\u7528C\u8bed\u8a00\u7f16\u5199\u8ba1\u7b97\u673a\u7a0b\u5e8f\uff0c\u751a\u81f3\u7f16\u5199\u5177\u6709\u4e00\u5b9a\u6280\u672f\u96be\u5ea6\u7684\n\u7a0b\u5e8f\u201d\u3002\n\n\u00a0\u00a0\u00a0 \u5bf9\u4e8e\u7b2c\u4e00\u6b21\u5b66\u4e60\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u540c\u5b66\u800c\u8a00\uff0c\u901a\u5e38\u4f1a\u89c9\u5f97\u5b66\u4e60\u8fc7\u7a0b\u6bd4\u8f83\u56f0\u96be\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u7279\u522b\u63d0\u793a\u5927\u5bb6\uff1a\u201c\u5bf9\u4e8e\u96be\u5b66\u7684\u4e1c\u897f\uff0c\u66f4\u8981\u5faa\u5e8f\u6e10\u8fdb\uff0c\u66f4\u8981\u9075\u5faa\u5b66\u4e60\u89c4\u5f8b\u2014\u2014\u5148\n\u6253\u597d\u57fa\u7840\uff0c\u9010\u6b65\u8fdb\u9636\uff01\u201d\u4e3a\u6b64\uff0c**\u6211\u4eec\u628a\u201c\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u201d\u90e8\u5206\u7684\u5b66\u4e60\u5212\u5206\u4e3a\u56db\u4e2a\u8fed\u4ee3\u5468\u671f**\uff1a\n\n**\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u5468\u671f\u4e00**\uff1a \u611f\u6027\u8ba4\u8bc6\u8ba1\u7b97\u673a\u7a0b\u5e8f\uff1b   \n**\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u5468\u671f\u4e8c**\uff1a \u7406\u6027\u8ba4\u8bc6\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\uff1b\u00a0   \n**\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u5468\u671f\u4e09**\uff1a \u5b66\u4f1a\u4f7f\u7528\u2014\u2014\u51fd\u6570\uff1b   \n**\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u5468\u671f\u56db**\uff1a \u5b66\u4e60\u4f7f\u7528C\u7a0b\u5e8f\u4e2d\u7684\u590d\u6742\u6210\u5206\uff08\u6307\u9488\u3001\u7ed3\u6784\u4f53\u3001\u94fe\u8868\u3001\u6587\u4ef6\u7b49\uff09\uff1b\n\n\u00a0\u00a0\u00a0 \u4e4b\u6240\u4ee5\u79f0\u4e3a\u201c\u8fed\u4ee3\u5468\u671f\u201d\uff0c\u662f\u56e0\u4e3a**\u6211\u4eec\u5e0c\u671b\u5728\u6bcf\u4e2a\u5468\u671f\u4e2d\uff0c\u540c\u5b66\u4eec\u90fd\u80fd\u591f\u7f16\u5199\u51fa\u5b8c\u6574\u3001\u53ef\u8fd0\u884c\u3001\u80fd\u89e3\u51b3\u95ee\u9898\u7684\u8ba1\u7b97\u673a\u7a0b\u5e8f\uff0c\u800c\u4e0d\u662f\u4ec5\u4ec5\u5b66\u4e60\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u7684\u67d0\n\u4e2a\u90e8\u5206\uff01**\u6240\u4ee5\uff0c\u5b66\u4e60\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u8fc7\u7a0b\uff0c\u5e94\u8be5\u662f\u4e00\u4e2a**\u201c\u5728\u5b9e\u6218\u4e2d\u8fdb\u9636\u201d\u7684\u8fc7\u7a0b\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u201c\u77e5\u8bc6\u5806\u780c\u201d\u7684\u8fc7\u7a0b**\u3002\u5e0c\u671b\u8fd9\u4e2a\u8fed\u4ee3\u8fdb\u9636\u7684\u5b66\u4e60\u8fc7\u7a0b\u53ef\u4ee5\u5e2e\u52a9\u5927\u5bb6\u987a\u5229\u8fbe\u6210\n\u5b66\u4e60\u76ee\u6807\u3002\n\n\u8be5\u8bfe\u7a0b\u662f\u201c\u5317\u5927-\u5fb7\u7a3b\u7f51\u7edc\u516c\u5f00\u8bfe\u7a0b\u201d\u4e2d\u7684\u4e00\u95e8\uff0c\u7531\u5317\u4eac\u5927\u5b66\u4e0e\u5fb7\u7a3b\u6559\u80b2\u8054\u5408\u63d0\u4f9b\u3002  \n\n## Syllabus\n\n**\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6**\n\n    \u8ba1\u7b97\u673a\u7684\u57fa\u672c\u539f\u7406--------------------------------- Week 1  \n    \u8ba1\u7b97\u673a\u7684\u5386\u53f2\u4e0e\u672a\u6765------------------------------ Week 2  \n    \u7a0b\u5e8f\u8fd0\u884c\u7684\u57fa\u672c\u539f\u7406------------------------------ Week 3\n\n**\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840**  \n    \n    _**\u5468\u671f\u4e00\uff1a\u611f\u6027\u8ba4\u8bc6\u8ba1\u7b97\u673a\u7a0b\u5e8f**_\n\n        \u611f\u6027\u8ba4\u8bc6\u8ba1\u7b97\u673a\u7a0b\u5e8f--------------------------- Week 4  \n        \u4ece\u73b0\u5b9e\u95ee\u9898\u5230\u8ba1\u7b97\u673a\u7a0b\u5e8f---------------------- Week 5  \n    \n    **_\u5468\u671f\u4e8c\uff1a\u7406\u6027\u8ba4\u8bc6\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00_**\n\n        C++\u8bed\u8a00\u7684\u57fa\u672c\u6210\u5206\u2013\u6570\u636e\u6210\u5206--------------- Week 6  \n        C++\u8bed\u8a00\u7684\u57fa\u672c\u6210\u5206\u2013\u8fd0\u7b97\u6210\u5206--------------- Week 7  \n        C++\u8bed\u8a00\u7684\u57fa\u672c\u6210\u5206\u2013\u63a7\u5236\u6210\u5206--------------- Week 7  \n        C++\u7a0b\u5e8f\u4e2d\u7684\u6570\u7ec4------------------------------- Week 8  \n       \u5b57\u7b26\u6570\u7ec4\u4e0e\u5b57\u7b26\u4e32------------------------------- Week 8  \n    \n    **_\u5468\u671f\u4e09\uff1a\u5b66\u4f1a\u4f7f\u7528\u2014\u2014\u51fd\u6570_**\n\n        C++\u7a0b\u5e8f\u4e2d\u7684\u51fd\u6570------------------------------- Week 9  \n        \u5d4c\u5957\u3001\u9012\u63a8\u3001\u9012\u5f52------------------------------- Week 10  \n  \n    **_\u5468\u671f\u56db\uff1a\u5b66\u4e60\u4f7f\u7528C\u7a0b\u5e8f\u4e2d\u7684\u590d\u6742\u6210\u5206_**\n\n        \u53ef\u7231\u7684 \u6307\u9488\uff081\uff09------------------------------- Week 11  \n        \u53ef\u7231\u7684 \u6307\u9488\uff082\uff09------------------------------- Week 12  \n        \u7ed3\u6784\u4f53\u4e0e\u94fe\u8868-------------------------------------Week 13  \n    \n    \u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u603b\u7ed3 --------------------------------- Week 14\n\n",
        "name": "Introduction to Computing \u8ba1\u7b97\u6982\u8bbaA",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Peking University"
        ],
        "url": "https://www.coursera.org/course/pkuic",
        "video_url": ""
    },
    {
        "date": "2014-09-15",
        "desc": "*Note - This is an Archived course*This is a past/archived course. At this time, you can only explore this course in a self-paced fashion. Certain features of this course may not be active, but many people enjoy watching the videos and working with the materials. Make sure to check for reruns of this course.\u8bfe\u7a0b\u4ecb\u7ecd\u89c6\u9891\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u4e2d\u56fd\u7f51\u7ad9\u8ba1\u7b97\u673a\u662f\u73b0\u4ee3\u793e\u4f1a\u4e2d\u7528\u4e8e\u89e3\u51b3\u95ee\u9898\u7684\u91cd\u8981\u5de5\u5177\u3002\u5229\u7528\u8ba1\u7b97\u673a\u89e3\u51b3\u5b9e\u9645\u95ee\u9898\u9700\u8981\u5c06\u95ee\u9898\u62bd\u8c61\uff0c\u5e76\u5bf9\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff0c\u6700\u540e\u901a\u8fc7\u8ba1\u7b97\u673a\u7a0b\u5e8f\u6c42\u89e3\u95ee\u9898\u3002\u800c\u672c\u95e8\u8bfe\u7a0b\u4e3b\u8981\u5185\u5bb9\u5c31\u662f\u5bf9\u4ee5\u4e0a\u5185\u5bb9\u8fdb\u884c\u7814\u7a76\u3002\u56fe\u7075\u5956\u83b7\u5f97\u8005N.Wirth\u5199\u4e86\u4e00\u672c\u7ecf\u5178\u8457\u4f5c\u201c\u7a0b\u5e8f=\u7b97\u6cd5+\u6570\u636e\u7ed3\u6784\u201d\u3002\u6570\u636e\u7ed3\u6784\uff0c\u662f\u62bd\u8c61\u7684\u8868\u793a\u6570\u636e\u7684\u65b9\u5f0f\uff1b\u7b97\u6cd5\uff0c\u5219\u662f\u8ba1\u7b97\u7684\u4e00\u7cfb\u5217\u6709\u6548\u3001\u901a\u7528\u7684\u6b65\u9aa4\u3002\u7b97\u6cd5\u4e0e\u6570\u636e\u7ed3\u6784\u662f\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u76f8\u8f85\u76f8\u6210\u7684\u4e24\u4e2a\u65b9\u9762\u3002\u6211\u4eec\u4f1a\u56f4\u7ed5\u7740\u201c\u7b97\u6cd5+\u6570\u636e\u7ed3\u6784=\u7a0b\u5e8f\u201d\u7684\u601d\u8def\uff0c\u4ee5\u95ee\u9898\u6c42\u89e3\u4e3a\u5bfc\u5411\u8fdb\u884c\u5b66\u4e60\u3002\u5e0c\u671b\u80fd\u591f\u5e2e\u52a9\u5927\u5bb6\u63d0\u9ad8\u7406\u8bba\u3001\u62bd\u8c61\u3001\u8bbe\u8ba1\u7684\u80fd\u529b\u3002\u5728\u624e\u5b9e\u7684\u7ecf\u5178\u7406\u8bba\u57fa\u7840\u4e0a\uff0c\u8fd0\u7528\u95ee\u9898\u62bd\u8c61\u3001\u6570\u636e\u62bd\u8c61\u3001\u7b97\u6cd5\u62bd\u8c61\u6765\u5206\u6790\u95ee\u9898\uff0c\u5e94\u7528\u9002\u5f53\u7684\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u6765\u8bbe\u8ba1\u548c\u5b9e\u73b0\u76f8\u5e94\u7684\u7a0b\u5e8f\u3002\u901a\u8fc7\u8bfe\u7a0b\u5b66\u4e60\uff0c\u5927\u5bb6\u7684\u62bd\u8c61\u601d\u7ef4\u80fd\u529b\u3001\u95ee\u9898\u6c42\u89e3\u80fd\u529b\u5c06\u5f97\u5230\u8f83\u5927\u63d0\u5347\uff0c\u7f16\u7a0b\u80fd\u529b\u548c\u4ee3\u7801\u8d28\u91cf\u4f1a\u6709\u8d28\u7684\u98de\u8dc3\uff01\u5728\u6c42\u89e3\u5b9e\u9645\u95ee\u9898\u65b9\u9762\uff0c\u6211\u4eec\u4f1a\u5b66\u4e60\u5230\u901a\u8fc7\u6743\u8861\u65f6\u7a7a\u548c\u5176\u4ed6\u8d44\u6e90\u5f00\u9500\uff0c\u5229\u7528\u6570\u636e\u7ed3\u6784\u6765\u7ec4\u7ec7\u6570\u636e\u3001\u8bbe\u8ba1\u9ad8\u6548\u7684\u7b97\u6cd5\u3001\u5b8c\u6210\u9ad8\u8d28\u91cf\u7684\u7a0b\u5e8f\u4ee5\u6ee1\u8db3\u9519\u7efc\u590d\u6742\u7684\u5b9e\u9645\u5e94\u7528\u9700\u8981\u3002\u6b64\u5916\uff0c\u8bfe\u7a0b\u6240\u5b66\u5230\u7684\u5185\u5bb9\u4f1a\u88ab\u5229\u7528\u5230\u8ba1\u7b97\u673a\u79d1\u5b66\u540e\u7eed\u7684\u5404\u4e2a\u8bfe\u7a0b\u4e2d\uff0c\u5982\u64cd\u4f5c\u7cfb\u7edf\u3001\u8f6f\u4ef6\u5de5\u7a0b\u3001\u6570\u636e\u5e93\u6982\u8bba\u3001\u7f16\u8bd1\u6280\u672f\u3001\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u3001\u4eba\u673a\u4ea4\u4e92\u7b49\u3002\u5e0c\u671b\u53ef\u4ee5\u4e3a\u5927\u5bb6\u5c06\u6765\u4ece\u4e8b\u8ba1\u7b97\u673a\u76f8\u5173\u7684\u5b66\u4e60\u3001\u7814\u7a76\u548c\u5f00\u53d1\u5de5\u4f5c\u6253\u4e0b\u624e\u5b9e\u7684\u57fa\u7840\u3002\u672c\u8bfe\u7a0b\u91c7\u7528\u5f20\u94ed\u4e3b\u7f16\u7684\u56fd\u5bb6\u201c\u5341\u4e00\u4e94\u201d\u89c4\u5212\u6559\u6750\u300a\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u300b\uff08\u9ad8\u7b49\u6559\u80b2\u51fa\u7248\u793e\uff09\u3002\u9002\u5408\u8ba1\u7b97\u673a\u4ee5\u53ca\u76f8\u5173\u7406\u5de5\u4e13\u4e1a\u7684\u5927\u4e8c\u672c\u79d1\u751f\u5b66\u4e60\uff0c\u9700\u8981\u5148\u4fee\u8fc7\u8ba1\u7b97\u6982\u8bba\u7b49\u8bfe\u7a0b\uff0c\u5177\u6709\u7ed3\u6784\u5316\u548c\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u3002\u8bfe\u7a0b\u4e3b\u8981\u5305\u62ec\u7684\u5185\u5bb9\u6709\uff1a\u7ebf\u6027\u8868\uff0c\u6808\u4e0e\u961f\u5217\uff0c\u5b57\u7b26\u4e32\uff0c\u4e8c\u53c9\u6811\uff0c\u6811\uff0c\u56fe\uff0c\u6392\u5e8f\uff08\u5185\u6392\u5e8f\uff0c\u5916\u6392\u5e8f\uff09\uff0c\u68c0\u7d22\uff0c\u7d22\u5f15\uff0c\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u3001\u4ee5\u53ca\u6570\u636e\u7ed3\u6784\u5e94\u7528\u3002\u8bfe\u7a0b\u6301\u7eed16\u5468\uff08\u5206\u4e3a\u4e24\u4e2asession\uff0c\u6bcf\u4e2a8\u5468\uff09\uff0c\u5b66\u4e60\u8005\u6bcf\u5468\u5728\u672c\u8bfe\u7a0b\u4e0a\u9700\u8981\u6295\u51654\uff0d8\u5c0f\u65f6\u3002\u672c\u8bfe\u7a0b\u7684\u672c\u6b21\u5f00\u8bbe\u5f97\u5230Google\u7814\u7a76\u7ecf\u8d39\u652f\u6301\u3002Computers are an important tool for\u00a0problem\u00a0solving and are deeply involved\u00a0in modern life.\u00a0Computers perform operations on data. What is the logical relationship among data? How is data stored in computers? What algorithms are required to solve particular problems? These are the questions that will be answered in \u201cData Structures and Algorithms,\u201d an important core course in Computer Science. The course also introduces students to fundamental data structures and classical algorithms used in more specialized courses,\u00a0including Operating Systems, Software Engineering, Database Systems, Compiler\u00a0Principles, Computer Graphics and Human Computer Interaction.Niklaus Wirth described the important and indivisible link between algorithms and data structure in his book, Algorithms + Data Structures = Programs.The course will build on Wirth\u2019s ideas as it helps students improve their knowledge of theory and their ability to think abstractly to solve problems.\u00a0Building on a solid theoretical foundation, students\u00a0will analyze problems using data and algorithm abstraction. Students will learn how to organize data efficiently and make tradeoffs between space and time complexity, design efficient and effective algorithms, and implement high quality programs to solve complex real-world problems.\u00a0After studying this course, students will be well prepared for further study and research in engineering and other computer-related areas.This is an intermediate-level course appropriate for sophomore students majoring in computer science or other science/engineering disciplines. Students should\u00a0have learned \"introduction to computing\",\u00a0with the knowledge of structured and object-oriented programming.This course is presented in two eight-week sessions.Students who score 60% or higher will receive an Honor Code Certificate.The Autumn 2014 Sessions of this course are supported by Google.",
        "desc_html": "*Note - This is an Archived course*  \n  \nThis is a past/archived course. At this time, you can only explore this course\nin a self-paced fashion. Certain features of this course may not be active,\nbut many people enjoy watching the videos and working with the materials. Make\nsure to check for reruns of this course.  \n  \n\u8bfe\u7a0b\u4ecb\u7ecd\u89c6\u9891\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u4e2d\u56fd\u7f51\u7ad9  \n  \n\u8ba1\u7b97\u673a\u662f\u73b0\u4ee3\u793e\u4f1a\u4e2d\u7528\u4e8e\u89e3\u51b3\u95ee\u9898\u7684\u91cd\u8981\u5de5\u5177\u3002\u5229\u7528\u8ba1\u7b97\u673a\u89e3\u51b3\u5b9e\u9645\u95ee\u9898\u9700\u8981\u5c06\u95ee\u9898\u62bd\u8c61\uff0c\u5e76\u5bf9\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff0c\u6700\u540e\u901a\u8fc7\u8ba1\u7b97\u673a\u7a0b\u5e8f\u6c42\u89e3\u95ee\u9898\u3002\u800c\u672c\u95e8\u8bfe\u7a0b\u4e3b\u8981\u5185\u5bb9\u5c31\u662f\u5bf9\u4ee5\u4e0a\u5185\n\u5bb9\u8fdb\u884c\u7814\u7a76\u3002  \n  \n\u56fe\u7075\u5956\u83b7\u5f97\u8005N.Wirth\u5199\u4e86\u4e00\u672c\u7ecf\u5178\u8457\u4f5c\u201c\u7a0b\u5e8f=\u7b97\u6cd5+\u6570\u636e\u7ed3\u6784\u201d\u3002\u6570\u636e\u7ed3\u6784\uff0c\u662f\u62bd\u8c61\u7684\u8868\u793a\u6570\u636e\u7684\u65b9\u5f0f\uff1b\u7b97\u6cd5\uff0c\u5219\u662f\u8ba1\u7b97\u7684\u4e00\u7cfb\u5217\u6709\u6548\u3001\u901a\u7528\u7684\u6b65\u9aa4\u3002\u7b97\u6cd5\u4e0e\u6570\u636e\u7ed3\u6784\n\u662f\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u76f8\u8f85\u76f8\u6210\u7684\u4e24\u4e2a\u65b9\u9762\u3002  \n  \n\u6211\u4eec\u4f1a\u56f4\u7ed5\u7740\u201c\u7b97\u6cd5+\u6570\u636e\u7ed3\u6784=\u7a0b\u5e8f\u201d\u7684\u601d\u8def\uff0c\u4ee5\u95ee\u9898\u6c42\u89e3\u4e3a\u5bfc\u5411\u8fdb\u884c\u5b66\u4e60\u3002\u5e0c\u671b\u80fd\u591f\u5e2e\u52a9\u5927\u5bb6\u63d0\u9ad8\u7406\u8bba\u3001\u62bd\u8c61\u3001\u8bbe\u8ba1\u7684\u80fd\u529b\u3002\u5728\u624e\u5b9e\u7684\u7ecf\u5178\u7406\u8bba\u57fa\u7840\u4e0a\uff0c\u8fd0\u7528\u95ee\u9898\u62bd\u8c61\u3001\u6570\u636e\n\u62bd\u8c61\u3001\u7b97\u6cd5\u62bd\u8c61\u6765\u5206\u6790\u95ee\u9898\uff0c\u5e94\u7528\u9002\u5f53\u7684\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u6765\u8bbe\u8ba1\u548c\u5b9e\u73b0\u76f8\u5e94\u7684\u7a0b\u5e8f\u3002\u901a\u8fc7\u8bfe\u7a0b\u5b66\u4e60\uff0c\u5927\u5bb6\u7684\u62bd\u8c61\u601d\u7ef4\u80fd\u529b\u3001\u95ee\u9898\u6c42\u89e3\u80fd\u529b\u5c06\u5f97\u5230\u8f83\u5927\u63d0\u5347\uff0c\u7f16\u7a0b\u80fd\u529b\u548c\u4ee3\u7801\u8d28\u91cf\u4f1a\n\u6709\u8d28\u7684\u98de\u8dc3\uff01  \n  \n\u5728\u6c42\u89e3\u5b9e\u9645\u95ee\u9898\u65b9\u9762\uff0c\u6211\u4eec\u4f1a\u5b66\u4e60\u5230\u901a\u8fc7\u6743\u8861\u65f6\u7a7a\u548c\u5176\u4ed6\u8d44\u6e90\u5f00\u9500\uff0c\u5229\u7528\u6570\u636e\u7ed3\u6784\u6765\u7ec4\u7ec7\u6570\u636e\u3001\u8bbe\u8ba1\u9ad8\u6548\u7684\u7b97\u6cd5\u3001\u5b8c\u6210\u9ad8\u8d28\u91cf\u7684\u7a0b\u5e8f\u4ee5\u6ee1\u8db3\u9519\u7efc\u590d\u6742\u7684\u5b9e\u9645\u5e94\u7528\u9700\u8981\u3002  \n  \n\u6b64\u5916\uff0c\u8bfe\u7a0b\u6240\u5b66\u5230\u7684\u5185\u5bb9\u4f1a\u88ab\u5229\u7528\u5230\u8ba1\u7b97\u673a\u79d1\u5b66\u540e\u7eed\u7684\u5404\u4e2a\u8bfe\u7a0b\u4e2d\uff0c\u5982\u64cd\u4f5c\u7cfb\u7edf\u3001\u8f6f\u4ef6\u5de5\u7a0b\u3001\u6570\u636e\u5e93\u6982\u8bba\u3001\u7f16\u8bd1\u6280\u672f\u3001\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u3001\u4eba\u673a\u4ea4\u4e92\u7b49\u3002\u5e0c\u671b\u53ef\u4ee5\u4e3a\u5927\u5bb6\u5c06\u6765\u4ece\u4e8b\u8ba1\u7b97\n\u673a\u76f8\u5173\u7684\u5b66\u4e60\u3001\u7814\u7a76\u548c\u5f00\u53d1\u5de5\u4f5c\u6253\u4e0b\u624e\u5b9e\u7684\u57fa\u7840\u3002  \n  \n\u672c\u8bfe\u7a0b\u91c7\u7528\u5f20\u94ed\u4e3b\u7f16\u7684\u56fd\u5bb6\u201c\u5341\u4e00\u4e94\u201d\u89c4\u5212\u6559\u6750\u300a\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u300b\uff08\u9ad8\u7b49\u6559\u80b2\u51fa\u7248\u793e\uff09\u3002\u9002\u5408\u8ba1\u7b97\u673a\u4ee5\u53ca\u76f8\u5173\u7406\u5de5\u4e13\u4e1a\u7684\u5927\u4e8c\u672c\u79d1\u751f\u5b66\u4e60\uff0c\u9700\u8981\u5148\u4fee\u8fc7\u8ba1\u7b97\u6982\u8bba\u7b49\u8bfe\u7a0b\uff0c\u5177\u6709\u7ed3\n\u6784\u5316\u548c\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u3002  \n  \n\u8bfe\u7a0b\u4e3b\u8981\u5305\u62ec\u7684\u5185\u5bb9\u6709\uff1a\u7ebf\u6027\u8868\uff0c\u6808\u4e0e\u961f\u5217\uff0c\u5b57\u7b26\u4e32\uff0c\u4e8c\u53c9\u6811\uff0c\u6811\uff0c\u56fe\uff0c\u6392\u5e8f\uff08\u5185\u6392\u5e8f\uff0c\u5916\u6392\u5e8f\uff09\uff0c\u68c0\u7d22\uff0c\u7d22\u5f15\uff0c\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u3001\u4ee5\u53ca\u6570\u636e\u7ed3\u6784\u5e94\u7528\u3002\u8bfe\u7a0b\u6301\u7eed16\u5468\uff08\u5206\u4e3a\u4e24\u4e2a\nsession\uff0c\u6bcf\u4e2a8\u5468\uff09\uff0c\u5b66\u4e60\u8005\u6bcf\u5468\u5728\u672c\u8bfe\u7a0b\u4e0a\u9700\u8981\u6295\u51654\uff0d8\u5c0f\u65f6\u3002  \n  \n\u672c\u8bfe\u7a0b\u7684\u672c\u6b21\u5f00\u8bbe\u5f97\u5230Google\u7814\u7a76\u7ecf\u8d39\u652f\u6301\u3002  \n  \nComputers are an important tool for\u00a0problem\u00a0solving and are deeply involved\u00a0in\nmodern life.\u00a0Computers perform operations on data. What is the logical\nrelationship among data? How is data stored in computers? What algorithms are\nrequired to solve particular problems? These are the questions that will be\nanswered in \u201cData Structures and Algorithms,\u201d an important core course in\nComputer Science. The course also introduces students to fundamental data\nstructures and classical algorithms used in more specialized courses,\nincluding Operating Systems, Software Engineering, Database Systems, Compiler\nPrinciples, Computer Graphics and Human Computer Interaction.  \n  \nNiklaus Wirth described the important and indivisible link between algorithms\nand data structure in his book, Algorithms + Data Structures = Programs.  \n  \nThe course will build on Wirth\u2019s ideas as it helps students improve their\nknowledge of theory and their ability to think abstractly to solve problems.\nBuilding on a solid theoretical foundation, students\u00a0will analyze problems\nusing data and algorithm abstraction. Students will learn how to organize data\nefficiently and make tradeoffs between space and time complexity, design\nefficient and effective algorithms, and implement high quality programs to\nsolve complex real-world problems.\u00a0After studying this course, students will\nbe well prepared for further study and research in engineering and other\ncomputer-related areas.  \n  \nThis is an intermediate-level course appropriate for sophomore students\nmajoring in computer science or other science/engineering disciplines.\nStudents should\u00a0have learned \"introduction to computing\",\u00a0with the knowledge\nof structured and object-oriented programming.  \n  \nThis course is presented in two eight-week sessions.  \n  \nStudents who score 60% or higher will receive an Honor Code Certificate.  \n  \nThe Autumn 2014 Sessions of this course are supported by Google.\n\n",
        "name": "04830050x: \u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u7b2c\u4e00\u90e8\u5206 | Data Structures and Algorithms Part 1",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Peking University"
        ],
        "url": "https://www.edx.org/course/shu-ju-jie-gou-yu-suan-fa-di-yi-bu-fen-pekingx-04830050x",
        "video_url": "https://www.youtube.com/embed/13AKQjGCKE8?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-09-15",
        "desc": "You pick up your iPhone while waiting in line at a coffee shop. You google a not-so-famous actor, get linked to a Wikipedia entry listing his recent movies and popular YouTube clips of several of them. You check out user reviews on Amazon and pick one,\ndownload that movie on BitTorrent or stream that in Netflix. But suddenly the WiFi logo on your phone is gone and you're on 3G. Video quality starts to degrade, but you don't know if it's the server getting crowded or the Internet is congested somewhere.\nIn any case, it costs you $10 per Gigabyte, and you decide to stop watching the movie, and instead multitask between sending tweets and calling your friend on Skype, while songs stream from iCloud to your phone. You're happy with the call quality, but\nget a little irritated when you see there're no new followers on Twitter. You may wonder how they all kind of work, and why sometimes they don't. Take a look at the list of 20 questions below. Each question is selected not just for its relevance to our\ndaily lives, but also for the core concepts in the field of networking illustrated by its answers. This course is about formulating and answering some of these 20 questions.SyllabusWhat makes CDMA work for my smartphone?How does Google rank webpages?How does Netflix recommend movies?Why do AT&amp;T and Verizon Wireless charge me $10 a GB?How does traffic get through the Internet?Why doesn't the Internet collapse under congestion?Why is WiFi faster at home than at a hotspot?",
        "desc_html": "You pick up your iPhone while waiting in line at a coffee shop. You google a\nnot-so-famous actor, get linked to a Wikipedia entry listing his recent movies\nand popular YouTube clips of several of them. You check out user reviews on\nAmazon and pick one, download that movie on BitTorrent or stream that in\nNetflix. But suddenly the WiFi logo on your phone is gone and you're on 3G.\nVideo quality starts to degrade, but you don't know if it's the server getting\ncrowded or the Internet is congested somewhere. In any case, it costs you $10\nper Gigabyte, and you decide to stop watching the movie, and instead multitask\nbetween sending tweets and calling your friend on Skype, while songs stream\nfrom iCloud to your phone. You're happy with the call quality, but get a\nlittle irritated when you see there're no new followers on Twitter. You may\nwonder how they all kind of work, and why sometimes they don't. Take a look at\nthe list of 20 questions below. Each question is selected not just for its\nrelevance to our daily lives, but also for the core concepts in the field of\nnetworking illustrated by its answers. This course is about formulating and\nanswering some of these 20 questions.  \n\n## Syllabus\n\n  1. What makes CDMA work for my smartphone?\n  2. How does Google rank webpages?\n  3. How does Netflix recommend movies?\n  4. Why do AT&T and Verizon Wireless charge me $10 a GB?\n  5. How does traffic get through the Internet?\n  6. Why doesn't the Internet collapse under congestion?\n  7. Why is WiFi faster at home than at a hotspot?\n\n",
        "name": "Networks: Friends, Money, and Bytes",
        "provider": "Coursera",
        "rating": "3",
        "reviews": "1",
        "university": [
            "Princeton University"
        ],
        "url": "https://www.coursera.org/course/friendsmoneybytes",
        "video_url": ""
    },
    {
        "date": "2014-09-15",
        "desc": "\u5f00\u5c55\u4e00\u9879\u6d41\u884c\u75c5\u5b66\u7814\u7a76\u9700\u8981\u7ecf\u5386\u7814\u7a76\u8bbe\u8ba1\u3001\u73b0\u573a\u6570\u636e\u91c7\u96c6\u548c\u5f55\u5165\u3001\u6570\u636e\u6e05\u7406\u548c\u5206\u6790\u3001\u62a5\u544a\u64b0\u5199\u7b49\u4f17\u591a\u73af\u8282\u3002\u968f\u7740\u8ba1\u7b97\u673a\u8f6f\u4ef6\u5305\u7684\u53d1\u5c55\uff0c\u4e0a\u8ff0\u7684\u6bcf\u4e2a\u73af\u8282\u90fd\u53ef\u4ee5\u901a\u8fc7\u5229\u7528\u4e0d\u540c\u7684\u8f6f\u4ef6\u5305\u9ad8\u6548\u7387\u3001\u9ad8\u8d28\u91cf\u7684\u5b9e\u73b0\u3002\u672c\u8bfe\u7a0b\u671f\u671b\u901a\u8fc7\u4f17\u591a\u7684\u5b9e\u4f8b\u7ec3\u4e60\uff0c\u5e76\u914d\u4ee5\u5fc5\u8981\u7684\u6d41\u884c\u75c5\u5b66\u57fa\u7840\u77e5\u8bc6\u8bb2\u89e3\uff0c\u4f7f\u5b66\u751f\u80fd\u591f\u4e86\u89e3\u51e0\u79cd\u5e38\u89c1\u8f6f\u4ef6\u5305\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u5e76\u80fd\u5c06\u6d41\u884c\u75c5\u5b66\u57fa\u7840\u7406\u8bba\u7b49\u4e66\u672c\u77e5\u8bc6\u66f4\u52a0\u7075\u6d3b\u5730\u5e94\u7528\u4e8e\u5b9e\u9645\u7684\u7814\u7a76\u4e2d\u3002\u8ba1\u7b97\u6837\u672c\u91cf\u662f\u7814\u7a76\u8bbe\u8ba1\u73af\u8282\u4e2d\u7684\u5173\u952e\u5185\u5bb9\u4e4b\u4e00\u3002\u5728\u5f88\u591a\u6d41\u884c\u75c5\u5b66\u7684\u6559\u79d1\u4e66\u4e2d\u53ef\u8f83\u5bb9\u6613\u7684\u67e5\u5230\u4e0d\u540c\u7c7b\u578b\u7814\u7a76\u8bbe\u8ba1\u7684\u6837\u672c\u91cf\u8ba1\u7b97\u516c\u5f0f\uff1b\u5728Google\u4e2d\u641c\u7d22\uff0c\u4e5f\u53ef\u4ee5\u627e\u5230\u4e00\u4e9b\u57fa\u4e8eWeb\u7684\u6837\u672c\u91cf\u8ba1\u7b97\u6a21\u5757\u3002\u4f46\u662f\uff0c\u901a\u8fc7\u8fd9\u4e9b\u9014\u5f84\u53ea\u53ef\u4ee5\u8ba1\u7b97\u6709\u9650\u8bbe\u8ba1\u7c7b\u578b\u7684\u6837\u672c\u91cf\u3002\u672c\u8bfe\u7a0b\u5c06\u91cd\u70b9\u4ecb\u7ecdPASS\u8f6f\u4ef6\u7684\u4f7f\u7528\u65b9\u6cd5\u3002\u8be5\u8f6f\u4ef6\u53ef\u4ee5\u7528\u4e8e230\u4f59\u79cd\u7edf\u8ba1\u68c0\u9a8c\u548c\u53ef\u4fe1\u533a\u95f4\u4f30\u8ba1\u7684\u6837\u672c\u91cf\u8ba1\u7b97\u53ca\u529f\u6548\u5206\u6790\u3002\u6d41\u884c\u75c5\u5b66\u7814\u7a76\u4e2d\u7684\u6570\u636e\u53ef\u4ee5\u901a\u8fc7\u95ee\u5377\u8c03\u67e5\u3001\u4f53\u683c\u68c0\u67e5\u3001\u751f\u7269\u6837\u672c\u7684\u5b9e\u9a8c\u5ba4\u68c0\u6d4b\u3001\u73af\u5883\u8c03\u67e5\u4e0e\u68c0\u6d4b\u3001\u65e2\u5f80\u8bb0\u5f55\u6216\u6863\u6848\u67e5\u9605\u7b49\u65b9\u5f0f\u83b7\u53d6\u3002\u73b0\u9636\u6bb5\uff0c\u901a\u8fc7\u8fd9\u4e9b\u8fc7\u7a0b\u76f4\u63a5\u83b7\u53d6\u7684\u4ecd\u7136\u4ee5\u7eb8\u4ecb\u8d28\u6570\u636e\u4e3a\u4e3b\uff0c\u9700\u8981\u5229\u7528\u4e00\u4e9b\u6570\u636e\u5f55\u5165\u8f6f\u4ef6\u8f6c\u5f55\u4e3a\u53ef\u5206\u6790\u7684\u6570\u636e\u5e93\u3002\u672c\u8bfe\u7a0b\u5c06\u91cd\u70b9\u4ecb\u7ecdEpiData\u8f6f\u4ef6\u7684\u4f7f\u7528\u65b9\u6cd5\u3002\u8be5\u8f6f\u4ef6\u7684\u4f18\u52bf\u5728\u4e8e\u8f6f\u4ef6\u5c0f\u5de7\u548c\u514d\u8d39\uff0c\u53ef\u6ee1\u8db3\u6570\u636e\u5f55\u5165\u7684\u57fa\u672c\u529f\u80fd\u8981\u6c42\u3002\u901a\u8fc7\u7eb8\u8d28\u95ee\u5377\u6536\u96c6\u8c03\u67e5\u5bf9\u8c61\u7684\u4fe1\u606f\uff0c\u7136\u540e\u518d\u5f55\u5165\u5230\u7535\u8111\u4e2d\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u5c3d\u7ba1\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u57f9\u8bad\u8c03\u67e5\u5458\u3001\u5728\u95ee\u5377\u4e0a\u7a81\u51fa\u6ce8\u660e\u5fc5\u8981\u7684\u8df3\u8f6c\u6216\u5408\u6cd5\u503c\u8981\u6c42\u3001\u8c03\u67e5\u5458\u81ea\u67e5\u548c\u4e92\u67e5\u95ee\u5377\u3001\u5728\u5f55\u5165\u6570\u636e\u5e93\u4e2d\u8bbe\u7f6e\u5fc5\u8981\u7684\u6838\u67e5\u8bed\u53e5\u7b49\u8d28\u91cf\u63a7\u5236\u63aa\u65bd\u4fdd\u8bc1\u6570\u636e\u8d28\u91cf\uff0c\u4f46\u4ecd\u7136\u5e38\u89c1\u6570\u636e\u7f3a\u5931\u3001\u903b\u8f91\u9519\u8bef\u7b49\u95ee\u9898\u3002\u5e73\u884c\u53cc\u5f55\u5165\u8017\u65f6\u8017\u529b\uff0c\u53d1\u73b0\u95ee\u9898\u540e\u53ef\u80fd\u8fd8\u9700\u8981\u56de\u8bbf\u3001\u4fee\u6b63\u6570\u636e\u3002\u6574\u4e2a\u8fc7\u7a0b\u8017\u4eba\u5fc3\u529b\u3002\u672c\u8bfe\u7a0b\u5c06\u7b80\u8981\u4ecb\u7ecd\u57fa\u4e8e\u79fb\u52a8\u8bbe\u5907\u548c\u7f51\u7edc\u6280\u672f\u7684\u65e0\u7eb8\u8c03\u67e5\u65b9\u5f0f\uff0c\u5e2e\u52a9\u7406\u89e3\u5982\u4f55\u5c06\u6570\u636e\u8d28\u91cf\u63a7\u5236\u7684\u5173\u53e3\u524d\u79fb\u5230\u8c03\u67e5\u5f53\u65f6\u3002\u6d41\u884c\u75c5\u5b66\u7814\u7a76\u6709\u591a\u79cd\u4e0d\u540c\u7684\u8bbe\u8ba1\u7c7b\u578b\uff0c\u6bcf\u79cd\u8bbe\u8ba1\u53c8\u5bf9\u5e94\u7740\u4e00\u4e9b\u7279\u6709\u7684\u5206\u6790\u6307\u6807\u3002\u5e38\u7528\u7684\u7edf\u8ba1\u8f6f\u4ef6\u5305\u53ef\u4ee5\u83b7\u5f97\u8fd9\u4e9b\u6307\u6807\uff0c\u4f46\u662f\u7531\u4e8e\u8f6f\u4ef6\u662f\u6309\u7edf\u8ba1\u5206\u6790\u65b9\u6cd5\u7ec4\u7ec7\u6a21\u5757\uff0c\u9700\u8981\u4f7f\u7528\u8005\u719f\u6089\u54ea\u4e2a\u6307\u6807\u5bf9\u5e94\u7684\u662f\u54ea\u79cd\u7edf\u8ba1\u65b9\u6cd5\u5f97\u6765\u3002STATA\u4f5c\u4e3a\u5e38\u7528\u7684\u7edf\u8ba1\u8f6f\u4ef6\u5305\u4e4b\u4e00\uff0c\u4e13\u95e8\u8bbe\u8ba1\u6709\u4e00\u4e2a\u6d41\u884c\u75c5\u5b66\u76f8\u5173\u7684\u5206\u6790\u6a21\u5757\uff0c\u6309\u7814\u7a76\u8bbe\u8ba1\u7ec4\u7ec7\u83dc\u5355\u3002\u56e0\u6b64\uff0c\u672c\u8bfe\u7a0b\u4ee5STATA\u8f6f\u4ef6\u5305\u4e3a\u57fa\u7840\uff0c\u4ecb\u7ecd\u5e38\u7528\u6d41\u884c\u75c5\u5b66\u6307\u6807\u7684\u8ba1\u7b97\u3002\u62bd\u6837\u8c03\u67e5\u662f\u6700\u5e38\u5f00\u5c55\u7684\u6d41\u884c\u75c5\u5b66\u7814\u7a76\u7c7b\u578b\u4e4b\u4e00\u3002\u5728\u8f83\u5927\u8303\u56f4\u7684\u62bd\u6837\u8c03\u67e5\u4e2d\uff0c\u5f88\u5c11\u5355\u72ec\u4f7f\u7528\u5355\u7eaf\u968f\u673a\u62bd\u6837\uff0c\u66f4\u591a\u7684\u662f\u4f7f\u7528\u6574\u7fa4\u62bd\u6837\u6216\u6574\u5408\u5355\u7eaf\u3001\u7cfb\u7edf\u3001\u5206\u5c42\u3001\u6574\u7fa4\u62bd\u6837\u7684\u591a\u9636\u6bb5\u62bd\u6837\u3002\u8fd9\u6837\u62bd\u6837\u8bbe\u8ba1\u5f97\u6765\u7684\u6570\u636e\u901a\u5e38\u88ab\u79f0\u4e3a\u590d\u6742\u62bd\u6837\u8c03\u67e5\u6570\u636e\uff08complex survey data\uff09\u3002\u5e38\u89c1\u7684\u6d41\u884c\u75c5\u5b66\u6559\u79d1\u4e66\u4e2d\u901a\u5e38\u53ea\u4ecb\u7ecd\u5355\u7eaf\u968f\u673a\u62bd\u6837\u65f6\u7684\u6837\u672c\u91cf\u8ba1\u7b97\u65b9\u6cd5\uff0c\u7136\u540e\u7ed9\u51fa\u201c\u6574\u7fa4\u62bd\u6837\u65f6\u518d\u589e\u52a0\u4e00\u5b9a\u6570\u91cf\u201d\u7684\u7b80\u5355\u539f\u5219\u3002\u800c\u901a\u5e38\u7edf\u8ba1\u6559\u5b66\u4e2d\u4ecb\u7ecd\u7684\u7edf\u8ba1\u65b9\u6cd5\u66f4\u9002\u7528\u4e8e\u9488\u5bf9\u5355\u7eaf\u968f\u673a\u62bd\u6837\u83b7\u5f97\u7684\u6570\u636e\u3002\u672c\u8bfe\u7a0b\u901a\u8fc7\u4ecb\u7ecdCSurvey\u8f6f\u4ef6\u5305\u7684\u4f7f\u7528\uff0c\u5e2e\u52a9\u5b66\u751f\u66f4\u597d\u5730\u7406\u89e3\u590d\u6742\u62bd\u6837\u8c03\u67e5\u65f6\u6837\u672c\u91cf\u8ba1\u7b97\u7684\u901a\u7528\u539f\u5219\uff1b\u901a\u8fc7\u4ecb\u7ecdSTATA\u4e2d\u4e13\u95e8\u9488\u5bf9\u590d\u6742\u8c03\u67e5\u6570\u636e\u7684\u5206\u6790\u6a21\u5757\uff0c\u4f7f\u5b66\u751f\u80fd\u591f\u4e86\u89e3\u9488\u5bf9\u6b64\u7c7b\u6570\u636e\u5408\u7406\u7684\u5206\u6790\u65b9\u6cd5\u3002\u300a\u8f6f\u4ef6\u5305\u5728\u6d41\u884c\u75c5\u5b66\u7814\u7a76\u4e2d\u7684\u5e94\u7528\u300b\u662f\u5317\u4eac\u5927\u5b66\u533b\u5b66\u90e8\u6d41\u884c\u75c5\u4e0e\u536b\u751f\u7edf\u8ba1\u5b66\u5b66\u79d1\u7814\u7a76\u751f\u7684\u4e13\u4e1a\u5fc5\u4fee\u8bfe\u3002\u672c\u8bfe\u7a0b\u4e5f\u5728\u540c\u671f\u9762\u5411\u5317\u4eac\u5927\u5b66\u533b\u5b66\u90e8\u6b63\u5e38\u9009\u8bfe\u7684\u7814\u7a76\u751f\u5f00\u8bfe\uff0c\u91c7\u7528\u7ffb\u8f6c\u8bfe\u5802\u7684\u6559\u5b66\u6a21\u5f0f\uff0c\u9009\u8bfe\u5b66\u751f\u5728\u89c2\u770bMOOC\u89c6\u9891\u3001\u81ea\u5b66\u76f8\u5173\u8d44\u6e90\u548c\u5b8c\u6210\u7ec3\u4e60\u540e\uff0c\u8fd8\u9700\u53c2\u4e0e\u6559\u5ba4\u5185\u7684\u7b54\u7591\u4e92\u52a8\u3002Syllabus\u7b2c\u4e00\u5468\uff1aPASS\u8f6f\u4ef6\u5305\u5728\u6837\u672c\u91cf\u4e0e\u529f\u6548\u8ba1\u7b97\u4e2d\u7684\u5e94\u7528\u4ecb\u7ecd\u5229\u7528PASS\u8f6f\u4ef6\u5305\u8fdb\u884c\u5e38\u7528\u6d41\u884c\u75c5\u5b66\u7814\u7a76\u8bbe\u8ba1\u7684\u6837\u672c\u91cf\u548c\u529f\u6548\u8ba1\u7b97\u3002\u7b2c\u4e8c\u5468\uff1aCSurvey\u8f6f\u4ef6\u5305\u5728\u6574\u7fa4\u62bd\u6837\u8c03\u67e5\u4e2d\u7684\u5e94\u7528\u4ecb\u7ecd\u5728\u4e24\u9636\u6bb5\u6574\u7fa4\u62bd\u6837\u8c03\u67e5\u4e2d\u5229\u7528CSurvey\u8f6f\u4ef6\u5305\u5b9e\u73b0\u6837\u672c\u91cf\u8ba1\u7b97\u3001PPS\u62bd\u6837\u548c\u751f\u6210\u968f\u673a\u6570\u5b57\u8868\u3002\u7b2c\u4e09\u5468\uff1aEpiData\u8f6f\u4ef6\u5305\u5728\u6570\u636e\u5f55\u5165\u8fc7\u7a0b\u4e2d\u7684\u5e94\u7528\u4ecb\u7ecd\u5229\u7528EpiData\u8f6f\u4ef6\u5305\u5efa\u7acb\u8c03\u67e5\u95ee\u5377\u6570\u636e\u5e93\u3001\u8bbe\u7f6e\u6838\u67e5\u8bed\u53e5\u548c\u5f55\u5165\u6570\u636e\u3002\u7b2c\u56db\u5468\uff1aEpiData\u8f6f\u4ef6\u5305\u5728\u6570\u636e\u5f55\u5165\u8fc7\u7a0b\u4e2d\u7684\u5e94\u7528\u4ecb\u7ecd\u5229\u7528EpiData\u8f6f\u4ef6\u5305\u5efa\u7acb\u5173\u8054\u6570\u636e\u5e93\uff0c\u4ee5\u53ca\u540e\u671f\u5e73\u884c\u53cc\u5f55\u5165\u7684\u8bbe\u7f6e\u3001\u6570\u636e\u5bfc\u51fa\u7b49\u529f\u80fd\u3002\u7b2c\u4e94\u5468\uff1a\u57fa\u4e8e\u79fb\u52a8\u8bbe\u5907\u548c\u7f51\u7edc\u6280\u672f\u7684\u65e0\u7eb8\u8c03\u67e5\u65b9\u5f0f\u5728\u8c03\u67e5\u6570\u636e\u91c7\u96c6\u8fc7\u7a0b\u4e2d\u7684\u5e94\u7528\u4ecb\u7ecd\u57fa\u4e8eB/S\u7ed3\u6784\u7684\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u4e2d\u8c03\u67e5\u95ee\u5377\u7684\u8bbe\u7f6e\u65b9\u6cd5\uff0c\u4f53\u9a8c\u57fa\u4e8eAndroid\u5e73\u53f0\u7684\u8c03\u67e5\u8f6f\u4ef6\u6216\u57fa\u4e8eB/S\u7ed3\u6784\u7684\u6d4f\u89c8\u5668\uff08WAP\uff09\u5ba2\u6237\u7aef\u5728\u73b0\u573a\u8c03\u67e5\u6570\u636e\u91c7\u96c6\u4e2d\u7684\u5e94\u7528\u3002\u7b2c\u516d\u5468\uff1aSTATA\u8f6f\u4ef6\u5305\u7684\u57fa\u672c\u64cd\u4f5c\u4ecb\u7ecdSTATA\u8f6f\u4ef6\u5305\u7684\u57fa\u672c\u64cd\u4f5c\u65b9\u6cd5\u3002\u7b2c\u4e03\u5468\uff1aSTATA\u8f6f\u4ef6\u5305\u5728\u5e38\u7528\u6d41\u884c\u75c5\u5b66\u6307\u6807\u5206\u6790\u4e2d\u7684\u5e94\u7528\u91cd\u70b9\u4ecb\u7ecdSTATA\u4e2dTables for Epidemiologists\u6a21\u5757\u7684\u5e94\u7528\uff0c\u540c\u65f6\u8bb2\u89e3\u4e0e\u5176\u4ed6\u5e38\u7528\u5206\u6790\u6a21\u5757\u7684\u5bf9\u5e94\u6027\u3002\u7b2c\u516b\u5468\uff1aSTATA\u8f6f\u4ef6\u5305\u5728\u590d\u6742\u62bd\u6837\u8c03\u67e5\u6570\u636e\u5206\u6790\u4e2d\u7684\u5e94\u7528\u4ecb\u7ecdSTATA\u4e2dSurvey data analysis\u6a21\u5757\u5728\u590d\u6742\u62bd\u6837\u8c03\u67e5\u6570\u636e\u5206\u6790\u4e2d\u7684\u5e94\u7528\u3002\u7b2c\u4e5d\u5468\uff1aSublime Text\u8bed\u53e5\u7f16\u8f91\u5668\u7684\u7b80\u5355\u5e94\u7528\u4ecb\u7ecd\u5229\u7528\u8bed\u53e5\u7f16\u8f91\u5668Sublime Text\u8f6f\u4ef6\u5305\u63d0\u9ad8\u7edf\u8ba1\u8bed\u53e5\u7f16\u5199\u7684\u6548\u7387\u548c\u51c6\u786e\u6027\u3002\u7b2c\u5341\u5468\uff1a\u8003\u8bd5",
        "desc_html": "\u5f00\u5c55\u4e00\u9879\u6d41\u884c\u75c5\u5b66\u7814\u7a76\u9700\u8981\u7ecf\u5386\u7814\u7a76\u8bbe\u8ba1\u3001\u73b0\u573a\u6570\u636e\u91c7\u96c6\u548c\u5f55\u5165\u3001\u6570\u636e\u6e05\u7406\u548c\u5206\u6790\u3001\u62a5\u544a\u64b0\u5199\u7b49\u4f17\u591a\u73af\u8282\u3002\u968f\u7740\u8ba1\u7b97\u673a\u8f6f\u4ef6\u5305\u7684\u53d1\u5c55\uff0c\u4e0a\u8ff0\u7684\u6bcf\u4e2a\u73af\u8282\u90fd\u53ef\u4ee5\u901a\u8fc7\u5229\u7528\u4e0d\u540c\u7684\u8f6f\u4ef6\n\u5305\u9ad8\u6548\u7387\u3001\u9ad8\u8d28\u91cf\u7684\u5b9e\u73b0\u3002\u672c\u8bfe\u7a0b\u671f\u671b\u901a\u8fc7\u4f17\u591a\u7684\u5b9e\u4f8b\u7ec3\u4e60\uff0c\u5e76\u914d\u4ee5\u5fc5\u8981\u7684\u6d41\u884c\u75c5\u5b66\u57fa\u7840\u77e5\u8bc6\u8bb2\u89e3\uff0c\u4f7f\u5b66\u751f\u80fd\u591f\u4e86\u89e3\u51e0\u79cd\u5e38\u89c1\u8f6f\u4ef6\u5305\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u5e76\u80fd\u5c06\u6d41\u884c\u75c5\u5b66\u57fa\u7840\u7406\u8bba\u7b49\u4e66\u672c\n\u77e5\u8bc6\u66f4\u52a0\u7075\u6d3b\u5730\u5e94\u7528\u4e8e\u5b9e\u9645\u7684\u7814\u7a76\u4e2d\u3002\n\n  * \u8ba1\u7b97\u6837\u672c\u91cf\u662f\u7814\u7a76\u8bbe\u8ba1\u73af\u8282\u4e2d\u7684\u5173\u952e\u5185\u5bb9\u4e4b\u4e00\u3002\u5728\u5f88\u591a\u6d41\u884c\u75c5\u5b66\u7684\u6559\u79d1\u4e66\u4e2d\u53ef\u8f83\u5bb9\u6613\u7684\u67e5\u5230\u4e0d\u540c\u7c7b\u578b\u7814\u7a76\u8bbe\u8ba1\u7684\u6837\u672c\u91cf\u8ba1\u7b97\u516c\u5f0f\uff1b\u5728Google\u4e2d\u641c\u7d22\uff0c\u4e5f\u53ef\u4ee5\u627e\u5230\u4e00\u4e9b\u57fa\u4e8eWeb\u7684\u6837\u672c\u91cf\u8ba1\u7b97\u6a21\u5757\u3002\u4f46\u662f\uff0c\u901a\u8fc7\u8fd9\u4e9b\u9014\u5f84\u53ea\u53ef\u4ee5\u8ba1\u7b97\u6709\u9650\u8bbe\u8ba1\u7c7b\u578b\u7684\u6837\u672c\u91cf\u3002\u672c\u8bfe\u7a0b\u5c06\u91cd\u70b9\u4ecb\u7ecdPASS\u8f6f\u4ef6\u7684\u4f7f\u7528\u65b9\u6cd5\u3002\u8be5\u8f6f\u4ef6\u53ef\u4ee5\u7528\u4e8e230\u4f59\u79cd\u7edf\u8ba1\u68c0\u9a8c\u548c\u53ef\u4fe1\u533a\u95f4\u4f30\u8ba1\u7684\u6837\u672c\u91cf\u8ba1\u7b97\u53ca\u529f\u6548\u5206\u6790\u3002  \n\n  * \u6d41\u884c\u75c5\u5b66\u7814\u7a76\u4e2d\u7684\u6570\u636e\u53ef\u4ee5\u901a\u8fc7\u95ee\u5377\u8c03\u67e5\u3001\u4f53\u683c\u68c0\u67e5\u3001\u751f\u7269\u6837\u672c\u7684\u5b9e\u9a8c\u5ba4\u68c0\u6d4b\u3001\u73af\u5883\u8c03\u67e5\u4e0e\u68c0\u6d4b\u3001\u65e2\u5f80\u8bb0\u5f55\u6216\u6863\u6848\u67e5\u9605\u7b49\u65b9\u5f0f\u83b7\u53d6\u3002\u73b0\u9636\u6bb5\uff0c\u901a\u8fc7\u8fd9\u4e9b\u8fc7\u7a0b\u76f4\u63a5\u83b7\u53d6\u7684\u4ecd\u7136\u4ee5\u7eb8\u4ecb\u8d28\u6570\u636e\u4e3a\u4e3b\uff0c\u9700\u8981\u5229\u7528\u4e00\u4e9b\u6570\u636e\u5f55\u5165\u8f6f\u4ef6\u8f6c\u5f55\u4e3a\u53ef\u5206\u6790\u7684\u6570\u636e\u5e93\u3002\u672c\u8bfe\u7a0b\u5c06\u91cd\u70b9\u4ecb\u7ecdEpiData\u8f6f\u4ef6\u7684\u4f7f\u7528\u65b9\u6cd5\u3002\u8be5\u8f6f\u4ef6\u7684\u4f18\u52bf\u5728\u4e8e\u8f6f\u4ef6\u5c0f\u5de7\u548c\u514d\u8d39\uff0c\u53ef\u6ee1\u8db3\u6570\u636e\u5f55\u5165\u7684\u57fa\u672c\u529f\u80fd\u8981\u6c42\u3002  \n\n  * \u901a\u8fc7\u7eb8\u8d28\u95ee\u5377\u6536\u96c6\u8c03\u67e5\u5bf9\u8c61\u7684\u4fe1\u606f\uff0c\u7136\u540e\u518d\u5f55\u5165\u5230\u7535\u8111\u4e2d\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u5c3d\u7ba1\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u57f9\u8bad\u8c03\u67e5\u5458\u3001\u5728\u95ee\u5377\u4e0a\u7a81\u51fa\u6ce8\u660e\u5fc5\u8981\u7684\u8df3\u8f6c\u6216\u5408\u6cd5\u503c\u8981\u6c42\u3001\u8c03\u67e5\u5458\u81ea\u67e5\u548c\u4e92\u67e5\u95ee\u5377\u3001\u5728\u5f55\u5165\u6570\u636e\u5e93\u4e2d\u8bbe\u7f6e\u5fc5\u8981\u7684\u6838\u67e5\u8bed\u53e5\u7b49\u8d28\u91cf\u63a7\u5236\u63aa\u65bd\u4fdd\u8bc1\u6570\u636e\u8d28\u91cf\uff0c\u4f46\u4ecd\u7136\u5e38\u89c1\u6570\u636e\u7f3a\u5931\u3001\u903b\u8f91\u9519\u8bef\u7b49\u95ee\u9898\u3002\u5e73\u884c\u53cc\u5f55\u5165\u8017\u65f6\u8017\u529b\uff0c\u53d1\u73b0\u95ee\u9898\u540e\u53ef\u80fd\u8fd8\u9700\u8981\u56de\u8bbf\u3001\u4fee\u6b63\u6570\u636e\u3002\u6574\u4e2a\u8fc7\u7a0b\u8017\u4eba\u5fc3\u529b\u3002\u672c\u8bfe\u7a0b\u5c06\u7b80\u8981\u4ecb\u7ecd\u57fa\u4e8e\u79fb\u52a8\u8bbe\u5907\u548c\u7f51\u7edc\u6280\u672f\u7684\u65e0\u7eb8\u8c03\u67e5\u65b9\u5f0f\uff0c\u5e2e\u52a9\u7406\u89e3\u5982\u4f55\u5c06\u6570\u636e\u8d28\u91cf\u63a7\u5236\u7684\u5173\u53e3\u524d\u79fb\u5230\u8c03\u67e5\u5f53\u65f6\u3002  \n\n  * \u6d41\u884c\u75c5\u5b66\u7814\u7a76\u6709\u591a\u79cd\u4e0d\u540c\u7684\u8bbe\u8ba1\u7c7b\u578b\uff0c\u6bcf\u79cd\u8bbe\u8ba1\u53c8\u5bf9\u5e94\u7740\u4e00\u4e9b\u7279\u6709\u7684\u5206\u6790\u6307\u6807\u3002\u5e38\u7528\u7684\u7edf\u8ba1\u8f6f\u4ef6\u5305\u53ef\u4ee5\u83b7\u5f97\u8fd9\u4e9b\u6307\u6807\uff0c\u4f46\u662f\u7531\u4e8e\u8f6f\u4ef6\u662f\u6309\u7edf\u8ba1\u5206\u6790\u65b9\u6cd5\u7ec4\u7ec7\u6a21\u5757\uff0c\u9700\u8981\u4f7f\u7528\u8005\u719f\u6089\u54ea\u4e2a\u6307\u6807\u5bf9\u5e94\u7684\u662f\u54ea\u79cd\u7edf\u8ba1\u65b9\u6cd5\u5f97\u6765\u3002STATA\u4f5c\u4e3a\u5e38\u7528\u7684\u7edf\u8ba1\u8f6f\u4ef6\u5305\u4e4b\u4e00\uff0c\u4e13\u95e8\u8bbe\u8ba1\u6709\u4e00\u4e2a\u6d41\u884c\u75c5\u5b66\u76f8\u5173\u7684\u5206\u6790\u6a21\u5757\uff0c\u6309\u7814\u7a76\u8bbe\u8ba1\u7ec4\u7ec7\u83dc\u5355\u3002\u56e0\u6b64\uff0c\u672c\u8bfe\u7a0b\u4ee5STATA\u8f6f\u4ef6\u5305\u4e3a\u57fa\u7840\uff0c\u4ecb\u7ecd\u5e38\u7528\u6d41\u884c\u75c5\u5b66\u6307\u6807\u7684\u8ba1\u7b97\u3002  \n\n  * \u62bd\u6837\u8c03\u67e5\u662f\u6700\u5e38\u5f00\u5c55\u7684\u6d41\u884c\u75c5\u5b66\u7814\u7a76\u7c7b\u578b\u4e4b\u4e00\u3002\u5728\u8f83\u5927\u8303\u56f4\u7684\u62bd\u6837\u8c03\u67e5\u4e2d\uff0c\u5f88\u5c11\u5355\u72ec\u4f7f\u7528\u5355\u7eaf\u968f\u673a\u62bd\u6837\uff0c\u66f4\u591a\u7684\u662f\u4f7f\u7528\u6574\u7fa4\u62bd\u6837\u6216\u6574\u5408\u5355\u7eaf\u3001\u7cfb\u7edf\u3001\u5206\u5c42\u3001\u6574\u7fa4\u62bd\u6837\u7684\u591a\u9636\u6bb5\u62bd\u6837\u3002\u8fd9\u6837\u62bd\u6837\u8bbe\u8ba1\u5f97\u6765\u7684\u6570\u636e\u901a\u5e38\u88ab\u79f0\u4e3a\u590d\u6742\u62bd\u6837\u8c03\u67e5\u6570\u636e\uff08complex survey data\uff09\u3002\u5e38\u89c1\u7684\u6d41\u884c\u75c5\u5b66\u6559\u79d1\u4e66\u4e2d\u901a\u5e38\u53ea\u4ecb\u7ecd\u5355\u7eaf\u968f\u673a\u62bd\u6837\u65f6\u7684\u6837\u672c\u91cf\u8ba1\u7b97\u65b9\u6cd5\uff0c\u7136\u540e\u7ed9\u51fa\u201c\u6574\u7fa4\u62bd\u6837\u65f6\u518d\u589e\u52a0\u4e00\u5b9a\u6570\u91cf\u201d\u7684\u7b80\u5355\u539f\u5219\u3002\u800c\u901a\u5e38\u7edf\u8ba1\u6559\u5b66\u4e2d\u4ecb\u7ecd\u7684\u7edf\u8ba1\u65b9\u6cd5\u66f4\u9002\u7528\u4e8e\u9488\u5bf9\u5355\u7eaf\u968f\u673a\u62bd\u6837\u83b7\u5f97\u7684\u6570\u636e\u3002\u672c\u8bfe\u7a0b\u901a\u8fc7\u4ecb\u7ecdCSurvey\u8f6f\u4ef6\u5305\u7684\u4f7f\u7528\uff0c\u5e2e\u52a9\u5b66\u751f\u66f4\u597d\u5730\u7406\u89e3\u590d\u6742\u62bd\u6837\u8c03\u67e5\u65f6\u6837\u672c\u91cf\u8ba1\u7b97\u7684\u901a\u7528\u539f\u5219\uff1b\u901a\u8fc7\u4ecb\u7ecdSTATA\u4e2d\u4e13\u95e8\u9488\u5bf9\u590d\u6742\u8c03\u67e5\u6570\u636e\u7684\u5206\u6790\u6a21\u5757\uff0c\u4f7f\u5b66\u751f\u80fd\u591f\u4e86\u89e3\u9488\u5bf9\u6b64\u7c7b\u6570\u636e\u5408\u7406\u7684\u5206\u6790\u65b9\u6cd5\u3002  \n\n\u300a\u8f6f\u4ef6\u5305\u5728\u6d41\u884c\u75c5\u5b66\u7814\u7a76\u4e2d\u7684\u5e94\u7528\u300b\u662f\u5317\u4eac\u5927\u5b66\u533b\u5b66\u90e8\u6d41\u884c\u75c5\u4e0e\u536b\u751f\u7edf\u8ba1\u5b66\u5b66\u79d1\u7814\u7a76\u751f\u7684\u4e13\u4e1a\u5fc5\u4fee\u8bfe\u3002\u672c\u8bfe\u7a0b\u4e5f\u5728\u540c\u671f\u9762\u5411\u5317\u4eac\u5927\u5b66\u533b\u5b66\u90e8\u6b63\u5e38\u9009\u8bfe\u7684\u7814\u7a76\u751f\u5f00\u8bfe\uff0c\u91c7\u7528\u7ffb\u8f6c\u8bfe\u5802\n\u7684\u6559\u5b66\u6a21\u5f0f\uff0c\u9009\u8bfe\u5b66\u751f\u5728\u89c2\u770bMOOC\u89c6\u9891\u3001\u81ea\u5b66\u76f8\u5173\u8d44\u6e90\u548c\u5b8c\u6210\u7ec3\u4e60\u540e\uff0c\u8fd8\u9700\u53c2\u4e0e\u6559\u5ba4\u5185\u7684\u7b54\u7591\u4e92\u52a8\u3002\n\n## Syllabus\n\n**\u7b2c\u4e00\u5468\uff1a****PASS****\u8f6f\u4ef6\u5305\u5728\u6837\u672c\u91cf\u4e0e\u529f\u6548\u8ba1\u7b97\u4e2d\u7684\u5e94\u7528******\n\n\u4ecb\u7ecd\u5229\u7528PASS\u8f6f\u4ef6\u5305\u8fdb\u884c\u5e38\u7528\u6d41\u884c\u75c5\u5b66\u7814\u7a76\u8bbe\u8ba1\u7684\u6837\u672c\u91cf\u548c\u529f\u6548\u8ba1\u7b97\u3002\n\n**\u7b2c\u4e8c\u5468\uff1a****CSurvey****\u8f6f\u4ef6\u5305\u5728\u6574\u7fa4\u62bd\u6837\u8c03\u67e5\u4e2d\u7684\u5e94\u7528******\n\n\u4ecb\u7ecd\u5728\u4e24\u9636\u6bb5\u6574\u7fa4\u62bd\u6837\u8c03\u67e5\u4e2d\u5229\u7528CSurvey\u8f6f\u4ef6\u5305\u5b9e\u73b0\u6837\u672c\u91cf\u8ba1\u7b97\u3001PPS\u62bd\u6837\u548c\u751f\u6210\u968f\u673a\u6570\u5b57\u8868\u3002\n\n**\u7b2c\u4e09\u5468\uff1a****EpiData****\u8f6f\u4ef6\u5305\u5728\u6570\u636e\u5f55\u5165\u8fc7\u7a0b\u4e2d\u7684\u5e94\u7528******\n\n\u4ecb\u7ecd\u5229\u7528EpiData\u8f6f\u4ef6\u5305\u5efa\u7acb\u8c03\u67e5\u95ee\u5377\u6570\u636e\u5e93\u3001\u8bbe\u7f6e\u6838\u67e5\u8bed\u53e5\u548c\u5f55\u5165\u6570\u636e\u3002\n\n**\u7b2c\u56db\u5468\uff1a****EpiData****\u8f6f\u4ef6\u5305\u5728\u6570\u636e\u5f55\u5165\u8fc7\u7a0b\u4e2d\u7684\u5e94\u7528******\n\n\u4ecb\u7ecd\u5229\u7528EpiData\u8f6f\u4ef6\u5305\u5efa\u7acb\u5173\u8054\u6570\u636e\u5e93\uff0c\u4ee5\u53ca\u540e\u671f\u5e73\u884c\u53cc\u5f55\u5165\u7684\u8bbe\u7f6e\u3001\u6570\u636e\u5bfc\u51fa\u7b49\u529f\u80fd\u3002\n\n**\u7b2c\u4e94\u5468\uff1a\u57fa\u4e8e\u79fb\u52a8\u8bbe\u5907\u548c\u7f51\u7edc\u6280\u672f\u7684\u65e0\u7eb8\u8c03\u67e5\u65b9\u5f0f\u5728\u8c03\u67e5\u6570\u636e\u91c7\u96c6\u8fc7\u7a0b\u4e2d\u7684\u5e94\u7528******\n\n\u4ecb\u7ecd\u57fa\u4e8eB/S\u7ed3\u6784\u7684\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf\u4e2d\u8c03\u67e5\u95ee\u5377\u7684\u8bbe\u7f6e\u65b9\u6cd5\uff0c\u4f53\u9a8c\u57fa\u4e8eAndroid\u5e73\u53f0\u7684\u8c03\u67e5\u8f6f\u4ef6\u6216\u57fa\u4e8eB/S\u7ed3\u6784\u7684\u6d4f\u89c8\u5668\uff08WAP\uff09\u5ba2\u6237\u7aef\u5728\u73b0\u573a\u8c03\u67e5\u6570\u636e\u91c7\u96c6\u4e2d\u7684\u5e94\u7528\n\u3002\n\n**\u7b2c\u516d\u5468\uff1a****STATA****\u8f6f\u4ef6\u5305\u7684\u57fa\u672c\u64cd\u4f5c******\n\n\u4ecb\u7ecdSTATA\u8f6f\u4ef6\u5305\u7684\u57fa\u672c\u64cd\u4f5c\u65b9\u6cd5\u3002\n\n**\u7b2c\u4e03\u5468\uff1a****STATA****\u8f6f\u4ef6\u5305\u5728\u5e38\u7528\u6d41\u884c\u75c5\u5b66\u6307\u6807\u5206\u6790\u4e2d\u7684\u5e94\u7528******\n\n\u91cd\u70b9\u4ecb\u7ecdSTATA\u4e2dTables for Epidemiologists\u6a21\u5757\u7684\u5e94\u7528\uff0c\u540c\u65f6\u8bb2\u89e3\u4e0e\u5176\u4ed6\u5e38\u7528\u5206\u6790\u6a21\u5757\u7684\u5bf9\u5e94\u6027\u3002\n\n**\u7b2c\u516b\u5468\uff1a****STATA****\u8f6f\u4ef6\u5305\u5728\u590d\u6742\u62bd\u6837\u8c03\u67e5\u6570\u636e\u5206\u6790\u4e2d\u7684\u5e94\u7528******\n\n\u4ecb\u7ecdSTATA\u4e2dSurvey data analysis\u6a21\u5757\u5728\u590d\u6742\u62bd\u6837\u8c03\u67e5\u6570\u636e\u5206\u6790\u4e2d\u7684\u5e94\u7528\u3002\n\n**\u7b2c\u4e5d\u5468\uff1a****Sublime Text****\u8bed\u53e5\u7f16\u8f91\u5668\u7684\u7b80\u5355\u5e94\u7528******\n\n\u4ecb\u7ecd\u5229\u7528\u8bed\u53e5\u7f16\u8f91\u5668Sublime Text\u8f6f\u4ef6\u5305\u63d0\u9ad8\u7edf\u8ba1\u8bed\u53e5\u7f16\u5199\u7684\u6548\u7387\u548c\u51c6\u786e\u6027\u3002\n\n**\u7b2c\u5341\u5468\uff1a\u8003\u8bd5******\n\n",
        "name": "\u8f6f\u4ef6\u5305\u5728\u6d41\u884c\u75c5\u5b66\u7814\u7a76\u4e2d\u7684\u5e94\u7528 Using software apps in epidemiological research",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Peking University"
        ],
        "url": "https://www.coursera.org/course/epiapps",
        "video_url": ""
    },
    {
        "date": "2014-09-15",
        "desc": "This course introduces the cornerstones of functional programming using the Scala programming language. Functional programming has become more and more popular in recent years because it promotes code that\u2019s safe, concise, and elegant. Furthermore, functional programming makes it easier to write parallel code for today\u2019s and tomorrow\u2019s multiprocessors by replacing mutable variables and loops with powerful ways to define and compose functions.Scala is a language that fuses functional and object-oriented programming in a practical package. It interoperates seamlessly with Java and its tools. Scala is now used in a rapidly increasing number of open source projects and companies. It provides the core infrastructure for sites such as Twitter, LinkedIn, Foursquare, Tumblr, and Klout.In this course you will discover the elements of the functional programming style and learn how to apply them usefully in your daily programming tasks. You will also develop a solid foundation for reasoning about functional programs, by touching upon proofs of invariants and the tracing of execution symbolically.The course is hands on; most units introduce short programs that serve as illustrations of important concepts and invite you to play with them, modifying and improving them. The course is complemented by a series of assignments, most of which are also programming projects.SyllabusWeek One:Programming paradigms; overview of functional programming and the Scala programming language.Week Two:Defining and using functions, recursion and non-termination, working with functions as values, reasoning by reduction.Week Three:Defining and using immutable objects, review of inheritance and dynamic binding.Week Four:Types and Pattern MatchingWeek Five:Working with ListsWeek Six:Collections and Combinatorial SearchWeek Seven:Lazy Evaluation",
        "desc_html": "This course introduces the cornerstones of functional programming using the\nScala programming language. Functional programming has become more and more\npopular in recent years because it promotes code that\u2019s safe, concise, and\nelegant. Furthermore, functional programming makes it easier to write parallel\ncode for today\u2019s and tomorrow\u2019s multiprocessors by replacing mutable variables\nand loops with powerful ways to define and compose functions.  \n  \nScala is a language that fuses functional and object-oriented programming in a\npractical package. It interoperates seamlessly with Java and its tools. Scala\nis now used in a rapidly increasing number of open source projects and\ncompanies. It provides the core infrastructure for sites such as Twitter,\nLinkedIn, Foursquare, Tumblr, and Klout.  \n  \nIn this course you will discover the elements of the functional programming\nstyle and learn how to apply them usefully in your daily programming tasks.\nYou will also develop a solid foundation for reasoning about functional\nprograms, by touching upon proofs of invariants and the tracing of execution\nsymbolically.  \n  \nThe course is hands on; most units introduce short programs that serve as\nillustrations of important concepts and invite you to play with them,\nmodifying and improving them. The course is complemented by a series of\nassignments, most of which are also programming projects.\n\n## Syllabus\n\n**Week One:** Programming paradigms; overview of functional programming and the Scala programming language.\n\n**Week Two:** Defining and using functions, recursion and non-termination, working with functions as values, reasoning by reduction.\u00a0\n\n**Week Three:** Defining and using immutable objects, review of inheritance and dynamic binding.\n\n**Week Four:** Types and Pattern Matching\n\n**Week Five:**\u00a0Working with Lists\n\n**Week Six:**\u00a0Collections and Combinatorial Search\n\n**Week Seven:** Lazy Evaluation\n\n",
        "name": "Functional Programming Principles in Scala",
        "provider": "Coursera",
        "rating": "4.8571428571429",
        "reviews": "21",
        "university": [
            "\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne"
        ],
        "url": "https://www.coursera.org/course/progfun",
        "video_url": ""
    },
    {
        "date": "2014-09-15",
        "desc": "*Note - This is an Archived course*This is a past/archived course. At this time, you can only explore this course in a self-paced fashion. Certain features of this course may not be active, but many people enjoy watching the videos and working with the materials. Make sure to check for reruns of this course.\u672c\u8bfe\u7a0b\u7684\u6559\u5b66\u5185\u5bb9\u5305\u62ec\uff1a\u5f62\u5f0f\u8bed\u8a00\u4e0e\u81ea\u52a8\u673a\u7406\u8bba\u3001\u53ef\u8ba1\u7b97\u6027\u7406\u8bba\u3001\u8ba1\u7b97\u590d\u6742\u6027\u7406\u8bba\u7b49\u4e09\u4e2a\u90e8\u5206\u3002\u8fd9\u4e9b\u5185\u5bb9\u5206\u522b\u56de\u7b54\u4e0b\u5217\u95ee\u9898\uff1a\uff081\uff09\u6709\u54ea\u4e9b\u8ba1\u7b97\u88c5\u7f6e\uff1f\u5b83\u4eec\u7684\u80fd\u529b\u5982\u4f55\uff1f\uff082\uff09\u4ec0\u4e48\u662f\u8ba1\u7b97\uff1f\u54ea\u4e9b\u95ee\u9898\u662f\uff08\u4e0d\uff09\u53ef\u8ba1\u7b97\u7684\uff1f\uff083\uff09\u4ec0\u4e48\u662f\u6709\u6548\u8ba1\u7b97\uff1f\u54ea\u4e9b\u95ee\u9898\u662f\uff08\u4e0d\uff09\u53ef\u6709\u6548\u8ba1\u7b97\u7684\uff1f\u901a\u8fc7\u8fd9\u95e8\u8bfe\u7a0b\u7684\u5b66\u4e60\uff0c\u5b66\u751f\u5c06\u4e86\u89e3\u8ba1\u7b97\u7406\u8bba\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u638c\u63e1\u6709\u6548\u8ba1\u7b97\u7684\u6982\u5ff5\u3002\u672c\u8bfe\u7a0b\u7684\u6559\u5b66\u65b9\u5f0f\u5305\u62ec\u6559\u5b66\u5f55\u50cf\u7247\u6bb5\uff08\u6bcf\u6bb5\u5f55\u50cf8-20\u5206\u949f\uff0c\u5185\u542b1-2\u4e2a\u6d4b\u9a8c\u95ee\u9898\uff09\uff0c\u6559\u5b66\u5f55\u50cf\u4e4b\u5916\u7684\u4e66\u9762\u4f5c\u4e1a\uff0c\u4ee5\u53ca\uff08\u5fc5\u987b\u53c2\u52a0\u7684\uff09\u671f\u672b\u8003\u8bd5\u3002\u672c\u8bfe\u7a0b\u8bfe\u7a0b\u7684\u603b\u957f\u5ea6\u4e3a8\u5468\uff0c\u6bcf\u5468\u6559\u5b66\u5f55\u50cf\u957f\u5ea6\u5927\u7ea6120\u5206\u949f\u3002\u9700\u8981\u7684\u9884\u5907\u77e5\u8bc6\u662f\u79bb\u6563\u6570\u5b66\uff08\u96c6\u5408\u8bba\u3001\u6570\u7406\u903b\u8f91\u3001\u56fe\u8bba\u7b49\uff09\u7684\u57fa\u672c\u6982\u5ff5\u3002",
        "desc_html": "*Note - This is an Archived course*  \nThis is a past/archived course. At this time, you can only explore this course\nin a self-paced fashion. Certain features of this course may not be active,\nbut many people enjoy watching the videos and working with the materials. Make\nsure to check for reruns of this course.  \n\u672c\u8bfe\u7a0b\u7684\u6559\u5b66\u5185\u5bb9\u5305\u62ec\uff1a\u5f62\u5f0f\u8bed\u8a00\u4e0e\u81ea\u52a8\u673a\u7406\u8bba\u3001\u53ef\u8ba1\u7b97\u6027\u7406\u8bba\u3001\u8ba1\u7b97\u590d\u6742\u6027\u7406\u8bba\u7b49\u4e09\u4e2a\u90e8\u5206\u3002\u8fd9\u4e9b\u5185\u5bb9\u5206\u522b\u56de\u7b54\u4e0b\u5217\u95ee\u9898\uff1a\uff081\uff09\u6709\u54ea\u4e9b\u8ba1\u7b97\u88c5\u7f6e\uff1f\u5b83\u4eec\u7684\u80fd\u529b\u5982\u4f55\uff1f\uff082\uff09\u4ec0\n\u4e48\u662f\u8ba1\u7b97\uff1f\u54ea\u4e9b\u95ee\u9898\u662f\uff08\u4e0d\uff09\u53ef\u8ba1\u7b97\u7684\uff1f\uff083\uff09\u4ec0\u4e48\u662f\u6709\u6548\u8ba1\u7b97\uff1f\u54ea\u4e9b\u95ee\u9898\u662f\uff08\u4e0d\uff09\u53ef\u6709\u6548\u8ba1\u7b97\u7684\uff1f\u901a\u8fc7\u8fd9\u95e8\u8bfe\u7a0b\u7684\u5b66\u4e60\uff0c\u5b66\u751f\u5c06\u4e86\u89e3\u8ba1\u7b97\u7406\u8bba\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u638c\u63e1\u6709\u6548\u8ba1\u7b97\u7684\u6982\u5ff5\n\u3002  \n\u672c\u8bfe\u7a0b\u7684\u6559\u5b66\u65b9\u5f0f\u5305\u62ec\u6559\u5b66\u5f55\u50cf\u7247\u6bb5\uff08\u6bcf\u6bb5\u5f55\u50cf8-20\u5206\u949f\uff0c\u5185\u542b1-2\u4e2a\u6d4b\u9a8c\u95ee\u9898\uff09\uff0c\u6559\u5b66\u5f55\u50cf\u4e4b\u5916\u7684\u4e66\u9762\u4f5c\u4e1a\uff0c\u4ee5\u53ca\uff08\u5fc5\u987b\u53c2\u52a0\u7684\uff09\u671f\u672b\u8003\u8bd5\u3002  \n\u672c\u8bfe\u7a0b\u8bfe\u7a0b\u7684\u603b\u957f\u5ea6\u4e3a8\u5468\uff0c\u6bcf\u5468\u6559\u5b66\u5f55\u50cf\u957f\u5ea6\u5927\u7ea6120\u5206\u949f\u3002\u9700\u8981\u7684\u9884\u5907\u77e5\u8bc6\u662f\u79bb\u6563\u6570\u5b66\uff08\u96c6\u5408\u8bba\u3001\u6570\u7406\u903b\u8f91\u3001\u56fe\u8bba\u7b49\uff09\u7684\u57fa\u672c\u6982\u5ff5\u3002\n\n",
        "name": "04830260x: \u7406\u8bba\u8ba1\u7b97\u673a\u79d1\u5b66\u57fa\u7840 | Introduction to Theoretical Computer Science",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Peking University"
        ],
        "url": "https://www.edx.org/course/li-lun-ji-suan-ji-ke-xue-ji-chu-pekingx-04830260x",
        "video_url": ""
    },
    {
        "date": "2014-09-15",
        "desc": "\u8bfe\u7a0b\u4ecb\u7ecd\u89c6\u9891\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u91cc\u3002\u64cd\u4f5c\u7cfb\u7edf\u662f\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u57fa\u7840\u8f6f\u4ef6\uff0c\u800c\u7cfb\u7edf\u865a\u62df\u5316\u5df2\u6210\u4e3a\u4e91\u8ba1\u7b97\u5e73\u53f0\u7684\u6838\u5fc3\u6280\u672f\uff0c\u6ca1\u6709\u5b83\u4eec\u63d0\u4f9b\u7684\u5b89\u5168\u6027\uff0c\u8fd9\u4e9b\u8ba1\u7b97\u673a\u7cfb\u7edf\u53ca\u5176\u4e0a\u6570\u636e\u7684\u5b89\u5168\u6027\u90fd\u5c06\u65e0\u6cd5\u4fdd\u969c\u3002\u672c\u8bfe\u7a0b\u5c06\u4ece\u7406\u8bba\u4e0e\u5de5\u7a0b\u5b9e\u8df5\u76f8\u7ed3\u5408\u7684\u89d2\u5ea6\uff0c\u4ecb\u7ecd\u64cd\u4f5c\u7cfb\u7edf(Linux)\u4e0e\u7cfb\u7edf\u865a\u62df\u5316(Xen)\u5b89\u5168\u76f8\u5173\u7406\u8bba\u3001\u6280\u672f\u548c\u65b9\u6cd5\uff0c\u5305\u62ec\uff1a\u5b89\u5168\u6982\u5ff5\u3001\u5b89\u5168\u673a\u5236\u3001\u5b89\u5168\u6a21\u578b\u3001\u5b89\u5168\u4f53\u7cfb\u7ed3\u6784\u3001\u5b89\u5168\u5f00\u53d1\u65b9\u6cd5\u3001\u5b89\u5168\u6807\u51c6\u4e0e\u8bc4\u6d4b\u65b9\u6cd5\u7b49\uff0c\u5e2e\u52a9\u4f60\u6df1\u5165\u5b66\u4e60\u548c\u7406\u89e3\u8be5\u9886\u57df\u7684\u77e5\u8bc6\u4f53\u7cfb\u3001\u5b9e\u8df5\u6280\u672f\u548c\u65b9\u6cd5\u3002\u8fd9\u662f\u4e00\u95e8\u9002\u5408\u672c\u79d1\u751f\u3001\u4ee5\u53ca\u7814\u7a76\u751f\u7684\u8bfe\u7a0b\uff0c\u9002\u5408\u8ba1\u7b97\u673a\u3001\u8f6f\u4ef6\u5de5\u7a0b\u548c\u4fe1\u606f\u5b89\u5168\u7c7b\u4e13\u4e1a\uff1b\u540c\u65f6\u4e5f\u53ef\u4f9b\u6709\u5174\u8da3\u7684\u76f8\u5173\u7814\u7a76\u4eba\u5458\u3001\u5de5\u7a0b\u6280\u672f\u4eba\u5458\u3001\u7ba1\u7406\u4eba\u5458\u548c\u7231\u597d\u8005\u7b49\u5b66\u4e60\u548c\u501f\u9274\u3002\u8bfe\u7a0b\u7684\u5185\u5bb9\u4e3b\u8981\u57fa\u4e8e\u6559\u6750\u300a\u64cd\u4f5c\u7cfb\u7edf\u5b89\u5168\u8bbe\u8ba1\u300b\uff08\u673a\u68b0\u5de5\u4e1a\u51fa\u7248\u793e\uff0c2013.9\uff09\u3002\u8be5\u8bfe\u7a0b\u662f\u5317\u4eac\u5927\u5b66\u7cbe\u54c1\u8bfe\u7a0b\uff0cIntelUPO\u8d44\u52a9\u7684\u56fd\u5185\u9996\u6279\u8ba1\u7b97\u673a\u5b89\u5168\u7c7b\u8bfe\u7a0b\u4e4b\u4e00.Syllabus\u7b2c1\u5468. \u8ba1\u7b97\u673a\u7cfb\u7edf\u5b89\u5168\u7684\u91cd\u8981\u6027\u4e0e\u8bc4\u6d4b\u6807\u51c6\u7b2c2\u5468. \u8ba1\u7b97\u673a\u7cfb\u7edf\u57fa\u672c\u5b89\u5168\u6982\u5ff5\u548c\u8bbe\u8ba1\u601d\u60f3\u7b2c3\u5468. \u8bbf\u95ee\u63a7\u5236\u673a\u5236\uff08\u81ea\u4e3b\u8bbf\u95ee\u673a\u5236\uff0c\u5f3a\u5236\u8bbf\u95ee\u63a7\u5236\uff0c\u5ba2\u4f53\u91cd\u7528\uff09\u7b2c4\u5468. \u53ef\u8ffd\u7a76\u673a\u5236\uff08\u6807\u8bc6\u4e0e\u9274\u522b\uff0c\u53ef\u4fe1\u901a\u8def\uff0c\u5b89\u5168\u5ba1\u8ba1\uff09\u7b2c5\u5468. \u8fde\u7eed\u4fdd\u62a4\u673a\u5236\uff08I\uff09\uff08\u6700\u5c0f\u7279\u6743\u7ba1\u7406\uff0c \u7cfb\u7edf\u5b8c\u6574\u6027\uff09\u7b2c6\u5468. \u8fde\u7eed\u4fdd\u62a4\u673a\u5236\uff08II\uff09\uff08\u9690\u853d\u901a\u9053\u5206\u6790\uff1b\u53ef\u4fe1\u6062\u590d\uff09\u7b2c7\u5468. \u5b89\u5168\u6a21\u578b\uff08BLP\u6a21\u578b\uff0cBIBA\u6a21\u578b\uff0c\u4e2d\u56fd\u5899\u6a21\u578b\uff0cRBAC\u6a21\u578b\u4e0eDTE\u6a21\u578b\uff09\u7b2c8\u5468. \u5b89\u5168\u4f53\u7cfb\u7ed3\u6784\uff08Flask\u5b89\u5168\u4f53\u7cfb\u7ed3\u6784\u3001LSM\u5b89\u5168\u6846\u67b6\uff0cXSM\u5b89\u5168\u6846\u67b6\uff09\u7b2c9\u5468. \u53ef\u4fe1\u8ba1\u7b97\u6280\u672f\uff08\u8bbf\u8c08\u537f\u65af\u6c49\u6559\u6388\u3001\u738b\u7ecd\u658c\u535a\u58eb\uff09\u7b2c10\u5468. \u5b89\u5168\u64cd\u4f5c\u7cfb\u7edf\u7684\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\u6280\u672f\u6848\u4f8b\uff08\u8bbf\u8c08\u537f\u65af\u6c49\u6559\u6388\uff09\u7b2c11\u5468. \u57fa\u4e8e\u5b89\u5168\u64cd\u4f5c\u7cfb\u7edf\u7684\u5e94\u7528-\u6570\u636e\u5e93\u5b89\u5168\uff08\u5f20\u654f\u8001\u5e08\u7684\u4e13\u9898\uff09\u7b2c12\u5468. \u7cfb\u7edf\u865a\u62df\u5316\u5b89\u5168\u4e0e\u865a\u62df\u53ef\u4fe1\u5e73\u53f0\u6280\u672f",
        "desc_html": "\u8bfe\u7a0b\u4ecb\u7ecd\u89c6\u9891\u53ef\u4ee5\u8bbf\u95ee[\u8fd9\u91cc](http://video.study.163.com/edu-\nvideo/nos/mp4/2014/07/25/527141_hd.mp4)\u3002\n\n  \n\u64cd\u4f5c\u7cfb\u7edf\u662f\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u57fa\u7840\u8f6f\u4ef6\uff0c\u800c\u7cfb\u7edf\u865a\u62df\u5316\u5df2\u6210\u4e3a\u4e91\u8ba1\u7b97\u5e73\u53f0\u7684\u6838\u5fc3\u6280\u672f\uff0c\u6ca1\u6709\u5b83\u4eec\u63d0\u4f9b\u7684\u5b89\u5168\u6027\uff0c\u8fd9\u4e9b\u8ba1\u7b97\u673a\u7cfb\u7edf\u53ca\u5176\u4e0a\u6570\u636e\u7684\u5b89\u5168\u6027\u90fd\u5c06\u65e0\u6cd5\u4fdd\u969c\u3002\u672c\u8bfe\u7a0b\u5c06\u4ece\u7406\u8bba\u4e0e\n\u5de5\u7a0b\u5b9e\u8df5\u76f8\u7ed3\u5408\u7684\u89d2\u5ea6\uff0c\u4ecb\u7ecd\u64cd\u4f5c\u7cfb\u7edf(Linux)\u4e0e\u7cfb\u7edf\u865a\u62df\u5316(Xen)\u5b89\u5168\u76f8\u5173\u7406\u8bba\u3001\u6280\u672f\u548c\u65b9\u6cd5\uff0c\u5305\u62ec\uff1a\u5b89\u5168\u6982\u5ff5\u3001\u5b89\u5168\u673a\u5236\u3001\u5b89\u5168\u6a21\u578b\u3001\u5b89\u5168\u4f53\u7cfb\u7ed3\u6784\u3001\u5b89\u5168\u5f00\u53d1\u65b9\n\u6cd5\u3001\u5b89\u5168\u6807\u51c6\u4e0e\u8bc4\u6d4b\u65b9\u6cd5\u7b49\uff0c\u5e2e\u52a9\u4f60\u6df1\u5165\u5b66\u4e60\u548c\u7406\u89e3\u8be5\u9886\u57df\u7684\u77e5\u8bc6\u4f53\u7cfb\u3001\u5b9e\u8df5\u6280\u672f\u548c\u65b9\u6cd5\u3002  \n  \n\u8fd9\u662f\u4e00\u95e8\u9002\u5408\u672c\u79d1\u751f\u3001\u4ee5\u53ca\u7814\u7a76\u751f\u7684\u8bfe\u7a0b\uff0c\u9002\u5408\u8ba1\u7b97\u673a\u3001\u8f6f\u4ef6\u5de5\u7a0b\u548c\u4fe1\u606f\u5b89\u5168\u7c7b\u4e13\u4e1a\uff1b\u540c\u65f6\u4e5f\u53ef\u4f9b\u6709\u5174\u8da3\u7684\u76f8\u5173\u7814\u7a76\u4eba\u5458\u3001\u5de5\u7a0b\u6280\u672f\u4eba\u5458\u3001\u7ba1\u7406\u4eba\u5458\u548c\u7231\u597d\u8005\u7b49\u5b66\u4e60\u548c\u501f\u9274\u3002  \n  \n\n\u8bfe\u7a0b\u7684\u5185\u5bb9\u4e3b\u8981\u57fa\u4e8e\u6559\u6750[\u300a\u64cd\u4f5c\u7cfb\u7edf\u5b89\u5168\u8bbe\u8ba1\u300b\uff08\u673a\u68b0\u5de5\u4e1a\u51fa\u7248\u793e\uff0c2013.9\uff09](http://www.amazon.cn/%E9%AB%98%E7%AD%8\n9%E9%99%A2%E6%A0%A1%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E4%B8%93%E4%B8%9A%E8%A\n7%84%E5%88%92%E6%95%99%E6%9D%90-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AE%89%\nE5%85%A8%E8%AE%BE%E8%AE%A1-%E6%B2%88%E6%99%B4%E9%9C%93/dp/B00FIY49GO/ref=sr_1_\n1?ie=UTF8&qid=1404639920&sr=8-1&keywords=%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%\nE5%AE%89%E5%85%A8%E8%AE%BE%E8%AE%A1)\u3002\n\n[\u8be5\u8bfe\u7a0b\u662f\u5317\u4eac\u5927\u5b66\u7cbe\u54c1\u8bfe\u7a0b\uff0c](http://www.intel.com/content/www/us/en/education/university\n/intel-labs-security-curriculum-list.html)[Intel\n](http://www.intel.com/content/www/us/en/education/university/intel-labs-\nsecurity-curriculum-list.html)[UPO\u8d44\u52a9\u7684\u56fd\u5185\u9996\u6279\u8ba1\u7b97\u673a\u5b89\u5168\u7c7b\u8bfe\u7a0b\u4e4b\u4e00](http://www.intel.com/cont\nent/www/us/en/education/university/intel-labs-security-curriculum-list.html).  \n  \n\n## Syllabus\n\n\u7b2c1\u5468. \u8ba1\u7b97\u673a\u7cfb\u7edf\u5b89\u5168\u7684\u91cd\u8981\u6027\u4e0e\u8bc4\u6d4b\u6807\u51c6  \n\u7b2c2\u5468. \u8ba1\u7b97\u673a\u7cfb\u7edf\u57fa\u672c\u5b89\u5168\u6982\u5ff5\u548c\u8bbe\u8ba1\u601d\u60f3  \n\u7b2c3\u5468. \u8bbf\u95ee\u63a7\u5236\u673a\u5236\uff08\u81ea\u4e3b\u8bbf\u95ee\u673a\u5236\uff0c\u5f3a\u5236\u8bbf\u95ee\u63a7\u5236\uff0c\u5ba2\u4f53\u91cd\u7528\uff09  \n\u7b2c4\u5468. \u53ef\u8ffd\u7a76\u673a\u5236\uff08\u6807\u8bc6\u4e0e\u9274\u522b\uff0c\u53ef\u4fe1\u901a\u8def\uff0c\u5b89\u5168\u5ba1\u8ba1\uff09  \n\u7b2c5\u5468. \u8fde\u7eed\u4fdd\u62a4\u673a\u5236\uff08I\uff09\uff08\u6700\u5c0f\u7279\u6743\u7ba1\u7406\uff0c \u7cfb\u7edf\u5b8c\u6574\u6027\uff09  \n\u7b2c6\u5468. \u8fde\u7eed\u4fdd\u62a4\u673a\u5236\uff08II\uff09\uff08\u9690\u853d\u901a\u9053\u5206\u6790\uff1b\u53ef\u4fe1\u6062\u590d\uff09  \n\u7b2c7\u5468. \u5b89\u5168\u6a21\u578b\uff08BLP\u6a21\u578b\uff0cBIBA\u6a21\u578b\uff0c\u4e2d\u56fd\u5899\u6a21\u578b\uff0cRBAC\u6a21\u578b\u4e0eDTE\u6a21\u578b\uff09  \n\u7b2c8\u5468. \u5b89\u5168\u4f53\u7cfb\u7ed3\u6784\uff08Flask\u5b89\u5168\u4f53\u7cfb\u7ed3\u6784\u3001LSM\u5b89\u5168\u6846\u67b6\uff0cXSM\u5b89\u5168\u6846\u67b6\uff09  \n\u7b2c9\u5468. \u53ef\u4fe1\u8ba1\u7b97\u6280\u672f\uff08\u8bbf\u8c08\u537f\u65af\u6c49\u6559\u6388\u3001\u738b\u7ecd\u658c\u535a\u58eb\uff09  \n\u7b2c10\u5468. \u5b89\u5168\u64cd\u4f5c\u7cfb\u7edf\u7684\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\u6280\u672f\u6848\u4f8b\uff08\u8bbf\u8c08\u537f\u65af\u6c49\u6559\u6388\uff09  \n\u7b2c11\u5468. \u57fa\u4e8e\u5b89\u5168\u64cd\u4f5c\u7cfb\u7edf\u7684\u5e94\u7528-\u6570\u636e\u5e93\u5b89\u5168\uff08\u5f20\u654f\u8001\u5e08\u7684\u4e13\u9898\uff09  \n\u7b2c12\u5468. \u7cfb\u7edf\u865a\u62df\u5316\u5b89\u5168\u4e0e\u865a\u62df\u53ef\u4fe1\u5e73\u53f0\u6280\u672f  \n\n",
        "name": "\u64cd\u4f5c\u7cfb\u7edf\u4e0e\u865a\u62df\u5316\u5b89\u5168",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Peking University"
        ],
        "url": "https://www.coursera.org/course/osvirtsecurity",
        "video_url": ""
    },
    {
        "date": "2014-09-12",
        "desc": "Functional analysis is the branch of mathematics dealing with spaces of\nfunctions. It is a valuable tool in theoretical mathematics as well as\nengineering. It is at the very core of numerical simulation.In this class, I will explain the concepts of convergence and talk about\ntopology. You will understand the difference between strong convergence\nand weak convergence. You will also see how these two concepts can be used.You will learn about different types of spaces including metric spaces,\nBanach Spaces, Hilbert Spaces and what property can be expected. You will\nsee beautiful lemmas and theorems such as Riesz and Lax-Milgram and I will\nalso describe Lp spaces, Sobolev spaces and provide a few details about\nPDEs, or Partial Differential Equations.SyllabusWeek 1: Topology; continuity and convergence of a sequence in a topological space.Week 2: Metric and normed spaces; completenessWeek 3: Banach spaces; linear continuous functions; weak topologyWeek 4: Hilbert spaces; The Riesz representation theoremWeek 5: The Lax-Milgram LemmaWeek 6: Properties of the Lp spacesWeek 7: Distributions and Sobolev SpacesWeek 8: Application: simulating a membrane",
        "desc_html": "Functional analysis is the branch of mathematics dealing with spaces of\nfunctions. It is a valuable tool in theoretical mathematics as well as\nengineering. It is at the very core of numerical simulation.  \n  \nIn this class, I will explain the concepts of convergence and talk about\ntopology. You will understand the difference between strong convergence and\nweak convergence. You will also see how these two concepts can be used.  \n  \nYou will learn about different types of spaces including metric spaces, Banach\nSpaces, Hilbert Spaces and what property can be expected. You will see\nbeautiful lemmas and theorems such as Riesz and Lax-Milgram and I will also\ndescribe Lp spaces, Sobolev spaces and provide a few details about PDEs, or\nPartial Differential Equations.  \n  \n\n## Syllabus\n\nWeek 1: Topology; continuity and convergence of a sequence in a topological\nspace.  \nWeek 2: Metric and normed spaces; completeness  \nWeek 3: Banach spaces; linear continuous functions; weak topology  \nWeek 4: Hilbert spaces; The Riesz representation theorem  \nWeek 5: The Lax-Milgram Lemma  \nWeek 6: Properties of the Lp spaces  \nWeek 7: Distributions and Sobolev Spaces  \nWeek 8: Application: simulating a membrane  \n  \n\n",
        "name": "An Introduction to Functional Analysis",
        "provider": "Coursera",
        "rating": "3",
        "reviews": "1",
        "university": [
            "\u00c9cole Centrale Paris"
        ],
        "url": "https://www.coursera.org/course/functionalanalysis",
        "video_url": ""
    },
    {
        "date": "2014-09-11",
        "desc": "This course will introduce computer programming in C. This freshman CS course will assume no prior experience about computer science. We will cover basic operations about computers, then move on to how to write computer programs in a language called C. Various C concepts will be introduced.SyllabusWeek 1: Basic programming concepts (book chapter 1, 2, 3), slides:introduction,basic, andcomputation.What is in a program?What is a variable in a program?How to edit/compile/run a program?How to read/write a value with a program?How to assign values into variables?How to add/subtract/multiply/divide numbers?How to compare numbers?How to make logical decision?Week 2: Flow control and loops (book chapter 4, 5), slides:branchandloop.How to make a program run different parts on different conditions?How to make a program run repeatedly?How to stop/continue a loop?How to solve problems with conditions and loops?Week 3: Arrays and Floating point Numbers (book  chapter 6, 7), slides:arrayandfloating point numbers.What is an array?How to store data into array/retrieve data from\n  array?How to read/write data into/from array?What is a multi-dimensional array?How computers place arrays in memory?What is a floating point number?How to read/write a floating point number?Week 4: Functions (book chapter 8), slides:function.What is a function?Why do we need function?How a function communicates with your program?Where are the variables in a function? How do they differ from variables in your main program?Week 5: Pointers (book chapter 9), slides:pointer.What is memory address?What is a pointer?How to access other variables with pointers?What is the relation between pointers and arrays?How to access array elements with pointers?Week 6: Strings and characters (book chapter 10, 11), slides:characterandstring.What is a character?How to read/write a character?What are the library we can use to process characters?What is a string?How to read/write a string?What is the relation between a character and a string?What is the relation between a string and a pointer?What are the library we can use to process strings?",
        "desc_html": "This course will introduce computer programming in C. This freshman CS course\nwill assume no prior experience about computer science. We will cover basic\noperations about computers, then move on to how to write computer programs in\na language called C. Various C concepts will be introduced.\n\n## Syllabus\n\n  * Week 1: Basic programming concepts (book chapter 1, 2, 3), slides: [introduction](https://www.dropbox.com/s/ma45j4a3eb0s003/introduction-slide.pdf), [basic](https://www.dropbox.com/s/aw2fvmd1kz5rhxs/basic-slide.pdf), and [computation](https://www.dropbox.com/s/wf6rn4q435m2g55/comp-slide.pdf).\n    * What is in a program?\n    * What is a variable in a program?\n    * How to edit/compile/run a program?\n    * How to read/write a value with a program?\n    * How to assign values into variables?\n    * How to add/subtract/multiply/divide numbers?\n    * How to compare numbers?\n    * How to make logical decision?\n  * Week 2: Flow control and loops (book chapter 4, 5), slides: [branch](https://www.dropbox.com/s/tjwxow7chzfczk7/branch-slide.pdf) and [loop](https://www.dropbox.com/s/qa0yv0h92yicj43/loop-slide.pdf).\n    * How to make a program run different parts on different conditions?\n    * How to make a program run repeatedly?\n    * How to stop/continue a loop?\n    * How to solve problems with conditions and loops?\n  * Week 3: Arrays and Floating point Numbers (book chapter 6, 7), slides: [array](https://www.dropbox.com/s/3vujo55s6bcaa96/array-slide.pdf) and [floating point numbers](https://www.dropbox.com/s/y9ib5qv2zm2j6hc/fpnumber-slide.pdf).\n    * What is an array?\n    * How to store data into array/retrieve data from array?\n    * How to read/write data into/from array?\n    * What is a multi-dimensional array?\n    * How computers place arrays in memory?\n    * What is a floating point number?\n    * How to read/write a floating point number?\n  * Week 4: Functions (book chapter 8), slides: [function](https://www.dropbox.com/s/yq62v6tm290b19q/function-slide.pdf).\n    * What is a function?\n    * Why do we need function?\n    * How a function communicates with your program?\n    * Where are the variables in a function? How do they differ from variables in your main program?\n  * Week 5: Pointers (book chapter 9), slides: [pointer](https://www.dropbox.com/s/puzoq0a4if71gxf/pointer-slide.pdf).\n    * What is memory address?\n    * What is a pointer?\n    * How to access other variables with pointers?\n    * What is the relation between pointers and arrays?\n    * How to access array elements with pointers?\n  * Week 6: Strings and characters (book chapter 10, 11), slides: [character](https://www.dropbox.com/s/p82lsegw579las3/char-slide.pdf) and [string](https://www.dropbox.com/s/h0r6lmcs7v5qn47/string-slide.pdf).\n    * What is a character?\n    * How to read/write a character?\n    * What are the library we can use to process characters?\n    * What is a string?\n    * How to read/write a string?\n    * What is the relation between a character and a string?\n    * What is the relation between a string and a pointer?\n    * What are the library we can use to process strings?\n\n",
        "name": "\u8a08\u7b97\u6a5f\u7a0b\u5f0f\u8a2d\u8a08 (Computer Programming)",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "National Taiwan University"
        ],
        "url": "https://www.coursera.org/course/cprogramming",
        "video_url": ""
    },
    {
        "date": "2014-09-10",
        "desc": "This course will bring you to the next level about how to use SAP HANA Cloud Platform. You'll learn how you can use the platform to develop and manage SAP HANA native apps and HTML5 apps, as well as how to apply advanced security features, develop widgets on SAP HANA Cloud Portal, and much more. To follow all the units, you should have already walked through the openSAP course Introduction to SAP HANA Cloud Platform.Course RequirementsParticipation in the openSAP course&nbsp;Introduction to SAP HANA Cloud Platform (Repeat)Basic programming skillsBasic knowledge of how to use an Eclipse development environmentSyllabusWeek 1: SAP HANA Native DevelopmentWeek 2: Git and HTML5 Apps &ndash; Part 1Week 3: Git and HTML5 Apps &ndash; Part 2Week 4: Advanced Identity ManagementWeek 5: Securing Web APIsWeek 6: Additional FeaturesWeek 7: Final Exam",
        "desc_html": "This course will bring you to the next level about how to use SAP HANA Cloud\nPlatform. You'll learn how you can use the platform to develop and manage SAP\nHANA native apps and HTML5 apps, as well as how to apply advanced security\nfeatures, develop widgets on SAP HANA Cloud Portal, and much more. To follow\nall the units, you should have already walked through the openSAP course\nIntroduction to SAP HANA Cloud Platform.\n\n**Course Requirements**\n\n  * Participation in the openSAP course [Introduction to SAP HANA Cloud Platform (Repeat)](https://open.sap.com/course/hanacloud1-1)\n  * Basic programming skills\n  * Basic knowledge of how to use an Eclipse development environment\n\n## Syllabus\n\nWeek 1: SAP HANA Native Development\n\nWeek 2: Git and HTML5 Apps - Part 1\n\nWeek 3: Git and HTML5 Apps - Part 2\n\nWeek 4: Advanced Identity Management\n\nWeek 5: Securing Web APIs\n\nWeek 6: Additional Features\n\nWeek 7: Final Exam\n\n",
        "name": "Next Steps in SAP HANA Cloud Platform",
        "provider": "openSAP",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.sap.com/course/hanacloud2-1",
        "video_url": ""
    },
    {
        "date": "2014-09-09",
        "desc": "*Note - This is an Archived course*This is a past/archived course. At this time, you can only explore this course in a self-paced fashion. Certain features of this course may not be active, but many people enjoy watching the videos and working with the materials. Make sure to check for reruns of this course.Do you want to learn how to harvest health science data from the internet? Do you want to understand the world through data analysis? Start by exploring statistics with R!Skilled persons who can process and analyze data are in great demand today. In this course you will explore concepts in statistics that help you make sense out of data. You will learn the practical skills necessary to find, import, analyze and visualize data. We will take a look under the hood of statistics and equip you with broad tools for understanding statistical inference and statistical methods. You will also get to perform some really complicated calculations and visualizations, following in the footsteps of Karolinska Institutet\u2019s researchers.You are probably reading this course description because you know that statistics and statistical programming are essential skills in our golden age of data abundance. Let\u2019s say it again: Health science has become a field of big data, just like so many other fields of study. New techniques make it possible and affordable to generate massive data sets in biology. Researchers and clinicians can measure the activity for each of 30000 genes of a patient. They can read the complete genome sequence of a patient. Thanks to another trend of the decade, open access publishing, the results of such large scale health science are very often published for you to read free of charge. You can even access the raw data from open databases such as the gene expression database of the NCBI, National Center for Biotechnology Information.In this course you will learn the basics of R, a powerful open source statistical programming language. Why has R become the tool of choice in bioinformatics, the health sciences and many other fields? One reason is surely that it\u2019s powerful and that you can download it for free right now. But more importantly, it\u2019s supported by an active user community.\u00a0In this course you will learn how to use peer reviewed packages for solving problems at the frontline of health science research. Commercial actors just can\u2019t keep up implementing the latest algorithms and methods. When algorithms are first published, they are already implemented in R. Join us in a gold digging expedition. Explore statistics with R.",
        "desc_html": "*Note - This is an Archived course*  \n  \nThis is a past/archived course. At this time, you can only explore this course\nin a self-paced fashion. Certain features of this course may not be active,\nbut many people enjoy watching the videos and working with the materials. Make\nsure to check for reruns of this course.  \n  \nDo you want to learn how to harvest health science data from the internet? Do\nyou want to understand the world through data analysis? Start by exploring\nstatistics with R!  \n  \nSkilled persons who can process and analyze data are in great demand today. In\nthis course you will explore concepts in statistics that help you make sense\nout of data. You will learn the practical skills necessary to find, import,\nanalyze and visualize data. We will take a look under the hood of statistics\nand equip you with broad tools for understanding statistical inference and\nstatistical methods. You will also get to perform some really complicated\ncalculations and visualizations, following in the footsteps of Karolinska\nInstitutet\u2019s researchers.  \n  \nYou are probably reading this course description because you know that\nstatistics and statistical programming are essential skills in our golden age\nof data abundance. Let\u2019s say it again: Health science has become a field of\nbig data, just like so many other fields of study. New techniques make it\npossible and affordable to generate massive data sets in biology. Researchers\nand clinicians can measure the activity for each of 30000 genes of a patient.\nThey can read the complete genome sequence of a patient. Thanks to another\ntrend of the decade, open access publishing, the results of such large scale\nhealth science are very often published for you to read free of charge. You\ncan even access the raw data from open databases such as the gene expression\ndatabase of the NCBI, National Center for Biotechnology Information.  \n  \nIn this course you will learn the basics of R, a powerful open source\nstatistical programming language. Why has R become the tool of choice in\nbioinformatics, the health sciences and many other fields? One reason is\nsurely that it\u2019s powerful and that you can download it for free right now. But\nmore importantly, it\u2019s supported by an active user community.\u00a0In this course\nyou will learn how to use peer reviewed packages for solving problems at the\nfrontline of health science research. Commercial actors just can\u2019t keep up\nimplementing the latest algorithms and methods. When algorithms are first\npublished, they are already implemented in R. Join us in a gold digging\nexpedition. Explore statistics with R.\n\n",
        "name": "KIExploRx: Explore Statistics with R",
        "provider": "edX",
        "rating": "5",
        "reviews": "1",
        "university": [
            "Karolinska Institutet"
        ],
        "url": "https://www.edx.org/course/explore-statistics-r-kix-kiexplorx",
        "video_url": "https://www.youtube.com/embed/Hqgk7TQKvys?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-09-09",
        "desc": "The internet is now part of our daily life and is accessible on any device. People have become used to the speed and simplicity of consumer apps, and so business users expect the same simplicity from our business software.SAP Fiori is our new user experience (UX) for SAP software. By applying modern design principles, it completely reinvents the user experience. When combined with the power of the SAP HANA platform, the SAP Fiori UX delivers unmatched responsiveness. Personalized and role-based, the new user experience enables enterprise-wide engagement across lines of business. It provides optimal usability on multiple devices for better business interactions and ease of use.This course will introduce you to the fundamentals and latest features of the SAP Fiori UX. You will learn about product installation, configuration, and best practices for extensibility.Course RequirementsBasic understanding of business processes typically addressed in solutions like SAP ERP, SAP CRM, and SAP SCMBasic programming knowledge including HTML / JavaScript / SAPUI5SyllabusCourse ContentWeek 1: SAP Fiori UX BasicsWeek 2: SAP Fiori UX DeploymentWeek 3: SAP Fiori UX ConfigurationWeek 4: Securing SAP Fiori UXWeek 5: SAP UI ToolsWeek 6: Extending SAP Fiori UXWeek 7: Final Exam",
        "desc_html": "The internet is now part of our daily life and is accessible on any device.\nPeople have become used to the speed and simplicity of consumer apps, and so\nbusiness users expect the same simplicity from our business software.\n\nSAP Fiori is our new user experience (UX) for SAP software. By applying modern\ndesign principles, it completely reinvents the user experience. When combined\nwith the power of the SAP HANA platform, the SAP Fiori UX delivers unmatched\nresponsiveness. Personalized and role-based, the new user experience enables\nenterprise-wide engagement across lines of business. It provides optimal\nusability on multiple devices for better business interactions and ease of\nuse.\n\nThis course will introduce you to the fundamentals and latest features of the\nSAP Fiori UX. You will learn about product installation, configuration, and\nbest practices for extensibility.\n\n**Course Requirements**\n\n  * Basic understanding of business processes typically addressed in solutions like SAP ERP, SAP CRM, and SAP SCM\n  * Basic programming knowledge including HTML / JavaScript / SAPUI5\n\n## Syllabus\n\n**Course Content**\n\nWeek 1: SAP Fiori UX Basics\n\nWeek 2: SAP Fiori UX Deployment\n\nWeek 3: SAP Fiori UX Configuration\n\nWeek 4: Securing SAP Fiori UX\n\nWeek 5: SAP UI Tools\n\nWeek 6: Extending SAP Fiori UX\n\nWeek 7: Final Exam\n\n",
        "name": "Introduction to SAP Fiori UX",
        "provider": "openSAP",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.sap.com/course/fiori1",
        "video_url": ""
    },
    {
        "date": "2014-09-08",
        "desc": "Calculus is one of the grandest achievements of human thought, explaining everything from planetary orbits to the optimal size of a city to the periodicity of a heartbeat. This brisk course covers the core ideas of single-variable Calculus with emphases\n    on conceptual understanding and applications. The course is ideal for students beginning in the engineering, physical, and social sciences. Distinguishing features of the course include:the introduction and use of Taylor series and approximations from the beginning;a novel synthesis of discrete and continuous forms of Calculus;an emphasis on the conceptual over the computational; anda clear, dynamic, unified approach.THE SIGNATURE TRACK OPTIONSignature Track is an optional path you may choose for this course. By signing up and paying a nominal fee (financial aid can be provided), you can add a higher level of identity verification to your Coursera coursework. If you achieve the threshold score,\n    you have the opportunity to earn a Verified Certificate issued jointly by Penn and Coursera. For each assignment, your identity is confirmed through your photo and unique typing pattern. If you earn a Verified Certificate, you will also be given a\n    personal URL through which your course records can be shared with employers and educational institutions.THE COLLEGE CREDIT RECOMMENDATION OPTIONNote: The following only applies to sessions starting on September 8th, 2014, and prior. This Calculus course has been evaluated and recommended by the American Council on Education\u2019s College Credit Recommendation Service (ACE CREDIT) for college credit so you can get a head start on your college education. More than 2,000 higher education institutions consider ACE credit recommendations for transfer to degree programs. If you add this option to sessions starting on or prior to September 8th, 2014, towards the end of the course, you will take an online proctored exam which will be combined with your coursework to determine your eligibility for college credit recommendation.SyllabusThe course is divided into five \"chapters\":CHAPTER 1: FunctionsAfter a brief review of the basics, we will dive into Taylor series as a way of working with and approximating complicated functions. The chapter will use a series-based approach to understanding limits and asymptotics.CHAPTER 2: DifferentiationThough you already know how to differentiate some functions, you may not know what differentiation means. This chapter will emphasize conceptual understanding and applications of derivatives.CHAPTER 3: IntegrationWe will use the indefinite integral (an anti-derivative) as a motivation to look at differential equations in applications ranging from population models to linguistics to coupled oscillators. Techniques of integration up to and including computer-assisted\nmethods will lead to Riemann sums and the definite integral.CHAPTER 4: ApplicationsWe will get busy in this chapter with applications of the definite integral to problems in geometry, physics, economics, biology, probability,&nbsp;and more. You will learn how to solve a wide array of problems using a consistent conceptual approach.CHAPTER 5: DiscretizationHaving covered Calculus for functions with a single real input and a single real output, we turn to functions with adiscreteinput and a real output: sequences. We will re-develop all of Calculus (limits, derivatives, integrals, differential equations)\nin this new context, and return to the beginning of the course with a deeper consideration of Taylor series.",
        "desc_html": "Calculus is one of the grandest achievements of human thought, explaining\neverything from planetary orbits to the optimal size of a city to the\nperiodicity of a heartbeat. This brisk course covers the core ideas of single-\nvariable Calculus with emphases on conceptual understanding and applications.\nThe course is ideal for students beginning in the engineering, physical, and\nsocial sciences. Distinguishing features of the course include:\n\n  * the introduction and use of Taylor series and approximations from the beginning; \n  * a novel synthesis of discrete and continuous forms of Calculus;\n  * an emphasis on the conceptual over the computational; and\n  * a clear, dynamic, unified approach.\n  \nTHE SIGNATURE TRACK OPTION\n\nSignature Track is an optional path you may choose for this course. By signing\nup and paying a nominal fee (financial aid can be provided), you can add a\nhigher level of identity verification to your Coursera coursework. If you\nachieve the threshold score, you have the opportunity to earn a Verified\nCertificate issued jointly by Penn and Coursera. For each assignment, your\nidentity is confirmed through your photo and unique typing pattern. If you\nearn a Verified Certificate, you will also be given a personal URL through\nwhich your course records can be shared with employers and educational\ninstitutions.\n\n  \nTHE COLLEGE CREDIT RECOMMENDATION OPTION\n\nNote: The following only applies to sessions starting on September 8th, 2014,\nand prior. This Calculus course has been evaluated and recommended by the\nAmerican Council on Education\u2019s College Credit Recommendation Service (ACE\nCREDIT) for college credit so you can get a head start on your college\neducation. More than 2,000 higher education institutions consider ACE credit\nrecommendations for transfer to degree programs. If you add this option to\nsessions starting on or prior to September 8th, 2014, towards the end of the\ncourse, you will take an online proctored exam which will be combined with\nyour coursework to determine your eligibility for college credit\nrecommendation.\n\n## Syllabus\n\nThe course is divided into five \"chapters\":  \n  \n**CHAPTER 1: Functions**   \nAfter a brief review of the basics, we will dive into Taylor series as a way\nof working with and approximating complicated functions. The chapter will use\na series-based approach to understanding limits and asymptotics.  \n  \n**CHAPTER 2: Differentiation**   \nThough you already know how to differentiate some functions, you may not know\nwhat differentiation means. This chapter will emphasize conceptual\nunderstanding and applications of derivatives.  \n  \n**CHAPTER 3: Integration**   \nWe will use the indefinite integral (an anti-derivative) as a motivation to\nlook at differential equations in applications ranging from population models\nto linguistics to coupled oscillators. Techniques of integration up to and\nincluding computer-assisted methods will lead to Riemann sums and the definite\nintegral.  \n  \n**CHAPTER 4: Applications**   \nWe will get busy in this chapter with applications of the definite integral to\nproblems in geometry, physics, economics, biology, probability, and more. You\nwill learn how to solve a wide array of problems using a consistent conceptual\napproach.  \n  \n**CHAPTER 5: Discretization**   \nHaving covered Calculus for functions with a single real input and a single\nreal output, we turn to functions with a _discrete_ input and a real output:\nsequences. We will re-develop all of Calculus (limits, derivatives, integrals,\ndifferential equations) in this new context, and return to the beginning of\nthe course with a deeper consideration of Taylor series.  \n\n",
        "name": "Calculus: Single Variable",
        "provider": "Coursera",
        "rating": "5",
        "reviews": "8",
        "university": [
            "University of Pennsylvania"
        ],
        "url": "https://www.coursera.org/course/calcsing",
        "video_url": ""
    },
    {
        "date": "2014-09-08",
        "desc": "A partir d&rsquo;exemples concrets et actuels touchant des secteurs vari&eacute;s tels que l&rsquo;automobile ou encore la sant&eacute; et de concepts issus de la sociologie et des sciences cognitives, ce cours propose des m&eacute;thodes pour une exploitation &ldquo;intelligente&rdquo; et efficace de ces donn&eacute;es. Quelques unes des multiples facettes du Big Data seront abord&eacute;es : les enjeux qu&rsquo;il repr&eacute;sente, la convergence entre l&rsquo;Homme et la machine, les diff&eacute;rentes technologies mobilisables et la nouvelle donne concernant la collecte, le travail et l&rsquo;exposition des donn&eacute;es notamment. Des interviews de professionnels du secteur de la gestion de donn&eacute;es illustreront les concepts de mani&egrave;re pragmatique et des questions jalonneront votre apprentissage pour vous permettre de vous auto&eacute;valuer. Et &agrave; la fin des 5 semaines de cours une certification vous sera propos&eacute;e pour attester de vos connaissances sur le Big Data.Pr&eacute;requisAucun pr&eacute;requis sp&eacute;cifique n&rsquo;est n&eacute;cessaire pour suivre ce cours.SyllabusIntroductionModule 1 - La donn&eacute;e&nbsp;: un nouveau secteur &eacute;conomique&nbsp;?Module 2 - Big Data&nbsp;: dans la continuit&eacute; ou dans la rupture&nbsp;?Module 3 - L&rsquo;Homme&nbsp;: une machine Big Data - La donn&eacute;e&nbsp;: un nouveau secteur &eacute;conomique&nbsp;?Module 4 - Le Big Data&nbsp;: avec quelle techno&nbsp;?Module 5 - La collecte de la donn&eacute;e&nbsp;: qu&rsquo;est ce qui change&nbsp;?Module 6 - Le travail sur la donn&eacute;e&nbsp;: qu&rsquo;est ce qui change&nbsp;?Module 7 - L&rsquo;exposition des donn&eacute;es&nbsp;: qu&rsquo;est ce qui change&nbsp;?Module 8 - Les donn&eacute;es crawl&eacute;es sur internet&nbsp;: quels sont les pi&egrave;ges&nbsp;?",
        "desc_html": "A partir d'exemples concrets et actuels touchant des secteurs varies tels que\nl'automobile ou encore la sante et de concepts issus de la sociologie et des\nsciences cognitives, ce cours propose des methodes pour une exploitation\n\"intelligente\" et efficace de ces donnees. Quelques unes des multiples\nfacettes du Big Data seront abordees : les enjeux qu'il represente, la\nconvergence entre l'Homme et la machine, les differentes technologies\nmobilisables et la nouvelle donne concernant la collecte, le travail et\nl'exposition des donnees notamment. Des interviews de professionnels du\nsecteur de la gestion de donnees illustreront les concepts de maniere\npragmatique et des questions jalonneront votre apprentissage pour vous\npermettre de vous autoevaluer. Et a la fin des 5 semaines de cours une\ncertification vous sera proposee pour attester de vos connaissances sur le Big\nData.\n\n**Prerequis**\n\nAucun prerequis specifique n'est necessaire pour suivre ce cours.\n\n## Syllabus\n\n  * Introduction\n  * Module 1 - La donnee : un nouveau secteur economique ?\n  * Module 2 - Big Data : dans la continuite ou dans la rupture ?\n  * Module 3 - L'Homme : une machine Big Data - La donnee : un nouveau secteur economique ?\n  * Module 4 - Le Big Data : avec quelle techno ?\n  * Module 5 - La collecte de la donnee : qu'est ce qui change ?\n  * Module 6 - Le travail sur la donnee : qu'est ce qui change ?\n  * Module 7 - L'exposition des donnees : qu'est ce qui change ?\n  * Module 8 - Les donnees crawlees sur internet : quels sont les pieges ?\n\n",
        "name": "Datascience et Analyse situationnelle : dans les coulisses du Big Data",
        "provider": "IONIS",
        "rating": "0",
        "reviews": "0",
        "university": [
            "IONIS"
        ],
        "url": "https://courses.ionisx.com/courses/IONISx/002-002-003/2014-FALL/about",
        "video_url": "https://www.youtube.com/embed/vslOxn7uHBY?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-09-08",
        "desc": "This MOOC will teach you&nbsp;how to create a mobile game using GameSalad Creator.&nbsp;In the space of just a few&nbsp;weeks we will go through the whole game creation process using GameSalad, teaching the steps and tricks on creating your very own mobile game.This course is targeted to secondary school levers however anyone can register into this&nbsp;course and participate in the activities.SyllabusFrom week-1 to week-3, we will cover topics from installation to&nbsp;game development. There will be also tips for you to develop a good mobile game. If you encounter problem at any point of the development, do feel free to raise&nbsp;your questions in the forum. In week-4, it will be an online discussion session that helps you to complete the final product for the competition.",
        "desc_html": "This MOOC will teach you **how to create a mobile game using GameSalad\nCreator**. In the space of just a few weeks we will go through the whole game\ncreation process using GameSalad, teaching the steps and tricks on creating\nyour very own mobile game.\n\nThis course is targeted to secondary school levers however anyone can register\ninto this course and participate in the activities.\n\n## Syllabus\n\nFrom week-1 to week-3, we will cover topics from installation to game\ndevelopment. There will be also tips for you to develop a good mobile game. If\nyou encounter problem at any point of the development, do feel free to raise\nyour questions in the forum. In week-4, it will be an online discussion\nsession that helps you to complete the final product for the competition.\n\n",
        "name": "Mobile Game Development with GameSalad",
        "provider": "OpenLearning",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Taylor's University"
        ],
        "url": "https://www.openlearning.com/courses/MobileGameDevelopmentWit",
        "video_url": "https://www.youtube.com/embed/fMu95XLbGxU?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-09-08",
        "desc": "Ce cours est une introduction au langage Python et &agrave; ses biblioth&egrave;ques scientifiques les plus courantes. Il vous montrera comment cr&eacute;er et partager vos feuilles d'exercices gr&acirc;ce &agrave; l'utilisation du notebook IPython. Compos&eacute; d'exercices et de cas pratiques, il est aussi une zone d'aide et de ressources.IntroductionChapitre 1 - Premiers Pas avec PythonChapitre 2 - Les Principales Biblioth&egrave;ques ScientifiquesVariables et Cas Pratiques.Pr&eacute;requisUn premi&egrave;re exp&eacute;rience avec un langage de programmation est souhait&eacute;e mais pas indispensable.",
        "desc_html": "Ce cours est une introduction au langage Python et a ses bibliotheques\nscientifiques les plus courantes. Il vous montrera comment creer et partager\nvos feuilles d'exercices grace a l'utilisation du notebook IPython. Compose\nd'exercices et de cas pratiques, il est aussi une zone d'aide et de\nressources.\n\n  * Introduction\n  * Chapitre 1 - Premiers Pas avec Python\n  * Chapitre 2 - Les Principales Bibliotheques Scientifiques\n  * Variables et Cas Pratiques.\n**Prerequis**\n\nUn premiere experience avec un langage de programmation est souhaitee mais pas\nindispensable.\n\n",
        "name": "Python pour les scientifiques",
        "provider": "IONIS",
        "rating": "0",
        "reviews": "0",
        "university": [
            "\u00c9cole Pour l'Informatique et les Techniques Avanc\u00e9es (EPITA)"
        ],
        "url": "https://courses.ionisx.com/courses/EPITA/002-001-002/2014-FALL/about",
        "video_url": "https://www.youtube.com/embed/rh9COpswpKc?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-09-05",
        "desc": "Ce cours pr\u00e9sente des concepts de base de la programmation tels que&nbsp;&nbsp; : variables, expressions, structures de contr\u00f4le, fonctions/m\u00e9thodes, ...en les illustrant dans la syntaxe du langage Java.Ces notions simples seront pratiqu\u00e9es de fa\u00e7on intensive pour vous faire r\u00e9aliser de fa\u00e7on de plus en plus autonome&nbsp; les \u00e9tapes allant de la conception d'un programme (algorithme) \u00e0 sa mise en oeuvre concr\u00e8te.Ce cours de base&nbsp; est con\u00e7u pour \u00eatre prolong\u00e9 par les aspects orient\u00e9-objet, pr\u00e9sent\u00e9s dans le cours&nbsp;&nbsp;\u00abIntroduction \u00e0 la programmation orient\u00e9e objet (en Java)\u00bb.&nbsp;SyllabusIntroduction \u00e0 JavaVariablesExpressionsStructures de contr\u00f4le en JavaTableauxCha\u00eenes de caract\u00e8resFonctions/M\u00e9thodes et r\u00e9utilisabilit\u00e9E/S de base",
        "desc_html": "Ce cours pr\u00e9sente des concepts de base de la programmation tels que   :\nvariables, expressions, structures de contr\u00f4le, fonctions/m\u00e9thodes, ...  \nen les illustrant dans la syntaxe du langage Java.  \n  \nCes notions simples seront pratiqu\u00e9es de fa\u00e7on intensive pour vous faire\nr\u00e9aliser de fa\u00e7on de plus en plus autonome  les \u00e9tapes allant de la conception\nd'un programme (algorithme) \u00e0 sa mise en oeuvre concr\u00e8te.  \n  \nCe cours de base  est con\u00e7u pour \u00eatre prolong\u00e9 par les aspects orient\u00e9-objet,\npr\u00e9sent\u00e9s dans le cours  [\u00abIntroduction \u00e0 la programmation orient\u00e9e objet (en\nJava)\u00bb](https://www.coursera.org/course/intropoojava).  \n\n## Syllabus\n\n* Introduction \u00e0 Java\n* Variables\n* Expressions  \n\n* Structures de contr\u00f4le en Java\n* Tableaux\n* Cha\u00eenes de caract\u00e8res  \n\n* Fonctions/M\u00e9thodes et r\u00e9utilisabilit\u00e9\n* E/S de base\n\n",
        "name": "Initiation \u00e0 la programmation (en Java)",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne"
        ],
        "url": "https://www.coursera.org/course/initprogjava",
        "video_url": ""
    },
    {
        "date": "2014-09-03",
        "desc": "\u5728\u73b0\u4eca\u7684\u5546\u52a1\u4e16\u754c\u4e2d\uff0c\u4e3a\u4fdd\u6301\u5f3a\u52b2\u7684\u7ade\u4e89\u529b\u548c\u76f8\u5173\u6027\uff0c\u4e00\u4e2a\u597d\u7684IT\u89e3\u51b3\u65b9\u6848\u5fc5\u987b\u505a\u5230\uff1a\u5728\u4efb\u4f55\u5730\u70b9\uff0c\u4efb\u4f55\u65f6\u95f4\uff0c\u4efb\u4f55\u8bbe\u5907\u4e0a\u652f\u6301\u4e1a\u52a1\u6d41\u7a0b\u5feb\u901f\u7b80\u5355\u7684\u5927\u6570\u636e\u5904\u7406\u4e3a\u5ba2\u6237\u7684\u7279\u6b8a\u9700\u6c42\u91cf\u8eab\u5b9a\u505a&nbsp;\u8ba9\u6211\u4eec\u53c2\u52a0\u8fd9\u4e9b\u8be5\u95e8\u8bfe\u7a0b\uff0c\u5b66\u4e60SAP\u5982\u4f55\u5e94\u5bf9\u8fd9\u4e9b\u6311\u6218\u3002\u901a\u8fc7\u63a5\u4e0b\u6765\u7684\u516d\u5468\u65f6\u95f4\u7684\u8bfe\u7a0b\uff0c\u60a8\u53ef\u4ee5\u6709\u673a\u4f1a\u5bf9SAP\u7684\u6700\u65b0\u6280\u672f\u505a\u4e00\u4e2a\u5168\u9762\u7684\u6d4f\u89c8\uff0c\u6db5\u76d6\u4e86\u5f88\u591a\u76f8\u5173\u7684\u8bdd\u9898\uff0c\u6bd4\u5982SAP HANA\u548cSAP Cloud\u3002 \u60a8\u8fd8\u53ef\u4ee5\u5b66\u4e60SAP\u5982\u4f55\u4e3a\u5ba2\u6237\u7684\u4e1a\u52a1\u9700\u6c42\u91cf\u8eab\u5b9a\u505a\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u6bd4\u5982SAP\u5546\u52a1\u5957\u4ef6\u548c\u7b80\u5316\u7684\u65b9\u6848\u90e8\u7f72\u7b49\u3002\u672c\u8bfe\u7a0b\u662f\u4e13\u95e8\u4e3a\u4e2d\u56fd\u7684\u7528\u6237\u91cf\u8eab\u8bbe\u8ba1\u7684\u3002\u672c\u8bfe\u7a0b\u662f\u4e3a\u4e2d\u56fd\u7528\u6237\u91cf\u8eab\u8bbe\u8ba1\u7684\u3002\u6240\u6709\u7684\u5b8c\u5168\u4e2d\u6587\u5316\u7684\u8bfe\u7a0b\u6750\u6599\uff0c\u81ea\u6211\u6d4b\u8bd5\uff0c\u8ba8\u8bba\u8bba\u575b\uff0c\u6bcf\u5468\u7ec3\u4e60\uff0c\u89c6\u9891\u5185\u5bb9\u4ee5\u53ca\u6700\u7ec8\u6d4b\u8bd5\u3002Syllabus\u8bfe\u7a0b\u5185\u5bb9\u7b2c\u4e00\u5468\uff1aSAP\u5386\u53f2\u53ca\u5e94\u7528\u7b2c\u4e8c\u5468\uff1aSAP\u5206\u6790\u7b2c\u4e09\u5468\uff1a\u79fb\u52a8\u5e94\u7528\u548c\u7528\u6237\u754c\u9762\u7b2c\u56db\u5468\uff1aSAP HANA\u7b2c\u4e94\u5468\uff1aSAP Cloud\u7b2c\u516d\u5468\uff1a\u7b80\u5316\u7684\u89e3\u51b3\u65b9\u6848\u90e8\u7f72\u7b2c\u4e03\u5468\uff1a\u6700\u7ec8\u6d4b\u8bd5",
        "desc_html": "\u5728\u73b0\u4eca\u7684\u5546\u52a1\u4e16\u754c\u4e2d\uff0c\u4e3a\u4fdd\u6301\u5f3a\u52b2\u7684\u7ade\u4e89\u529b\u548c\u76f8\u5173\u6027\uff0c\u4e00\u4e2a\u597d\u7684IT\u89e3\u51b3\u65b9\u6848\u5fc5\u987b\u505a\u5230\uff1a\n\n  * \u5728\u4efb\u4f55\u5730\u70b9\uff0c\u4efb\u4f55\u65f6\u95f4\uff0c\u4efb\u4f55\u8bbe\u5907\u4e0a\u652f\u6301\u4e1a\u52a1\u6d41\u7a0b\n  * \u5feb\u901f\u7b80\u5355\u7684\u5927\u6570\u636e\u5904\u7406\n  * \u4e3a\u5ba2\u6237\u7684\u7279\u6b8a\u9700\u6c42\u91cf\u8eab\u5b9a\u505a\n\n\n\n\u8ba9\u6211\u4eec\u53c2\u52a0\u8fd9\u4e9b\u8be5\u95e8\u8bfe\u7a0b\uff0c\u5b66\u4e60SAP\u5982\u4f55\u5e94\u5bf9\u8fd9\u4e9b\u6311\u6218\u3002\n\n\u901a\u8fc7\u63a5\u4e0b\u6765\u7684\u516d\u5468\u65f6\u95f4\u7684\u8bfe\u7a0b\uff0c\u60a8\u53ef\u4ee5\u6709\u673a\u4f1a\u5bf9SAP\u7684\u6700\u65b0\u6280\u672f\u505a\u4e00\u4e2a\u5168\u9762\u7684\u6d4f\u89c8\uff0c\u6db5\u76d6\u4e86\u5f88\u591a\u76f8\u5173\u7684\u8bdd\u9898\uff0c\u6bd4\u5982SAP HANA\u548cSAP Cloud\u3002\n\u60a8\u8fd8\u53ef\u4ee5\u5b66\u4e60SAP\u5982\u4f55\u4e3a\u5ba2\u6237\u7684\u4e1a\u52a1\u9700\u6c42\u91cf\u8eab\u5b9a\u505a\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u6bd4\u5982SAP\u5546\u52a1\u5957\u4ef6\u548c\u7b80\u5316\u7684\u65b9\u6848\u90e8\u7f72\u7b49\u3002\n\n\u672c\u8bfe\u7a0b\u662f\u4e13\u95e8\u4e3a\u4e2d\u56fd\u7684\u7528\u6237\u91cf\u8eab\u8bbe\u8ba1\u7684\u3002\n\n\u672c\u8bfe\u7a0b\u662f\u4e3a\u4e2d\u56fd\u7528\u6237\u91cf\u8eab\u8bbe\u8ba1\u7684\u3002\u6240\u6709\u7684\u5b8c\u5168\u4e2d\u6587\u5316\u7684\u8bfe\u7a0b\u6750\u6599\uff0c\u81ea\u6211\u6d4b\u8bd5\uff0c\u8ba8\u8bba\u8bba\u575b\uff0c\u6bcf\u5468\u7ec3\u4e60\uff0c\u89c6\u9891\u5185\u5bb9\u4ee5\u53ca\u6700\u7ec8\u6d4b\u8bd5\u3002\n\n## Syllabus\n\n**\u8bfe\u7a0b\u5185\u5bb9**\n\n  * \u7b2c\u4e00\u5468\uff1aSAP\u5386\u53f2\u53ca\u5e94\u7528\n  * \u7b2c\u4e8c\u5468\uff1aSAP\u5206\u6790\n  * \u7b2c\u4e09\u5468\uff1a\u79fb\u52a8\u5e94\u7528\u548c\u7528\u6237\u754c\u9762\n  * \u7b2c\u56db\u5468\uff1aSAP HANA\n  * \u7b2c\u4e94\u5468\uff1aSAP Cloud\n  * \u7b2c\u516d\u5468\uff1a\u7b80\u5316\u7684\u89e3\u51b3\u65b9\u6848\u90e8\u7f72\n  * \u7b2c\u4e03\u5468\uff1a\u6700\u7ec8\u6d4b\u8bd5\n\n",
        "name": "\u8ba9\u6211\u4eec\u5f00\u59cb\u4e86\u89e3SAP\u7684\u521b\u65b0\u4f01\u4e1a\u89e3\u51b3\u65b9\u6848 (Get to know SAP\u2019s Innovative Enterprise Solutions)",
        "provider": "openSAP",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.sap.com/course/sapintro1",
        "video_url": ""
    },
    {
        "date": "2014-09-03",
        "desc": "To be competitive and remain relevant in today&rsquo;s business world, a good IT solution has to:Enable business anywhere at any time, on any deviceCrunch big data easily and quicklyBe tailored to the specific needs of the customerJoin our lectures and learn how SAP responds to these challenges.This six week course provides you with a broad overview of SAP&rsquo;s latest technologies, covering many engaging topics like SAP HANA, SAP Mobile Platform, and SAP Cloud. It begins with an overview of SAP enterprise solutions and an introduction to SAP Business Suite powered by SAP HANA. You will then learn about SAP solutions in key areas such as analytics and mobile security; you will be introduced to SAP&rsquo;s cloud-based solutions like SuccessFactors and Ariba, and you will also have the chance to discover the new SAP Fiori user experience. In addition to this, you will see how SAP offers tailored solutions to meet customers&rsquo; business needs, for example with best practices provided through simplified solution deployment.SyllabusWeek 1: SAP History and ApplicationsWeek 2: SAP AnalyticsWeek 3: Mobility and User InterfacesWeek 4: SAP HANAWeek 5: SAP CloudWeek 6: Simplified Solution DeploymentWeek 7: Final Exam",
        "desc_html": "To be competitive and remain relevant in today's business world, a good IT\nsolution has to:\n\n  * Enable business anywhere at any time, on any device\n  * Crunch big data easily and quickly\n  * Be tailored to the specific needs of the customer\n\nJoin our lectures and learn how SAP responds to these challenges.\n\nThis six week course provides you with a broad overview of SAP's latest\ntechnologies, covering many engaging topics like SAP HANA, SAP Mobile\nPlatform, and SAP Cloud. It begins with an overview of SAP enterprise\nsolutions and an introduction to SAP Business Suite powered by SAP HANA. You\nwill then learn about SAP solutions in key areas such as analytics and mobile\nsecurity; you will be introduced to SAP's cloud-based solutions like\nSuccessFactors and Ariba, and you will also have the chance to discover the\nnew SAP Fiori user experience. In addition to this, you will see how SAP\noffers tailored solutions to meet customers' business needs, for example with\nbest practices provided through simplified solution deployment.\n\n## Syllabus\n\n  * Week 1: SAP History and Applications\n  * Week 2: SAP Analytics\n  * Week 3: Mobility and User Interfaces\n  * Week 4: SAP HANA\n  * Week 5: SAP Cloud\n  * Week 6: Simplified Solution Deployment\n  * Week 7: Final Exam\n\n",
        "name": "Get to Know SAP\u2019s Innovative Enterprise Solutions",
        "provider": "openSAP",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.sap.com/courses/introsap1",
        "video_url": ""
    },
    {
        "date": "2014-09-02",
        "desc": "Instalaci&oacute;n del programa y manejo de sus herramientas (de dibujo, selcci&oacute;n y tranformaci&oacute;nAclaraci&oacute;n de procedimientos como descarga de im&aacute;genes, su creaci&oacute;n, adquisici&oacute;n desde diversos dispositivos, impresi&oacute;n, etc&hellip;Uso de las capas y los textosManejo del colorUso y aplicaci&oacute;n de filtros&nbsp;Conocimientos necesarios:&nbsp;Ninguno obligatorioSyllabusM&oacute;dulo 0. Presentaci&oacute;nModulo 1. Instalaci&oacute;n y arranqueM&oacute;dulo 2. Nueva imagen y herramientasM&oacute;dulo 3. Otras operaciones comunesM&oacute;dulo 4. Los textos y las capasM&oacute;dulo 5. M&aacute;scaras y seleccionesM&oacute;dulo 6. Los coloresM&oacute;dulo 7. Los filtros IM&oacute;dulo 8. Los filtros IIM&oacute;dulo 9. Otros filtros y Script-Fu",
        "desc_html": "Instalacion del programa y manejo de sus herramientas (de dibujo, selccion y\ntranformacion\n\nAclaracion de procedimientos como descarga de imagenes, su creacion,\nadquisicion desde diversos dispositivos, impresion, etc\u2026\n\nUso de las capas y los textos\n\nManejo del color\n\nUso y aplicacion de filtros\n\n\n\n**Conocimientos necesarios:**\n\n\n\nNinguno obligatorio\n\n## Syllabus\n\nModulo 0. Presentacion\n\nModulo 1. Instalacion y arranque\n\nModulo 2. Nueva imagen y herramientas\n\nModulo 3. Otras operaciones comunes\n\nModulo 4. Los textos y las capas\n\nModulo 5. Mascaras y selecciones\n\nModulo 6. Los colores\n\nModulo 7. Los filtros I\n\nModulo 8. Los filtros II\n\nModulo 9. Otros filtros y Script-Fu\n\n",
        "name": "Creaci\u00f3n y retoque de im\u00e1genes con software libre",
        "provider": "Mir\u00edada X",
        "rating": "3",
        "reviews": "1",
        "university": [
            "Universidad de Malaga"
        ],
        "url": "https://www.miriadax.net/web/creacion-y-retoque-de-imagenesn-con-software-libre",
        "video_url": "https://www.youtube.com/embed/3TiN0WMQZdg?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-09-02",
        "desc": "The ability to reason is fundamental to human beings. Whatever the discipline or discourse it is important to be able to distinguish correct reasoning from incorrect reasoning. The consequences of incorrect reasoning can be minor, like getting lost on the way to a birthday party, or more significant, for example launching nuclear missiles at a flock of ducks, or permanently losing contact with a space craft.The fundamental question that we will address in this course is \"when does one statement necessarily follow from another\" --- or in the terminology of the course, \"when is one statement a&nbsp;logical consequence&nbsp;of another\". This is an issue of some importance, since an answer to the question would allow us to examine an argument presented in a blog, for example, and to decide whether it really demonstrates the truth of the conclusion of the argument. Our own reasoning might also improve, since we would also be able to analyze our own arguments to see whether they really do demonstrate their conclusions.In this course you will be introduced to the concepts and techniques used in logic. We will start right from the beginning, assuming no prior exposure to this or similar material, and progress through discussions of the proof and model theories of propositional and first-order logic.We will proceed by giving a theory of truth, and of logical consequence, based on a formal language called FOL (the language of First-Order Logic). We adopt a formal language for making statements, since natural languages (like English, for example) are far too vague and ambiguous for us to analyze sufficiently. Armed with the formal language, we will be able to model the notions of truth, proof and consequence, among others.While logic is technical in nature, the key concepts in the course will be developed by considering natural English statements, and we will focus the relationships between such statements and their FOL counterparts. The goal of the course is to show how natural English statements and arguments can be formalized and analyzed.PREREQUISITESThis course has no prerequisites except an interest in the way in which we use language to construct arguments and justify conclusions. If that interests you, then you're all set! Go sign up.",
        "desc_html": "The ability to reason is fundamental to human beings. Whatever the discipline\nor discourse it is important to be able to distinguish correct reasoning from\nincorrect reasoning. The consequences of incorrect reasoning can be minor,\nlike getting lost on the way to a birthday party, or more significant, for\nexample launching nuclear missiles at a flock of ducks, or permanently losing\ncontact with a space craft.\n\nThe fundamental question that we will address in this course is \"when does one\nstatement necessarily follow from another\" --- or in the terminology of the\ncourse, \"when is one statement a _logical consequence_ of another\". This is an\nissue of some importance, since an answer to the question would allow us to\nexamine an argument presented in a blog, for example, and to decide whether it\nreally demonstrates the truth of the conclusion of the argument. Our own\nreasoning might also improve, since we would also be able to analyze our own\narguments to see whether they really do demonstrate their conclusions.\n\nIn this course you will be introduced to the concepts and techniques used in\nlogic. We will start right from the beginning, assuming no prior exposure to\nthis or similar material, and progress through discussions of the proof and\nmodel theories of propositional and first-order logic.\n\nWe will proceed by giving a theory of truth, and of logical consequence, based\non a formal language called FOL (the language of First-Order Logic). We adopt\na formal language for making statements, since natural languages (like\nEnglish, for example) are far too vague and ambiguous for us to analyze\nsufficiently. Armed with the formal language, we will be able to model the\nnotions of truth, proof and consequence, among others.\n\nWhile logic is technical in nature, the key concepts in the course will be\ndeveloped by considering natural English statements, and we will focus the\nrelationships between such statements and their FOL counterparts. The goal of\nthe course is to show how natural English statements and arguments can be\nformalized and analyzed.\n\n**PREREQUISITES**\n\nThis course has no prerequisites except an interest in the way in which we use\nlanguage to construct arguments and justify conclusions. If that interests\nyou, then you're all set! Go sign up.\n\n",
        "name": "LPL: Language, Proof and Logic",
        "provider": "Stanford OpenEdx",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Stanford University"
        ],
        "url": "https://class.stanford.edu/courses/Philosophy/LPL/2014/about",
        "video_url": "https://www.youtube.com/embed/aLHioqq9_M8?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-09-02",
        "desc": "This is not a class as it is commonly understood; it is the set of materials from a summer school offered by Caltech and JPL, in the sense used by most scientists: an intensive period of learning of some advanced topics, not on an introductory level.&nbsp;The school will cover a variety of topics, with a focus on practical \ncomputing applications in research: the skills needed for a \ncomputational (\"big data\") science, not computer science. &nbsp;The specific \nfocus will be on applications in astrophysics, earth science (e.g., \nclimate science) and other areas of space science, but with an emphasis \non the general tools, methods, and skills that would apply across other \ndomains as well.&nbsp; It is aimed at an audience of practicing researchers who already have a strong background in computation and data analysis.&nbsp; The lecturers include computational science and \ntechnology experts from Caltech and JPL.Students can evaluate their own progress, but there will be no tests, exams, and no formal credit or certificates will be offered.SyllabusThe anticipated schedule of lectures (subject to changes):Each bullet bellow corresponds to a set of materials that includes approximately 2 hours of video lectures, various links and supplementary materials, plus some on-line, hands-on exercises.1. Introduction to the school.&nbsp; Software architectures.&nbsp; Introduction to Machine Learning.2. Best programming practices.&nbsp; Information retrieval.3. Introduction to R.&nbsp; Markov Chain Monte Carlo.4. Statistical resampling and inference.5. Databases.6. Data visualization.7. Clustering and classification.8. Decision trees and random forests.9. Dimensionality reduction.&nbsp; Closing remarks.",
        "desc_html": "This is not a class as it is commonly understood; it is the set of materials\nfrom a summer school offered by Caltech and JPL, in the sense used by most\nscientists: an intensive period of learning of some advanced topics, not on an\nintroductory level.  \n  \nThe school will cover a variety of topics, with a focus on practical computing\napplications in research: the skills needed for a computational (\"big data\")\nscience, not computer science.  The specific focus will be on applications in\nastrophysics, earth science (e.g., climate science) and other areas of space\nscience, but with an emphasis on the general tools, methods, and skills that\nwould apply across other domains as well.  It is aimed at an audience of\npracticing researchers who already have a strong background in computation and\ndata analysis.  The lecturers include computational science and technology\nexperts from Caltech and JPL.  \n  \nStudents can evaluate their own progress, but there will be no tests, exams,\nand no formal credit or certificates will be offered.  \n\n## Syllabus\n\nThe anticipated schedule of lectures (subject to changes):  \n\nEach bullet bellow corresponds to a set of materials that includes\napproximately 2 hours of video lectures, various links and supplementary\nmaterials, plus some on-line, hands-on exercises.  \n\n1\\. Introduction to the school.  Software architectures.  Introduction to\nMachine Learning.  \n  \n\n2\\. Best programming practices.  Information retrieval.  \n  \n3\\. Introduction to R.  Markov Chain Monte Carlo.  \n  \n4\\. Statistical resampling and inference.  \n  \n5\\. Databases.  \n  \n6\\. Data visualization.  \n  \n7\\. Clustering and classification.  \n  \n8\\. Decision trees and random forests.  \n  \n9\\. Dimensionality reduction.  Closing remarks.  \n\n",
        "name": "The Caltech-JPL Summer School on Big Data Analytics",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "California Institute of Technology"
        ],
        "url": "https://www.coursera.org/course/bigdataschool",
        "video_url": ""
    },
    {
        "date": "2014-09-01",
        "desc": "This MOOC (Massive Open Online Course) has been created by the Cambridge-based partnership of exam board OCR, Cambridge University Press (CUP) and the Raspberry Pi Foundation.&nbsp;The course is based on OCR&rsquo;s GCSE Computing curriculum and gives participants an excellent opportunity to investigate how computers work, how they are used, and to develop computer programming and problem-solving skills.&nbsp;The course has been designed for 14-16 year olds; but is free and open to all, and can be used either as a course or a resource to support teachers.",
        "desc_html": "This MOOC (Massive Open Online Course) has been created by the Cambridge-based\npartnership of exam board OCR, Cambridge University Press (CUP) and the\nRaspberry Pi Foundation. The course is based on OCR's GCSE Computing\ncurriculum and gives participants an excellent opportunity to investigate how\ncomputers work, how they are used, and to develop computer programming and\nproblem-solving skills. The course has been designed for 14-16 year olds; but\nis free and open to all, and can be used either as a course or a resource to\nsupport teachers.\n\n",
        "name": "Cambridge GSCE Computing Online",
        "provider": "Cambridge University Press",
        "rating": "5",
        "reviews": "1",
        "university": [],
        "url": "http://www.cambridgegcsecomputing.org/",
        "video_url": "https://www.youtube.com/embed/0ygBWsa3njg?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-09-01",
        "desc": "Enterprise computing is a computer hardware/software environment that is typically used to anchor corporate and government Information Technology data center infrastructures. Enterprise computers are generally used to solve very large complex problems where high availability, high performance, high reliability and ultra-high security are required for addressing high volatility transaction volumes and where these key performance criteria are needed for delivering mission critical solutions.The iSchool\u2019s Enterprise Computing Strategies (ECS) MOOC is a free, self-guided, self-paced open online course. The course content will help participants develop a new appreciation for the issues and challenges faced by the modern technology manager. Upon successful completion of this course, participants will develop the tools necessary for making more informed computing infrastructure decisions. Participants will learn strategies in computing resource provisioning, since not all computing resources are created equal and since solving enterprise problems is not as easy as just adding more hardware. After this course participants will have an appreciation for developing a computing strategy that can help their organizations save money on equipment acquisition and labor, reduce energy consumption, and simplify and secure their IT infrastructure. Successfully completed coursework will result in a certificate of completion from Syracuse University\u2019s School of Information Studies (iSchool) and IBM.Instructors for the course are Susan Dischiave - associate professor and director of the Bachelor of Science in Information Management & Technology program for the iSchool at Syracuse - and Dave Dischiave - associate professor and director of the Global Enterprise Technology Programs and the Systems & Information Science Program for the iSchool at Syracuse.",
        "desc_html": "Enterprise computing is a computer hardware/software environment that is\ntypically used to anchor corporate and government Information Technology data\ncenter infrastructures. Enterprise computers are generally used to solve very\nlarge complex problems where high availability, high performance, high\nreliability and ultra-high security are required for addressing high\nvolatility transaction volumes and where these key performance criteria are\nneeded for delivering mission critical solutions.  \n  \nThe iSchool\u2019s Enterprise Computing Strategies (ECS) MOOC is a free, self-\nguided, self-paced open online course. The course content will help\nparticipants develop a new appreciation for the issues and challenges faced by\nthe modern technology manager. Upon successful completion of this course,\nparticipants will develop the tools necessary for making more informed\ncomputing infrastructure decisions. Participants will learn strategies in\ncomputing resource provisioning, since not all computing resources are created\nequal and since solving enterprise problems is not as easy as just adding more\nhardware. After this course participants will have an appreciation for\ndeveloping a computing strategy that can help their organizations save money\non equipment acquisition and labor, reduce energy consumption, and simplify\nand secure their IT infrastructure. Successfully completed coursework will\nresult in a certificate of completion from Syracuse University\u2019s School of\nInformation Studies (iSchool) and IBM.  \n  \nInstructors for the course are Susan Dischiave - associate professor and\ndirector of the Bachelor of Science in Information Management & Technology\nprogram for the iSchool at Syracuse - and Dave Dischiave - associate professor\nand director of the Global Enterprise Technology Programs and the Systems &\nInformation Science Program for the iSchool at Syracuse.\n\n",
        "name": "Enterprise Computing Strategies",
        "provider": "CourseSites",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Marist College",
            "Syracuse University"
        ],
        "url": "http://ischool.syr.edu/contact/forms/ecsmooc.aspx",
        "video_url": ""
    },
    {
        "date": "2014-09-01",
        "desc": "I am pleased to be able to offer free over the Internet a course on Automata Theory, based on the material I have taught periodically at Stanford in the course CS154. Participants have access to screencast lecture videos, are given quiz questions, assignments and exams, receive regular feedback on progress, and can participate in a discussion forum. Those who successfully complete the course will receive a statement of accomplishment. You will need a decent Internet connection for accessing course materials, but should be able to watch the videos on your smartphone.The course covers four broad areas: (1) Finite automata and regular expressions, (2) Context-free grammars, (3) Turing machines and decidability, and (4) the theory of intractability, or NP-complete problems.Why Study Automata Theory?This subject is not just for those planning to enter the field of complexity theory, although it is a good place to start if that is your goal. Rather, the course will emphasize those aspects of the theory that people really use in practice. Finite automata, regular expressions, and context-free grammars are ideas that have stood the test of time. They are essential tools for compilers. But more importantly, they are used in many systems that require input that is less general than a full programming language yet more complex than \"push this button.\"The concepts of undecidable problems and intractable problems serve a different purpose. Undecidable problems are those for which no computer solution can ever exist, while intractable problems are those for which there is strong evidence that, although they can be solved by a computer, they cannot be solved sufficiently fast that the solution is truly useful in practice. Understanding this theory, and in particular being able to prove that a problem you are facing belongs to one of these classes, allows you to justify taking another approach \u2014 simplifying the problem or writing code to approximate the solution, for example.During the course, I'm going to prove a number of things. The purpose of these proofs is not to torture you or confuse you. Neither are the proofs there because I doubt you would believe me were I merely to state some well-known fact. Rather, understanding how these proofs, especially inductive proofs, work, lets you think more clearly about your own work. I do not advocate proofs that programs are correct, but whenever you attempt something a bit complex, it is good to have in mind the inductive proofs that would be needed to guarantee that what you are doing really works in all cases.SyllabusWeek 1: Finite AutomataWeek 2: Regular Expressions and Properties of Regular LanguagesWeek 3: Context-Free Grammars and LanguagesWeek 4: Properties of Context-Free Languages, plus introduction to Turing MachinesWeek 5: Turing Machines and UndecidabilityWeek 6: Intractable Problems (NP-Completeness)",
        "desc_html": "I am pleased to be able to offer free over the Internet a course on Automata\nTheory, based on the material I have taught periodically at Stanford in the\ncourse CS154. Participants have access to screencast lecture videos, are given\nquiz questions, assignments and exams, receive regular feedback on progress,\nand can participate in a discussion forum. Those who successfully complete the\ncourse will receive a statement of accomplishment. You will need a decent\nInternet connection for accessing course materials, but should be able to\nwatch the videos on your smartphone.\n\nThe course covers four broad areas: (1) Finite automata and regular\nexpressions, (2) Context-free grammars, (3) Turing machines and decidability,\nand (4) the theory of intractability, or NP-complete problems.  \n**  \nWhy Study Automata Theory?**  \n  \nThis subject is not just for those planning to enter the field of complexity\ntheory, although it is a good place to start if that is your goal. Rather, the\ncourse will emphasize those aspects of the theory that people really use in\npractice. Finite automata, regular expressions, and context-free grammars are\nideas that have stood the test of time. They are essential tools for\ncompilers. But more importantly, they are used in many systems that require\ninput that is less general than a full programming language yet more complex\nthan \"push this button.\"  \n  \nThe concepts of undecidable problems and intractable problems serve a\ndifferent purpose. Undecidable problems are those for which no computer\nsolution can ever exist, while intractable problems are those for which there\nis strong evidence that, although they can be solved by a computer, they\ncannot be solved sufficiently fast that the solution is truly useful in\npractice. Understanding this theory, and in particular being able to prove\nthat a problem you are facing belongs to one of these classes, allows you to\njustify taking another approach \u2014 simplifying the problem or writing code to\napproximate the solution, for example.  \n  \nDuring the course, I'm going to prove a number of things. The purpose of these\nproofs is not to torture you or confuse you. Neither are the proofs there\nbecause I doubt you would believe me were I merely to state some well-known\nfact. Rather, understanding how these proofs, especially inductive proofs,\nwork, lets you think more clearly about your own work. I do not advocate\nproofs that programs are correct, but whenever you attempt something a bit\ncomplex, it is good to have in mind the inductive proofs that would be needed\nto guarantee that what you are doing really works in all cases.\n\n## Syllabus\n\nWeek 1: Finite Automata  \nWeek 2: Regular Expressions and Properties of Regular Languages  \nWeek 3: Context-Free Grammars and Languages  \nWeek 4: Properties of Context-Free Languages, plus introduction to Turing\nMachines  \nWeek 5: Turing Machines and Undecidability  \nWeek 6: Intractable Problems (NP-Completeness)\n\n",
        "name": "Automata",
        "provider": "Coursera",
        "rating": "4",
        "reviews": "3",
        "university": [
            "Stanford University"
        ],
        "url": "https://www.coursera.org/course/automata",
        "video_url": ""
    },
    {
        "date": "2014-08-27",
        "desc": "The SAP User Experience (UX) strategy is aimed at bringing great products to our customers. Using the principles of design thinking, we maintain our core value of listening to our customers&rsquo; needs and quickly incorporating their feedback into SAP products. With the influence of consumer software making its way into the enterprise, SAP&rsquo;s UX strategy aims to meet users&rsquo; expectations of easy-to-use software in the workplace. Join Sam Yen, SAP&rsquo;s Chief Design Officer as he explains SAP&rsquo;s UX strategy. He reviews the history of design thinking at SAP, the core elements and products we provide to meet the strategy, and the real business value it brings to our customers.This course is aimed at anyone interested in learning about SAP&rsquo;s UX strategy. You don&rsquo;t need to have any technical knowledge to understand the concept of this strategy, which is explained easily and informally by Sam Yen.After completing the course, you will have an understanding of the core elements of SAP&rsquo;s UX strategy. You will understand how products like SAP Fiori UX and SAP Screen Personas are helping to renew traditional SAP software to meet customers&rsquo; expectations of great software in the workplace, and enabling customers to make solutions that meet their specific needs.This is a special edition openSAP course; your total learning time will be just two to three hours and all the content is already available. The course is broken down into six units consisting of one video per unit, with self-tests for you to complete after each section. Your results will not be saved; they are just for your personal use. At the end of the course, there is a course assignment. You can complete the assignment at any time. If you complete the course assignment successfully, you will receive a Record of Achievement.The online discussion forum will be available for you to collaborate with other learners and SAP UX strategy experts. The forum will be monitored from August 27 to October 22. After this time, you can still access the course content, but you will not be able to reply to or create new discussions within the forum.You don&rsquo;t need to complete the course in one sitting. Feel free to dip in whenever you have a few minutes spare to complete the next unit and learn about how the SAP UX strategy is transforming business software into an easy-to-use experience that provides real value for our customers&rsquo; business.SyllabusUnit 1: Introduction of Design Thinking at SAPUnit 2: Consumer Experience for Enterprise ApplicationsUnit 3: SAP Fiori UXUnit 4: SAP Screen PersonasUnit 5: Business Case for User ExperienceUnit 6: Wrap-Up",
        "desc_html": "The SAP User Experience (UX) strategy is aimed at bringing great products to\nour customers. Using the principles of design thinking, we maintain our core\nvalue of listening to our customers' needs and quickly incorporating their\nfeedback into SAP products. With the influence of consumer software making its\nway into the enterprise, SAP's UX strategy aims to meet users' expectations of\neasy-to-use software in the workplace. Join Sam Yen, SAP's Chief Design\nOfficer as he explains SAP's UX strategy. He reviews the history of design\nthinking at SAP, the core elements and products we provide to meet the\nstrategy, and the real business value it brings to our customers.\n\nThis course is aimed at anyone interested in learning about SAP's UX strategy.\nYou don't need to have any technical knowledge to understand the concept of\nthis strategy, which is explained easily and informally by Sam Yen.\n\nAfter completing the course, you will have an understanding of the core\nelements of SAP's UX strategy. You will understand how products like SAP Fiori\nUX and SAP Screen Personas are helping to renew traditional SAP software to\nmeet customers' expectations of great software in the workplace, and enabling\ncustomers to make solutions that meet their specific needs.\n\nThis is a special edition openSAP course; your total learning time will be\njust two to three hours and all the content is already available. The course\nis broken down into six units consisting of one video per unit, with self-\ntests for you to complete after each section. Your results will not be saved;\nthey are just for your personal use. At the end of the course, there is a\ncourse assignment. You can complete the assignment at any time. If you\ncomplete the course assignment successfully, you will receive a Record of\nAchievement.\n\nThe online discussion forum will be available for you to collaborate with\nother learners and SAP UX strategy experts. The forum will be monitored from\nAugust 27 to October 22. After this time, you can still access the course\ncontent, but you will not be able to reply to or create new discussions within\nthe forum.\n\nYou don't need to complete the course in one sitting. Feel free to dip in\nwhenever you have a few minutes spare to complete the next unit and learn\nabout how the SAP UX strategy is transforming business software into an easy-\nto-use experience that provides real value for our customers' business.\n\n## Syllabus\n\nUnit 1: Introduction of Design Thinking at SAP\n\nUnit 2: Consumer Experience for Enterprise Applications\n\nUnit 3: SAP Fiori UX\n\nUnit 4: SAP Screen Personas\n\nUnit 5: Business Case for User Experience\n\nUnit 6: Wrap-Up\n\n",
        "name": "SAP's UX Strategy in a Nutshell by Sam Yen",
        "provider": "openSAP",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.sap.com/course/uxn1",
        "video_url": ""
    },
    {
        "date": "2014-08-26",
        "desc": "Explore the latest techniques for securing information and its systems, from policies and&nbsp;procedures to technologies and audit. Learn from leading experts who share proven practices&nbsp;in areas such as mobile workforce safety, security metrics, electronic evidence oversight and coping with e-crime and e-discovery. Study the protection of Cloud computing information. Discover&nbsp;how to foster the development of future information security leaders.Topics covered include:Information security strategies and individual privacyLegal security implicationsMedical health record confidentiality and integrityCutting-edge technologies",
        "desc_html": "Explore the latest techniques for securing information and its systems, from\npolicies and procedures to technologies and audit. Learn from leading experts\nwho share proven practices in areas such as mobile workforce safety, security\nmetrics, electronic evidence oversight and coping with e-crime and\ne-discovery. Study the protection of Cloud computing information. Discover how\nto foster the development of future information security leaders.  \n  \nTopics covered include:  \n\n  * Information security strategies and individual privacy\n  * Legal security implications\n  * Medical health record confidentiality and integrity\n  * Cutting-edge technologies\n  \n\n",
        "name": "Information Security and Risk Management in Context",
        "provider": "Coursera",
        "rating": "2.3333333333333",
        "reviews": "9",
        "university": [
            "University of Washington"
        ],
        "url": "https://www.coursera.org/course/inforiskman",
        "video_url": ""
    },
    {
        "date": "2014-08-26",
        "desc": "In this course, you will explore several structured, risk management approaches that guide information security decision-making. Course topics include: developing and maintaining risk assessments (RA); developing and maintaining risk management plans (RM); regulatory and legal compliance issues affecting risk plans; developing a control framework for mitigating risks; risk transfer; business continuity and disaster recovery planning from the information security perspective.Consider\nupgrading to an enhanced, more rigorous version of this course offered online\nat theUniversity of Washington. You\u2019ll gain access to\nmeaningful interaction with instructors and additional assignments, readings\nand multimedia material, as well as earn a valuable University of Washington\ncredential.",
        "desc_html": "In this course, you will explore several structured, risk management\napproaches that guide information security decision-making. Course topics\ninclude: developing and maintaining risk assessments (RA); developing and\nmaintaining risk management plans (RM); regulatory and legal compliance issues\naffecting risk plans; developing a control framework for mitigating risks;\nrisk transfer; business continuity and disaster recovery planning from the\ninformation security perspective.  \n  \n\nConsider upgrading to an enhanced, more rigorous version of this course\noffered online at the [University of Washington](http://www.pce.uw.edu/courses\n/building-information-risk-management-toolkit-coursera/online-winter-2013/).\nYou\u2019ll gain access to meaningful interaction with instructors and additional\nassignments, readings and multimedia material, as well as earn a valuable\nUniversity of Washington credential.\n\n",
        "name": "Building an Information Risk Management Toolkit",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of Washington"
        ],
        "url": "https://www.coursera.org/course/inforisk",
        "video_url": ""
    },
    {
        "date": "2014-08-26",
        "desc": "This course provides you with opportunities to integrate and\napply your information security knowledge.This course provides you with opportunities to integrate and\napply your information security knowledge. Following the case-study approach,\nyou will be introduced to current, real-world cases developed and presented by\nthe practitioner community. You will design and execute information assurance\nstrategies to solve these cases.Topics explored include:Analysis and problem solving using\ncases&nbsp;contracted&nbsp;from real world problems in Information Assurance\nincluding:Selection and application of controlsConstruction of security policiesUnderstanding and application of regulatory\n     requirementsUnderstanding and application of business\n     constraints&nbsp;Communication of risk to non-information assurance\n     professionalsIdentification and remediation of new threatsAnalysis and performance of incident responseCommunication of Information Assurance\nprinciples and conceptsPeer reviewed analysis of each caseReading and class explanation of good and bad examples\n     (from news and public sources)Reading and peer discussion of current events in\n     Information AssuranceSyllabusWith successful completion of the course students should be able to:Describe the nature of security risk in a business and an IT contextCompare and apply several models for security risk assessmentFacilitate a risk assessment process and gain consensus on risk-based decisionsIncorporate risk assessment into an IT security plan",
        "desc_html": "This course provides you with opportunities to integrate and apply your\ninformation security knowledge.\n\nThis course provides you with opportunities to integrate and apply your\ninformation security knowledge. Following the case-study approach, you will be\nintroduced to current, real-world cases developed and presented by the\npractitioner community. You will design and execute information assurance\nstrategies to solve these cases.\n\nTopics explored include:  \nAnalysis and problem solving using cases contracted from real world problems\nin Information Assurance including:\n\n  * Selection and application of controls\n  * Construction of security policies\n  * Understanding and application of regulatory requirements\n  * Understanding and application of business constraints \n  * Communication of risk to non-information assurance professionals\n  * Identification and remediation of new threats\n  * Analysis and performance of incident response\n  * Communication of Information Assurance principles and concepts \n  * Peer reviewed analysis of each case\n  * Reading and class explanation of good and bad examples (from news and public sources)\n  * Reading and peer discussion of current events in Information Assurance\n\n## Syllabus\n\nWith successful completion of the course students should be able to:  \n\n  * ****Describe the nature of security risk in a business and an IT context\n  * Compare and apply several models for security risk assessment\n  * Facilitate a risk assessment process and gain consensus on risk-based decisions\n  * Incorporate risk assessment into an IT security plan  \n\n",
        "name": "Designing and Executing Information Security Strategies",
        "provider": "Coursera",
        "rating": "5",
        "reviews": "1",
        "university": [
            "University of Washington"
        ],
        "url": "https://www.coursera.org/course/infosec",
        "video_url": ""
    },
    {
        "date": "2014-08-26",
        "desc": "Investigate  the flexibility and power of project-oriented computational\n analysis. Practice  using this\u00a0technique to resolve complicated \nproblems in a range of fields  including the physical and \nengineering\u00a0sciences, finance and economics,  medical, social and \nbiological sciences. Enhance communication  of\u00a0information by creating \nvisual representations of scientific data.This course is a  survey of numerical solution techniques for ordinary \nand partial differential  equations. Emphasis will be on the application\n of numerical schemes to  practical problems in the engineering and \nphysical sciences. Apply advanced  MATLAB routines and toolboxes to \nsolve problems. Review and practice graphical  techniques for \ninformation presentation and learn to create visual  illustrations of \nscientific results",
        "desc_html": "Investigate the flexibility and power of project-oriented computational\nanalysis. Practice using this\u00a0technique to resolve complicated problems in a\nrange of fields including the physical and engineering\u00a0sciences, finance and\neconomics, medical, social and biological sciences. Enhance communication of\ninformation by creating visual representations of scientific data.  \n  \nThis course is a survey of numerical solution techniques for ordinary and\npartial differential equations. Emphasis will be on the application of\nnumerical schemes to practical problems in the engineering and physical\nsciences. Apply advanced MATLAB routines and toolboxes to solve problems.\nReview and practice graphical techniques for information presentation and\nlearn to create visual illustrations of scientific results\n\n",
        "name": "Scientific Computing",
        "provider": "Coursera",
        "rating": "3.5",
        "reviews": "2",
        "university": [
            "University of Washington"
        ],
        "url": "https://www.coursera.org/course/scientificcomp",
        "video_url": ""
    },
    {
        "date": "2014-08-18",
        "desc": "This course is a collaboration between faculty at three institutions across the world: the George Washington University (Washington, DC, USA); University of Southampton (UK) and Pontifical Catholic University of Chile (Santiago, Chile).* A credit-bearing course will run at each institution at the same time as this MOOC, and students at all locations will participate in the same learning community with MOOC participants.The course aims for students to achieve the following:connect the physics represented by a mathematical model to the characteristics of numerical methods to be able to&nbsp;select&nbsp;a good solution method;implement a numerical solution method in a well-designed, correct computer program;interpret the numerical solutions that were obtained in regards to their accuracy and suitability for applications.WHO IS THE COURSE FOR?Numerical methods for differential equations are relevant across all of science and engineering. This course is for anyone with mathematical, scientific or engineering backgrounds who wishes to develop a grounding in scientific computing. Using a range of hands-on lessons, participants in the course will develop the basic skills to tackle modern computational modelling problems.In developing this course, the instructors are inspired by the philosophy of open-source software. One of the tenets of the course is that we can use the web to interact, connect our learning, teach each other by sharing our learning objects. Therefore, this course is especially for those who are eager to participate in distributed knowledge creation on the web. Join us in this adventure!PREREQUISITESThe connected courses and MOOC are aimed at first-year graduate students or advanced seniors, but assume only a background in vector calculus, linear algebra, and differential equations. We won't assume more than a beginner's programming experience and will guide students to develop a foundation in numerical methods, and hands-on experience coding up solutions to differential equations.SyllabusThe course will consist of six learning modules that are somewhat self-contained. Each one will be motivated by a problem that can be modeled by a differential equation (or system of DEs) and will build new concepts in numerical computing, new coding skills and ideas about analysis of numerical solutions.The learning modules are roughly as follows:The phugoid model of glider flight.Described by a set of two nonlinear ordinary differential equations, the phugoid model motivates numerical time integration methods, and we will build it starting from an even simpler model (e.g., simple harmonic motion), building up to the full nonlinear model in 4 or 5 lessons on initial-value problems. Roughly, this module would include: a) Forward/backward differencing and Euler's method for simple harmonic motion; b) extension to the phugoid model; c) the midpoint method, convergence testing, local vs. global error; d) Runge-Kutta methods.Space and Time&mdash;Introduction to finite-difference solutions of PDEsStarting with the simplest model represented by a partial differential equation (PDE)&mdash;the linear convection equation in one dimension&mdash;, this module builds the foundation of using finite differencing in PDEs. (The module is based on the &ldquo;CFD Python&rdquo; collection, steps 1 through 4.) It also motivates CFL condition, numerical diffusion, accuracy of finite-difference approximations via Taylor series, consistency and stability, and the physical idea of conservation laws.Riding the wave: convection problems.Starting with the inviscid Burgers&rsquo; equation in conservation form and a 1D shock wave, cover a sampling of finite-difference convection schemes of various types: upwind, Lax-Friedrichs, Lax-Wendroff, MacCormack, then MUSCL (discussing limiters). Traffic-flow equation with MUSCL (from HyperPython). Reinforce concepts of numerical diffusion and stability, in the context of solutions with shocks. It will motivate spectral analysis of schemes, dispersion errors, Gibbs phenomenon, conservative schemes.Spreading out: diffusion problemsStart with heat equation in 2D (first introduction of two-dimensional FD discretization). Introduce implicit methods: backward Euler, trapezoidal rule (Crank-Nicolson), backward-differentiation formula (BDF). Pattern formation models (reaction-diffusion). Theory content: A-stability (unconditional stability), L-stability. Fourier spectral methods and splitting.Relax and hold steady: elliptic problems.Laplace and Poisson equations (steps 9 and 10 of &ldquo;CFD Python&rdquo;), explained as systems relaxing under the influence of the boundary conditions and the Laplace operator; introducing the idea of pseudo-time and iterative methods. Linear solvers for PDEs : Jacobi&rsquo;s method, slow convergence of low-frequency modes (matrix analysis of Jacobi), Jacobi as a smoother, Multigrid.Boundaries take over: the boundary element method (BEM)Weak and boundary integral formulation of elliptic partial differential equations; the free space Green's function. Boundary discretization: basis functions; collocation and Galerkin systems. The BEM stiffness matrix: dense versus sparse; matrix conditioning. Solving the BEM system: singular and near-singular integrals; Gauss quadrature integration.",
        "desc_html": "This course is a collaboration between faculty at three institutions across\nthe world: the George Washington University (Washington, DC, USA); University\nof Southampton (UK) and Pontifical Catholic University of Chile (Santiago,\nChile).* A credit-bearing course will run at each institution at the same time\nas this MOOC, and students at all locations will participate in the same\nlearning community with MOOC participants.\n\nThe course aims for students to achieve the following:\n\n  * connect the physics represented by a mathematical model to the characteristics of numerical methods to be able to _select_ a good solution method;\n  * implement a numerical solution method in a well-designed, correct computer program;\n  * interpret the numerical solutions that were obtained in regards to their accuracy and suitability for applications.\n**WHO IS THE COURSE FOR?**\n\nNumerical methods for differential equations are relevant across all of\nscience and engineering. This course is for anyone with mathematical,\nscientific or engineering backgrounds who wishes to develop a grounding in\nscientific computing. Using a range of hands-on lessons, participants in the\ncourse will develop the basic skills to tackle modern computational modelling\nproblems.\n\nIn developing this course, the instructors are inspired by the philosophy of\nopen-source software. One of the tenets of the course is that we can use the\nweb to interact, connect our learning, teach each other by sharing our\nlearning objects. Therefore, this course is especially for those who are eager\nto participate in distributed knowledge creation on the web. Join us in this\nadventure!\n\n**PREREQUISITES**\n\nThe connected courses and MOOC are aimed at first-year graduate students or\nadvanced seniors, but assume only a background in vector calculus, linear\nalgebra, and differential equations. We won't assume more than a beginner's\nprogramming experience and will guide students to develop a foundation in\nnumerical methods, and hands-on experience coding up solutions to differential\nequations.\n\n## Syllabus\n\nThe course will consist of six learning modules that are somewhat self-\ncontained. Each one will be motivated by a problem that can be modeled by a\ndifferential equation (or system of DEs) and will build new concepts in\nnumerical computing, new coding skills and ideas about analysis of numerical\nsolutions.\n\nThe learning modules are roughly as follows:\n\n**The phugoid model of glider flight.**\n\nDescribed by a set of two nonlinear ordinary differential equations, the\nphugoid model motivates numerical time integration methods, and we will build\nit starting from an even simpler model (e.g., simple harmonic motion),\nbuilding up to the full nonlinear model in 4 or 5 lessons on initial-value\nproblems. Roughly, this module would include: a) Forward/backward differencing\nand Euler's method for simple harmonic motion; b) extension to the phugoid\nmodel; c) the midpoint method, convergence testing, local vs. global error; d)\nRunge-Kutta methods.\n\n**Space and Time--Introduction to finite-difference solutions of PDEs**\n\nStarting with the simplest model represented by a partial differential\nequation (PDE)--the linear convection equation in one dimension--, this module\nbuilds the foundation of using finite differencing in PDEs. (The module is\nbased on the \"CFD Python\" collection, steps 1 through 4.) It also motivates\nCFL condition, numerical diffusion, accuracy of finite-difference\napproximations via Taylor series, consistency and stability, and the physical\nidea of conservation laws.\n\n**Riding the wave: convection problems.**\n\nStarting with the inviscid Burgers' equation in conservation form and a 1D\nshock wave, cover a sampling of finite-difference convection schemes of\nvarious types: upwind, Lax-Friedrichs, Lax-Wendroff, MacCormack, then MUSCL\n(discussing limiters). Traffic-flow equation with MUSCL (from HyperPython).\nReinforce concepts of numerical diffusion and stability, in the context of\nsolutions with shocks. It will motivate spectral analysis of schemes,\ndispersion errors, Gibbs phenomenon, conservative schemes.\n\n**Spreading out: diffusion problems**\n\nStart with heat equation in 2D (first introduction of two-dimensional FD\ndiscretization). Introduce implicit methods: backward Euler, trapezoidal rule\n(Crank-Nicolson), backward-differentiation formula (BDF). Pattern formation\nmodels (reaction-diffusion). Theory content: A-stability (unconditional\nstability), L-stability. Fourier spectral methods and splitting.\n\n**Relax and hold steady: elliptic problems.**\n\nLaplace and Poisson equations (steps 9 and 10 of \"CFD Python\"), explained as\nsystems relaxing under the influence of the boundary conditions and the\nLaplace operator; introducing the idea of pseudo-time and iterative methods.\nLinear solvers for PDEs : Jacobi's method, slow convergence of low-frequency\nmodes (matrix analysis of Jacobi), Jacobi as a smoother, Multigrid.\n\n**Boundaries take over: the boundary element method (BEM)**\n\nWeak and boundary integral formulation of elliptic partial differential\nequations; the free space Green's function. Boundary discretization: basis\nfunctions; collocation and Galerkin systems. The BEM stiffness matrix: dense\nversus sparse; matrix conditioning. Solving the BEM system: singular and near-\nsingular integrals; Gauss quadrature integration.\n\n",
        "name": "Practical Numerical Methods with Python",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [
            "George Washington University"
        ],
        "url": "http://openedx.seas.gwu.edu/courses/GW/MAE6286/2014_fall/about",
        "video_url": "https://www.youtube.com/embed/nwXepIXILhA?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-08-17",
        "desc": "\u062a\u0639\u0631\u064a\u0641 \u0628\u0628\u0631\u0648\u062a\u0643\u0648\u0644\u0627\u062a \u0627\u0644\u0625\u062a\u0635\u0627\u0644 \u0627\u0644\u0634\u0628\u0643\u064a \u064a\u0628\u062f\u0623 \u0645\u0646 \u0648\u0627\u062c\u0647\u0629 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0625\u0644\u0649 \u0631\u0648\u0627\u0628\u0637 \u0627\u0644\u0625\u062a\u0635\u0627\u0644 \u0627\u0644\u0645\u0627\u062f\u064a\u0629 \u0643\u0645\u0627 \u064a\u0634\u0645\u0644 \u0628\u0631\u0645\u062c\u0629 \u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u0634\u0628\u0643\u0629 \u0628\u0644\u063a\u0629 \u0628\u0627\u064a\u062b\u0648\u0646.\u0627\u0644\u0645\u0627\u062f\u0629 \u0623\u0643\u0627\u062f\u064a\u0645\u064a\u0629 \u062a\u062f\u0631\u0633 \u0641\u064a \u0627\u0644\u062c\u0627\u0645\u0639\u0627\u062a \u0648\u0644\u064a\u0633\u062a \u062a\u062c\u0627\u0631\u064a\u0629 \u0648\u0647\u064a \u0636\u0631\u0648\u0631\u064a\u0629 \u0643\u0623\u0633\u0627\u0633 \u0644\u0641\u0647\u0645 \u0627\u0644\u0625\u062a\u0635\u0627\u0644 \u0627\u0644\u0634\u0628\u0643\u064a \u0642\u0628\u0644 \u0627\u0644\u062f\u062e\u0648\u0644 \u0641\u064a \u0627\u0644\u0645\u0646\u0627\u0647\u062c \u0627\u0644\u062a\u062c\u0627\u0631\u064a\u0629 \u0627\u0644\u062a\u0627\u0628\u0639\u0629 \u0644\u0644\u0634\u0631\u0643\u0627\u062a \u0627\u0644\u0645\u0635\u0646\u0639\u0629 \u0644\u0645\u0639\u062f\u0627\u062a \u0627\u0644\u0625\u062a\u0635\u0627\u0644.",
        "desc_html": "\u062a\u0639\u0631\u064a\u0641 \u0628\u0628\u0631\u0648\u062a\u0643\u0648\u0644\u0627\u062a \u0627\u0644\u0625\u062a\u0635\u0627\u0644 \u0627\u0644\u0634\u0628\u0643\u064a \u064a\u0628\u062f\u0623 \u0645\u0646 \u0648\u0627\u062c\u0647\u0629 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0625\u0644\u0649 \u0631\u0648\u0627\u0628\u0637 \u0627\u0644\u0625\u062a\u0635\u0627\u0644\n\u0627\u0644\u0645\u0627\u062f\u064a\u0629 \u0643\u0645\u0627 \u064a\u0634\u0645\u0644 \u0628\u0631\u0645\u062c\u0629 \u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u0634\u0628\u0643\u0629 \u0628\u0644\u063a\u0629 \u0628\u0627\u064a\u062b\u0648\u0646.\n\n  \n  \n\n\u0627\u0644\u0645\u0627\u062f\u0629 \u0623\u0643\u0627\u062f\u064a\u0645\u064a\u0629 \u062a\u062f\u0631\u0633 \u0641\u064a \u0627\u0644\u062c\u0627\u0645\u0639\u0627\u062a \u0648\u0644\u064a\u0633\u062a \u062a\u062c\u0627\u0631\u064a\u0629 \u0648\u0647\u064a \u0636\u0631\u0648\u0631\u064a\u0629 \u0643\u0623\u0633\u0627\u0633 \u0644\u0641\u0647\u0645 \u0627\u0644\u0625\u062a\u0635\u0627\u0644\n\u0627\u0644\u0634\u0628\u0643\u064a \u0642\u0628\u0644 \u0627\u0644\u062f\u062e\u0648\u0644 \u0641\u064a \u0627\u0644\u0645\u0646\u0627\u0647\u062c \u0627\u0644\u062a\u062c\u0627\u0631\u064a\u0629 \u0627\u0644\u062a\u0627\u0628\u0639\u0629 \u0644\u0644\u0634\u0631\u0643\u0627\u062a \u0627\u0644\u0645\u0635\u0646\u0639\u0629 \u0644\u0645\u0639\u062f\u0627\u062a \u0627\u0644\u0625\u062a\u0635\u0627\u0644.\n\n",
        "name": "\u0634\u0628\u0643\u0627\u062a \u0627\u0644\u062d\u0627\u0633\u0628 - \u062a\u062d\u0644\u064a\u0644 \u0634\u0628\u0643\u0627\u062a \u0627\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a",
        "provider": "Rwaq (\u0631\u0648\u0627\u0642)",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "http://www.rwaq.org/courses/networks",
        "video_url": "https://www.youtube.com/embed/l7wfacDIAt8?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-08-15",
        "desc": "This is a course in programming in C. No prior programming experience is assumed; however, mathematical maturity at the level of a second year science or engineering undergraduate is assumed.We emphasize solving problems using the language, and introduce standard programming techniques like alternation, iteration and recursion. We will briefly glimpse the basics of software engineering practices like modularization, commenting, and naming conventions which help in collaborating and programming in teams.&nbsp;Given a problem, we pay attention to the following questions:What is an algorithmic solution to the problem?How do we translate the algorithm into C code?How efficient is the code?How maintainable is the code?It is expected that by the end of the course, students will be comfortable in :-Attempting algorithmic solutions to problemsDesigning and coding moderate sized programs running to the order of a few hundred lines of code, andReading, understanding and modifying code written by others.SyllabusIntroduction. Straight-Line Code. Variables, Operators, Expressions and Conditionals.LoopsFunctionsOne-Dimensional Arrays and PointersRecursionMulti-dimensional Arrays, Linked Lists.Operating on FilesOrganizing C projects, working with multiple source directories, makefiles.",
        "desc_html": "This is a course in programming in C. No prior programming experience is\nassumed; however, mathematical maturity at the level of a second year science\nor engineering undergraduate is assumed.  \nWe emphasize solving problems using the language, and introduce standard\nprogramming techniques like alternation, iteration and recursion. We will\nbriefly glimpse the basics of software engineering practices like\nmodularization, commenting, and naming conventions which help in collaborating\nand programming in teams.  \nGiven a problem, we pay attention to the following questions:\n\n  1. What is an algorithmic solution to the problem?\n  2. How do we translate the algorithm into C code?\n  3. How efficient is the code?\n  4. How maintainable is the code?\n\n_It is expected that by the end of the course, students will be comfortable in\n:-_\n\n  1. Attempting algorithmic solutions to problems\n  2. Designing and coding moderate sized programs running to the order of a few hundred lines of code, and\n  3. Reading, understanding and modifying code written by others.\n\n## Syllabus\n\n  1. Introduction. Straight-Line Code. Variables, Operators, Expressions and Conditionals.\n  2. Loops\n  3. Functions\n  4. One-Dimensional Arrays and Pointers\n  5. Recursion\n  6. Multi-dimensional Arrays, Linked Lists.\n  7. Operating on Files\n  8. Organizing C projects, working with multiple source directories, makefiles.\n\n",
        "name": "Introduction to Programming in C",
        "provider": "NPTEL",
        "rating": "1",
        "reviews": "1",
        "university": [],
        "url": "https://onlinecourses.nptel.ac.in/iitk_cs_101/preview",
        "video_url": "https://www.youtube.com/embed/JpN0GTJOxTk?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-08-05",
        "desc": "Computer graphics can be a powerful tool for supporting visual problem solving, and interactivity plays a central role in harnessing the users' creativity. This course will introduce various interactive tools developed in computer graphics research field with their design rationales and algorithms. Examples include enhancements to graphical user interfaces, authoring tools for 2D drawings and 3D animations, and interactive computer-aided design systems. Rich live demonstrations and course assignments will give you insights and skills to design and implement such tools for your own problems.SyllabusWeek 1: Graphical User InterfacesWeek 2: 2D Drawings and AnimationWeek 3: 3D Geometric ModelingWeek 4: Deformation and AnimationWeek 5: FabricationWeek 6: Computer-aided DesignWeek 7: Real World Interaction",
        "desc_html": "Computer graphics can be a powerful tool for supporting visual problem\nsolving, and interactivity plays a central role in harnessing the users'\ncreativity. This course will introduce various interactive tools developed in\ncomputer graphics research field with their design rationales and algorithms.\nExamples include enhancements to graphical user interfaces, authoring tools\nfor 2D drawings and 3D animations, and interactive computer-aided design\nsystems. Rich live demonstrations and course assignments will give you\ninsights and skills to design and implement such tools for your own problems.\n\n## Syllabus\n\nWeek 1: Graphical User Interfaces\n\nWeek 2: 2D Drawings and Animation\n\nWeek 3: 3D Geometric Modeling\n\nWeek 4: Deformation and Animation\n\nWeek 5: Fabrication\n\nWeek 6: Computer-aided Design\n\nWeek 7: Real World Interaction  \n\n",
        "name": "Interactive Computer Graphics",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "The University of Tokyo"
        ],
        "url": "https://www.coursera.org/course/interactivegraphics",
        "video_url": ""
    },
    {
        "date": "2014-08-01",
        "desc": "This course is aimed at anyone interested in learning about SAP HANA. You don\u2019t need to have any technical knowledge to understand the concept of SAP HANA in this overview as explained easily and informally by Vishal.After the course, you will have an understanding of how SAP HANA works, how quickly it can perform tasks and how it has helped existing SAP customers.This is a special edition openSAP course as your total learning time will be just two to three hours and all content is already available. The course is broken down into five units consisting of nine videos with self-tests for you to complete after each section. Your results will not be saved; they are just for your personal use.",
        "desc_html": "This course is aimed at anyone interested in learning about SAP HANA. You\ndon\u2019t need to have any technical knowledge to understand the concept of SAP\nHANA in this overview as explained easily and informally by Vishal.  \n  \nAfter the course, you will have an understanding of how SAP HANA works, how\nquickly it can perform tasks and how it has helped existing SAP customers.  \n  \nThis is a special edition openSAP course as your total learning time will be\njust two to three hours and all content is already available. The course is\nbroken down into five units consisting of nine videos with self-tests for you\nto complete after each section. Your results will not be saved; they are just\nfor your personal use.\n\n",
        "name": "An Introduction to SAP HANA",
        "provider": "openSAP",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.sap.com/course/hanaintro1",
        "video_url": ""
    },
    {
        "date": "2014-07-29",
        "desc": "*Note - This is an Archived course*This is a past/archived course. At this time, you can only explore this course in a self-paced fashion. Certain features of this course may not be active, but many people enjoy watching the videos and working with the materials. Make sure to check for reruns of this course.This is the first of a two-part course, and corresponds to the first half of the Computer Programming course CS101 at IIT Bombay. In this part, basic concepts of computer programming are introduced starting with the notion of an algorithm. Emphasis is on developing the ability to write programs to solve practical computational problems. Topics include:AlgorithmsElements of C/C++ programming languagesBasic data typesSequential and conditional executionIterative solutionsArrays, matrices, and their applicationsFunctionsSorting and searchingElements of string processingIntroduction to pointersBasics of Software Engineering.Participants will get to read and understand many sample programs, and will have to write several on their own. This course deals with procedural programming, and attempts to inculcate good programming practices in a novice programmer.",
        "desc_html": "*Note - This is an Archived course*  \n  \nThis is a past/archived course. At this time, you can only explore this course\nin a self-paced fashion. Certain features of this course may not be active,\nbut many people enjoy watching the videos and working with the materials. Make\nsure to check for reruns of this course.  \n  \nThis is the first of a two-part course, and corresponds to the first half of\nthe Computer Programming course CS101 at IIT Bombay. In this part, basic\nconcepts of computer programming are introduced starting with the notion of an\nalgorithm. Emphasis is on developing the ability to write programs to solve\npractical computational problems. Topics include:  \n  \nAlgorithms  \nElements of C/C++ programming languages  \nBasic data types  \nSequential and conditional execution  \nIterative solutions  \nArrays, matrices, and their applications  \nFunctions  \nSorting and searching  \nElements of string processing  \nIntroduction to pointers  \nBasics of Software Engineering.  \nParticipants will get to read and understand many sample programs, and will\nhave to write several on their own. This course deals with procedural\nprogramming, and attempts to inculcate good programming practices in a novice\nprogrammer.\n\n",
        "name": "CS101.1x: Introduction to Computer Programming, Part 1",
        "provider": "edX",
        "rating": "1.5714285714286",
        "reviews": "7",
        "university": [
            "IIT(Indian Institute of Technology Bombay)"
        ],
        "url": "https://www.edx.org/course/introduction-computer-programming-part-1-iitbombayx-cs101-1x",
        "video_url": ""
    },
    {
        "date": "2014-07-28",
        "desc": "The web has become an object of our daily life and the amount of information in the web is ever growing. Besides plain texts, especially multimedia information such as graphics, audio or video have become a predominant part of the web's information traffic. But, how can we find useful information within this huge information space? How can we make use of the knowledge contained in those web documents? Traditional search engines for example will reach the limits of their power, when it comes to understanding information content. The Semantic Web is an extension of the traditional web in the sense that information in the form of natural language text in the web will be complemented by its explicit semantics based on a formal knowledge representation. Thus, the meaning of information expressed in natural language can be accessed in an automated way and interpreted correctly, i.e. it can be &lsquo;understood&rsquo; by machines.Semantic Web technologies enable the explicit representation of knowledge and its further processing to deduce new knowledge from implicitly hidden knowledge. Thus, information access and information search will be more precise and more complete compared to today's traditional information retrieval technology. Previously heterogeneous data can be mapped and combined based on common knowledge representation and schemata easily extended in a dynamic way.In this course, you will learn the fundamentals of Semantic Web technologies and how they are applied for knowledge representation in the World Wide Web. You will learn how to represent knowledge with ontologies and how to access and benefit from semantic data on the Web. Furthermore, you will also learn how to make use of Linked Data and the Web of Data, currently the most popular applications based on Semantic Web technologies.Requirements for this course:a basic knowledge of the foundations of mathematical logics, i.e. propositional logics and first order logicsa basic understanding of web technologies, such as URL, http, HTML, and XML-based technologiesa basic knowledge of database technology, esp. relational databasesand SQL query languageSyllabusWeek 1:Knowledge Engineering and the Web of DataWeek 2:Semantic Web Technologies - Part 1Week 3:Semantic Web Technologies - Part 2Week 4:Knowledge Representation - Part 1Week 5:Knowledge Representation - Part 2Week 6:Knowledge EngineeringFinal examination:Final examination",
        "desc_html": "The web has become an object of our daily life and the amount of information\nin the web is ever growing. Besides plain texts, especially multimedia\ninformation such as graphics, audio or video have become a predominant part of\nthe web's information traffic. But, how can we find useful information within\nthis huge information space? How can we make use of the knowledge contained in\nthose web documents? Traditional search engines for example will reach the\nlimits of their power, when it comes to understanding information content. The\nSemantic Web is an extension of the traditional web in the sense that\ninformation in the form of natural language text in the web will be\ncomplemented by its explicit semantics based on a formal knowledge\nrepresentation. Thus, the meaning of information expressed in natural language\ncan be accessed in an automated way and interpreted correctly, i.e. it can be\n'understood' by machines.\n\nSemantic Web technologies enable the explicit representation of knowledge and\nits further processing to deduce new knowledge from implicitly hidden\nknowledge. Thus, information access and information search will be more\nprecise and more complete compared to today's traditional information\nretrieval technology. Previously heterogeneous data can be mapped and combined\nbased on common knowledge representation and schemata easily extended in a\ndynamic way.\n\nIn this course, you will learn the fundamentals of Semantic Web technologies\nand how they are applied for knowledge representation in the World Wide Web.\nYou will learn how to represent knowledge with ontologies and how to access\nand benefit from semantic data on the Web. Furthermore, you will also learn\nhow to make use of Linked Data and the Web of Data, currently the most popular\napplications based on Semantic Web technologies.\n\nRequirements for this course:\n\n  * a basic knowledge of the foundations of mathematical logics, i.e. propositional logics and first order logics\n  * a basic understanding of web technologies, such as URL, http, HTML, and XML-based technologies\n  * a basic knowledge of database technology, esp. relational databases  \nand SQL query language\n\n## Syllabus\n\n  *     * **Week 1:** Knowledge Engineering and the Web of Data\n    * **Week 2:** Semantic Web Technologies - Part 1\n    * **Week 3:** Semantic Web Technologies - Part 2\n    * **Week 4:** Knowledge Representation - Part 1\n    * **Week 5:** Knowledge Representation - Part 2\n    * **Week 6:** Knowledge Engineering\n    * **Final examination:** Final examination\n\n",
        "name": "Knowledge Engineering with Semantic Web Technologies",
        "provider": "openHPI",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.hpi.de/courses/semanticweb2014",
        "video_url": ""
    },
    {
        "date": "2014-07-23",
        "desc": "Computer Networking is a part of the Georgia Tech Online Masters Degree. Taking this course here will not earn credit towards the OMS degree.This course covers advanced topics in Computer Networking such as Software-Defined Networking (SDN), Data Center Networking and Content Distribution. The course is divided into three parts:Part 1 is about the implementation, design principles and goals of a Computer Network and touches upon the various routing algorithms used in CN (such as link-state and distance vector).Part 2 talks about resource control and content distribution in Networking Applications. It covers Congestion Control and Traffic Shaping.Part 3 deals with the operations and management of computer networks encompassing SDN's (Software Defined Networks), Traffic Engineering and Network Security.Why Take This Course?Want to build on your Computer Networking knowledge or move into Network Engineering positions such as Systems Admin, Network Admin or Technical Operations (WebOps)? If so, this is the class for you.Computer Networking takes a hands-on approach to teaching very technical material, using Mininet (a network emulator) to show you how a computer network functions, what factors contribute to its efficiency and how to overcome inherent limitations. You will build your own network topologies and learn about some cutting-edge technologies.Prerequisites and RequirementsThe ideal preparation for this course would be the successful completion of an undergraduate level Computer Networking course. An understanding of the TCP/IP protocol and the its layer model is recommended. Basic knowledge of python (such as through&nbsp;Intro to Computer Science) is required.You should be comfortable with the implementation of basic search algorithms and a working knowledge of Linux and virtual machines is recommended.ProjectsYou will use Mininet to understand Buffer Sizing and how it can be used for modeling real world research.SyllabusLesson 1: IntroductionComputer Networking OverviewWhat This Class is Not AboutLesson 2: Architecture &amp; PrinciplesA Brief History of the InternetArchitectural Design PrinciplesPacket SwitchingFile TransferEnd to End Argument ViolationsLesson 3: SwitchingSwitching and BridgingBootstrapping: Networking Two HostsARP: Address Resolution ProtocolInterconnecting LANs with HubsSwitches: Traffic IsolationSpanning TreeSwitches vs. RoutersBuffer Sizing for a TCP SenderLesson 4: RoutingInternet RoutingIntra-AS TopologyDistance-Vector RoutingLink State RoutingInterdomain RoutingIGP vs. iBGPBGP Route SelectionMultiple Exit Discriminator (MEI)Interdomain Routing Business ModelsLesson 5: Naming, Addressing &amp; ForwardingIP AddressingPre-1994: &ldquo;Classful&rdquo; AddressingIP Address AllocationClassless Interdomain Routing (CIDR)Multihoming Frustrates AggregationAddress Lookup Using TriesMemory Efficiency and Fast LookupAlternatives to LPM with TriesNAT and IPv6Network Address Translation (NAT)Lesson 5.1: Router Design BasicsRouter DesignBasic Router ArchitectureDecision: Crossbar SwitchingSwitching Algorithm: Maximal MatchingHead of Line BlockingScheduling and FairnessMax-Min FairnessLesson 5.2: Domain Name System (DNS)Record TypesExamples (using &ldquo;dig&rdquo;)Lookup IP AddressLesson 6: Congestion Control &amp; StreamingCongestion ControlAIMD (TCP Congestion Control)Data Centers &amp; TCP &ldquo;Incast&rdquo;Barrier Synchronization &amp; Idle TimeMultimedia &amp; StreamingDigitizing Audio &amp; VideoStreaming VideoSkypeLesson 7: Rate Limiting and Traffic ShapingTraffic Classification &amp; ShapingSource ClassificationLeaky Bucket Traffic Shaping(r, t) Traffic ShapingShaping Bursty Traffic PatternsPower BoostEffects on LatencyBuffer BloatPacket MonitoringLesson 8: Content DistributionThe Web and CachingHTTP RequestsPersistent ConnectionsContent Distribution Networks (CDNs)Server SelectionContent RoutingBit TorrentSolution to Freeriding: &ldquo;Choking&rdquo;Distributed Hash TablesConsistent HashingLesson 9: Software Defined NetworkingNetwork Management OverviewSoftware Defined Networking (SDN)Control and Data PlanesDifferent SDN ControllersNOX: OverviewRyu, Floodlight, Nox and PoxCustomizing ControlLesson 10: Traffic EngineeringTraffic Engineering OverviewInterdomain Traffic EngineeringMeasuring, Modeling and Controlling TrafficLink Utilization FunctionBGP in Interdomain Traffic EngineeringMultipath RoutingData Center NetworkingValiant Load BalanceJellyfish Data Center TopologyLesson 11: Network SecurityInternet is InsecureResource ExhaustionRouting SecurityOrigin and Path AuthenticationDNS SecurityDNS Cache PoisoningLesson 11.1: Internet WormsViruses and Internet WormsInternet Worm LifecyleFirst Worm: &ldquo;Morris&rdquo; WormWorm Outbreaks in DetailModeling Fast-Spreading WormsLesson 11.2: SpamSpamIP BlacklistingLesson 11.3: Denial of Service (DoS) AttacksTCP 3-Way HandshakeInferring Denial of Service Activity using BackscatterAutomated DoS Attack MitigationMTPCP",
        "desc_html": "_Computer Networking is a part of the Georgia Tech Online Masters Degree.\nTaking this course here will not earn credit towards the OMS degree._\n\nThis course covers advanced topics in Computer Networking such as Software-\nDefined Networking (SDN), Data Center Networking and Content Distribution. The\ncourse is divided into three parts:\n\nPart 1 is about the implementation, design principles and goals of a Computer\nNetwork and touches upon the various routing algorithms used in CN (such as\nlink-state and distance vector).\n\nPart 2 talks about resource control and content distribution in Networking\nApplications. It covers Congestion Control and Traffic Shaping.\n\nPart 3 deals with the operations and management of computer networks\nencompassing SDN's (Software Defined Networks), Traffic Engineering and\nNetwork Security.\n\n**Why Take This Course?**\n\nWant to build on your Computer Networking knowledge or move into Network\nEngineering positions such as Systems Admin, Network Admin or Technical\nOperations (WebOps)? If so, this is the class for you.\n\nComputer Networking takes a hands-on approach to teaching very technical\nmaterial, using Mininet (a network emulator) to show you how a computer\nnetwork functions, what factors contribute to its efficiency and how to\novercome inherent limitations. You will build your own network topologies and\nlearn about some cutting-edge technologies.\n\n**Prerequisites and Requirements**\n\nThe ideal preparation for this course would be the successful completion of an\nundergraduate level Computer Networking course. An understanding of the TCP/IP\nprotocol and the its layer model is recommended. Basic knowledge of python\n(such as through [Intro to Computer\nScience](https://www.udacity.com/course/cs101)) is required.\n\nYou should be comfortable with the implementation of basic search algorithms\nand a working knowledge of Linux and virtual machines is recommended.\n\n**Projects**\n\nYou will use Mininet to understand Buffer Sizing and how it can be used for\nmodeling real world research.\n\n## Syllabus\n\n**Lesson 1: Introduction**\n\n  * Computer Networking Overview\n  * What This Class is Not About\n\n**Lesson 2: Architecture & Principles**\n\n  * A Brief History of the Internet\n  * Architectural Design Principles\n  * Packet Switching\n  * File Transfer\n  * End to End Argument Violations\n\n**Lesson 3: Switching**\n\n  * Switching and Bridging\n  * Bootstrapping: Networking Two Hosts\n  * ARP: Address Resolution Protocol\n  * Interconnecting LANs with Hubs\n  * Switches: Traffic Isolation\n  * Spanning Tree\n  * Switches vs. Routers\n  * Buffer Sizing for a TCP Sender\n\n**Lesson 4: Routing**\n\n  * Internet Routing\n  * Intra-AS Topology\n  * Distance-Vector Routing\n  * Link State Routing\n  * Interdomain Routing\n  * IGP vs. iBGP\n  * BGP Route Selection\n  * Multiple Exit Discriminator (MEI)\n  * Interdomain Routing Business Models\n\n**Lesson 5: Naming, Addressing & Forwarding**\n\n  * IP Addressing\n  * Pre-1994: \"Classful\" Addressing\n  * IP Address Allocation\n  * Classless Interdomain Routing (CIDR)\n  * Multihoming Frustrates Aggregation\n  * Address Lookup Using Tries\n  * Memory Efficiency and Fast Lookup\n  * Alternatives to LPM with Tries\n  * NAT and IPv6\n  * Network Address Translation (NAT)\n\n**Lesson 5.1: Router Design Basics**\n\n  * Router Design\n  * Basic Router Architecture\n  * Decision: Crossbar Switching\n  * Switching Algorithm: Maximal Matching\n  * Head of Line Blocking\n  * Scheduling and Fairness\n  * Max-Min Fairness\n\n**Lesson 5.2: Domain Name System (DNS)**\n\n  * Record Types\n  * Examples (using \"dig\")\n  * Lookup IP Address\n\n**Lesson 6: Congestion Control & Streaming**\n\n  * Congestion Control\n  * AIMD (TCP Congestion Control)\n  * Data Centers & TCP \"Incast\"\n  * Barrier Synchronization & Idle Time\n  * Multimedia & Streaming\n  * Digitizing Audio & Video\n  * Streaming Video\n  * Skype\n\n**Lesson 7: Rate Limiting and Traffic Shaping**\n\n  * Traffic Classification & Shaping\n  * Source Classification\n  * Leaky Bucket Traffic Shaping\n  * (r, t) Traffic Shaping\n  * Shaping Bursty Traffic Patterns\n  * Power Boost\n  * Effects on Latency\n  * Buffer Bloat\n  * Packet Monitoring\n\n**Lesson 8: Content Distribution**\n\n  * The Web and Caching\n  * HTTP Requests\n  * Persistent Connections\n  * Content Distribution Networks (CDNs)\n  * Server Selection\n  * Content Routing\n  * Bit Torrent\n  * Solution to Freeriding: \"Choking\"\n  * Distributed Hash Tables\n  * Consistent Hashing\n\n**Lesson 9: Software Defined Networking**\n\n  * Network Management Overview\n  * Software Defined Networking (SDN)\n  * Control and Data Planes\n  * Different SDN Controllers\n  * NOX: Overview\n  * Ryu, Floodlight, Nox and Pox\n  * Customizing Control\n\n**Lesson 10: Traffic Engineering**\n\n  * Traffic Engineering Overview\n  * Interdomain Traffic Engineering\n  * Measuring, Modeling and Controlling Traffic\n  * Link Utilization Function\n  * BGP in Interdomain Traffic Engineering\n  * Multipath Routing\n  * Data Center Networking\n  * Valiant Load Balance\n  * Jellyfish Data Center Topology\n\n**Lesson 11: Network Security**\n\n  * Internet is Insecure\n  * Resource Exhaustion\n  * Routing Security\n  * Origin and Path Authentication\n  * DNS Security\n  * DNS Cache Poisoning\n\n**Lesson 11.1: Internet Worms**\n\n  * Viruses and Internet Worms\n  * Internet Worm Lifecyle\n  * First Worm: \"Morris\" Worm\n  * Worm Outbreaks in Detail\n  * Modeling Fast-Spreading Worms\n\n**Lesson 11.2: Spam**\n\n  * Spam\n  * IP Blacklisting\n\n**Lesson 11.3: Denial of Service (DoS) Attacks**\n\n  * TCP 3-Way Handshake\n  * Inferring Denial of Service Activity using Backscatter\n  * Automated DoS Attack Mitigation\n  * MTPCP\n\n",
        "name": "Computer Networking:  Security and Software Defined Networking",
        "provider": "Udacity",
        "rating": "5",
        "reviews": "1",
        "university": [
            "Georgia Institute of Technology"
        ],
        "url": "https://www.udacity.com/course/ud436",
        "video_url": "https://www.youtube.com/embed/F8Fw9iyrDYM?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-07-22",
        "desc": "In SDLC, you will learn how to select and implement the ideal software process for your development project. Through Professor Orso's engaging examples and interviews with industry insiders, you will learn both conceptual and practical aspects of software engineering. The course covers requirements engineering, architecture and design, testing and maintenance, and software quality in general.The goal of this class is to equip you with the skills necessary to define requirements, set up an integrated development environment (IDE), learn Git (and Github!) and use Unified Modeling Language (UML) to design and build an Android application. We will also examine several testing practices and refactoring techniques that are helpful before the launch of your software project.While everyone working with software should have these skills, they are particularly important for Software Engineers and Engineering Managers.SDLC is offered as Software Development Processes at Georgia Tech where it is a part of the Online Masters Degree (OMS). Taking this course here will not earn credit towards the OMS degree.Why Take This Course?Software engineering isn&rsquo;t just about programming. It isn&rsquo;t just about building a technology stack.This course introduces the idea of software engineering as an iterative, systematic process. You will learn to use Github and Eclipse as you get introduced to the development life cycle, design processes and software testing.Software Development Life Cycles will show you the skills and processes needed to complement technical understanding of software products in order to make you a more effective developer in an engineering team.In the final project, you will go through all the stages of software development and work with your coach in order to plan and build an Android application.Prerequisites and RequirementsA strong familiarity with Android development (perhaps through&nbsp;Developing Android Apps) is expected.ProjectsFollow the Software Development Life Cycle to design, test and build an Android app based on requirements.&nbsp;SyllabusLesson 1: Introduction and OverviewImportance of Software EngineeringDiscipline of Software EngineeringThe Software CrisisSoftware PhasesLesson 2: Life Cycle ModelsIntroduction with Barry BohemRequirements EngineeringDesignMaintenanceSoftware Process Model IntroductionWaterfall ProcessSpiral ProcessEvolutionary Prototyping ProcessRational Unified ProcessAgile ProcessChoosing a ModelLifecycle DocumentsLesson 3: Integrated Development EnvironmentEclipse IntroductionIDE OverviewPlug-InsEclipse Demo: Create Java ProjectEclipse Demo: Create a ClassEclipse Demo: Run ConfigurationEclipse Demo: DebuggingLesson 4: Version Control SystemsInterview with John BrittonVersion Control System IntroductionTwo Main Types of VCSIntroduction to GITGIT WorkflowGIT Demo: Intro to GITGIT Demo: GIT + EclipseGIT Demo: GithubGIT Recap: Local RepositoriesGIT Recap: Remote RepositoriesLesson 5: Requirements EngineeringInterview with Jane Cleland-HuangGeneral RE DefinitionSoftware Intensive SystemsFunctional and Nonfunctional RequirementsUser and System RequirementsModeling RequirementsAnalyzing RequirementsRequirements PrioritizationRequirements Engineering ProcessLesson 6: OO Software and UMLObject Orientation IntroductionUML Structural Diagrams: Class DiagramsClass Diagram: Creation TipsUML Structural Diagrams: Component DiagramUML Structural Diagram: Deployment DiagramUML Behavioral Diagram: Use CaseUse Case Diagram: Creation TipsUML Behavioral Diagrams: SequenceUML Behavioral Diagrams: State Transition DiagramLesson 7: Software ArchitectureInterview with Nenad MedvidovicWhat is Software Architecture?Prescriptive vs. Descriptive ArchitectureArchitectural EvolutionArchitectural DegradationArchitectural RecoveryArchitectural ElementsComponents, Connectors, and ConfigurationDeployment Architectural PerspectiveLesson 8: A Tale of Analysis and DesignAnalyzing RequirementsRefining Classes and AttributesAdding AttributesIdentifying OperationsRefining the Class DiagramLesson 9: Design PatternsPatterns CataloguePattern FormatFactory Method PatternStrategy PatternChoosing a PatternNegative Design PatternsLesson 10: Unified Software ProcessUse-Case DrivenInception PhaseElaboration PhaseConstruction PhaseTransition PhasePhases and IterationsLesson 11: General ConceptsFailure, Fault and ErrorVerification ApproachesPros and Cons of ApproachesTesting IntroductionTesting Granularity LevelsAlpha and Beta TestingBlack and White Box Testing IntroductionLesson 12: Black-Box TestingSystematic Functional Testing ApproachTest Data SelectionCategory Partition MethodProduce and Evaluate Test Case SpecificationsGenerate Test Cases from Test Case SpecificationsModel Based TestingFinite State MachinesLesson 13: White-Box TestingCoverage Criteria IntroStatement CoverageControl Flow GraphsTest Criteria SubsumptionMC/DC CoverageLesson 14: Agile Development MethodsCost of ChangeAgile Software DevelopmentExtreme Programming (XP)XP&rsquo;s Values and PrinciplesTest First DevelopmentRefactoringPair ProgrammingContinuous IntegrationTesting StrategyHigh Level Scrum ProcessLesson 15: Software RefactoringReasons to RefactorRefactoring DemoRefactoring RisksCost of RefactoringWhen Not to Refactor",
        "desc_html": "In SDLC, you will learn how to select and implement the ideal software process\nfor your development project. Through Professor Orso's engaging examples and\ninterviews with industry insiders, you will learn both conceptual and\npractical aspects of software engineering. The course covers requirements\nengineering, architecture and design, testing and maintenance, and software\nquality in general.\n\nThe goal of this class is to equip you with the skills necessary to define\nrequirements, set up an integrated development environment (IDE), learn Git\n(and Github!) and use Unified Modeling Language (UML) to design and build an\nAndroid application. We will also examine several testing practices and\nrefactoring techniques that are helpful before the launch of your software\nproject.\n\nWhile everyone working with software should have these skills, they are\nparticularly important for Software Engineers and Engineering Managers.\n\n_SDLC is offered as Software Development Processes at Georgia Tech where it is\na part of the Online Masters Degree (OMS). Taking this course here will not\nearn credit towards the OMS degree._\n\n**Why Take This Course?**\n\nSoftware engineering isn't just about programming. It isn't just about\nbuilding a technology stack.\n\nThis course introduces the idea of software engineering as an iterative,\nsystematic process. You will learn to use Github and Eclipse as you get\nintroduced to the development life cycle, design processes and software\ntesting.\n\nSoftware Development Life Cycles will show you the skills and processes needed\nto complement technical understanding of software products in order to make\nyou a more effective developer in an engineering team.\n\nIn the final project, you will go through all the stages of software\ndevelopment and work with your coach in order to plan and build an Android\napplication.\n\n**Prerequisites and Requirements**\n\nA strong familiarity with Android development (perhaps through [Developing\nAndroid Apps](https://www.udacity.com/course/ud853)) is expected.\n\n**Projects**\n\nFollow the Software Development Life Cycle to design, test and build an\nAndroid app based on requirements.\n\n\n\n## Syllabus\n\n**Lesson 1: Introduction and Overview**\n\n  * Importance of Software Engineering\n  * Discipline of Software Engineering\n  * The Software Crisis\n  * Software Phases\n\n**Lesson 2: Life Cycle Models**\n\n  * Introduction with Barry Bohem\n  * Requirements Engineering\n  * Design\n  * Maintenance\n  * Software Process Model Introduction\n  * Waterfall Process\n  * Spiral Process\n  * Evolutionary Prototyping Process\n  * Rational Unified Process\n  * Agile Process\n  * Choosing a Model\n  * Lifecycle Documents\n\n**Lesson 3: Integrated Development Environment**\n\n  * Eclipse Introduction\n  * IDE Overview\n  * Plug-Ins\n  * Eclipse Demo: Create Java Project\n  * Eclipse Demo: Create a Class\n  * Eclipse Demo: Run Configuration\n  * Eclipse Demo: Debugging\n\n**Lesson 4: Version Control Systems**\n\n  * Interview with John Britton\n  * Version Control System Introduction\n  * Two Main Types of VCS\n  * Introduction to GIT\n  * GIT Workflow\n  * GIT Demo: Intro to GIT\n  * GIT Demo: GIT + Eclipse\n  * GIT Demo: Github\n  * GIT Recap: Local Repositories\n  * GIT Recap: Remote Repositories\n\n**Lesson 5: Requirements Engineering**\n\n  * Interview with Jane Cleland-Huang\n  * General RE Definition\n  * Software Intensive Systems\n  * Functional and Nonfunctional Requirements\n  * User and System Requirements\n  * Modeling Requirements\n  * Analyzing Requirements\n  * Requirements Prioritization\n  * Requirements Engineering Process\n\n**Lesson 6: OO Software and UML**\n\n  * Object Orientation Introduction\n  * UML Structural Diagrams: Class Diagrams\n  * Class Diagram: Creation Tips\n  * UML Structural Diagrams: Component Diagram\n  * UML Structural Diagram: Deployment Diagram\n  * UML Behavioral Diagram: Use Case\n  * Use Case Diagram: Creation Tips\n  * UML Behavioral Diagrams: Sequence\n  * UML Behavioral Diagrams: State Transition Diagram\n\n**Lesson 7: Software Architecture**\n\n  * Interview with Nenad Medvidovic\n  * What is Software Architecture?\n  * Prescriptive vs. Descriptive Architecture\n  * Architectural Evolution\n  * Architectural Degradation\n  * Architectural Recovery\n  * Architectural Elements\n  * Components, Connectors, and Configuration\n  * Deployment Architectural Perspective\n\n**Lesson 8: A Tale of Analysis and Design**\n\n  * Analyzing Requirements\n  * Refining Classes and Attributes\n  * Adding Attributes\n  * Identifying Operations\n  * Refining the Class Diagram\n\n**Lesson 9: Design Patterns**\n\n  * Patterns Catalogue\n  * Pattern Format\n  * Factory Method Pattern\n  * Strategy Pattern\n  * Choosing a Pattern\n  * Negative Design Patterns\n\n**Lesson 10: Unified Software Process**\n\n  * Use-Case Driven\n  * Inception Phase\n  * Elaboration Phase\n  * Construction Phase\n  * Transition Phase\n  * Phases and Iterations\n\n**Lesson 11: General Concepts**\n\n  * Failure, Fault and Error\n  * Verification Approaches\n  * Pros and Cons of Approaches\n  * Testing Introduction\n  * Testing Granularity Levels\n  * Alpha and Beta Testing\n  * Black and White Box Testing Introduction\n\n**Lesson 12: Black-Box Testing**\n\n  * Systematic Functional Testing Approach\n  * Test Data Selection\n  * Category Partition Method\n  * Produce and Evaluate Test Case Specifications\n  * Generate Test Cases from Test Case Specifications\n  * Model Based Testing\n  * Finite State Machines\n\n**Lesson 13: White-Box Testing**\n\n  * Coverage Criteria Intro\n  * Statement Coverage\n  * Control Flow Graphs\n  * Test Criteria Subsumption\n  * MC/DC Coverage\n\n**Lesson 14: Agile Development Methods**\n\n  * Cost of Change\n  * Agile Software Development\n  * Extreme Programming (XP)\n  * XP's Values and Principles\n  * Test First Development\n  * Refactoring\n  * Pair Programming\n  * Continuous Integration\n  * Testing Strategy\n  * High Level Scrum Process\n\n**Lesson 15: Software Refactoring**\n\n  * Reasons to Refactor\n  * Refactoring Demo\n  * Refactoring Risks\n  * Cost of Refactoring\n  * When Not to Refactor\n\n",
        "name": "Software Development Life Cycles",
        "provider": "Udacity",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Georgia Institute of Technology"
        ],
        "url": "https://www.udacity.com/course/ud805",
        "video_url": "https://www.youtube.com/embed/JmIoSaNBPLo?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-07-21",
        "desc": "This MOOC describes by example how to connect Android mobile devices to clouds via the use of object-oriented design techniques, Java programming language features,&nbsp;Jetty&nbsp;middleware,&nbsp;Java Servlets, the&nbsp;Java Spring Framework, and&nbsp;cloud computing platforms, such as&nbsp;Google App Engine. Although there will be 10 weeks of lecture material, the required core of the course is six weeks long and can be completed flexibly within the ten week schedule to provide flexibility for students during the summer.An extended case study project will be used throughout the required core of the MOOC to showcase architectures for communicating with the cloud using HTTP, server-side processing of mobile data using servlets and the Java Spring Framework, and scalable storage of data using no-SQL databases and other platforms. Due to the importance of building secure and scalable mobile/cloud platforms, this MOOC will not only show you how to program handheld systems that talk to the cloud, but how to do so securely, scalably, and efficiently. Security and scalability topics will be woven into discussions of cloud service creation so that students learn, from the start, how to create robust cloud services for mobile devices.Four weeks of optional lecture material will also be provided for students who would like to gain a deeper understanding of the patterns and frameworks for building cloud infrastructure building. This material will be presented in the context of the open-source&nbsp;JAWSweb server, which is implemented in C++ as part of theACEopen-source object-oriented concurrent and networked programming toolkit.Although the cloud service topics in this course will be taught in the context of connecting mobile devices to the cloud, the concepts are broader and will give students the ability to create the cloud services to support large-scale web applications, such as social networking applications; cloud services for embedded systems, such as the Internet of Things and Industrial Internet; and wearable computing devices, such as Google Glass.&nbsp;Note: This course is part of a trans-institution sequence of MOOCs entitledMobile Cloud Computing with AndroidThis MOOC and two others, taught byDr. Adam Porterfrom the University of Maryland andDr. Douglas C. Schmidtfrom Vanderbilt University, have been designed\nto complement one another as part of the first trans-institution Specialization taught on the Coursera platform. Some of the programming assignments and the course project for these MOOCs will be coordinated. Dr. Porter's MOOC,Programming Mobile Applications for Android Handheld Systems,\nwill be taught first; it focuses on the design and programming of user-facing application components. Dr. Schmidt's MOOC,&nbsp;Programming Mobile Services for Android Handheld Systems,&nbsp;will be taught\nnext; it focuses on middleware systems programming topics, such as synchronous and asynchronous concurrency models, background service processing, structured data management, local inter-process communication and networking. This MOOC introduces the concepts\nand knowledge needed to connect the user-facing and service-based components, built in the first two courses, to the cloud.If you just want to take some of the MOOCs in this sequence or take them all in different order you\u2019re certainly welcome to do so, and you\u2019ll still learn a lot. If you take all the MOOCs in this sequence in the order presented, however, you\u2019ll gain a\n    deeper, end-to-end understanding of handheld systems, their applications and services, as well as their integration into the cloud.SyllabusThe course is organized into the sections outlined below.Section 1: Talking to the Cloud with HTTPModule 1: The HTTP ProtocolIntroductionWhat are Communication Protocols?Intro to HTTPWhy HTTP?What is a cloud service?HTTP Request MethodsHTTP Request AnatomyURLs Query ParametersMime Types Content Type HeaderRequest Body EncodingHTTP Response AnatomyHTTP Response CodesCookiesModule 2: Designing Applications with HTTP CommunicationBuilding Cloud Services on HTTPProtocol Layering / HTTP Design MethodologiesRESTHTTP PollingPush MessagingSection 2: Building Java Cloud ServicesModule 1: Java ServletsWhat are Servlets?A First Cloud Service with a ServletWeb.xmlVideo Servlet Code WalkthroughVideo Servlet Test Walkthrough with HttpClientSecurely Handling Client Data Avoiding Injection AttacksModule 2: Better Abstractions for Building Java Cloud ServicesIntro to Java AnnotationsHTTP to Object MarshallingIntro to JSONThe Spring Dispatcher Servlet and the Controller AbstractionIntro to Spring ControllersAccepting Client Data with RequestParam AnnotationsAccepting Client Data with PathVar AnnotationsAccepting Client Data with RequestBody Annotations and JSONHandling Multipart DataGenerating Responses with the ResponseBody AnnotationCustom Marshalling with Jackson Annotations Serializers/DeserializersSpring Boot Application StructureSpring Controller Code WalkthroughSpring Controller Test Code WalkthroughModule 3: Better Client-side Communication AbstractionsIntroduction to RetrofitRetrofit Client Code WalkthroughAndroid Retrofit Client Code WalkthroughModule 4: Building Loosely Coupled and Extensible Java ServicesSpring Dependency Injection Auto-wiringSpring Configuration AnnotationsSpring Dependency Injection Controller Code WalkthroughSpring Dependency Injection Controller Test Code WalkthroughSection 3: Building Database-driven Java Cloud ServicesModule 1: Persistent ObjectsObject to DB MappingJPAEntitiesRepositoriesUnderstanding SQL Injection AttacksSpring Data Code WalkthroughModule 2: RESTful Services for Persistent ObjectsSpring Data RESTSpring Data REST Code WalkthroughSection 4: Restricting Service Access with User AccountsModule 1: Secure HTTP CommunicationMan in the Middle Attacks Public Key InfrastructureHTTPSModule 2: What was I Saying: Keeping Track of SessionsSessionsSpring Security OverviewSpring Security Configuration in JavaBuilding a Custom UserDetailsServiceSetting up a custom UserDetailsServiceThe PrincipalSpring Security Role AnnotationsMore Complex Expression-based Pre Post Authorize AnnotationsSpring Security Controller Code WalkthroughSpring Security Controller Test Code WalkthroughModule 3: Authenticating Mobile ClientsStateful Sessions with Cookies Why They Aren't Ideal for MobileStateless Sessions with TokensOAuth 2.0Spring Security OAuth 2.0A Spring OAuth 2.0 Secured ServiceA Retrofit Oauth 2.0 Client for Password GrantsSection 5: Deploying to the Cloud ScalingModule 1: General Scaling StrategiesStateless vs. Stateful ApplicationsHorizontal ScalingAuto-scaling HorizontallyCachingOffloading to Cloud Provider ServicesAsynchronous IO in ControllersModule 2: Scaling Up Data StorageNoSQL DatabasesOptimizing for Key-based LookupsOptimizing for Reads vs. WritesContention ShardingMongo DBSpring Data Mongo DBDatabase as a ServiceAmazon DynamoSpring Data Dynamo DBApp Engine Big TableModule 3: Automating Packaging DeploymentDeploying to Infrastructure as a ServiceDeploying to Amazon EC2Packaging Web Applications into WAR filesAdapting Spring Boot Applications for Google App EngineDeploying to App EngineModule 4: Performance TestingIntro to Cloud Service Performance TestingApache JMeterBuilding Realistic TestsSection 6: Patterns and Frameworks for Concurrent and Networked Server Software [Optional Material]Module 1: Introduction to the Web Server Case StudyApplying Patterns and Frameworks to Concurrent and Networked SoftwareOverview of JAWS Web Server Case Study: Part 1Overview of JAWS Web Server Case Study: Part 2Overview of JAWS Web Server Case Study: Part 3Module 2: Patterns and Frameworks for Service Access and CommunicationAccidental Complexities with the Sockets APIThe Wrapper Facade PatternACE C++ Socket Wrapper FacadesApplying the ACE Wrapper Facades to a Web Client and ServerModule 3: Patterns and Frameworks for Synchronous Event Handling, Connections, and Service InitializationThe Reactor and Acceptor-Connector PatternsThe ACE Reactor FrameworkApplying the ACE Reactor to JAWSThe ACE Acceptor-Connector Framework and Applying it to JAWSPatterns and Frameworks for Service Configuration and ActiviationThe Component Configurator PatternThe ACE Service Configurator FrameworkApplying the ACE Service Configurator to JAWSApplying the Activator Pattern to JAWSPatterns and Frameworks for Concurrency and SynchronizationThe Active Object PatternThe ACE Task FrameworkApplying ACE Task and Acceptor-Connector to JAWSThe Half-Sync/Half-Async PatternImplementing Half-Sync/Half-Async Using ACEThe Monitor Object PatternApplying the Monitor Object and Synchronization Patterns to JAWSThe Leader/Followers PatternApplying the Leader/Followers Pattern and ACE_TP_Reactor to JAWSPatterns and Frameworks for Asynchronous Event HandlingThe Proactor patternThe ACE Proactor FrameworkApplying the ACE Proactor Framework to JAWSThe Asynchronous Completion Token Pattern and Applying it to JAWSSummaryEvaluating Patterns and Frameworks for Concurrent and Networked Software",
        "desc_html": "This MOOC describes by example how to connect Android mobile devices to clouds\nvia the use of object-oriented design techniques, Java programming language\nfeatures, [Jetty](http://www.eclipse.org/jetty/) middleware, [Java\nServlets](http://www.oracle.com/technetwork/java/index-jsp-135475.html), the\n[Java Spring Framework](http://projects.spring.io/spring-framework/), and\n[cloud computing platforms](http://en.wikipedia.org/wiki/Cloud_computing),\nsuch as [Google App Engine](https://developers.google.com/appengine/).\nAlthough there will be 10 weeks of lecture material, the required core of the\ncourse is six weeks long and can be completed flexibly within the ten week\nschedule to provide flexibility for students during the summer.\n\nAn extended case study project will be used throughout the required core of\nthe MOOC to showcase architectures for communicating with the cloud using\nHTTP, server-side processing of mobile data using servlets and the Java Spring\nFramework, and scalable storage of data using no-SQL databases and other\nplatforms. Due to the importance of building secure and scalable mobile/cloud\nplatforms, this MOOC will not only show you how to program handheld systems\nthat talk to the cloud, but how to do so securely, scalably, and efficiently.\nSecurity and scalability topics will be woven into discussions of cloud\nservice creation so that students learn, from the start, how to create robust\ncloud services for mobile devices.\n\nFour weeks of optional lecture material will also be provided for students who\nwould like to gain a deeper understanding of the patterns and frameworks for\nbuilding cloud infrastructure building. This material will be presented in the\ncontext of the open-source [JAWS](http://www.dre.vanderbilt.edu/JAWS/) web\nserver, which is implemented in C++ as part of the\n[ACE](http://www.dre.vanderbilt.edu/ACE/) open-source object-oriented\nconcurrent and networked programming toolkit.\n\nAlthough the cloud service topics in this course will be taught in the context\nof connecting mobile devices to the cloud, the concepts are broader and will\ngive students the ability to create the cloud services to support large-scale\nweb applications, such as social networking applications; cloud services for\nembedded systems, such as the Internet of Things and Industrial Internet; and\nwearable computing devices, such as Google Glass.\n\n  \n**Note: This course is part of a trans-institution sequence of MOOCs entitled [Mobile Cloud Computing with Android](https://www.coursera.org/specialization/mobilecloudcomputing/2)**\n\nThis MOOC and two others, taught by [Dr. Adam\nPorter](http://www.cs.umd.edu/~aporter) from the University of Maryland and\n[Dr. Douglas C. Schmidt](http://www.dre.vanderbilt.edu/~schmidt) from\nVanderbilt University, have been designed to complement one another as part of\nthe first trans-institution Specialization taught on the Coursera platform.\nSome of the programming assignments and the course project for these MOOCs\nwill be coordinated. Dr. Porter's MOOC, [Programming Mobile Applications for\nAndroid Handheld Systems](https://www.coursera.org/course/android), will be\ntaught first; it focuses on the design and programming of user-facing\napplication components. Dr. Schmidt's MOOC, [Programming Mobile Services for\nAndroid Handheld Systems](http://www.coursera.org/course/posa), will be taught\nnext; it focuses on middleware systems programming topics, such as synchronous\nand asynchronous concurrency models, background service processing, structured\ndata management, local inter-process communication and networking. This MOOC\nintroduces the concepts and knowledge needed to connect the user-facing and\nservice-based components, built in the first two courses, to the cloud.  \n  \n\nIf you just want to take some of the MOOCs in this sequence or take them all\nin different order you\u2019re certainly welcome to do so, and you\u2019ll still learn a\nlot. If you take all the MOOCs in this sequence in the order presented,\nhowever, you\u2019ll gain a deeper, end-to-end understanding of handheld systems,\ntheir applications and services, as well as their integration into the cloud.\n\n## Syllabus\n\nThe course is organized into the sections outlined below.\n\n**Section 1: Talking to the Cloud with HTTP**  \n\n  * Module 1: The HTTP Protocol\n    * Introduction\n    * What are Communication Protocols?\n    * Intro to HTTP\n    * Why HTTP?\n    * What is a cloud service?\n    * HTTP Request Methods\n    * HTTP Request Anatomy\n    * URLs Query Parameters\n    * Mime Types Content Type Header\n    * Request Body Encoding\n    * HTTP Response Anatomy\n    * HTTP Response Codes\n    * Cookies\n  * Module 2: Designing Applications with HTTP Communication\n    * Building Cloud Services on HTTP\n    * Protocol Layering / HTTP Design Methodologies\n    * REST\n    * HTTP Polling\n    * Push Messaging\n**Section 2: Building Java Cloud Services**\n\n  * Module 1: Java Servlets\n    * What are Servlets?\n    * A First Cloud Service with a Servlet\n    * Web.xml\n    * Video Servlet Code Walkthrough\n    * Video Servlet Test Walkthrough with HttpClient\n    * Securely Handling Client Data Avoiding Injection Attacks\n  * Module 2: Better Abstractions for Building Java Cloud Services\n    * Intro to Java Annotations\n    * HTTP to Object Marshalling\n    * Intro to JSON\n    * The Spring Dispatcher Servlet and the Controller Abstraction\n    * Intro to Spring Controllers\n    * Accepting Client Data with RequestParam Annotations\n    * Accepting Client Data with PathVar Annotations\n    * Accepting Client Data with RequestBody Annotations and JSON\n    * Handling Multipart Data\n    * Generating Responses with the ResponseBody Annotation\n    * Custom Marshalling with Jackson Annotations Serializers/Deserializers\n    * Spring Boot Application Structure\n    * Spring Controller Code Walkthrough\n    * Spring Controller Test Code Walkthrough\n  * Module 3: Better Client-side Communication Abstractions\n    * Introduction to Retrofit\n    * Retrofit Client Code Walkthrough\n    * Android Retrofit Client Code Walkthrough\n  * Module 4: Building Loosely Coupled and Extensible Java Services\n    * Spring Dependency Injection Auto-wiring\n    * Spring Configuration Annotations\n    * Spring Dependency Injection Controller Code Walkthrough\n    * Spring Dependency Injection Controller Test Code Walkthrough\n**Section 3: Building Database-driven Java Cloud Services**\n\n  * Module 1: Persistent Objects\n    * Object to DB Mapping\n    * JPA\n    * Entities\n    * Repositories\n    * Understanding SQL Injection Attacks\n    * Spring Data Code Walkthrough\n  * Module 2: RESTful Services for Persistent Objects\n    * Spring Data REST\n    * Spring Data REST Code Walkthrough\n**Section 4: Restricting Service Access with User Accounts**\n\n  * Module 1: Secure HTTP Communication\n    * Man in the Middle Attacks Public Key Infrastructure\n    * HTTPS\n  * Module 2: What was I Saying: Keeping Track of Sessions\n    * Sessions\n    * Spring Security Overview\n    * Spring Security Configuration in Java\n    * Building a Custom UserDetailsService\n    * Setting up a custom UserDetailsService\n    * The Principal\n    * Spring Security Role Annotations\n    * More Complex Expression-based Pre Post Authorize Annotations\n    * Spring Security Controller Code Walkthrough\n    * Spring Security Controller Test Code Walkthrough\n  * Module 3: Authenticating Mobile Clients\n    * Stateful Sessions with Cookies Why They Aren't Ideal for Mobile\n    * Stateless Sessions with Tokens\n    * OAuth 2.0\n    * Spring Security OAuth 2.0\n    * A Spring OAuth 2.0 Secured Service\n    * A Retrofit Oauth 2.0 Client for Password Grants\n**Section 5: Deploying to the Cloud Scaling**\n\n  * Module 1: General Scaling Strategies\n    * Stateless vs. Stateful Applications\n    * Horizontal Scaling\n    * Auto-scaling Horizontally\n    * Caching\n    * Offloading to Cloud Provider Services\n    * Asynchronous IO in Controllers\n  * Module 2: Scaling Up Data Storage\n    * NoSQL Databases\n    * Optimizing for Key-based Lookups\n    * Optimizing for Reads vs. Writes\n    * Contention Sharding\n    * Mongo DB\n    * Spring Data Mongo DB\n    * Database as a Service\n    * Amazon Dynamo\n    * Spring Data Dynamo DB\n    * App Engine Big Table\n  * Module 3: Automating Packaging Deployment\n    * Deploying to Infrastructure as a Service\n    * Deploying to Amazon EC2\n    * Packaging Web Applications into WAR files\n    * Adapting Spring Boot Applications for Google App Engine\n    * Deploying to App Engine\n  * Module 4: Performance Testing\n    * Intro to Cloud Service Performance Testing\n    * Apache JMeter\n    * Building Realistic Tests\n**Section 6: Patterns and Frameworks for Concurrent and Networked Server Software [Optional Material]**\n\n  * Module 1: Introduction to the Web Server Case Study\n    * Applying Patterns and Frameworks to Concurrent and Networked Software\n    * Overview of JAWS Web Server Case Study: Part 1\n    * Overview of JAWS Web Server Case Study: Part 2\n    * Overview of JAWS Web Server Case Study: Part 3\n  * Module 2: Patterns and Frameworks for Service Access and Communication\n    * Accidental Complexities with the Sockets API\n    * The Wrapper Facade Pattern\n    * ACE C++ Socket Wrapper Facades\n    * Applying the ACE Wrapper Facades to a Web Client and Server\n  * Module 3: Patterns and Frameworks for Synchronous Event Handling, Connections, and Service Initialization\n    * The Reactor and Acceptor-Connector Patterns\n    * The ACE Reactor Framework\n    * Applying the ACE Reactor to JAWS\n    * The ACE Acceptor-Connector Framework and Applying it to JAWS\n  * Patterns and Frameworks for Service Configuration and Activiation\n    * The Component Configurator Pattern\n    * The ACE Service Configurator Framework\n    * Applying the ACE Service Configurator to JAWS\n    * Applying the Activator Pattern to JAWS\n  * Patterns and Frameworks for Concurrency and Synchronization\n    * The Active Object Pattern\n    * The ACE Task Framework\n    * Applying ACE Task and Acceptor-Connector to JAWS\n    * The Half-Sync/Half-Async Pattern\n    * Implementing Half-Sync/Half-Async Using ACE\n    * The Monitor Object Pattern\n    * Applying the Monitor Object and Synchronization Patterns to JAWS\n    * The Leader/Followers Pattern\n    * Applying the Leader/Followers Pattern and ACE_TP_Reactor to JAWS\n  * Patterns and Frameworks for Asynchronous Event Handling\n    * The Proactor pattern\n    * The ACE Proactor Framework\n    * Applying the ACE Proactor Framework to JAWS\n    * The Asynchronous Completion Token Pattern and Applying it to JAWS\n  * Summary\n    * Evaluating Patterns and Frameworks for Concurrent and Networked Software\n\n",
        "name": "Programming Cloud Services for Android Handheld Systems",
        "provider": "Coursera",
        "rating": "3",
        "reviews": "1",
        "university": [
            "Vanderbilt University"
        ],
        "url": "https://www.coursera.org/course/mobilecloud",
        "video_url": ""
    },
    {
        "date": "2014-07-18",
        "desc": "Para este curso hemos seleccionado algunos de los contenidos matem&aacute;ticos fundamentales que el alumno debe dominar al finalizar el Bachillerato.Se iniciar&aacute; el curso con un repaso sobre trigonometr&iacute;a y despu&eacute;s pasaremos al estudio de los n&uacute;meros complejos, donde la trigonometr&iacute;a juega un papel fundamental. Despu&eacute;s seguiremos con la funci&oacute;n exponencial y logaritmos, continuando entonces con el c&aacute;lculo de l&iacute;mites de funciones reales de variable real. Despu&eacute;s revisaremos el c&aacute;lculo de derivadas, para acabar con el c&aacute;lculo de los tipos de integrales que se han estudiado en Educaci&oacute;n Secundaria.Conocimientos necesarios:Operaciones con n&uacute;meros enteros, fracciones y radicales, resoluci&oacute;n de ecuaciones y sistemas de ecuaciones de primer y segundo grado, polinomios y representaci&oacute;n de funciones afines y cuadr&aacute;ticas.SyllabusM&oacute;dulo 0: Presentaci&oacute;n.M&oacute;dulo 1: Trigonometr&iacute;a 1.M&oacute;dulo 2: Trigonometr&iacute;a 2.M&oacute;dulo 3: N&uacute;meros complejos.M&oacute;dulo 4: Funci&oacute;n exponencial y logaritmos.M&oacute;dulo 5: Funciones y L&iacute;mites 1M&oacute;dulo 6: Funciones y L&iacute;mites 2.M&oacute;dulo 7: Derivadas.M&oacute;dulo 8: Introducci&oacute;n a las integrales, integrales inmediatas.M&oacute;dulo 9: Integrales tipo arcoseno, arcotangente y arcotangente m&aacute;s logaritmo.",
        "desc_html": "Para este curso hemos seleccionado algunos de los contenidos matematicos\nfundamentales que el alumno debe dominar al finalizar el Bachillerato.\n\nSe iniciara el curso con un repaso sobre trigonometria y despues pasaremos al\nestudio de los numeros complejos, donde la trigonometria juega un papel\nfundamental. Despues seguiremos con la funcion exponencial y logaritmos,\ncontinuando entonces con el calculo de limites de funciones reales de variable\nreal. Despues revisaremos el calculo de derivadas, para acabar con el calculo\nde los tipos de integrales que se han estudiado en Educacion Secundaria.\n\nConocimientos necesarios:\n\nOperaciones con numeros enteros, fracciones y radicales, resolucion de\necuaciones y sistemas de ecuaciones de primer y segundo grado, polinomios y\nrepresentacion de funciones afines y cuadraticas.\n\n## Syllabus\n\nModulo 0: Presentacion.\n\nModulo 1: Trigonometria 1.\n\nModulo 2: Trigonometria 2.\n\nModulo 3: Numeros complejos.\n\nModulo 4: Funcion exponencial y logaritmos.\n\nModulo 5: Funciones y Limites 1\n\nModulo 6: Funciones y Limites 2.\n\nModulo 7: Derivadas.\n\nModulo 8: Introduccion a las integrales, integrales inmediatas.\n\nModulo 9: Integrales tipo arcoseno, arcotangente y arcotangente mas logaritmo.\n\n",
        "name": "Matem\u00e1ticas b\u00e1sicas",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Universidad Polit\u00e9cnica de Cartagena"
        ],
        "url": "https://www.miriadax.net/web/matematicas-basicas-4edicion",
        "video_url": "https://www.youtube.com/embed/45dJX_H6jXQ?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-07-15",
        "desc": "Android Fundamentals blends theory and practice to help you build great apps the right way. In this course, you'll work with instructors, step-by-step, to build an Android app, and learn best practices of mobile development in general and Android development in particular.Why Take This Course?With over 1 billion Android devices already activated, Android represents an incredible opportunity for developers.As Android continues to grow beyond smartphones, it will become the brains behind invisible, ubiquitous cloud-connected computing. The skills you learn in this course will help you build awesome apps for smartphones and tablets today, and propel you towards exciting opportunities in Android's future.By the end of this course, you&rsquo;ll build a cloud-connected Android app, and understand the tools, principles, and patterns that underlie all Android development. You&rsquo;ll understand the challenges associated with developing for the mobile environment (and how to overcome them), learn how to build a great user experience for Android devices, and apply this knowledge to your own projects.Prerequisites and RequirementsYou should have strong working knowledge of Java or another object-oriented programming language. Udacity's&nbsp;Intro to Java&nbsp;is a helpful background if you're looking to refresh your Java skills.You will be expected to download&nbsp;Android Studio&nbsp;in order to follow along with the instructors throughout the course. You also should be comfortable working with code on&nbsp;Github.Access to an Android device is helpful -- but not required -- to complete the final project.Finally, while not a formal prerequisite,&nbsp;UX Design for Mobile&nbsp;(also taught in collaboration with Google) is a good companion course to this one.SyllabusSyllabusLesson 1: Create Project Sunshine with a Simple UI (5-8 hrs)Starting by installing Android Studio, you&rsquo;ll create your first project with a simple list-based user interface and built and deploy it to virtual and actual devices. You&rsquo;ll also discover what makes mobile - and Android in particular - a unique environment for app development.Android Studio, Gradle, and debugging toolsUser Interface and Layout managersListViews and AdaptersLesson 2: Connect Sunshine to the Cloud (5-8 hrs)Replace the mock data with real weather data by connecting Sunshine up to an Internet back-end courtesy of the Open Weather Map API. You&rsquo;ll learn how to add permissions to your app, initiate network I/O, and how to move time consuming tasks like network data transfers off the main UI thread.Threading and ASyncTaskHTTP requests on web APIsAndroid Permission SystemLesson 3: Create New Activities and Navigate Apps with Intents (8-12 hrs)Give your app structure and create more complex Activities. You&rsquo;ll learn about Android&rsquo;s Intent framework, and how to use Intents to navigate between Activities, both within your app and as a way to add 3rd party functionality.App navigation with Explicit IntentsImplicit Intents to incorporate 3rd-party appsShare Intent and the Android sharing frameworkBroadcast Intents and Broadcast ReceiversLessons 4: Use Content Providers and Loaders to Persist and Recover Data (15-20 hrs)Learn how the Android framework manages the activity lifecycle, and how it differs from what you might expect, and dive head-first into the world of persistent storage. Learn how to create databases, use Android&rsquo;s Content Providers to provide an abstraction layer between your data and your UI implementation, and use Loaders to efficiently load stored data.Activity lifecycle and background activity terminationSQLite databases and JUnit testsCreating and using a Content Provider as an abstraction layerUsing Loaders to asynchronously load dataCreating Adapters to bind UI components to Content ProvidersLesson 5: Implement Rich and Responsive Layouts (8-12 hrs)Create rich, responsive user interfaces that work across a variety of different hardware types and screen sizes. You&rsquo;ll learn more details on using the Android Layout managers, Fragments, UI widgets, and Android design principles to add visual polish to your user interfaces, and how to create your own controls from scratch.Fundamental Android design principlesSupporting localization and variable screen sizesOptimizing tablet UIs using FragmentsAccessibility FeaturesCustom viewsLesson 6: Use Services and Notifications to Run in the Background (5-8 hrs)Deliver a great user experience, even when your app isn&rsquo;t visible. Learn how the Android framework manages background apps; and discover how to use Services and Notifications to make your app to be active when it&rsquo;s not in the foreground. You&rsquo;ll learn techniques for efficient data transfers using SyncAdapters and Google Cloud Messaging, so your app can stay up-to-date without draining the battery.Background services and alarms to schedule background tasksEfficient background data transfers with SyncAdaptersRich notifications to interact with usersFinal ProjectBuild your own Android app incorporating the skills you've learned in this course.",
        "desc_html": "Android Fundamentals blends theory and practice to help you build great apps\nthe right way. In this course, you'll work with instructors, step-by-step, to\nbuild an Android app, and learn best practices of mobile development in\ngeneral and Android development in particular.\n\n**Why Take This Course?**\n\nWith over 1 billion Android devices already activated, Android represents an\nincredible opportunity for developers.\n\nAs Android continues to grow beyond smartphones, it will become the brains\nbehind invisible, ubiquitous cloud-connected computing. The skills you learn\nin this course will help you build awesome apps for smartphones and tablets\ntoday, and propel you towards exciting opportunities in Android's future.\n\nBy the end of this course, you'll build a cloud-connected Android app, and\nunderstand the tools, principles, and patterns that underlie all Android\ndevelopment. You'll understand the challenges associated with developing for\nthe mobile environment (and how to overcome them), learn how to build a great\nuser experience for Android devices, and apply this knowledge to your own\nprojects.\n\n**Prerequisites and Requirements**\n\nYou should have strong working knowledge of Java or another object-oriented\nprogramming language. Udacity's [Intro to Java](http://www.udacity.com/cs046)\nis a helpful background if you're looking to refresh your Java skills.\n\nYou will be expected to download [Android\nStudio](http://developer.android.com/sdk/installing/studio.html) in order to\nfollow along with the instructors throughout the course. You also should be\ncomfortable working with code on [Github](http://www.github.com/).\n\nAccess to an Android device is helpful -- but not required -- to complete the\nfinal project.\n\nFinally, while not a formal prerequisite, [UX Design for\nMobile](https://www.udacity.com/course/ud849) (also taught in collaboration\nwith Google) is a good companion course to this one.\n\n## Syllabus\n\n**Syllabus**\n\n**Lesson 1: Create Project Sunshine with a Simple UI (5-8 hrs)**\n\nStarting by installing Android Studio, you'll create your first project with a\nsimple list-based user interface and built and deploy it to virtual and actual\ndevices. You'll also discover what makes mobile - and Android in particular -\na unique environment for app development.\n\n  * Android Studio, Gradle, and debugging tools\n  * User Interface and Layout managers\n  * ListViews and Adapters\n**Lesson 2: Connect Sunshine to the Cloud (5-8 hrs)**\n\nReplace the mock data with real weather data by connecting Sunshine up to an\nInternet back-end courtesy of the Open Weather Map API. You'll learn how to\nadd permissions to your app, initiate network I/O, and how to move time\nconsuming tasks like network data transfers off the main UI thread.\n\n  * Threading and ASyncTask\n  * HTTP requests on web APIs\n  * Android Permission System\n**Lesson 3: Create New Activities and Navigate Apps with Intents (8-12 hrs)**\n\nGive your app structure and create more complex Activities. You'll learn about\nAndroid's Intent framework, and how to use Intents to navigate between\nActivities, both within your app and as a way to add 3rd party functionality.\n\n  * App navigation with Explicit Intents\n  * Implicit Intents to incorporate 3rd-party apps\n  * Share Intent and the Android sharing framework\n  * Broadcast Intents and Broadcast Receivers\n**Lessons 4: Use Content Providers and Loaders to Persist and Recover Data (15-20 hrs)**\n\nLearn how the Android framework manages the activity lifecycle, and how it\ndiffers from what you might expect, and dive head-first into the world of\npersistent storage. Learn how to create databases, use Android's Content\nProviders to provide an abstraction layer between your data and your UI\nimplementation, and use Loaders to efficiently load stored data.\n\n  * Activity lifecycle and background activity termination\n  * SQLite databases and JUnit tests\n  * Creating and using a Content Provider as an abstraction layer\n  * Using Loaders to asynchronously load data\n  * Creating Adapters to bind UI components to Content Providers\n**Lesson 5: Implement Rich and Responsive Layouts (8-12 hrs)**\n\nCreate rich, responsive user interfaces that work across a variety of\ndifferent hardware types and screen sizes. You'll learn more details on using\nthe Android Layout managers, Fragments, UI widgets, and Android design\nprinciples to add visual polish to your user interfaces, and how to create\nyour own controls from scratch.\n\n  * Fundamental Android design principles\n  * Supporting localization and variable screen sizes\n  * Optimizing tablet UIs using Fragments\n  * Accessibility Features\n  * Custom views\n**Lesson 6: Use Services and Notifications to Run in the Background (5-8 hrs)**\n\nDeliver a great user experience, even when your app isn't visible. Learn how\nthe Android framework manages background apps; and discover how to use\nServices and Notifications to make your app to be active when it's not in the\nforeground. You'll learn techniques for efficient data transfers using\nSyncAdapters and Google Cloud Messaging, so your app can stay up-to-date\nwithout draining the battery.\n\n  * Background services and alarms to schedule background tasks\n  * Efficient background data transfers with SyncAdapters\n  * Rich notifications to interact with users\n**Final Project**\n\nBuild your own Android app incorporating the skills you've learned in this\ncourse.\n\n",
        "name": "Developing Android Apps:  Android Fundamentals",
        "provider": "Udacity",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Google"
        ],
        "url": "https://www.udacity.com/course/ud853",
        "video_url": "https://www.youtube.com/embed/GfuEwiSeRBY?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-07-15",
        "desc": "CS101 teaches the essential ideas of Computer Science for a zero-prior-experience audience. Computers can appear very complicated, but in reality, computers work within just a few, simple patterns. CS101 demystifies and brings those patterns to life, which is useful for anyone using computers today.In CS101, students play and experiment with short bits of \"computer code\" to bring to life to the power and limitations of computers. Everything works within the browser, so there is no extra software to download or install. CS101 also provides a general background on computers today: what is a computer, what is hardware, what is software, what is the internet. No previous experience is required other than the ability to use a web browser.SyllabusThe nature of computers and code, what they can and cannot doHow computer hardware works: chips, cpu, memory, diskNecessary jargon: bits, bytes, megabytes, gigabytesHow software works: what is a program, what is \"running\"How digital images workComputer code: loops and logicBig ideas: abstraction, logic, bugsHow structured data worksHow the internet works: ip address, routing, ethernet, wi-fiComputer security: viruses, trojans, and passwords, oh my!Analog vs. digitalDigital media, images, sounds, video, compression",
        "desc_html": "CS101 teaches the essential ideas of Computer Science for a zero-prior-\nexperience audience. Computers can appear very complicated, but in reality,\ncomputers work within just a few, simple patterns. CS101 demystifies and\nbrings those patterns to life, which is useful for anyone using computers\ntoday.\n\nIn CS101, students play and experiment with short bits of \"computer code\" to\nbring to life to the power and limitations of computers. Everything works\nwithin the browser, so there is no extra software to download or install.\nCS101 also provides a general background on computers today: what is a\ncomputer, what is hardware, what is software, what is the internet. No\nprevious experience is required other than the ability to use a web browser.\n\n## Syllabus\n\n  * The nature of computers and code, what they can and cannot do\n  * How computer hardware works: chips, cpu, memory, disk\n  * Necessary jargon: bits, bytes, megabytes, gigabytes\n  * How software works: what is a program, what is \"running\"\n  * How digital images work\n  * Computer code: loops and logic\n  * Big ideas: abstraction, logic, bugs\n  * How structured data works\n  * How the internet works: ip address, routing, ethernet, wi-fi\n  * Computer security: viruses, trojans, and passwords, oh my!\n  * Analog vs. digital\n  * Digital media, images, sounds, video, compression\n\n",
        "name": "CS101: Computer Science 101",
        "provider": "Stanford OpenEdx",
        "rating": "3",
        "reviews": "2",
        "university": [
            "Stanford University"
        ],
        "url": "https://class.stanford.edu/courses/Engineering/CS101/Summer2014/about",
        "video_url": "https://www.youtube.com/embed/nnBbf8FG5Hw?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-07-14",
        "desc": "If you use nearly any digital technology, you make use of metadata. Use\nan ATM today? You interacted with metadata about your account. Searched\nfor songs in iTunes or Spotify? You used metadata about those songs. We\nuse and even create metadata constantly, but we rarely realize it. Metadata\n-- or data about data -- describes real and digital objects, so that those\nobjects may be organized now and found later.Metadata is a tool that enables the information age functions performed\nby humans as well as those performed by computers. Metadata is important\nto many fields, particularly Computer Science; but this course is not purely\na Computer Science course. This course approaches Metadata from the perspective\nof Information Science, which is a broad interdisciplinary field that studies\nhow people create and manage information.SyllabusUnit 1: Organizing InformationUnit 2: Dublin CoreUnit 3: How to Build a Metadata SchemaUnit 4: Alphabet Soup: Metadata Schemas That You (Will) Know and LoveUnit 5: Metadata for the WebUnit 6: Metadata for NetworksUnit 7: How to Create MetadataUnit 8: How to Evaluate Metadata",
        "desc_html": "If you use nearly any digital technology, you make use of metadata. Use an ATM\ntoday? You interacted with metadata about your account. Searched for songs in\niTunes or Spotify? You used metadata about those songs. We use and even create\nmetadata constantly, but we rarely realize it. Metadata \\-- or data about data\n-- describes real and digital objects, so that those objects may be organized\nnow and found later.  \n  \nMetadata is a tool that enables the information age functions performed by\nhumans as well as those performed by computers. Metadata is important to many\nfields, particularly Computer Science; but this course is not purely a\nComputer Science course. This course approaches Metadata from the perspective\nof Information Science, which is a broad interdisciplinary field that studies\nhow people create and manage information.  \n\n## Syllabus\n\nUnit 1: Organizing Information  \nUnit 2: Dublin Core  \nUnit 3: How to Build a Metadata Schema  \nUnit 4: Alphabet Soup: Metadata Schemas That You (Will) Know and Love  \nUnit 5: Metadata for the Web  \nUnit 6: Metadata for Networks  \nUnit 7: How to Create Metadata  \nUnit 8: How to Evaluate Metadata\n\n",
        "name": "Metadata: Organizing and Discovering Information",
        "provider": "Coursera",
        "rating": "3.5",
        "reviews": "2",
        "university": [
            "The University of North Carolina at Chapel Hill"
        ],
        "url": "https://www.coursera.org/course/metadata",
        "video_url": ""
    },
    {
        "date": "2014-07-09",
        "desc": "\u0639\u0627\u062f\u0629 \u0645\u0627 \u064a\u062a\u0645 \u062c\u0645\u0639 \u0627\u062d\u062a\u064a\u0627\u062c\u0627\u062a \u0627\u0644\u0639\u0645\u064a\u0644\u060c \u062b\u0645 \u062a\u062d\u0648\u064a\u0644 \u0647\u0630\u0647 \u0627\u0644\u0627\u062d\u062a\u064a\u0627\u062c\u0627\u062a \u0627\u0644\u0649 \u0628\u0631\u0646\u0627\u0645\u062c\u060c \u0648\u064a\u0644\u064a \u0630\u0644\u0643 \u0645\u0631\u0627\u062d\u0644 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0644\u0644\u062a\u0623\u0643\u062f \u0645\u0646 \u0645\u0644\u0627\u0626\u0645\u0629 \u0627\u0644\u062e\u0631\u062c \u0644\u0644\u0627\u062d\u062a\u064a\u0627\u062c\u0627\u062a.\u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0637 \u0627\u0644\u0645\u0639\u062a\u0627\u062f \u0645\u0646 \u0627\u0644\u0628\u0631\u0645\u062c\u0629 \u064a\u062c\u0639\u0644 \u0647\u0646\u0627\u0643 \u0645\u0633\u0627\u0641\u0629 \u0628\u064a\u0646 \u0627\u062d\u062a\u064a\u0627\u062c\u0627\u062a \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0648\u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u060c \u062d\u064a\u062b \u064a\u062a\u0645 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631 \u0628\u0639\u062f \u0643\u062a\u0627\u0628\u0629 \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c.\u0641\u0645\u0627\u0630\u0627 \u0644\u0648 \u0642\u0645\u0646\u0627 \u0628\u0643\u062a\u0627\u0628\u0629 \u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a \u0639\u0644\u0649 \u0634\u0643\u0644 \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0628\u0635\u064a\u063a\u0629 \u064a\u0641\u0647\u0645\u0647\u0627 \u0627\u0644\u0639\u0645\u064a\u0644\u060c \u0648\u064a\u0648\u0627\u0641\u0642 \u0639\u0644\u064a\u0647\u0627\u060c \u062b\u0645 \u0643\u062a\u0627\u0628\u0629 \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c \u0627\u0644\u0630\u064a \u064a\u062d\u0642\u0642 \u0647\u0630\u0647 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a.\u0644\u064a\u0633 \u0630\u0644\u0643 \u0641\u062d\u0633\u0628\u060c \u0628\u0644 \u064a\u0643\u0648\u0646 \u0627\u0644\u0643\u0645\u0628\u064a\u0648\u062a\u0631 \u0647\u0648 \u0627\u0644\u0641\u064a\u0635\u0644\u060c \u062d\u064a\u062b \u0627\u0646\u0647 \u0647\u0648 \u0645\u0646 \u0633\u064a\u0646\u0641\u0630 \u0647\u0630\u0647 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a\u060c \u0648\u064a\u0624\u0643\u062f \u0627\u0646 \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c \u064a\u0633\u064a\u0631 \u062d\u0633\u0628 \u0627\u062d\u062a\u064a\u0627\u062c\u0627\u062a \u0627\u0644\u0639\u0645\u064a\u0644.\u0627\u0630\u0627 \u0643\u0646\u062a \u062a\u0631\u064a\u062f \u0628\u0631\u0646\u0627\u0645\u062c\u0627 \u0628\u062c\u0648\u062f\u0629 \u0639\u0627\u0644\u064a\u0629\u060c \u064a\u0648\u0627\u0641\u0642 \u0627\u062d\u062a\u064a\u0627\u062c\u0627\u062a \u0627\u0644\u0639\u0645\u064a\u0644\u060c \u0648\u064a\u0642\u0644\u0644 \u0645\u0646 \u062a\u0643\u0644\u0641\u0629 \u0627\u0635\u0644\u0627\u062d \u0627\u0644\u0627\u062e\u0637\u0627\u0621\u060c \u0641\u0647\u0630\u0627 \u0627\u0644\u0645\u0646\u0647\u062c \u0644\u0643.",
        "desc_html": "\u0639\u0627\u062f\u0629 \u0645\u0627 \u064a\u062a\u0645 \u062c\u0645\u0639 \u0627\u062d\u062a\u064a\u0627\u062c\u0627\u062a \u0627\u0644\u0639\u0645\u064a\u0644\u060c \u062b\u0645 \u062a\u062d\u0648\u064a\u0644 \u0647\u0630\u0647 \u0627\u0644\u0627\u062d\u062a\u064a\u0627\u062c\u0627\u062a \u0627\u0644\u0649 \u0628\u0631\u0646\u0627\u0645\u062c\u060c \u0648\u064a\u0644\u064a \u0630\u0644\u0643\n\u0645\u0631\u0627\u062d\u0644 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0644\u0644\u062a\u0623\u0643\u062f \u0645\u0646 \u0645\u0644\u0627\u0626\u0645\u0629 \u0627\u0644\u062e\u0631\u062c \u0644\u0644\u0627\u062d\u062a\u064a\u0627\u062c\u0627\u062a.  \n  \n\u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0637 \u0627\u0644\u0645\u0639\u062a\u0627\u062f \u0645\u0646 \u0627\u0644\u0628\u0631\u0645\u062c\u0629 \u064a\u062c\u0639\u0644 \u0647\u0646\u0627\u0643 \u0645\u0633\u0627\u0641\u0629 \u0628\u064a\u0646 \u0627\u062d\u062a\u064a\u0627\u062c\u0627\u062a \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0648\u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c\n\u0627\u0644\u0645\u0637\u0644\u0648\u0628\u060c \u062d\u064a\u062b \u064a\u062a\u0645 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631 \u0628\u0639\u062f \u0643\u062a\u0627\u0628\u0629 \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c.  \n  \n\u0641\u0645\u0627\u0630\u0627 \u0644\u0648 \u0642\u0645\u0646\u0627 \u0628\u0643\u062a\u0627\u0628\u0629 \u0627\u0644\u0645\u062a\u0637\u0644\u0628\u0627\u062a \u0639\u0644\u0649 \u0634\u0643\u0644 \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0628\u0635\u064a\u063a\u0629 \u064a\u0641\u0647\u0645\u0647\u0627 \u0627\u0644\u0639\u0645\u064a\u0644\u060c \u0648\u064a\u0648\u0627\u0641\u0642\n\u0639\u0644\u064a\u0647\u0627\u060c \u062b\u0645 \u0643\u062a\u0627\u0628\u0629 \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c \u0627\u0644\u0630\u064a \u064a\u062d\u0642\u0642 \u0647\u0630\u0647 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a.\n\n  \n  \n\n\u0644\u064a\u0633 \u0630\u0644\u0643 \u0641\u062d\u0633\u0628\u060c \u0628\u0644 \u064a\u0643\u0648\u0646 \u0627\u0644\u0643\u0645\u0628\u064a\u0648\u062a\u0631 \u0647\u0648 \u0627\u0644\u0641\u064a\u0635\u0644\u060c \u062d\u064a\u062b \u0627\u0646\u0647 \u0647\u0648 \u0645\u0646 \u0633\u064a\u0646\u0641\u0630 \u0647\u0630\u0647 \u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a\u060c\n\u0648\u064a\u0624\u0643\u062f \u0627\u0646 \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c \u064a\u0633\u064a\u0631 \u062d\u0633\u0628 \u0627\u062d\u062a\u064a\u0627\u062c\u0627\u062a \u0627\u0644\u0639\u0645\u064a\u0644.  \n  \n\u0627\u0630\u0627 \u0643\u0646\u062a \u062a\u0631\u064a\u062f \u0628\u0631\u0646\u0627\u0645\u062c\u0627 \u0628\u062c\u0648\u062f\u0629 \u0639\u0627\u0644\u064a\u0629\u060c \u064a\u0648\u0627\u0641\u0642 \u0627\u062d\u062a\u064a\u0627\u062c\u0627\u062a \u0627\u0644\u0639\u0645\u064a\u0644\u060c \u0648\u064a\u0642\u0644\u0644 \u0645\u0646 \u062a\u0643\u0644\u0641\u0629 \u0627\u0635\u0644\u0627\u062d\n\u0627\u0644\u0627\u062e\u0637\u0627\u0621\u060c \u0641\u0647\u0630\u0627 \u0627\u0644\u0645\u0646\u0647\u062c \u0644\u0643.\n\n",
        "name": "\u0627\u0644\u0628\u0631\u0645\u062c\u0629 \u0627\u0644\u0645\u0648\u062c\u0647\u0629 \u0628\u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0627\u0644\u0645\u0642\u0628\u0648\u0644\u0629",
        "provider": "Rwaq (\u0631\u0648\u0627\u0642)",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "http://www.rwaq.org/courses/test-driven-development",
        "video_url": "https://www.youtube.com/embed/A-svHXad91c?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-07-01",
        "desc": "Android d&uuml;nyada en yayg\u0131n olarak kullan\u0131lan telefon yaz\u0131l\u0131m dilidir. Bu derste android uygulama geli\u015ftirmek i&ccedil;in nerde ba\u015flamak gerekti\u011finden kodlamaya ve prati\u011fe kadar olan s&uuml;re&ccedil;i &ouml;\u011freneceksiniz ve belkide ilk uygulaman\u0131z\u0131 yapabileceksiniz.Bu ders Android ile daha &ouml;nce hi&ccedil; tan\u0131\u015fmam\u0131\u015f ve biraz ilerlemi\u015f yaz\u0131l\u0131mc\u0131lar i&ccedil;in idealdir. E\u011fer zaten bir andoid uygulamas\u0131 geli\u015ftirdiyeseniz bu ders size hafif gelebilir ama tekrar niteli\u011finde olaca\u011f\u0131 i&ccedil;in yararlanabilirsiniz.SyllabusGeli\u015ftirme ortam\u0131n\u0131n haz\u0131rlanmas\u0131 ve Android i\u015fletim d&uuml;zenin alt yap\u0131s\u0131Android i&ccedil;in XMLAndroid i&ccedil;in JavaAndroid uygulamas\u0131 yaparken projelendirme y&ouml;ntemleriPaletler ve elemanlarKodlama ve pratik",
        "desc_html": "Android dunyada en yayg\u0131n olarak kullan\u0131lan telefon yaz\u0131l\u0131m dilidir. Bu derste\nandroid uygulama geli\u015ftirmek i\u00e7in nerde ba\u015flamak gerekti\u011finden kodlamaya ve\nprati\u011fe kadar olan sure\u00e7i o\u011freneceksiniz ve belkide ilk uygulaman\u0131z\u0131\nyapabileceksiniz.\n\nBu ders Android ile daha once hi\u00e7 tan\u0131\u015fmam\u0131\u015f ve biraz ilerlemi\u015f yaz\u0131l\u0131mc\u0131lar\ni\u00e7in idealdir. E\u011fer zaten bir andoid uygulamas\u0131 geli\u015ftirdiyeseniz bu ders size\nhafif gelebilir ama tekrar niteli\u011finde olaca\u011f\u0131 i\u00e7in yararlanabilirsiniz.\n\n## Syllabus\n\n  * Geli\u015ftirme ortam\u0131n\u0131n haz\u0131rlanmas\u0131 ve Android i\u015fletim duzenin alt yap\u0131s\u0131\n  * Android i\u00e7in XML\n  * Android i\u00e7in Java\n  * Android uygulamas\u0131 yaparken projelendirme yontemleri\n  * Paletler ve elemanlar\n  * Kodlama ve pratik\n\n",
        "name": "Android'e Giri\u015f",
        "provider": "Universiteplus",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.universiteplus.com/courses/android-e-giris",
        "video_url": ""
    },
    {
        "date": "2014-07-01",
        "desc": "While the first openSAP course, Introduction to Software Development on SAP HANA, is intended as an introductory class for software developers who are new to SAP HANA, it makes sense for course participants to obtain an understanding of the fundamental concepts of in-memory data management before the course starts.",
        "desc_html": "While the first openSAP course, Introduction to Software Development on SAP\nHANA, is intended as an introductory class for software developers who are new\nto SAP HANA, it makes sense for course participants to obtain an understanding\nof the fundamental concepts of in-memory data management before the course\nstarts.\n\n",
        "name": "In-Memory Data Management In a Nutshell",
        "provider": "openSAP",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.sap.com/courses/hana-warmup",
        "video_url": ""
    },
    {
        "date": "2014-07-01",
        "desc": "Veri bilimine giri\u015f niteli\u011fi ta\u015f\u0131yan bu iki derslik seride bran\u015f\u0131n temel prensiplerini ve veri analizi teknolojilerinin i\u015f d&uuml;nyas\u0131nda karar verme a\u015famalar\u0131nda nas\u0131l yard\u0131mc\u0131 oldu\u011funu inceleyece\u011fiz. Serinin sonunda &ldquo;veri&rdquo; ve i\u015f d&uuml;nyas\u0131ndaki rol&uuml; hakk\u0131ndaki d&uuml;\u015f&uuml;nce \u015fekliniz de\u011fi\u015fmi\u015f olacak.Veri bilimi hen&uuml;z ger&ccedil;ek bir akademik disiplinden daha &ccedil;ok bir meslek olarak varl\u0131\u011f\u0131n\u0131 s&uuml;rd&uuml;r&uuml;yor. Daha uzun s&uuml;reden beri var olan veri madencili\u011fi tekniklerinin &ouml;zel sekt&ouml;r&uuml;n ihtiya&ccedil;lar\u0131na g&ouml;re \u015fekillenmesiyle bir meslek olarak &ldquo;veri bilimi&rdquo; ortaya &ccedil;\u0131kt\u0131. Yak\u0131n zamanda,&nbsp;Harvard Business Review&nbsp;veri bilimcilerini 21. y&uuml;zy\u0131l\u0131n en &ldquo;seksi&rdquo; meslek grubu olarak se&ccedil;ti.&nbsp;Veri bilimcileri ideal olarak teknik ve istatistiksel yetenekler, analitik d&uuml;\u015f&uuml;nme ve i\u015f zekas\u0131n\u0131n hepsini birden kendi b&uuml;nyesinde birle\u015ftiren insanlard\u0131r. 2011&rsquo;de MIT ekonomistleri taraf\u0131ndan yay\u0131nlanan bir ara\u015ft\u0131rmaya g&ouml;re &ldquo;veriye dayal\u0131 karar&rdquo; mekanizmalar\u0131n\u0131 bulunduran \u015firketler di\u011ferlerine g&ouml;re verimlilikte &ouml;nemli avantajlar elde etmektedir.\u0130\u015f d&uuml;nyas\u0131nda veri biliminin benimsenilmesi ve bran\u015f\u0131n giderek daha &ccedil;ok &ouml;nem kazanmas\u0131na binaen akademide de son y\u0131llarda veri bilimi programlar\u0131 a&ccedil;\u0131lmaya ba\u015flad\u0131. Bundan sonraki y\u0131llarda, veri madencili\u011fi tekniklerini &ccedil;ok farkl\u0131 sekt&ouml;rlerin ihtiya&ccedil;lar\u0131n\u0131 kar\u015f\u0131lamak i&ccedil;in uygulamay\u0131 ama&ccedil;layan departmanlar\u0131n kurulmas\u0131n\u0131 ve yayg\u0131nla\u015fmas\u0131n\u0131 bekleyebiliriz.Veri biliminde kullan\u0131lan pek &ccedil;ok metodun uluslararas\u0131 kapsamda kabul g&ouml;rm&uuml;\u015f ve yayg\u0131nla\u015fm\u0131\u015f ismi ingilizce oldu\u011fundan, bu derste metodlar\u0131n isimlerini ingilizce kullanaca\u011f\u0131m. Ancak, dersi T&uuml;rk&ccedil;e i\u015fleyece\u011fimden her metoddan ilk kez bahsetti\u011fimde metodun T&uuml;rk&ccedil;e ismini de verece\u011fim. Bu T&uuml;rk&ccedil;e &ccedil;eviriler i&ccedil;in Bo\u011fazi&ccedil;i &Uuml;niversitesi&rsquo;nden Prof.Dr.Ethem Alpayd\u0131n&rsquo;\u0131n&nbsp;&ouml;nerdi\u011fi ve Yapay &Ouml;\u011frenme kitab\u0131nda kulland\u0131\u011f\u0131 terimlerden&nbsp;yararlanaca\u011f\u0131m.\u0130ki derslik bu seride veri biliminin tekniklerinin yan\u0131nda ger&ccedil;ek hayattan &ouml;rnekleri de i\u015fleyerek veri-analitik d&uuml;\u015f&uuml;nmenin ne oldu\u011funu, ve tekniklerin hayata ge&ccedil;irilmesinin bir bilimden &ccedil;ok bir sanat oldu\u011funu g&ouml;receksiniz. Ek olarak, zaman zaman i\u015fin mutfa\u011f\u0131na da girerek R programlama dilinde veri bilimi metodlar\u0131n\u0131 kullanmada da tecr&uuml;be sahibi olacaks\u0131n\u0131z.SyllabusGiri\u015f: Veri-analitik d&uuml;\u015f&uuml;nce tarz\u0131 ve i\u015fletmelerdeki problemlere veri bilimi ile &ccedil;&ouml;z&uuml;m &uuml;retme&Ouml;ng&ouml;r&uuml;c&uuml; modellemeye giri\u015fModeli veriye oturtmaModeli veriye oturtma - bilgisayar uygulamas\u0131Benzerlik ve kom\u015fu analizi&Ouml;bek analiziDi\u011fer veribilimi uygulama ve teknikleri",
        "desc_html": "Veri bilimine giri\u015f niteli\u011fi ta\u015f\u0131yan bu iki derslik seride bran\u015f\u0131n temel\nprensiplerini ve veri analizi teknolojilerinin i\u015f dunyas\u0131nda karar verme\na\u015famalar\u0131nda nas\u0131l yard\u0131mc\u0131 oldu\u011funu inceleyece\u011fiz. Serinin sonunda \"veri\" ve\ni\u015f dunyas\u0131ndaki rolu hakk\u0131ndaki du\u015funce \u015fekliniz de\u011fi\u015fmi\u015f olacak.\n\nVeri bilimi henuz ger\u00e7ek bir akademik disiplinden daha \u00e7ok bir meslek olarak\nvarl\u0131\u011f\u0131n\u0131 surduruyor. Daha uzun sureden beri var olan veri madencili\u011fi\ntekniklerinin ozel sektorun ihtiya\u00e7lar\u0131na gore \u015fekillenmesiyle bir meslek\nolarak \"veri bilimi\" ortaya \u00e7\u0131kt\u0131. Yak\u0131n zamanda, [Harvard Business\nReview](http://hbr.org/2012/10/data-scientist-the-sexiest-job-of-the-21st-\ncentury/) veri bilimcilerini 21. yuzy\u0131l\u0131n en \"seksi\" meslek grubu olarak\nse\u00e7ti.\n\nVeri bilimcileri ideal olarak teknik ve istatistiksel yetenekler, analitik\ndu\u015funme ve i\u015f zekas\u0131n\u0131n hepsini birden kendi bunyesinde birle\u015ftiren\ninsanlard\u0131r. 2011'de MIT ekonomistleri taraf\u0131ndan yay\u0131nlanan bir ara\u015ft\u0131rmaya\ngore \"veriye dayal\u0131 karar\" mekanizmalar\u0131n\u0131 bulunduran \u015firketler di\u011ferlerine\ngore verimlilikte onemli avantajlar elde etmektedir.\n\n\u0130\u015f dunyas\u0131nda veri biliminin benimsenilmesi ve bran\u015f\u0131n giderek daha \u00e7ok onem\nkazanmas\u0131na binaen akademide de son y\u0131llarda veri bilimi programlar\u0131 a\u00e7\u0131lmaya\nba\u015flad\u0131. Bundan sonraki y\u0131llarda, veri madencili\u011fi tekniklerini \u00e7ok farkl\u0131\nsektorlerin ihtiya\u00e7lar\u0131n\u0131 kar\u015f\u0131lamak i\u00e7in uygulamay\u0131 ama\u00e7layan departmanlar\u0131n\nkurulmas\u0131n\u0131 ve yayg\u0131nla\u015fmas\u0131n\u0131 bekleyebiliriz.\n\nVeri biliminde kullan\u0131lan pek \u00e7ok metodun uluslararas\u0131 kapsamda kabul gormu\u015f\nve yayg\u0131nla\u015fm\u0131\u015f ismi ingilizce oldu\u011fundan, bu derste metodlar\u0131n isimlerini\ningilizce kullanaca\u011f\u0131m. Ancak, dersi Turk\u00e7e i\u015fleyece\u011fimden her metoddan ilk\nkez bahsetti\u011fimde metodun Turk\u00e7e ismini de verece\u011fim. Bu Turk\u00e7e \u00e7eviriler i\u00e7in\nBo\u011fazi\u00e7i \u00dcniversitesi'nden Prof.Dr.Ethem Alpayd\u0131n'\u0131n o[nerdi\u011fi ve Yapay\n\u00d6\u011frenme kitab\u0131nda kulland\u0131\u011f\u0131\nterimlerden](http://www.cmpe.boun.edu.tr/~ethem/i2ml2e_tr/i2tr_sozluk.pdf)\nyararlanaca\u011f\u0131m.\n\n\u0130ki derslik bu seride veri biliminin tekniklerinin yan\u0131nda ger\u00e7ek hayattan\nornekleri de i\u015fleyerek veri-analitik du\u015funmenin ne oldu\u011funu, ve tekniklerin\nhayata ge\u00e7irilmesinin bir bilimden \u00e7ok bir sanat oldu\u011funu goreceksiniz. Ek\nolarak, zaman zaman i\u015fin mutfa\u011f\u0131na da girerek R programlama dilinde veri\nbilimi metodlar\u0131n\u0131 kullanmada da tecrube sahibi olacaks\u0131n\u0131z.\n\n## Syllabus\n\n  * Giri\u015f: Veri-analitik du\u015funce tarz\u0131 ve i\u015fletmelerdeki problemlere veri bilimi ile \u00e7ozum uretme\n  * \u00d6ngorucu modellemeye giri\u015f\n  * Modeli veriye oturtma\n  * Modeli veriye oturtma - bilgisayar uygulamas\u0131\n  * Benzerlik ve kom\u015fu analizi\n  * \u00d6bek analizi\n  * Di\u011fer veribilimi uygulama ve teknikleri\n\n",
        "name": "\u0130\u015f D\u00fcnyas\u0131 \u0130\u00e7in Veri Bilimi",
        "provider": "Universiteplus",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Memorial Sloan Kettering Cancer Center, USA"
        ],
        "url": "https://www.universiteplus.com/courses/is-dunyasi-icin-veri-bilimi",
        "video_url": ""
    },
    {
        "date": "2014-07-01",
        "desc": "Object-oriented olan java teknolojilerinin geli\u015ftirilmesini ve deploy edilmesini anlatan bu derste, masa&uuml;st&uuml; ve sistem uygulamalar\u0131 geli\u015ftirmeyi &ouml;\u011fretmeyi hedeflemekteyim.Java ile uygulama geli\u015ftirmek isteyenler i&ccedil;in &ccedil;al\u0131\u015fma ortam\u0131n\u0131n kurulumdan itibaren ad\u0131m ad\u0131m sizlere bir yol haritas\u0131 sunaca\u011f\u0131m.SyllabusGeli\u015ftirme ortam\u0131n\u0131n haz\u0131rlanmas\u0131 ve JavaSE tan\u0131t\u0131m\u0131De\u011fi\u015fkenlerTip don&uuml;\u015f&uuml;mleriDizilerOperat&ouml;rlerLiteralsControlStatements - KontrolIfadeleri",
        "desc_html": "Object-oriented olan java teknolojilerinin geli\u015ftirilmesini ve deploy\nedilmesini anlatan bu derste, masaustu ve sistem uygulamalar\u0131 geli\u015ftirmeyi\no\u011fretmeyi hedeflemekteyim.\n\nJava ile uygulama geli\u015ftirmek isteyenler i\u00e7in \u00e7al\u0131\u015fma ortam\u0131n\u0131n kurulumdan\nitibaren ad\u0131m ad\u0131m sizlere bir yol haritas\u0131 sunaca\u011f\u0131m.\n\n## Syllabus\n\n  * Geli\u015ftirme ortam\u0131n\u0131n haz\u0131rlanmas\u0131 ve JavaSE tan\u0131t\u0131m\u0131\n  * De\u011fi\u015fkenler\n  * Tip donu\u015fumleri\n  * Diziler\n  * Operatorler\n  * Literals\n  * ControlStatements - KontrolIfadeleri\n\n",
        "name": "Java SE - Standart Edition",
        "provider": "Universiteplus",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.universiteplus.com/courses/java-se-standart-edition",
        "video_url": ""
    },
    {
        "date": "2014-06-30",
        "desc": "In this course, you will learn how to design technologies that bring people joy, rather than frustration. You'll learn several techniques for rapidly prototyping and evaluating multiple interface alternatives -- and why rapid prototyping and comparative evaluation are essential to excellent interaction design. You'll learn how to conduct fieldwork with people to help you get design ideas. How to make paper prototypes and low-fidelity mock-ups that are interactive -- and how to use these designs to get feedback from other stakeholders like your teammates, clients, and users. You'll learn principles of visual design so that you can effectively organize and present information with your interfaces. You'll learn principles of perception and cognition that inform effective interaction design. And you'll learn how to perform and analyze controlled experiments online. In many cases, we'll use Web design as the anchoring domain. A lot of the examples will come from the Web, and we'll talk just a bit about Web technologies in particular. When we do so, it will be to support the main goal of this course, which is helping you build human-centered design skills, so that you have the principles and methods to create excellent interfaces with any technology.",
        "desc_html": "In this course, you will learn how to design technologies that bring people\njoy, rather than frustration. You'll learn several techniques for rapidly\nprototyping and evaluating multiple interface alternatives -- and why rapid\nprototyping and comparative evaluation are essential to excellent interaction\ndesign. You'll learn how to conduct fieldwork with people to help you get\ndesign ideas. How to make paper prototypes and low-fidelity mock-ups that are\ninteractive -- and how to use these designs to get feedback from other\nstakeholders like your teammates, clients, and users. You'll learn principles\nof visual design so that you can effectively organize and present information\nwith your interfaces. You'll learn principles of perception and cognition that\ninform effective interaction design. And you'll learn how to perform and\nanalyze controlled experiments online. In many cases, we'll use Web design as\nthe anchoring domain. A lot of the examples will come from the Web, and we'll\ntalk just a bit about Web technologies in particular. When we do so, it will\nbe to support the main goal of this course, which is helping you build human-\ncentered design skills, so that you have the principles and methods to create\nexcellent interfaces with any technology.\n\n",
        "name": "Human-Computer Interaction",
        "provider": "Coursera",
        "rating": "4.2857142857143",
        "reviews": "7",
        "university": [
            "University of California, San Diego"
        ],
        "url": "https://www.coursera.org/course/hciucsd",
        "video_url": ""
    },
    {
        "date": "2014-06-30",
        "desc": "Commerce and research are being transformed by data-driven discovery and\nprediction. Skills required for data analytics at massive levels \u2013 scalable\ndata management on and off the cloud, parallel algorithms, statistical\nmodeling, and proficiency with a complex ecosystem of tools and platforms\n\u2013 span a variety of disciplines and are not easy to obtain through conventional\ncurricula. Tour the basic techniques of data science, including both SQL\nand NoSQL solutions for massive data management (e.g., MapReduce and contemporaries),\nalgorithms for data mining (e.g., clustering and association rule mining),\nand basic statistical modeling (e.g., linear and non-linear regression).SyllabusPart 0: Introduction&nbsp;Examples, data science articulated, history and context, technology\n        landscapePart 1: Data\nManipulation at ScaleDatabases and the relational algebra&nbsp;Parallel databases, parallel query processing, in-database analytics&nbsp;MapReduce, Hadoop, relationship to databases, algorithms, extensions,\n        languages &nbsp;Key-value stores and NoSQL; tradeoffs of SQL and NoSQLPart 2: AnalyticsTopics in statistical modeling: basic concepts, experiment design, pitfallsTopics in machine learning: supervised learning (rules, trees, forests, nearest neighbor, regression), optimization (gradient descent and variants), unsupervised learningPart 3: Communicating ResultsVisualization, data products, visual data analytics&nbsp;Provenance, privacy, ethics, governance&nbsp;Part 4: Special TopicsGraph Analytics: structure, traversals, analytics, PageRank, community detection, recursive queries, semantic webGuest Lectures",
        "desc_html": "Commerce and research are being transformed by data-driven discovery and\nprediction. Skills required for data analytics at massive levels \u2013 scalable\ndata management on and off the cloud, parallel algorithms, statistical\nmodeling, and proficiency with a complex ecosystem of tools and platforms \u2013\nspan a variety of disciplines and are not easy to obtain through conventional\ncurricula. Tour the basic techniques of data science, including both SQL and\nNoSQL solutions for massive data management (e.g., MapReduce and\ncontemporaries), algorithms for data mining (e.g., clustering and association\nrule mining), and basic statistical modeling (e.g., linear and non-linear\nregression).  \n\n## Syllabus\n\n_Part 0: Introduction_  \n\n  * Examples, data science articulated, history and context, technology landscape\n_Part 1: Data Manipulation at Scale_  \n\n  * Databases and the relational algebra    \n\n  * Parallel databases, parallel query processing, in-database analytics \n  * MapReduce, Hadoop, relationship to databases, algorithms, extensions, languages  \n  * Key-value stores and NoSQL; tradeoffs of SQL and NoSQL\n_Part 2: Analytics _  \n\n  * Topics in statistical modeling: basic concepts, experiment design, pitfalls  \n\n  * Topics in machine learning: supervised learning (rules, trees, forests, nearest neighbor, regression), optimization (gradient descent and variants), unsupervised learning\n_Part 3: Communicating Results _  \n\n  * Visualization, data products, visual data analytics    \n\n  * Provenance, privacy, ethics, governance \n_Part 4: Special Topics_\n\n  * Graph Analytics: structure, traversals, analytics, PageRank, community detection, recursive queries, semantic web\n  * Guest Lectures\n\n",
        "name": "Introduction to Data Science",
        "provider": "Coursera",
        "rating": "4.2857142857143",
        "reviews": "7",
        "university": [
            "University of Washington"
        ],
        "url": "https://www.coursera.org/course/datasci",
        "video_url": ""
    },
    {
        "date": "2014-06-30",
        "desc": "Everybody talks about Data Mining and Big Data nowadays. Weka is a powerful, yet easy to use tool for machine learning and data mining. This course introduces you to practical data mining.",
        "desc_html": "Everybody talks about Data Mining and Big Data nowadays. Weka is a powerful,\nyet easy to use tool for machine learning and data mining. This course\nintroduces you to practical data mining.\n\n",
        "name": "Data Mining with Weka",
        "provider": "Independent",
        "rating": "4.8333333333333",
        "reviews": "6",
        "university": [
            "University of Waikato"
        ],
        "url": "https://weka.waikato.ac.nz/dataminingwithweka/preview",
        "video_url": "https://www.youtube.com/embed/LcHw2ph6bss?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-06-30",
        "desc": "This course examines key computational abstraction levels below modern\nhigh-level languages; number representation, assembly language, introduction\nto C, memory management, the operating-system process model, high-level\nmachine architecture including the memory hierarchy, and how high-level\nlanguages are implemented. We will develop students\u2019 sense of \u201cwhat really\nhappens\u201d when software runs \u2014 and that this question can be answered at\nseveral levels of abstraction, including the hardware architecture level,\nthe assembly level, the C programming level and the Java programming level.\nThe core around which the course is built is C, assembly, and low-level\ndata representation, but this is connected to higher levels (roughly how\nbasic Java could be implemented), lower levels (the general structure of\na processor and the memory hierarchy), and the role of the operating system\n(but not how the operating system is implemented).SyllabusThis course should develop students\u2019 sense of \u201cwhat really happens\u201d when\nsoftware runs \u2014 and convey that this question can be answered at several\nlevels of abstraction, including the hardware architecture level, the assembly\nlevel, the C programming level and the Java programming level. The core\naround which the course is built is C, assembly, and low-level data representation,\nbut this is connected to higher levels (roughly how basic Java could be\nimplemented), lower levels (the general structure of a processor), and\nthe role of the operating system (but not how the operating system is implemented).\nFor (computer science) students wanting to specialize at higher levels\nof abstraction, this could in the extreme be the only course they take\nthat considers the \u201cC level\u201d and below. However, most will take a subset\nof Systems Programming, Hardware Design and Implementation, Operating Systems,\nCompilers, etc. For students interested in hardware, embedded systems,\ncomputer engineering, computer architecture, etc., this course is the introductory\ncourse after which other courses will delve both deeper (into specific\ntopics) and lower (into hardware implementation, circuit design, etc.).\nThe course has three principal themes:Representation: how different data types (from simple integers to arrays\n        of data structures) are represented in memory, how instructions are encoded,\n        and how memory addresses (pointers) are generated and used to create complex\n        structures.Translation: how high-level languages are translated into the basic instructions\n        embodied in process hardware with a particular focus on C and Java.Control flow: how computers organize the order of their computations,\n        keep track of where they are in large programs, and provide the illusion\n        of multiple processes executing in parallel.At the end of this course, students should:understand the multi-step process by which a high-level program becomes\n        a stream of instructions executed by a processor;know what a pointer is and how to use it in manipulating complex data\n        structures;be facile enough with assembly programming (X86) to write simple pieces\n        of code and understand how it maps to high-level languages (and vice-versa);understand the basic organization and parameters of memory hierarchy and\n        its importance for system performance;be able to explain the role of an operating system;know how Java fundamentally differs from C;grasp what parallelism is and why it is important at the system level;\n        andbe more effective programmers (more efficient at finding bugs, improved\n        intuition about system performance).Topics:Number representationAssembly languageBasics of CMemory managementOperating-system process modelHigh-level machine architectureMemory hierarchyImplementation of high-level languages",
        "desc_html": "This course examines key computational abstraction levels below modern high-\nlevel languages; number representation, assembly language, introduction to C,\nmemory management, the operating-system process model, high-level machine\narchitecture including the memory hierarchy, and how high-level languages are\nimplemented. We will develop students\u2019 sense of \u201cwhat really happens\u201d when\nsoftware runs \u2014 and that this question can be answered at several levels of\nabstraction, including the hardware architecture level, the assembly level,\nthe C programming level and the Java programming level. The core around which\nthe course is built is C, assembly, and low-level data representation, but\nthis is connected to higher levels (roughly how basic Java could be\nimplemented), lower levels (the general structure of a processor and the\nmemory hierarchy), and the role of the operating system (but not how the\noperating system is implemented).\n\n## Syllabus\n\nThis course should develop students\u2019 sense of \u201cwhat really happens\u201d when\nsoftware runs \u2014 and convey that this question can be answered at several\nlevels of abstraction, including the hardware architecture level, the assembly\nlevel, the C programming level and the Java programming level. The core around\nwhich the course is built is C, assembly, and low-level data representation,\nbut this is connected to higher levels (roughly how basic Java could be\nimplemented), lower levels (the general structure of a processor), and the\nrole of the operating system (but not how the operating system is\nimplemented). For (computer science) students wanting to specialize at higher\nlevels of abstraction, this could in the extreme be the only course they take\nthat considers the \u201cC level\u201d and below. However, most will take a subset of\nSystems Programming, Hardware Design and Implementation, Operating Systems,\nCompilers, etc. For students interested in hardware, embedded systems,\ncomputer engineering, computer architecture, etc., this course is the\nintroductory course after which other courses will delve both deeper (into\nspecific topics) and lower (into hardware implementation, circuit design,\netc.). The course has three principal themes:\n\n  * Representation: how different data types (from simple integers to arrays of data structures) are represented in memory, how instructions are encoded, and how memory addresses (pointers) are generated and used to create complex structures.\n  * Translation: how high-level languages are translated into the basic instructions embodied in process hardware with a particular focus on C and Java.\n  * Control flow: how computers organize the order of their computations, keep track of where they are in large programs, and provide the illusion of multiple processes executing in parallel.\nAt the end of this course, students should:\n\n  * understand the multi-step process by which a high-level program becomes a stream of instructions executed by a processor;\n  * know what a pointer is and how to use it in manipulating complex data structures;\n  * be facile enough with assembly programming (X86) to write simple pieces of code and understand how it maps to high-level languages (and vice-versa);\n  * understand the basic organization and parameters of memory hierarchy and its importance for system performance;\n  * be able to explain the role of an operating system;\n  * know how Java fundamentally differs from C;\n  * grasp what parallelism is and why it is important at the system level; and\n  * be more effective programmers (more efficient at finding bugs, improved intuition about system performance).\nTopics:  \n\n  * Number representation\n  * Assembly language\n  * Basics of C\n  * Memory management\n  * Operating-system process model\n  * High-level machine architecture\n  * Memory hierarchy\n  * Implementation of high-level languages\n\n",
        "name": "The Hardware/Software Interface",
        "provider": "Coursera",
        "rating": "4.5",
        "reviews": "2",
        "university": [
            "University of Washington"
        ],
        "url": "https://www.coursera.org/course/hwswinterface",
        "video_url": ""
    },
    {
        "date": "2014-06-25",
        "desc": "You will learn about challenges of building applications that can serve hundreds of thousands of users, and how you can prepare for them as a developer. And more importantly - you will learn how to harness the power of&nbsp;App Engine&nbsp;- Platform as a Service, run by Google, so you can focus on your application's features, not on managing infrastructure that runs your app. Let Google run and scale the infrastructure and do what you do best - write code!However, to use App Engine effectively, you have to learn how it works, and this is exactly what this course will teach! You will also learn the best practices of using&nbsp;Cloud Endpoints&nbsp;that allow you to easily create RESTful services and make them accessible to iOS, Android and Javascript clients. They allow you to automatically generate client libraries to make wiring up the frontend easy. And there are some nifty built-in features, like denial-of-service protection and OAuth 2.0 support.Why Take This Course?Cloud computing is one of the fastest growing fields right now. And no wonder - it provides an easy and affordable way to run your applications. However, the traditional way of hosting and scaling applications on Virtual Machines in the Cloud comes with a cost - even if the infrastructure is virtual, you still have to manage it - do load balancing, bring instances up and down, take care of patching your software and in general spend a lot of your time and resources on just the infrastructure.Google is one of the pioneers in the business of scaling, and now you can use their infrastructure, and let them do all the scaling work so that you can focus on the unique features you app provides.ProjectThere will be an overarching project throughout the course, starting from Lesson 2. You will develop an application for organising conferences, similar to sites like meetup.com or eventbrite.com. We have provided the frontend of the app, and all your effort will go into making the backend.And because you will be using Cloud Endpoints, it&rsquo;s really easy to hook up your backend with a native mobile app. We have created an Android app that uses the same backend as the web frontend. You will able to recompile it against your backend, if you so wish!At the end of the course you will do a final project, where you will have to expand the functionality of the same app.Prerequisites and RequirementsYou should be fairly comfortable programming in Java, preferably with some experience developing web applications and working with databases for at least a year. You will be developing the backend of a sample app, so you don&rsquo;t have to worry about HTML or JavaScript.You should have sufficient permissions to install new software on your computer, and comfortable configuring it, including setting up system variables.We will be using Maven and Eclipse for this course, and we strongly suggest that you use them as well.SyllabusOverviewThis course consists of 6 lessons. First one is an overview of cloud computing and the benefits of Platform as a Service. Lessons 2-5 will cover important theoretical concepts of Google App Engine and also plenty of hands-on exercises implementing what you have learned. Lesson 6 will be a short intro on an easy way to create native mobile apps that talk to your backend.Lesson 1: Scalability BasicsDo you know how and why server racks were invented years ago? Have you realized all of the problems that you have to solve if you will try to scale your app by yourself? Learn about a better way.Lesson 2: Getting StartedSet up your first App Engine project and learn how to define Cloud Endpoints.Start the course project app - Conference Central and add authentication and user profiles.Lesson 3: Storing and Retrieving DataOne of the most important things you want to do in your app is storing data. In this lesson you will learn what is Google App Engine Datastore, how is it different from RDBMS and how you can use it in your applications.Add the ability to store and retrieve user profiles and conferences to the course project app.Lesson 4: Advanced Datastore ConceptsLearn more about how Datastore works, including queries, filters, indexes and transactions.Add different ways to query conferences.Lesson 5: Advanced App Engine TopicsThere are a lot of things you might want your application to do in background, without making the user wait, or even initiate the process. Learn about task queues and cron jobs and how you can use them to add advanced functionality to your app. You will also learn about Memcache, and get an overview of topics like Edge Caching, AppStats and other methods of optimising your apps performance.Add a push queue, cron job and a customised Memcache entry to your app.Lesson 6: App Engine and Mobile AppsYou have been using Cloud Endpoints in the app, and now it&rsquo;s time to see how you can use them in a mobile app. Learn how to generate native libraries for Android and iOS that can talk to your backend. You can even recompile the Android app we provide with our course, to work against your own project. How cool is that?Generate mobile client libraries for your app.",
        "desc_html": "You will learn about challenges of building applications that can serve\nhundreds of thousands of users, and how you can prepare for them as a\ndeveloper. And more importantly - you will learn how to harness the power of\nApp Engine \\- Platform as a Service, run by Google, so you can focus on your\napplication's features, not on managing infrastructure that runs your app. Let\nGoogle run and scale the infrastructure and do what you do best - write code!\n\nHowever, to use App Engine effectively, you have to learn how it works, and\nthis is exactly what this course will teach! You will also learn the best\npractices of using [Cloud Endpoints](https://cloud.google.com/products/cloud-\nendpoints/) that allow you to easily create RESTful services and make them\naccessible to iOS, Android and Javascript clients. They allow you to\nautomatically generate client libraries to make wiring up the frontend easy.\nAnd there are some nifty built-in features, like denial-of-service protection\nand OAuth 2.0 support.\n\n**Why Take This Course?**\n\nCloud computing is one of the fastest growing fields right now. And no wonder\n- it provides an easy and affordable way to run your applications. However,\nthe traditional way of hosting and scaling applications on Virtual Machines in\nthe Cloud comes with a cost - even if the infrastructure is virtual, you still\nhave to manage it - do load balancing, bring instances up and down, take care\nof patching your software and in general spend a lot of your time and\nresources on just the infrastructure.\n\nGoogle is one of the pioneers in the business of scaling, and now you can use\ntheir infrastructure, and let them do all the scaling work so that you can\nfocus on the unique features you app provides.\n\n**Project**\n\nThere will be an overarching project throughout the course, starting from\nLesson 2. You will develop an application for organising conferences, similar\nto sites like meetup.com or eventbrite.com. We have provided the frontend of\nthe app, and all your effort will go into making the backend.\n\nAnd because you will be using Cloud Endpoints, it's really easy to hook up\nyour backend with a native mobile app. We have created an Android app that\nuses the same backend as the web frontend. You will able to recompile it\nagainst your backend, if you so wish!\n\nAt the end of the course you will do a final project, where you will have to\nexpand the functionality of the same app.\n\n**Prerequisites and Requirements**\n\nYou should be fairly comfortable programming in Java, preferably with some\nexperience developing web applications and working with databases for at least\na year. You will be developing the backend of a sample app, so you don't have\nto worry about HTML or JavaScript.\n\nYou should have sufficient permissions to install new software on your\ncomputer, and comfortable configuring it, including setting up system\nvariables.\n\nWe will be using Maven and Eclipse for this course, and we strongly suggest\nthat you use them as well.\n\n## Syllabus\n\n**Overview**\n\nThis course consists of 6 lessons. First one is an overview of cloud computing\nand the benefits of Platform as a Service. Lessons 2-5 will cover important\ntheoretical concepts of Google App Engine and also plenty of hands-on\nexercises implementing what you have learned. Lesson 6 will be a short intro\non an easy way to create native mobile apps that talk to your backend.\n\n**Lesson 1: Scalability Basics**\n\nDo you know how and why server racks were invented years ago? Have you\nrealized all of the problems that you have to solve if you will try to scale\nyour app by yourself? Learn about a better way.\n\n**Lesson 2: Getting Started**\n\nSet up your first App Engine project and learn how to define Cloud Endpoints.\n\nStart the course project app - Conference Central and add authentication and\nuser profiles.\n\n**Lesson 3: Storing and Retrieving Data**\n\nOne of the most important things you want to do in your app is storing data.\nIn this lesson you will learn what is Google App Engine Datastore, how is it\ndifferent from RDBMS and how you can use it in your applications.\n\nAdd the ability to store and retrieve user profiles and conferences to the\ncourse project app.\n\n**Lesson 4: Advanced Datastore Concepts**\n\nLearn more about how Datastore works, including queries, filters, indexes and\ntransactions.\n\nAdd different ways to query conferences.\n\n**Lesson 5: Advanced App Engine Topics**\n\nThere are a lot of things you might want your application to do in background,\nwithout making the user wait, or even initiate the process. Learn about task\nqueues and cron jobs and how you can use them to add advanced functionality to\nyour app. You will also learn about Memcache, and get an overview of topics\nlike Edge Caching, AppStats and other methods of optimising your apps\nperformance.\n\nAdd a push queue, cron job and a customised Memcache entry to your app.\n\n**Lesson 6: App Engine and Mobile Apps**\n\nYou have been using Cloud Endpoints in the app, and now it's time to see how\nyou can use them in a mobile app. Learn how to generate native libraries for\nAndroid and iOS that can talk to your backend. You can even recompile the\nAndroid app we provide with our course, to work against your own project. How\ncool is that?\n\nGenerate mobile client libraries for your app.\n\n",
        "name": "Developing Scalable Apps with Google App Engine",
        "provider": "Udacity",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Google"
        ],
        "url": "https://www.udacity.com/course/ud859",
        "video_url": "https://www.youtube.com/embed/zdHgI3hOsHo?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-06-24",
        "desc": "UX (User Experience) is a big deal. Though the term is often confused with User Interface, UI is only only a tiny subset of UX (we&rsquo;ll talk about the difference in Lesson 1).This is a UX design course built for current (and aspiring) mobile developers. In this short course, you'll step back from your IDE and dive into the techniques that great designers use to plan and prototype amazing apps before any code is written.Why Take This Course?You should take this course because well-designed apps are just as important as well-built apps.The goal of this course is to help you understand the most important and immediately-useful techniques and approaches used by great mobile UX designers. This course won&rsquo;t turn you into a designer, but it will help you incorporate design elements into the products you build.Prerequisites and RequirementsThis course is optimized for the developer who is looking to efficiently learn the most important design techniques that will help them make better apps (with a focus on mobile/Android).That said, programming experience is not required to benefit from the design principles and best practices we teach in this course.OverviewThe goal of this course is to help you build better apps by helping you become a design-minded developer. In Lessons 1 and 2, you will learn widely applicable design principles and techniques like high-level UX planning and user-centered design.In Lessons 3 and 4, you will focus on design ideas specific to mobile/Android development. Mobile platforms all come with a unique set of constraints and opportunities and this lesson will help you respect those constraints while taking advantage of the opportunities.SyllabusLESSON 1: WHAT IS USER EXPERIENCE?In this lesson you will think about User Experience from the highest level. You will break down complex apps into a small number of simple steps and think about their big picture flow (including ones that you have worked on in the past or are currently working on).Topics covered:What is UX?UI vs. UXHigh-level planningLow-fi wireframing and prototypingTwo concrete app improvements to implement nowLESSON 2: USER-CENTERED DESIGNIn this lesson you will learn how to design apps that your users will love. You will learn the importance of user-centered design, what happens when you design for everyone/no one (spoiler alert: it&rsquo;s generally bad), and how to effectively use tools like personas and use cases to ensure a baseline level of quality for anything you build. You will also learn a bit about how to use cheap and easy user research techniques to make well-informed design decisions.Topics covered:The perils of ignoring your userHow to create effective personas and use casesLow cost user researchHow to use personas and use cases to inform feature listsLESSON 3: DESIGNING FOR MOBILE CONSTRAINTSMobile design and development come with constraints and opportunities. This lesson is about the constraints. You will learn what constraints are inherent to mobile development and how to use design tools and techniques to ensure your app actually respects those constraints.Topics covered:The 5 big constraints: limited data, finite battery, hand-held usage, divided user attention, and small screens.The implications of these constraints and what happens when you get them wrong.Advanced wireframingLESSON 4: DESIGNING FOR ANDROID DELIGHTAt this point, you will already know how to make a solid mobile app that users like. But like isn&rsquo;t enough! In order to be really successful, your app needs to be&nbsp;loved. In this lesson, you&rsquo;ll learn how to leverage the power of Android by using device sensors and Google APIs to understand your user&rsquo;s context.Topics covered:Android sensorsThe importance of contextual appsThe &ldquo;components&rdquo; of contextAndroid APIs (Google Play Services)Final ProjectYour final project will be the high / mid-level design specifications for your own incredible android app. You'll begin work on this project in the Assignments for Lesson 2 and continue working on it until the end of the course.When it's finished, you will have the blueprint for an app that will:Be designed for a specific target user.Have an almost-perfect high level flow.Avoid all major mobile pitfalls.Use Android sensors and APIs to understand your user's context and deliver context-aware moments of amazement that they will love.",
        "desc_html": "UX (User Experience) is a big deal. Though the term is often confused with\nUser Interface, UI is only only a tiny subset of UX (we'll talk about the\ndifference in Lesson 1).\n\nThis is a UX design course built for current (and aspiring) mobile developers.\nIn this short course, you'll step back from your IDE and dive into the\ntechniques that great designers use to plan and prototype amazing apps before\nany code is written.\n\n**Why Take This Course?**\n\nYou should take this course because well-designed apps are just as important\nas well-built apps.\n\nThe goal of this course is to help you understand the most important and\nimmediately-useful techniques and approaches used by great mobile UX\ndesigners. This course won't turn you into a designer, but it will help you\nincorporate design elements into the products you build.\n\n**Prerequisites and Requirements**\n\nThis course is optimized for the developer who is looking to efficiently learn\nthe most important design techniques that will help them make better apps\n(with a focus on mobile/Android).\n\nThat said, programming experience is not required to benefit from the design\nprinciples and best practices we teach in this course.\n\n**Overview**\n\nThe goal of this course is to help you build better apps by helping you become\na design-minded developer. In Lessons 1 and 2, you will learn widely\napplicable design principles and techniques like high-level UX planning and\nuser-centered design.\n\nIn Lessons 3 and 4, you will focus on design ideas specific to mobile/Android\ndevelopment. Mobile platforms all come with a unique set of constraints and\nopportunities and this lesson will help you respect those constraints while\ntaking advantage of the opportunities.\n\n## Syllabus\n\n**LESSON 1: WHAT IS USER EXPERIENCE?**\n\nIn this lesson you will think about User Experience from the highest level.\nYou will break down complex apps into a small number of simple steps and think\nabout their big picture flow (including ones that you have worked on in the\npast or are currently working on).\n\nTopics covered:\n\n  * What is UX?\n  * UI vs. UX\n  * High-level planning\n  * Low-fi wireframing and prototyping\n  * Two concrete app improvements to implement now\n\n**LESSON 2: USER-CENTERED DESIGN**\n\nIn this lesson you will learn how to design apps that your users will love.\nYou will learn the importance of user-centered design, what happens when you\ndesign for everyone/no one (spoiler alert: it's generally bad), and how to\neffectively use tools like personas and use cases to ensure a baseline level\nof quality for anything you build. You will also learn a bit about how to use\ncheap and easy user research techniques to make well-informed design\ndecisions.\n\nTopics covered:\n\n  * The perils of ignoring your user\n  * How to create effective personas and use cases\n  * Low cost user research\n  * How to use personas and use cases to inform feature lists\n\n**LESSON 3: DESIGNING FOR MOBILE CONSTRAINTS**\n\nMobile design and development come with constraints and opportunities. This\nlesson is about the constraints. You will learn what constraints are inherent\nto mobile development and how to use design tools and techniques to ensure\nyour app actually respects those constraints.\n\nTopics covered:\n\n  * The 5 big constraints: limited data, finite battery, hand-held usage, divided user attention, and small screens.\n  * The implications of these constraints and what happens when you get them wrong.\n  * Advanced wireframing\n\n**LESSON 4: DESIGNING FOR ANDROID DELIGHT**\n\nAt this point, you will already know how to make a solid mobile app that users\nlike. But like isn't enough! In order to be really successful, your app needs\nto be loved. In this lesson, you'll learn how to leverage the power of Android\nby using device sensors and Google APIs to understand your user's context.\n\nTopics covered:\n\n  * Android sensors\n  * The importance of contextual apps\n  * The \"components\" of context\n  * Android APIs (Google Play Services)\n\n**Final Project**\n\nYour final project will be the high / mid-level design specifications for your\nown incredible android app. You'll begin work on this project in the\nAssignments for Lesson 2 and continue working on it until the end of the\ncourse.\n\nWhen it's finished, you will have the blueprint for an app that will:\n\n  * Be designed for a specific target user.\n  * Have an almost-perfect high level flow.\n  * Avoid all major mobile pitfalls.\n  * Use Android sensors and APIs to understand your user's context and deliver context-aware moments of amazement that they will love.\n\n",
        "name": "UX Design for Mobile Developers:  Learn to Design a 5-star Android App",
        "provider": "Udacity",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Google"
        ],
        "url": "https://www.udacity.com/course/ud849",
        "video_url": "https://www.youtube.com/embed/eGHuJjmS37A?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-06-23",
        "desc": "This course will teach you how to develop and apply programming skills to creative work. This is an important skill within the development of creative mobile applications, digital music and video games. It will teach technical skills needed to write software that make use of images, audio and graphics, and will concentrate on the\u00a0application of these skills to creative projects.\u00a0  Additional resources will be provided for students with no programming background.SyllabusWeek 1: Introduction: sonic painterWeek 2: Interactive D/VJ appWeek\u00a03: Music player and sensor controlled visualiserWeek\u00a04: Game with physical modelling and synthesisWeek\u00a05: APIs accessing and processing social media dataWeek\u00a06: Music machine",
        "desc_html": "This course will teach you how to develop and apply programming skills to\ncreative work. This is an important skill within the development of creative\nmobile applications, digital music and video games. It will teach technical\nskills needed to write software that make use of images, audio and graphics,\nand will concentrate on the\u00a0application of these skills to creative projects.\nAdditional resources will be provided for students with no programming\nbackground.  \n  \n\n## Syllabus\n\nWeek 1: Introduction: sonic painter\n\nWeek 2: Interactive D/VJ app\n\nWeek\u00a03: Music player and sensor controlled visualiser\n\nWeek\u00a04: Game with physical modelling and synthesis\n\nWeek\u00a05: APIs accessing and processing social media data\n\nWeek\u00a06: Music machine\n\n",
        "name": "Creative Programming for Digital Media &amp; Mobile Apps",
        "provider": "Coursera",
        "rating": "4.2",
        "reviews": "5",
        "university": [
            "University of London International Programmes"
        ],
        "url": "https://www.coursera.org/course/digitalmedia",
        "video_url": ""
    },
    {
        "date": "2014-06-20",
        "desc": "*Note - This is an Archived course*\n\nThis is a past/archived course. At this time, you can only explore this course in a self-paced fashion. Certain features of this course may not be active, but many people enjoy watching the videos and working with the materials. Make sure to check for reruns of this course.\u00a0\n\nDo you wish to become a better problem solver?\n\nThis course aims to provide you with a good understanding of basic Java programming elements and data abstraction using problem representation and object-oriented framework. As the saying goes \u2013 \u201cA picture is worth a thousand words\u201d. This course will use sample objects such as photos or images to illustrate some important concepts for better understanding and retention. You will learn to write procedural programs using variables, arrays, control statements, loops, recursion, data abstraction and objects in an integrated development environment.\n\nAt the end of the course, you should be able to achieve the following objectives:\n\nTake a \u201creal-life\u201d problem and abstract out the pertinent aspects necessary to solve it in an algorithmic manner\n\tFormulate formal solutions to well-defined problems using the logic of a programming language\n\tImplement formal solutions in Java using an integrated development environment\n\tHave an understanding of the basics of data abstraction using the object-oriented framework",
        "desc_html": "*Note - This is an Archived course* This is a past/archived course. At this time, you can only explore this course in a self-paced fashion. Certain features of this course may not be active, but many people enjoy watching the videos and working with the materials. Make sure to check for reruns of this course.\u00a0 Do you wish to become a better problem solver? This course aims to provide you with a good understanding of basic Java programming elements and data abstraction using problem representation and object-oriented framework. As the saying goes \u2013 \u201cA picture is worth a thousand words\u201d. This course will use sample objects such as photos or images to illustrate some important concepts for better understanding and retention. You will learn to write procedural programs using variables, arrays, control statements, loops, recursion, data abstraction and objects in an integrated development environment. At the end of the course, you should be able to achieve the following objectives: Take a \u201creal-life\u201d problem and abstract out the pertinent aspects necessary to solve it in an algorithmic manner Formulate formal solutions to well-defined problems using the logic of a programming language Implement formal solutions in Java using an integrated development environment Have an understanding of the basics of data abstraction using the object-oriented framework \n\n",
        "name": "COMP102x: Introduction to Computing with Java",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "The Hong Kong University of Science and Technology"
        ],
        "url": "https://www.edx.org/course/hkustx/hkustx-comp102x-introduction-computing-1690",
        "video_url": "https://www.youtube.com/embed/hdsKr1q2loc?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-06-18",
        "desc": "You will learn how to optimize any website for speed by diving into the details of how mobile and desktop browsers render pages.In this short course, you&rsquo;ll learn about the Critical Rendering Path, or the set of steps browsers must take to convert HTML, CSS and JavaScript into living, breathing websites. From there, you&rsquo;ll start exploring and experimenting with tools to measure performance and simple strategies to deliver the first pixels to the screen as early as possible. You&rsquo;ll learn how to dive into recommendations from&nbsp;PageSpeed Insights&nbsp;and the Timeline view of Google Chrome&rsquo;s Developer Tools to find the data you need to achieve immediate performance boosts!Why Take This Course?From Ilya Grigorik's&nbsp;High Performance Browser Networking:\"The emergence and the fast growth of the web performance optimization (WPO) industry within the past few years is a telltale sign of the growing importance and demand for speed and faster user experiences by the users. And this is not simply a psychological need for speed in our ever accelerating and connected world, but a requirement driven by empirical results, as measured with respect to the bottom-line performance of the many online businesses:Faster sites lead to better user engagement.Faster sites lead to better user retention.Faster sites lead to higher conversions.Simply put, speed is a feature.\"ProjectYou will optimize an online portfolio for speed, which you can share with the world to showcase your skills!Making a great first impression is absolutely key and an online portfolio can help you stand apart from the crowd. We&rsquo;ll give you a template for a modern, mobile-friendly portfolio which you&rsquo;ll be able to completely customize so that it shows off your work and your skills the way you want. But before you show it off to the world, you&rsquo;ll practice your web performance skills by optimizing the portfolio to render as fast as possible.Prerequisites and RequirementsThis course is for any and all web developers, whether you started learning about HTML, CSS and JavaScript recently or have been building websites since the nineties!Most importantly, you should be able to explain the overall purpose of HTML, CSS and JavaScript with respect to website structure. In addition, you should be comfortable reading and writing HTML documents, however you will not be writing JavaScript or CSS styles for this course.This course is taught with&nbsp;Google Chrome&nbsp;and&nbsp;Google Chrome Canary.SyllabusOverviewThroughout the course, you&rsquo;ll build a performance toolbox to help you build faster website experiences by taking advantage of PageSpeed Insights recommendations and measuring page performance on mobile and desktop with Chrome Developer Tools.This class contains an introductory lesson, two primary lessons and a final project. Before diving into optimizations, you&rsquo;ll build an understanding of how browsers convert HTML, CSS and JavaScript into websites. Along the way, you&rsquo;ll practice measuring performance using the same tools Google engineers use.Then comes the really fun part: optimization! You&rsquo;ll learn about easy-to-implement performance gains and develop a simple and powerful model for uncovering optimization opportunities.You&rsquo;ll put your newfound performance skillset to the test with the final project, where you&rsquo;ll be optimizing your own online portfolio website!LessonsLesson 0 (20 minutes)You can&rsquo;t optimize what you can&rsquo;t measure, so in this lesson you&rsquo;ll learn how to open Chrome Developer Tools to measure the performance of mobile and desktop websites.Lesson 1 (60 minutes)Optimizing any website&rsquo;s performance requires a strong understanding of how browsers build websites from HTML, CSS and JavaScript. You&rsquo;ll start by breaking down the&nbsp;Critical Rendering Path&nbsp;- the steps the browser has to take to render a page. You&rsquo;ll get an understanding of how:HTML&nbsp;is converted to the&nbsp;Document Object Model (DOM).CSS&nbsp;is converted to the&nbsp;CSS Object Model (CSSOM).the browser runs&nbsp;layout&nbsp;to determine the position and size of elements beforepainting&nbsp;pixels on the screen.Throughout the lesson, you&rsquo;ll learn how to take advantage of the Timeline view inChrome Developer Tools&nbsp;to measure each and every step&rsquo;s performance on mobile and desktop.Lesson 2 (90 minutes)You&rsquo;ll explore easy HTML, CSS and JavaScript optimizations with significant performance implications, some of which are as simple as adding a single attribute to an HTML tag! Along the way, you&rsquo;ll be developing the skills to help you diagnose opportunities for optimizations, including:building&nbsp;quick and dirty&nbsp;diagrams of the Critical Rendering Path.identifying&nbsp;three key metrics&nbsp;to triangulate potential performance bottlenecks.",
        "desc_html": "You will learn how to optimize any website for speed by diving into the\ndetails of how mobile and desktop browsers render pages.\n\nIn this short course, you'll learn about the Critical Rendering Path, or the\nset of steps browsers must take to convert HTML, CSS and JavaScript into\nliving, breathing websites. From there, you'll start exploring and\nexperimenting with tools to measure performance and simple strategies to\ndeliver the first pixels to the screen as early as possible. You'll learn how\nto dive into recommendations from [PageSpeed\nInsights](https://developers.google.com/speed/pagespeed/insights/) and the\nTimeline view of Google Chrome's Developer Tools to find the data you need to\nachieve immediate performance boosts!\n\n**Why Take This Course?**\n\nFrom Ilya Grigorik's [High Performance Browser Networking](http://www.google.c\nom/url?q=http%3A%2F%2Fchimera.labs.oreilly.com%2Fbooks%2F1230000000545%2Findex\n.html&sa=D&sntz=1&usg=AFQjCNGqIsrSJdHvrYxIgEbLW577cvRxSA):\n\n\"The emergence and the fast growth of the web performance optimization (WPO)\nindustry within the past few years is a telltale sign of the growing\nimportance and demand for speed and faster user experiences by the users. And\nthis is not simply a psychological need for speed in our ever accelerating and\nconnected world, but a requirement driven by empirical results, as measured\nwith respect to the bottom-line performance of the many online businesses:\n\n  * Faster sites lead to better user engagement.\n  * Faster sites lead to better user retention.\n  * Faster sites lead to higher conversions.\n\nSimply put, speed is a feature.\"\n\n**Project**\n\nYou will optimize an online portfolio for speed, which you can share with the\nworld to showcase your skills!\n\nMaking a great first impression is absolutely key and an online portfolio can\nhelp you stand apart from the crowd. We'll give you a template for a modern,\nmobile-friendly portfolio which you'll be able to completely customize so that\nit shows off your work and your skills the way you want. But before you show\nit off to the world, you'll practice your web performance skills by optimizing\nthe portfolio to render as fast as possible.\n\n**Prerequisites and Requirements**\n\nThis course is for any and all web developers, whether you started learning\nabout HTML, CSS and JavaScript recently or have been building websites since\nthe nineties!\n\nMost importantly, you should be able to explain the overall purpose of HTML,\nCSS and JavaScript with respect to website structure. In addition, you should\nbe comfortable reading and writing HTML documents, however you will not be\nwriting JavaScript or CSS styles for this course.\n\nThis course is taught with [Google\nChrome](https://www.google.com/intl/en_us/chrome/browser/) and [Google Chrome\nCanary](http://www.google.com/intl/en/chrome/browser/canary.html).\n\n## Syllabus\n\n**Overview**\n\nThroughout the course, you'll build a performance toolbox to help you build\nfaster website experiences by taking advantage of PageSpeed Insights\nrecommendations and measuring page performance on mobile and desktop with\nChrome Developer Tools.\n\nThis class contains an introductory lesson, two primary lessons and a final\nproject. Before diving into optimizations, you'll build an understanding of\nhow browsers convert HTML, CSS and JavaScript into websites. Along the way,\nyou'll practice measuring performance using the same tools Google engineers\nuse.\n\nThen comes the really fun part: optimization! You'll learn about easy-to-\nimplement performance gains and develop a simple and powerful model for\nuncovering optimization opportunities.\n\nYou'll put your newfound performance skillset to the test with the final\nproject, where you'll be optimizing your own online portfolio website!\n\n**Lessons** **Lesson 0 (20 minutes)**\n\nYou can't optimize what you can't measure, so in this lesson you'll learn how\nto open Chrome Developer Tools to measure the performance of mobile and\ndesktop websites.\n\n**Lesson 1 (60 minutes)**\n\nOptimizing any website's performance requires a strong understanding of how\nbrowsers build websites from HTML, CSS and JavaScript. You'll start by\nbreaking down the Critical Rendering Path \\- the steps the browser has to take\nto render a page. You'll get an understanding of how:\n\n  * HTML is converted to the Document Object Model (DOM).\n  * CSS is converted to the CSS Object Model (CSSOM).\n  * the browser runs layout to determine the position and size of elements beforepainting pixels on the screen.\n\nThroughout the lesson, you'll learn how to take advantage of the Timeline view\ninChrome Developer Tools to measure each and every step's performance on\nmobile and desktop.\n\n**Lesson 2 (90 minutes)**\n\nYou'll explore easy HTML, CSS and JavaScript optimizations with significant\nperformance implications, some of which are as simple as adding a single\nattribute to an HTML tag! Along the way, you'll be developing the skills to\nhelp you diagnose opportunities for optimizations, including:\n\n  * building quick and dirty diagrams of the Critical Rendering Path.\n  * identifying three key metrics to triangulate potential performance bottlenecks.\n\n",
        "name": "Website Performance Optimization: The Critical Rendering Path",
        "provider": "Udacity",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Google"
        ],
        "url": "https://www.udacity.com/course/ud884",
        "video_url": "https://www.youtube.com/embed/v5us0j3QmW4?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-06-17",
        "desc": "Pervasive sensing and mobile platforms, advanced algorithms, and next generation robotics are making our environments more responsive, intelligent and automated. This technological change is transforming the industry landscape as never before, and organisations need to better understand the disruption that lies ahead. This unique module will ensure you stay ahead of the curve in leveraging technological change in information technology by:&bull; Providing an overview of the key emerging technologies that are driving technological shifts and reshaping the social, political and economic context.&bull; Deepen your understanding of the capabilities being created as a result of these technological shifts, and the industry impact of these capabilities.&bull; Build decision-capacity to successfully combine technological disruption, societal drivers and business models for sustained growth and differentiation.WHO SHOULD PARTICIPATEThis course is designed for executives and professionals within accelerated leadership programmes, to enhance their strategic knowledge on the topic and provide them with continuous leadership development.SyllabusWeek 1: Robotics1.1 Introduction: Rodney Brooks , Founder, Chairman and Chief Technical Officer, Rethink Robotics; Technology Pioneer 20141.2 Tactile Robots: Gerald E. Loeb, Chief Executive Officer, Syntouch, USA; Technology Pioneer 20141.3 Service Robots: Henrik I. Christensen, Distinguished Professor in Computer Science, Georgia Institute of Technology1.4 Exoskeleton: Yoshiyuki Sankai, Chief Executive Officer, Cyberdyne, Japan; Technology Pioneer 20141.5 Bionic Limbs: Hugh Herr, Assistant Professor in Media Arts and Sciences and Health Sciences and Technology, Massachusetts Institute of Technology (MIT)1.6 Industrial Robots: Eberhard Veit, Chief Executive Officer, Festo1.7 Conclusion: Rodney Brooks, Founder, Chairman and Chief Technical Officer, Rethink Robotics; Technology Pioneer 2014Week 2: Artifical Intelligence2.1 Introduction: Stuart Russell, Professor, University of California, Berkeley2.2 Natural Language Processing: Eugene Charniak, Professor, Brown University2.3 Common Sense Reasoning: Catherine Havasi, Chief Executive Officer, Luminoso2.4 Anticipatory Intelligence: Timothy Tuttle , CEO and Founder, Expect Labs2.5 Cognitive Intelligence: Ashwin Ram, Area Manager &amp; Chief Innovation Officer, Interactive Intelligence, PARC2.6 Machine Intelligence: Erik Brynjolfsson, Professor, Sloan School of Management, Massachusetts Institute of Technology2.7 Conclusion: Stuart Russell , Professor, University of California, BerkeleyWeek 3: Big Data3.1 Introduction: Alex Pentland, Toshiba Professor of Media, Arts and Sciences, Massachusetts Institute of Technology (MIT)3.2 Mobile Data: Nathan Eagle, Chief Executive Officer, Jana Mobile; Technology Pioneer 20143.3 Location Data: Michael Altendorf , Chief Executive Officer and Co-Founder, Adtelligence, Germany; Technology Pioneer 20143.4 Open Data: Helen Margetts , Director and Professor, Oxford Internet Institute, University of Oxford, United Kingdom3.5 Conclusion: Alex Pentland, Toshiba Professor of Media, Arts and Sciences, Massachusetts Institute of Technology (MIT)Week 4: Sensor Networks4.1 Introduction: Joseph Paradiso, Associate Professor of Media Arts and Sciences, Massachusetts Institute of Technology4.2 Internet of Everything: Matthew Grob, Executive Vice-President and Chief Technology Officer, Qualcomm4.3 Ingestible Sensors: Andrew Thompson, Chief Executive Officer, Proteus Digital Health; Technology Pioneer4.4 Geospatial Sensor Networks: Walter S. Scott, Founder and Chief Technical Officer, DigitalGlobe; Global Growth Company4.5 Smart Dust: Prabal Dutta, Assistant Professor, University of Michigan4.6 Smart City Networks: Carlo Ratti, Director, SENSEable City Laboratory, MIT - Departments of Urban Studies and Planning; Global Agenda Council on Urbanization4.7 Conclusion: Joseph Paradiso , Associate Professor of Media Arts and Sciences, Massachusetts Institute of Technology",
        "desc_html": "Pervasive sensing and mobile platforms, advanced algorithms, and next\ngeneration robotics are making our environments more responsive, intelligent\nand automated. This technological change is transforming the industry\nlandscape as never before, and organisations need to better understand the\ndisruption that lies ahead. This unique module will ensure you stay ahead of\nthe curve in leveraging technological change in information technology by:\n\n\u2022 Providing an overview of the key emerging technologies that are driving\ntechnological shifts and reshaping the social, political and economic context.\n\n\u2022 Deepen your understanding of the capabilities being created as a result of\nthese technological shifts, and the industry impact of these capabilities.\n\n\u2022 Build decision-capacity to successfully combine technological disruption,\nsocietal drivers and business models for sustained growth and differentiation.\n\n**WHO SHOULD PARTICIPATE**\n\nThis course is designed for executives and professionals within accelerated\nleadership programmes, to enhance their strategic knowledge on the topic and\nprovide them with continuous leadership development.\n\n## Syllabus\n\n**Week 1: Robotics**\n\n1.1 Introduction: Rodney Brooks , Founder, Chairman and Chief Technical\nOfficer, Rethink Robotics; Technology Pioneer 2014  \n1.2 Tactile Robots: Gerald E. Loeb, Chief Executive Officer, Syntouch, USA;\nTechnology Pioneer 2014  \n1.3 Service Robots: Henrik I. Christensen, Distinguished Professor in Computer\nScience, Georgia Institute of Technology  \n1.4 Exoskeleton: Yoshiyuki Sankai, Chief Executive Officer, Cyberdyne, Japan;\nTechnology Pioneer 2014  \n1.5 Bionic Limbs: Hugh Herr, Assistant Professor in Media Arts and Sciences\nand Health Sciences and Technology, Massachusetts Institute of Technology\n(MIT)  \n1.6 Industrial Robots: Eberhard Veit, Chief Executive Officer, Festo  \n1.7 Conclusion: Rodney Brooks, Founder, Chairman and Chief Technical Officer,\nRethink Robotics; Technology Pioneer 2014\n\n**Week 2: Artifical Intelligence**\n\n2.1 Introduction: Stuart Russell, Professor, University of California,\nBerkeley  \n2.2 Natural Language Processing: Eugene Charniak, Professor, Brown University  \n2.3 Common Sense Reasoning: Catherine Havasi, Chief Executive Officer,\nLuminoso  \n2.4 Anticipatory Intelligence: Timothy Tuttle , CEO and Founder, Expect Labs  \n2.5 Cognitive Intelligence: Ashwin Ram, Area Manager & Chief Innovation\nOfficer, Interactive Intelligence, PARC  \n2.6 Machine Intelligence: Erik Brynjolfsson, Professor, Sloan School of\nManagement, Massachusetts Institute of Technology  \n2.7 Conclusion: Stuart Russell , Professor, University of California, Berkeley\n\n**Week 3: Big Data**\n\n3.1 Introduction: Alex Pentland, Toshiba Professor of Media, Arts and\nSciences, Massachusetts Institute of Technology (MIT)  \n3.2 Mobile Data: Nathan Eagle, Chief Executive Officer, Jana Mobile;\nTechnology Pioneer 2014  \n3.3 Location Data: Michael Altendorf , Chief Executive Officer and Co-Founder,\nAdtelligence, Germany; Technology Pioneer 2014  \n3.4 Open Data: Helen Margetts , Director and Professor, Oxford Internet\nInstitute, University of Oxford, United Kingdom  \n3.5 Conclusion: Alex Pentland, Toshiba Professor of Media, Arts and Sciences,\nMassachusetts Institute of Technology (MIT)\n\n**Week 4: Sensor Networks**\n\n4.1 Introduction: Joseph Paradiso, Associate Professor of Media Arts and\nSciences, Massachusetts Institute of Technology  \n4.2 Internet of Everything: Matthew Grob, Executive Vice-President and Chief\nTechnology Officer, Qualcomm  \n4.3 Ingestible Sensors: Andrew Thompson, Chief Executive Officer, Proteus\nDigital Health; Technology Pioneer  \n4.4 Geospatial Sensor Networks: Walter S. Scott, Founder and Chief Technical\nOfficer, DigitalGlobe; Global Growth Company  \n4.5 Smart Dust: Prabal Dutta, Assistant Professor, University of Michigan  \n4.6 Smart City Networks: Carlo Ratti, Director, SENSEable City Laboratory, MIT\n- Departments of Urban Studies and Planning; Global Agenda Council on\nUrbanization  \n4.7 Conclusion: Joseph Paradiso , Associate Professor of Media Arts and\nSciences, Massachusetts Institute of Technology\n\n",
        "name": "PLM14101: Global Information Technology Outlook",
        "provider": "Forum Academy",
        "rating": "0",
        "reviews": "0",
        "university": [
            "World Economic Forum"
        ],
        "url": "https://forumacademy.weforum.org/courses/ForumAcademy/PLM14101/Summer_2014/about",
        "video_url": "https://www.youtube.com/embed/a-w_DYwzNTM?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-06-15",
        "desc": "\u0647\u0630\u0627 \u0627\u0644\u0645\u0633\u0627\u0642 \u0647\u0648 \u0627\u0644\u062c\u0632\u0621 \u0627\u0644\u0623\u0648\u0644 \u0645\u0646 \u0627\u0644\u0633\u0644\u0633\u0644\u0629 \u0627\u0644\u062b\u0646\u0627\u0626\u064a\u0629: \u0645\u0642\u062f\u0645\u0629 \u0641\u064a \u0639\u0644\u0645 \u0627\u0644\u062d\u0627\u0633\u0648\u0628 \u0648\u0627\u0644\u0628\u0631\u0645\u062c\u0629 \u0628\u0625\u0633\u062a\u062e\u062f\u0627\u0645 \u0644\u063a\u0629 \u0628\u0627\u064a\u062b\u0648\u0646 \u0648\u0645\u0642\u062f\u0645\u0629 \u0641\u064a \u0627\u0644\u062a\u0641\u0643\u064a\u0631 \u0627\u0644\u062d\u0627\u0633\u0648\u0628\u064a \u0648\u0639\u0644\u0648\u0645 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a. \u0645\u0639\u0627\u064b\u060c \u062a\u0645 \u062a\u0635\u0645\u064a\u0645 \u0647\u0630\u0647 \u0627\u0644\u0633\u0644\u0633\u0644\u0629 \u0644\u0645\u0633\u0627\u0639\u062f\u0629 \u0627\u0644\u0646\u0627\u0633 \u0627\u0644\u062c\u062f\u062f \u0627\u0644\u0630\u064a\u0646 \u0644\u0627 \u064a\u0645\u062a\u0644\u0643\u0648\u0646 \u0645\u0639\u0631\u0641\u0629 \u0645\u064f\u0633\u0628\u0642\u0629 \u0623\u0648 \u062e\u0628\u0631\u0629 \u0641\u064a \u0639\u0644\u0648\u0645 \u0627\u0644\u0643\u0645\u0628\u064a\u0648\u062a\u0631 \u0623\u0648 \u0627\u0644\u0628\u0631\u0645\u062c\u0629 \u062a\u0639\u0644\u0645 \u0627\u0644\u062a\u0641\u0643\u064a\u0631 \u0627\u0644\u062d\u0633\u0627\u0628\u064a \u0648\u0643\u064a\u0641\u064a\u0629 \u0643\u062a\u0627\u0628\u0629 \u0628\u0631\u0627\u0645\u062c \u0644\u0645\u0639\u0627\u0644\u062c\u0629 \u0645\u0634\u0627\u0643\u0644 \u0645\u0641\u064a\u062f\u0629. \u064a\u0645\u0643\u0646 \u0644\u0644\u0623\u0634\u062e\u0627\u0635 \u0627\u0644\u0630\u064a\u0646 \u0633\u064a\u0642\u0648\u0645\u0648\u0646 \u0628\u062f\u0631\u0627\u0633\u0629 \u0647\u0630\u064a\u0646 \u0627\u0644\u0645\u0633\u0627\u0642\u064a\u0646 \u0645\u0646 \u0625\u0633\u062a\u062e\u062f\u0627\u0645\u0647\u0645\u0627 \u0643\u0646\u0642\u0637\u0629 \u0627\u0646\u0637\u0644\u0627\u0642 \u0625\u0644\u0649 \u0645\u0633\u0627\u0642\u0627\u062a \u0639\u0644\u0648\u0645 \u0627\u0644\u0643\u0645\u0628\u064a\u0648\u062a\u0631 \u0627\u0644\u0645\u062a\u0642\u062f\u0651\u0645\u0629 \u0648\u0630\u0627\u062a \u0627\u0644\u0645\u0633\u062a\u0648\u0649 \u0627\u0644\u0623\u0639\u0644\u0649\u060c \u0648\u0644\u0643\u0646 \u0628\u0627\u0644\u0646\u0633\u0628\u0629 \u0644\u0644\u0639\u062f\u064a\u062f \u064a\u0645\u0643\u0646 \u0623\u0646 \u064a\u0643\u0648\u0646 \u0647\u0630\u0627 \u0627\u0644\u0645\u0633\u0627\u0642 \u0643\u0644 \u0645\u0627 \u064a\u062d\u062a\u0627\u062c\u0648\u0646 \u0645\u0639\u0631\u0641\u062a\u0647 \u0628\u0634\u0643\u0644 \u0645\u0628\u062f\u0623\u064a. \u0645\u0633\u0627\u0642 \"\u0645\u0642\u062f\u0645\u0629 \u0641\u064a \u0639\u0644\u0645 \u0627\u0644\u062d\u0627\u0633\u0648\u0628 \u0648\u0627\u0644\u0628\u0631\u0645\u062c\u0629 \u0628\u0625\u0633\u062a\u062e\u062f\u0627\u0645 \u0644\u063a\u0629 \u0628\u0627\u064a\u062b\u0648\u0646\" \u064a\u063a\u0637\u064a \u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u062d\u0633\u0627\u0628\u060c \u0644\u063a\u0629 \u0627\u0644\u0628\u0631\u0645\u062c\u0629 \u0628\u0627\u064a\u062b\u0648\u0646\u060c \u0648\u0628\u0639\u0636 \u0627\u0644\u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0627\u062a \u0627\u0644\u0628\u0633\u064a\u0637\u0629 \u0648\u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631 \u0648\u0627\u0644\u062a\u0635\u062d\u064a\u062d\u060c \u0648\u0645\u0642\u062f\u0645\u0629 \u0628\u0633\u064a\u0637\u0629 \u0625\u0644\u0649 \u0647\u064a\u0643\u0644\u064a\u0629 \u0627\u0644\u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0629\u060c \u0648\u0628\u0639\u0636 \u0627\u0644\u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0627\u062a \u0648\u0647\u064a\u0627\u0643\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0628\u0633\u064a\u0637\u0629.&nbsp;",
        "desc_html": "\u0647\u0630\u0627 \u0627\u0644\u0645\u0633\u0627\u0642 \u0647\u0648 \u0627\u0644\u062c\u0632\u0621 \u0627\u0644\u0623\u0648\u0644 \u0645\u0646 \u0627\u0644\u0633\u0644\u0633\u0644\u0629 \u0627\u0644\u062b\u0646\u0627\u0626\u064a\u0629: \u0645\u0642\u062f\u0645\u0629 \u0641\u064a \u0639\u0644\u0645 \u0627\u0644\u062d\u0627\u0633\u0648\u0628 \u0648\u0627\u0644\u0628\u0631\u0645\u062c\u0629\n\u0628\u0625\u0633\u062a\u062e\u062f\u0627\u0645 \u0644\u063a\u0629 \u0628\u0627\u064a\u062b\u0648\u0646 \u0648\u0645\u0642\u062f\u0645\u0629 \u0641\u064a \u0627\u0644\u062a\u0641\u0643\u064a\u0631 \u0627\u0644\u062d\u0627\u0633\u0648\u0628\u064a \u0648\u0639\u0644\u0648\u0645 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a. \u0645\u0639\u0627\u064b\u060c \u062a\u0645 \u062a\u0635\u0645\u064a\u0645\n\u0647\u0630\u0647 \u0627\u0644\u0633\u0644\u0633\u0644\u0629 \u0644\u0645\u0633\u0627\u0639\u062f\u0629 \u0627\u0644\u0646\u0627\u0633 \u0627\u0644\u062c\u062f\u062f \u0627\u0644\u0630\u064a\u0646 \u0644\u0627 \u064a\u0645\u062a\u0644\u0643\u0648\u0646 \u0645\u0639\u0631\u0641\u0629 \u0645\u064f\u0633\u0628\u0642\u0629 \u0623\u0648 \u062e\u0628\u0631\u0629 \u0641\u064a \u0639\u0644\u0648\u0645\n\u0627\u0644\u0643\u0645\u0628\u064a\u0648\u062a\u0631 \u0623\u0648 \u0627\u0644\u0628\u0631\u0645\u062c\u0629 \u062a\u0639\u0644\u0645 \u0627\u0644\u062a\u0641\u0643\u064a\u0631 \u0627\u0644\u062d\u0633\u0627\u0628\u064a \u0648\u0643\u064a\u0641\u064a\u0629 \u0643\u062a\u0627\u0628\u0629 \u0628\u0631\u0627\u0645\u062c \u0644\u0645\u0639\u0627\u0644\u062c\u0629 \u0645\u0634\u0627\u0643\u0644\n\u0645\u0641\u064a\u062f\u0629. \u064a\u0645\u0643\u0646 \u0644\u0644\u0623\u0634\u062e\u0627\u0635 \u0627\u0644\u0630\u064a\u0646 \u0633\u064a\u0642\u0648\u0645\u0648\u0646 \u0628\u062f\u0631\u0627\u0633\u0629 \u0647\u0630\u064a\u0646 \u0627\u0644\u0645\u0633\u0627\u0642\u064a\u0646 \u0645\u0646 \u0625\u0633\u062a\u062e\u062f\u0627\u0645\u0647\u0645\u0627 \u0643\u0646\u0642\u0637\u0629\n\u0627\u0646\u0637\u0644\u0627\u0642 \u0625\u0644\u0649 \u0645\u0633\u0627\u0642\u0627\u062a \u0639\u0644\u0648\u0645 \u0627\u0644\u0643\u0645\u0628\u064a\u0648\u062a\u0631 \u0627\u0644\u0645\u062a\u0642\u062f\u0651\u0645\u0629 \u0648\u0630\u0627\u062a \u0627\u0644\u0645\u0633\u062a\u0648\u0649 \u0627\u0644\u0623\u0639\u0644\u0649\u060c \u0648\u0644\u0643\u0646 \u0628\u0627\u0644\u0646\u0633\u0628\u0629\n\u0644\u0644\u0639\u062f\u064a\u062f \u064a\u0645\u0643\u0646 \u0623\u0646 \u064a\u0643\u0648\u0646 \u0647\u0630\u0627 \u0627\u0644\u0645\u0633\u0627\u0642 \u0643\u0644 \u0645\u0627 \u064a\u062d\u062a\u0627\u062c\u0648\u0646 \u0645\u0639\u0631\u0641\u062a\u0647 \u0628\u0634\u0643\u0644 \u0645\u0628\u062f\u0623\u064a. \u0645\u0633\u0627\u0642 \"\u0645\u0642\u062f\u0645\u0629 \u0641\u064a\n\u0639\u0644\u0645 \u0627\u0644\u062d\u0627\u0633\u0648\u0628 \u0648\u0627\u0644\u0628\u0631\u0645\u062c\u0629 \u0628\u0625\u0633\u062a\u062e\u062f\u0627\u0645 \u0644\u063a\u0629 \u0628\u0627\u064a\u062b\u0648\u0646\" \u064a\u063a\u0637\u064a \u0645\u0641\u0647\u0648\u0645 \u0627\u0644\u062d\u0633\u0627\u0628\u060c \u0644\u063a\u0629 \u0627\u0644\u0628\u0631\u0645\u062c\u0629\n\u0628\u0627\u064a\u062b\u0648\u0646\u060c \u0648\u0628\u0639\u0636 \u0627\u0644\u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0627\u062a \u0627\u0644\u0628\u0633\u064a\u0637\u0629 \u0648\u0627\u0644\u0627\u062e\u062a\u0628\u0627\u0631 \u0648\u0627\u0644\u062a\u0635\u062d\u064a\u062d\u060c \u0648\u0645\u0642\u062f\u0645\u0629 \u0628\u0633\u064a\u0637\u0629 \u0625\u0644\u0649 \u0647\u064a\u0643\u0644\u064a\u0629\n\u0627\u0644\u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0629\u060c \u0648\u0628\u0639\u0636 \u0627\u0644\u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0627\u062a \u0648\u0647\u064a\u0627\u0643\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0628\u0633\u064a\u0637\u0629.\n\n\n\n",
        "name": "CS100: \u0645\u0642\u062f\u0645\u0629 \u0641\u064a \u0639\u0644\u0645 \u0627\u0644\u062d\u0627\u0633\u0648\u0628 \u0648\u0627\u0644\u0628\u0631\u0645\u062c\u0629",
        "provider": "Edraak",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Massachusetts Institute of Technology"
        ],
        "url": "https://edraak.org/courses/QRF/6001/2014/about",
        "video_url": "https://www.youtube.com/embed/7pR96V3H55M?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-06-02",
        "desc": "Learning to program is no longer just for computer specialists and software developers. People from many different backgrounds now want to understand the basics of programming, because it&rsquo;s both fun and an increasingly valuable skill. One of the most exciting ways to learn programming is through authoring your own creative programs. Known as &ldquo;creative coding&rdquo;, this growing field uses computer software as a medium to develop original creative expression. So if you&rsquo;re an artist, designer, architect or musician who&rsquo;s interested in how you can expand your creative skills, or even a computer programmer looking to work in creative applications, you will find this course extremely useful.Throughout the course we&rsquo;ll help you develop practical programming concepts and skills by exploring creative ideas and challenges. We&rsquo;ll be looking at the history and philosophy behind artistic uses of technology, so you can gain a greater understanding of how best to express your own creative vision using the software you write. The aim is to teach you &ldquo;algorithmic thinking&rdquo; &ndash; ways to conceptualise and model the world so you can express creative ideas using computer programs. A background in programming is not assumed or necessary.Each week we will start with a simple creative idea and guide you through turning that idea into a working computer program. We&rsquo;ll be exploring programs that can generate images, animations and sound and you&rsquo;ll learn how you can interact with them to change their behaviour. As you&rsquo;ll discover, this opens a world of possibilities, because as you expand and modify your program new creative possibilities emerge. Starting with simple processes we will look at how to create increasingly complex and nuanced visual and sonic artworks using generative programming techniques. Assignments will give you the opportunity to explore your own creative ideas and share your achievements with fellow students.We will also look at how a number of leading professional artists and designers work creatively with computers, technology and robotics, examining their creative process and the ideas that inspire them.The course is very different from technical courses on programming. We will place creative programming in context through discussion about some of the most interesting questions raised by computer-generated art, such as:Can a computer be independently creative?Who is the author of a work of computer art: the programmer or the program?How is our understanding of art and creativity changed by technology?Does the computer bring anything that is really new to art?If you&rsquo;ve ever wondered about these questions or wanted to learn how to program a computer for creative purposes, then this course is for you.REQUIREMENTSNo prior knowledge of programming is necessary, but having an interest or background in any creative area would be beneficial in getting the most out of this course. It is also assumed that you have basic computer skills (including how to download software applications) and basic knowledge of files, directories, images and movies. The course involves programming using the Processing environment (www.processing.org), so you will need access to a computer that you can download and install this software on.",
        "desc_html": "Learning to program is no longer just for computer specialists and software\ndevelopers. People from many different backgrounds now want to understand the\nbasics of programming, because it's both fun and an increasingly valuable\nskill. One of the most exciting ways to learn programming is through authoring\nyour own creative programs. Known as \"creative coding\", this growing field\nuses computer software as a medium to develop original creative expression. So\nif you're an artist, designer, architect or musician who's interested in how\nyou can expand your creative skills, or even a computer programmer looking to\nwork in creative applications, you will find this course extremely useful.\n\nThroughout the course we'll help you develop practical programming concepts\nand skills by exploring creative ideas and challenges. We'll be looking at the\nhistory and philosophy behind artistic uses of technology, so you can gain a\ngreater understanding of how best to express your own creative vision using\nthe software you write. The aim is to teach you \"algorithmic thinking\" - ways\nto conceptualise and model the world so you can express creative ideas using\ncomputer programs. A background in programming is not assumed or necessary.\n\nEach week we will start with a simple creative idea and guide you through\nturning that idea into a working computer program. We'll be exploring programs\nthat can generate images, animations and sound and you'll learn how you can\ninteract with them to change their behaviour. As you'll discover, this opens a\nworld of possibilities, because as you expand and modify your program new\ncreative possibilities emerge. Starting with simple processes we will look at\nhow to create increasingly complex and nuanced visual and sonic artworks using\ngenerative programming techniques. Assignments will give you the opportunity\nto explore your own creative ideas and share your achievements with fellow\nstudents.\n\nWe will also look at how a number of leading professional artists and\ndesigners work creatively with computers, technology and robotics, examining\ntheir creative process and the ideas that inspire them.\n\nThe course is very different from technical courses on programming. We will\nplace creative programming in context through discussion about some of the\nmost interesting questions raised by computer-generated art, such as:\n\n  * Can a computer be independently creative?\n  * Who is the author of a work of computer art: the programmer or the program?\n  * How is our understanding of art and creativity changed by technology?\n  * Does the computer bring anything that is really new to art?\n\nIf you've ever wondered about these questions or wanted to learn how to\nprogram a computer for creative purposes, then this course is for you.\n\n**REQUIREMENTS**\n\nNo prior knowledge of programming is necessary, but having an interest or\nbackground in any creative area would be beneficial in getting the most out of\nthis course. It is also assumed that you have basic computer skills (including\nhow to download software applications) and basic knowledge of files,\ndirectories, images and movies. The course involves programming using the\nProcessing environment (www.processing.org), so you will need access to a\ncomputer that you can download and install this software on.\n\n",
        "name": "Creative coding",
        "provider": "FutureLearn",
        "rating": "2",
        "reviews": "1",
        "university": [
            "Monash University"
        ],
        "url": "https://www.futurelearn.com/courses/creative-coding",
        "video_url": "https://www.youtube.com/embed/BFCj8z846ic?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-05-30",
        "desc": "This course provides an overview of the Ada programming language. Through a set of small examples, you will have the opportunity to see, understand and experiment most of the capabilities of the language, and write small programs. Other courses will then dive into more details of each aspect. Note that as it is today, the overview set is not complete - new lessons will be added over time.SyllabusYour First Ada ProgramA Bouncing BallRotating BallsTen Bouncing Balls&nbsp;",
        "desc_html": "This course provides an overview of the Ada programming language. Through a\nset of small examples, you will have the opportunity to see, understand and\nexperiment most of the capabilities of the language, and write small programs.\nOther courses will then dive into more details of each aspect. Note that as it\nis today, the overview set is not complete - new lessons will be added over\ntime.\n\n## Syllabus\n\n  * Your First Ada Program\n  * A Bouncing Ball\n  * Rotating Balls\n  * Ten Bouncing Balls\n\n\n\n",
        "name": "Ada: Overview",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [
            "AdaCore University"
        ],
        "url": "http://university.adacore.com/courses/overview/",
        "video_url": ""
    },
    {
        "date": "2014-05-30",
        "desc": "This course will describe Ada programming features for developing large applications, including exception handling, type safety, access types, encapsulation, and genericity.SyllabusExceptionsType SafetyAccess TypesEncapsulationGenericity",
        "desc_html": "This course will describe Ada programming features for developing large\napplications, including exception handling, type safety, access types,\nencapsulation, and genericity.\n\n## Syllabus\n\n  * Exceptions\n  * Type Safety\n  * Access Types\n  * Encapsulation\n  * Genericity\n\n",
        "name": "Ada: Programming in the Large",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [
            "AdaCore University"
        ],
        "url": "http://university.adacore.com/courses/programming-in-the-large1/",
        "video_url": ""
    },
    {
        "date": "2014-05-30",
        "desc": "This course will go over the basic concepts of the Ada programming language, allowing to write small programs. We'll see in particular how to manipulate simple and composite types, the different kind of statements as well as the basis of program architecture - the subprogram and the package.SyllabusBasic TypesStatementsArraysRecordsSubprogramsPackages",
        "desc_html": "This course will go over the basic concepts of the Ada programming language,\nallowing to write small programs. We'll see in particular how to manipulate\nsimple and composite types, the different kind of statements as well as the\nbasis of program architecture - the subprogram and the package.\n\n## Syllabus\n\n  * Basic Types\n  * Statements\n  * Arrays\n  * Records\n  * Subprograms\n  * Packages\n\n",
        "name": "Ada: Basic Concepts",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [
            "AdaCore University"
        ],
        "url": "http://university.adacore.com/courses/basic-concepts/",
        "video_url": ""
    },
    {
        "date": "2014-05-30",
        "desc": "Have you wondered what the future of embedded devices looks like?Have you ever wanted to create your own weather station or design a device to control the lights in your home automatically?All of these questions will be answered in this practical hands-on course. This course introduces Java developers to the world of embedded devices and the Internet of Things (IoT). Embedded controllers are already a part of our lives. Meters read electric and water usage and send the readings to a central office. Electronic thermostats turn on the heat and air conditioning as required.Java Embedded leverages your experience with Java to open the world of the Internet of Things by providing direct access to electronic sensors and mechanical devices.Learn ToWrite Java Embedded applications that:Read input data from switches and drive LED's using the GPIO interfaceRead temperature and barometric pressure from an I2C deviceRead the device's current location using a GPS UART deviceStore and manage data collectedReport data to a client through a variety of communication optionsCourse ProjectThe course scenario:You will build a prototype of an embedded device to collect, analyze and share information from a shipping container.The problem:Farmers are placing their fresh crops into a shipping container, and some of those shipments arrive at the distribution center spoiled or damaged. The shipping company has hired you to develop an inexpensive embedded device to collect information from the containers.The goals for the device include:&nbsp;&nbsp;&nbsp; * Completely stand-alone operation and low-power (Raspberry Pi and Java ME Embedded 8)&nbsp;&nbsp;&nbsp; * Record the number of times and when the shipping container door is opened (switches)&nbsp;&nbsp;&nbsp; * Record the temperature in the container at regular intervals (Barometric Pressure/Temperature sensor)&nbsp;&nbsp;&nbsp; * Record the location of the container at regular intervals (Adafruit GPS Breakout)&nbsp;&nbsp;&nbsp; * Respond to a request to download the information wirelessly (WiFi module)&nbsp;Course CompletionBased on successfully completing the course quizzes, you will receive a course completion award, suitable for printing and framing!",
        "desc_html": "Have you wondered what the future of embedded devices looks like?  \nHave you ever wanted to create your own weather station or design a device to\ncontrol the lights in your home automatically?  \nAll of these questions will be answered in this practical hands-on course.\nThis course introduces Java developers to the world of embedded devices and\nthe Internet of Things (IoT). Embedded controllers are already a part of our\nlives. Meters read electric and water usage and send the readings to a central\noffice. Electronic thermostats turn on the heat and air conditioning as\nrequired.  \nJava Embedded leverages your experience with Java to open the world of the\nInternet of Things by providing direct access to electronic sensors and\nmechanical devices.\n\n**Learn To**\n\nWrite Java Embedded applications that:\n\n  * Read input data from switches and drive LED's using the GPIO interface\n  * Read temperature and barometric pressure from an I2C device\n  * Read the device's current location using a GPS UART device\n  * Store and manage data collected\n  * Report data to a client through a variety of communication options\n\n**Course Project**\n\n_The course scenario:_  \nYou will build a prototype of an embedded device to collect, analyze and share\ninformation from a shipping container.  \n  \n_The problem:_  \nFarmers are placing their fresh crops into a shipping container, and some of\nthose shipments arrive at the distribution center spoiled or damaged. The\nshipping company has hired you to develop an inexpensive embedded device to\ncollect information from the containers.  \nThe goals for the device include:  \n    * Completely stand-alone operation and low-power (Raspberry Pi and Java ME Embedded 8)  \n    * Record the number of times and when the shipping container door is opened (switches)  \n    * Record the temperature in the container at regular intervals (Barometric Pressure/Temperature sensor)  \n    * Record the location of the container at regular intervals (Adafruit GPS Breakout)  \n    * Respond to a request to download the information wirelessly (WiFi module)\n\n\n\n**Course Completion**\n\nBased on successfully completing the course quizzes, you will receive a course\ncompletion award, suitable for printing and framing!\n\n",
        "name": "Develop Java Embedded Applications Using a Raspberry Pi",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Oracle"
        ],
        "url": "https://apex.oracle.com/pls/apex/f?p=44785:145:0::::P145_EVENT_ID,P145_PREV_PAGE:1841,143",
        "video_url": "https://www.youtube.com/embed/MUdobP84q3Q?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-05-29",
        "desc": "*Note - This is an Archived course*This is a past/archived course. At this time, you can only explore this course in a self-paced fashion. Certain features of this course may not be active, but many people enjoy watching the videos and working with the materials. Make sure to check for reruns of this course.This course will cover the theory and the fundamentals of the emerging science of Sabermetrics. We will discuss the game of baseball, not through consensus or a fan\u2019s conventional wisdom, but by searching for objective knowledge in hitting, pitching, and fielding performance. These and other areas of sabermetrics will be analyzed and better understood with current and historical baseball data.The course also serves as applied introduction to the basics of data science, a growing field of scholarship, that requires skills in computation, statistics, and communicating results of analyses. Using baseball data, the basics of statistical regression, the R Language, and SQL will be covered.This course has been successfully taught at the Experimental College at Tufts University since 2004. Many of its former students have gone on to careers writing about baseball and working in various MLB baseball operations and analytics departments.Professor Andres talks about the science of baseball: The Science of the Home Run, TedXYouth@Beacon Street.",
        "desc_html": "*Note - This is an Archived course*  \n  \nThis is a past/archived course. At this time, you can only explore this course\nin a self-paced fashion. Certain features of this course may not be active,\nbut many people enjoy watching the videos and working with the materials. Make\nsure to check for reruns of this course.  \n  \nThis course will cover the theory and the fundamentals of the emerging science\nof Sabermetrics. We will discuss the game of baseball, not through consensus\nor a fan\u2019s conventional wisdom, but by searching for objective knowledge in\nhitting, pitching, and fielding performance. These and other areas of\nsabermetrics will be analyzed and better understood with current and\nhistorical baseball data.  \n  \nThe course also serves as applied introduction to the basics of data science,\na growing field of scholarship, that requires skills in computation,\nstatistics, and communicating results of analyses. Using baseball data, the\nbasics of statistical regression, the R Language, and SQL will be covered.  \n  \nThis course has been successfully taught at the Experimental College at Tufts\nUniversity since 2004. Many of its former students have gone on to careers\nwriting about baseball and working in various MLB baseball operations and\nanalytics departments.  \n  \nProfessor Andres talks about the science of baseball: The Science of the Home\nRun, TedXYouth@Beacon Street.\n\n",
        "name": "SABR101x: Sabermetrics 101: Introduction to Baseball Analytics",
        "provider": "edX",
        "rating": "4",
        "reviews": "2",
        "university": [
            "Boston University"
        ],
        "url": "https://www.edx.org/course/sabermetrics-101-introduction-baseball-bux-sabr101x",
        "video_url": "https://www.youtube.com/embed/i5JNhDzuXTA?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-05-26",
        "desc": "En este curso vamos a aprender a escribir nuestros propios programas, usando software libre. Vamos a usar el lenguaje M, disponible en los paquetes MATLAB y Octave UPM, que son ampliamente usados en ciencias e ingenier\u00eda. No es necesario tener ning\u00fan conocimiento previo para seguir el curso, y al finalizar, habr\u00e1s sido capaz de tomar las riendas de tu ordenador y escribir tus propios programas, incluso con gr\u00e1ficos sencillos.",
        "desc_html": "En este curso vamos a aprender a escribir nuestros propios programas, usando\nsoftware libre. Vamos a usar el lenguaje M, disponible en los paquetes MATLAB\ny Octave UPM, que son ampliamente usados en ciencias e ingenier\u00eda. No es\nnecesario tener ning\u00fan conocimiento previo para seguir el curso, y al\nfinalizar, habr\u00e1s sido capaz de tomar las riendas de tu ordenador y escribir\ntus propios programas, incluso con gr\u00e1ficos sencillos.\n\n",
        "name": "Introducci\u00f3n a la Programaci\u00f3n para Ciencias e Ingenier\u00eda (2\u00aa edici\u00f3n)",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Universidad Polit\u00e9cnica de Madrid"
        ],
        "url": "https://www.miriadax.net/web/introduccion-programacion-ciencias-ingenieria-2edicion",
        "video_url": "https://www.youtube.com/embed/hpeyceDy8eo?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-05-26",
        "desc": "The third part of the MOOC series \"Web Engineering\" completes our Web Engineering Specialisation Program:Web Engineering I: Basics of Web Development (level 1 = beginners)Web Engineering II: Developing Mobile HTML5 Apps (level 2 = intermediate)Web Engineering III: Web Application Quality Assurance (level 3 = advanced)In this part of the course, you will master the maintenance challenges that come with continuously building, testing, and deploying HTML5 apps. In addition, you have the opportunity to particpate in an offshore development project for two weeks in September. This project will prove that you have learnt the tools and skills necessary for a Web professional.What will I learn?By the end of this course, you will be able to:Prepare virtual environments for developing, testing, and deploying Web appsKnow how to compile test plans and scripts for performance and browser testing of Web appsInstall, configure, and use tools for build automation and QA processesProvided that you take part in the offshore Scrum development project, you will learn the tools and skills for Web app development in a distributed team in a continuous delivery environment.What do I have to know?You must have a profound knowledge of developing Web apps. For the learning objectives of build automation and quality assurance, it is necessary to provide a working Web app of your own. This is either the mash-up app participants developed in Web Engineering II as term project or any meaningful Web app you have developed elsewhere. Your app must be Open Source.",
        "desc_html": "The third part of the MOOC series \"Web Engineering\" completes our Web\nEngineering Specialisation Program:\n\n  * Web Engineering I: Basics of Web Development (level 1 = beginners)\n  * Web Engineering II: Developing Mobile HTML5 Apps (level 2 = intermediate)\n  * Web Engineering III: Web Application Quality Assurance (level 3 = advanced)\n\nIn this part of the course, you will master the maintenance challenges that\ncome with continuously building, testing, and deploying HTML5 apps. In\naddition, you have the opportunity to particpate in an offshore development\nproject for two weeks in September. This project will prove that you have\nlearnt the tools and skills necessary for a Web professional.\n\n******What will I learn?**\n\nBy the end of this course, you will be able to:\n\n  * Prepare virtual environments for developing, testing, and deploying Web apps\n  * Know how to compile test plans and scripts for performance and browser testing of Web apps\n  * Install, configure, and use tools for build automation and QA processes\n\nProvided that you take part in the offshore Scrum development project, you\nwill learn the tools and skills for Web app development in a distributed team\nin a continuous delivery environment.\n\n******What do I have to know?**\n\nYou must have a profound knowledge of developing Web apps. For the learning\nobjectives of build automation and quality assurance, it is necessary to\nprovide a working Web app of your own. This is either the mash-up app\nparticipants developed in Web Engineering II as term project or any meaningful\nWeb app you have developed elsewhere. Your app must be Open Source.\n\n",
        "name": "Web Engineering III: Quality Assurance",
        "provider": "iversity",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Technische Hochschule Mittelhessen"
        ],
        "url": "https://iversity.org/courses/web-engineering-iii-quality-assurance",
        "video_url": "https://www.youtube.com/embed/Bxio5HztqbM?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-05-20",
        "desc": "The Internet has become an integral part of our daily lives. This course will teach you about the technological foundation of this worldwide network. You will learn about its physical foundation of data transmission based on the functional principles and technologies of local area networks (LANs) and wide area networks (WANs). The TCP/IP reference model, that lies at the base of the Internet, its protocols and countless applications, will be presented in the units to follow. The participant will gain comprehensive insight into the complex world of Internet technologies.SyllabusWeek 1 :Introduction - The Internet is great, but is it really so complex?Week 2 :Network Technologies - How can messages be transferred from one computer, by way of electrical or optical signals, to the computer next door or to one that is halfway around the world?Week 3 :Internetworking with IPv4 - How does a data packet find its way through an Internet that consists of different but interconnected single networks with completely different technologies?Week 4 :The New Internet Protocol IPv6 -How will it be possible in the future for smartphones, household appliances, cars, etc. to also be able to communicate with each other via the Internet?Extra knowledge:Hands-on Wireshark exercisesWeek 5 :Transport Protocols TCP and UDP - Who can guarantee that my data will reach its goal intact after its long journey through the Internet across different networks?Week 6 :Internet Applications - What else do we need to know in order to send an email or a video through the Internet?Final Examination:Final Examination",
        "desc_html": "The Internet has become an integral part of our daily lives. This course will\nteach you about the technological foundation of this worldwide network. You\nwill learn about its physical foundation of data transmission based on the\nfunctional principles and technologies of local area networks (LANs) and wide\narea networks (WANs). The TCP/IP reference model, that lies at the base of the\nInternet, its protocols and countless applications, will be presented in the\nunits to follow. The participant will gain comprehensive insight into the\ncomplex world of Internet technologies.\n\n## Syllabus\n\n  * **Week 1 :** Introduction - The Internet is great, but is it really so complex?\n  * **Week 2 :** Network Technologies - How can messages be transferred from one computer, by way of electrical or optical signals, to the computer next door or to one that is halfway around the world?\n  * **Week 3 :** Internetworking with IPv4 - How does a data packet find its way through an Internet that consists of different but interconnected single networks with completely different technologies?\n  * **Week 4 :** The New Internet Protocol IPv6 -How will it be possible in the future for smartphones, household appliances, cars, etc. to also be able to communicate with each other via the Internet?\n  * **Extra knowledge:** Hands-on Wireshark exercises\n  * **Week 5 :** Transport Protocols TCP and UDP - Who can guarantee that my data will reach its goal intact after its long journey through the Internet across different networks?\n  * **Week 6 :** Internet Applications - What else do we need to know in order to send an email or a video through the Internet?\n  * **Final Examination:** Final Examination\n\n",
        "name": "Introduction to Internetworking with TCP/IP",
        "provider": "openHPI",
        "rating": "4",
        "reviews": "1",
        "university": [],
        "url": "https://open.hpi.de/courses/internetworking2014",
        "video_url": "https://www.youtube.com/embed/EgPqWyO8G_U?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-05-19",
        "desc": "\u0627\u0644\u0645\u0627\u062f\u0629 \u062a\u0642\u062f\u0645 \u0645\u062f\u062e\u0644 \u0644\u0644\u0628\u0631\u0645\u062c\u064a\u0627\u062a \u0639\u0645\u0648\u0645\u0627 \u0648 \u062a\u062d\u062a\u0648\u064a \u0639\u0644\u0649 \u0645\u0642\u0627\u0631\u0646\u0627\u062a \u0628\u0633\u064a\u0637\u0629 \u0628\u064a\u0646 \u0627\u0644\u0623\u0646\u0648\u0627\u0639 \u0627\u0644\u0645\u062e\u062a\u0644\u0641\u0629 \u0644\u0644\u063a\u0627\u062a \u0627\u0644\u0628\u0631\u0645\u062c\u0629.\u0643\u0645\u0627 \u0627\u0646 \u0627\u0644\u0645\u0627\u062f\u0629 \u062a\u062d\u062a\u0648\u064a \u0639\u0644\u0649 \u0634\u0631\u062d \u0645\u0628\u0633\u0637 \u0644\u0644\u0645\u0641\u0627\u0647\u064a\u0645 \u0627\u0644\u0623\u0633\u0627\u0633\u064a\u0629 \u0644\u0644\u0628\u0631\u0645\u062c\u0629 \u0627\u0644\u0634\u064a\u0626\u064a\u0629 OOP \u0648 \u0643\u064a\u0641\u064a\u0629 \u062a\u0637\u0628\u064a\u0642 \u0647\u0630\u0647 \u0627\u0644\u0645\u0641\u0627\u0647\u064a\u0645 \u0628\u0644\u063a\u0629 \u0627\u0644\u062c\u0627\u0641\u0627.\u062b\u0645 \u064a\u062a\u0645 \u062a\u0642\u062f\u064a\u0645 \u0623\u0633\u0627\u0633\u064a\u0627\u062a \u0628\u0646\u0627\u0621 \u062a\u0637\u0628\u064a\u0642 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0644\u063a\u0629 \u0627\u0644\u062c\u0627\u0641\u0627 \u0645\u0646 \u062d\u064a\u062b \u062a\u0639\u0631\u064a\u0641 \u0627\u0644\u0645\u062a\u063a\u064a\u0631\u0627\u062a \u0648 \u0627\u0644\u062f\u0648\u0627\u0644 \u0648 \u0627\u0644\u062c\u0645\u0644 \u0627\u0644\u0634\u0631\u0637\u064a\u0629 \u062b\u0645 \u062a\u0642\u062f\u064a\u0645 \u0627\u0644\u0645\u0643\u062a\u0628\u0627\u062a \u0627\u0644\u062c\u0627\u0647\u0632\u0629 \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0628\u0646\u0627\u0621 \u0648\u0627\u062c\u0647\u0629 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0648 \u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0644\u0634\u0628\u0643\u0627\u062a \u0648 \u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a.",
        "desc_html": "\u0627\u0644\u0645\u0627\u062f\u0629 \u062a\u0642\u062f\u0645 \u0645\u062f\u062e\u0644 \u0644\u0644\u0628\u0631\u0645\u062c\u064a\u0627\u062a \u0639\u0645\u0648\u0645\u0627 \u0648 \u062a\u062d\u062a\u0648\u064a \u0639\u0644\u0649 \u0645\u0642\u0627\u0631\u0646\u0627\u062a \u0628\u0633\u064a\u0637\u0629 \u0628\u064a\u0646 \u0627\u0644\u0623\u0646\u0648\u0627\u0639\n\u0627\u0644\u0645\u062e\u062a\u0644\u0641\u0629 \u0644\u0644\u063a\u0627\u062a \u0627\u0644\u0628\u0631\u0645\u062c\u0629.  \n  \n  \n  \n\u0643\u0645\u0627 \u0627\u0646 \u0627\u0644\u0645\u0627\u062f\u0629 \u062a\u062d\u062a\u0648\u064a \u0639\u0644\u0649 \u0634\u0631\u062d \u0645\u0628\u0633\u0637 \u0644\u0644\u0645\u0641\u0627\u0647\u064a\u0645 \u0627\u0644\u0623\u0633\u0627\u0633\u064a\u0629 \u0644\u0644\u0628\u0631\u0645\u062c\u0629 \u0627\u0644\u0634\u064a\u0626\u064a\u0629 OOP \u0648 \u0643\u064a\u0641\u064a\u0629\n\u062a\u0637\u0628\u064a\u0642 \u0647\u0630\u0647 \u0627\u0644\u0645\u0641\u0627\u0647\u064a\u0645 \u0628\u0644\u063a\u0629 \u0627\u0644\u062c\u0627\u0641\u0627.  \n  \n  \n  \n\u062b\u0645 \u064a\u062a\u0645 \u062a\u0642\u062f\u064a\u0645 \u0623\u0633\u0627\u0633\u064a\u0627\u062a \u0628\u0646\u0627\u0621 \u062a\u0637\u0628\u064a\u0642 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0644\u063a\u0629 \u0627\u0644\u062c\u0627\u0641\u0627 \u0645\u0646 \u062d\u064a\u062b \u062a\u0639\u0631\u064a\u0641 \u0627\u0644\u0645\u062a\u063a\u064a\u0631\u0627\u062a \u0648\n\u0627\u0644\u062f\u0648\u0627\u0644 \u0648 \u0627\u0644\u062c\u0645\u0644 \u0627\u0644\u0634\u0631\u0637\u064a\u0629 \u062b\u0645 \u062a\u0642\u062f\u064a\u0645 \u0627\u0644\u0645\u0643\u062a\u0628\u0627\u062a \u0627\u0644\u062c\u0627\u0647\u0632\u0629 \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0628\u0646\u0627\u0621 \u0648\u0627\u062c\u0647\u0629 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0648\n\u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0644\u0634\u0628\u0643\u0627\u062a \u0648 \u0642\u0648\u0627\u0639\u062f \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a.\n\n",
        "name": "\u0645\u0642\u062f\u0645\u0629 \u0644\u0644\u0628\u0631\u0645\u062c\u0629 \u0628\u0644\u063a\u0629 \u062c\u0627\u0641\u0627 Java",
        "provider": "Rwaq (\u0631\u0648\u0627\u0642)",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "http://www.rwaq.org/courses/introduction-to-java",
        "video_url": "https://www.youtube.com/embed/u9u2gCQCk0I?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-05-19",
        "desc": "Curso de Estad\u00edstica aplicada a las Ciencias de la Salud. En esta primera parte el curso se centrar\u00e1 en la estad\u00edstica descriptiva de una o m\u00e1s variables y de sus relaciones. El curso tambi\u00e9n introducir\u00e1 el manejo del programa de an\u00e1lisis de datos R y el paque rk.Teaching con el que se realizar\u00e1n los an\u00e1lisis estad\u00edsticos.",
        "desc_html": "Curso de Estad\u00edstica aplicada a las Ciencias de la Salud. En esta primera\nparte el curso se centrar\u00e1 en la estad\u00edstica descriptiva de una o m\u00e1s\nvariables y de sus relaciones. El curso tambi\u00e9n introducir\u00e1 el manejo del\nprograma de an\u00e1lisis de datos R y el paque rk.Teaching con el que se\nrealizar\u00e1n los an\u00e1lisis estad\u00edsticos.\n\n",
        "name": "Curso Pr\u00e1ctico de Bioestad\u00edstica con R (Primera parte) (2\u00aa edici\u00f3n)",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Universidad San Pablo CEU"
        ],
        "url": "https://www.miriadax.net/web/curso-practico-bioestadistica-r-2edicion",
        "video_url": "https://www.youtube.com/embed/BTFOsbzInZo?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-05-15",
        "desc": "This course provides an overview of Enterprise Computing and in particular, the role of System z hardware and its primary operating system (z/OS) in an Enterprise Computing environment. The emphasis is on commercial computing.The introductory topic provides an overview of Enterprise Computing in general. This is followed with an introduction to the System z enterprise server hardware and its operating system, z/OS. Enterprise computing involves many different types of workloads; for example, transaction processing, business intelligence, end user interactive computing, web serving, data serving, batch, and many others. This short course will provide an overview of two very important Enterprise Computing workloads: end user interactive computing (TSO/ISPF and USS) and batch processing and their related technologies.Prerequisites:Some familiarity with an existing operating system (e.g. UNIX, Windows, etc. ) and associated terminology and concepts.A high speed internet connection for access to course materials.A current version of Internet Explorer or another browser to view the web pages associated with the course materials. Adobe acrobat reader (current version).Word processing software or the ability to read current word processing documents.&nbsp;Course Learning Objectives:Upon successful completion of this course, the student will be able to do the following:&nbsp;List the characteristics of Enterprise ComputingDescribe the role of Enterprise Server in an Enterprise Computing environment and list some of its characteristics.List the distinguishing characteristics of the System z architecture and hardware.List some of the characteristics of the z/OS operating system and why these characteristics are of value to an Enterprise Computing configuration.Describe some commonly used z/OS data sets, their characteristics and use.Be familiar with basic functions and usage of TSO, ISPF, and JCLDescribe the characteristics of batch workloads and their importance to Enterprise Computing.Discuss, at a high level, the functions and processing of batch jobs by JES2Explain the flow of a jobBe familiar with and able to use System z and z/OS terminology and acronyms.Be familiar with the System z hardware and software history and evolution.Required ReadingThe IBM text, &ldquo;Introduction to the New Mainframe: z/OS Basics&rdquo; will be the base text for the course. The IBM publication number is: SG24-6366. A softcopy of this book is available for download athttp://www.redbooks.ibm.com/abstracts/sg246366.htmlas well as a means to order a hardcopy. In addition, topic lecture material and notes will be provided to complement/augment the reading. Additional supplementary reading will be noted and may be used in some of the assignments or discussions. Other relevant PDF extracts, papers, articles, etc. will also be provided as well as URLs to relevant web resources.&nbsp;Course GradingA passing grade for all the course quizzes is 70%. Students can re-take a quiz if they want to improve their grade. You do not have to pass a quiz in order to move on to the next topic. If a student passes all quizzes with a passing grade, the student has successfully completed the class.SyllabusWeek 1Course WelcomeIntroduction to Enterprise ComputingWeek 2Introduction to Enterprise ServersWeek 3Introduction to z/OSWeek 4Introduction to Data Sets and Related ConceptsWeek 5Introduction to TSO, ISPF, and USSWeek 6Introduction to BatchWeek 7Introduction to JCLWeek 8Introduction to the Job Entry SubsystemCourse Closing&nbsp;",
        "desc_html": "This course provides an overview of Enterprise Computing and in particular,\nthe role of System z hardware and its primary operating system (z/OS) in an\nEnterprise Computing environment. The emphasis is on commercial computing.  \n  \nThe introductory topic provides an overview of Enterprise Computing in\ngeneral. This is followed with an introduction to the System z enterprise\nserver hardware and its operating system, z/OS. Enterprise computing involves\nmany different types of workloads; for example, transaction processing,\nbusiness intelligence, end user interactive computing, web serving, data\nserving, batch, and many others. This short course will provide an overview of\ntwo very important Enterprise Computing workloads: end user interactive\ncomputing (TSO/ISPF and USS) and batch processing and their related\ntechnologies.\n\n**Prerequisites**:\n\n  1. Some familiarity with an existing operating system (e.g. UNIX, Windows, etc. ) and associated terminology and concepts.\n  2. A high speed internet connection for access to course materials.\n  3. A current version of Internet Explorer or another browser to view the web pages associated with the course materials. Adobe acrobat reader (current version).\n  4. Word processing software or the ability to read current word processing documents.\n\n\n\n**Course Learning Objectives**:\n\nUpon successful completion of this course, the student will be able to do the\nfollowing:\n\n\n\n  1. List the characteristics of Enterprise Computing\n  2. Describe the role of Enterprise Server in an Enterprise Computing environment and list some of its characteristics.\n  3. List the distinguishing characteristics of the System z architecture and hardware.\n  4. List some of the characteristics of the z/OS operating system and why these characteristics are of value to an Enterprise Computing configuration.\n  5. Describe some commonly used z/OS data sets, their characteristics and use.\n  6. Be familiar with basic functions and usage of TSO, ISPF, and JCL\n  7. Describe the characteristics of batch workloads and their importance to Enterprise Computing.\n  8. Discuss, at a high level, the functions and processing of batch jobs by JES2\n  9. Explain the flow of a job\n  10. Be familiar with and able to use System z and z/OS terminology and acronyms.\n  11. Be familiar with the System z hardware and software history and evolution.\n\n**Required Reading**\n\nThe IBM text, \"Introduction to the New Mainframe: z/OS Basics\" will be the\nbase text for the course. The IBM publication number is: SG24-6366. A softcopy\nof this book is available for download at\n<http://www.redbooks.ibm.com/abstracts/sg246366.html> as well as a means to\norder a hardcopy. In addition, topic lecture material and notes will be\nprovided to complement/augment the reading. Additional supplementary reading\nwill be noted and may be used in some of the assignments or discussions. Other\nrelevant PDF extracts, papers, articles, etc. will also be provided as well as\nURLs to relevant web resources.\n\n\n\n**Course Grading**\n\nA passing grade for all the course quizzes is 70%. Students can re-take a quiz\nif they want to improve their grade. You do not have to pass a quiz in order\nto move on to the next topic. If a student passes all quizzes with a passing\ngrade, the student has successfully completed the class.\n\n## Syllabus\n\n**Week 1**  \nCourse Welcome  \nIntroduction to Enterprise Computing\n\n**Week 2**  \nIntroduction to Enterprise Servers\n\n**Week 3**  \nIntroduction to z/OS\n\n**Week 4**  \nIntroduction to Data Sets and Related Concepts\n\n**Week 5**  \nIntroduction to TSO, ISPF, and USS\n\n**Week 6**   \nIntroduction to Batch\n\n**Week 7**  \nIntroduction to JCL\n\n**Week 8**  \nIntroduction to the Job Entry Subsystem  \nCourse Closing\n\n\n\n",
        "name": "Introduction to Enterprise Computing",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Marist College"
        ],
        "url": "https://mooc.marist.edu/web/ecc/introduction-to-enterprise-computing",
        "video_url": "https://www.youtube.com/embed/QGQ8S6OdXS4?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-05-12",
        "desc": "This is the third and final course of the 3-course Machine Learning Series and is offered at Georgia Tech as CS7641.Can we program machines to learn like humans? This Reinforcement Learning course will teach you the algorithms for designing self-learning agents like us!Reinforcement Learning is the area of Machine Learning concerned with the actions that software agentsought&nbsp;to take in a particular environment in order to maximize rewards. You can apply Reinforcement Learning to robot control, chess, backgammon, checkers, and other activities that a software agent can learn. Reinforcement Learning uses behaviorist psychology in order to achieve reward maximization.This course includes important Reinforcement Learning approaches like Markov Decision Processes and Game Theory. Please refer to the Syllabus for a detailed breakdown of topics.Series Information: Machine Learning is a graduate-level series of 3 courses, covering the area of Artificial Intelligence concerned with computer programs that modify and improve their performance through experiences.Machine Learning 1: Supervised LearningMachine Learning 2: Unsupervised LearningMachine Learning 3: Reinforcement Learning&nbsp;(this course)If you are new to Machine Learning, we recommend you take these 3 courses in order.The entire series is taught as a lively and rigorous dialogue between two eminent Machine Learning professors and friends: Professor Charles Isbell (Georgia Tech) and Professor Michael Littman (Brown University).Why Take This Course?You will learn about Reinforcement Learning, the field of Machine Learning concerned with the actions that software agents&nbsp;ought&nbsp;to take in a particular environment in order to maximize rewards.Michael: Reinforcement Learning is a very popular field.&nbsp;Charles: Perhaps because&nbsp;you're&nbsp;in it, Michael.&nbsp;Michael: I don't think that's it.In this course, you will gain an understanding of topics and methods in Reinforcement Learning, including Markov Decision Processes and Game Theory. You will gain experience implementing Reinforcement Learning techniques in a final project.In the final project, we&rsquo;ll bring back the 80's and design a Pacman agent capable of eating all the food without getting eaten by monsters.Prerequisites and RequirementsWe recommend you take&nbsp;Machine Learning 1: Supervised Learning&nbsp;and&nbsp;Machine Learning 2: Unsupervised Learning&nbsp;prior to taking this course.An introductory course like Udacity's&nbsp;Introduction to Artificial Learning&nbsp;provides a helpful background for this course. Programming experience (for example, taking Udacity's&nbsp;Introduction to CS), and basic familiarity with statistics and probability theory is required. Udacity's&nbsp;Intro to Statistics, especially&nbsp;Lessons 8, 9 and 10, is helpful.The most important prerequisite for enjoying and doing well in this class is your interest in the material.See the&nbsp;Technology Requirements&nbsp;for using UdacitySyllabusLesson 1: Markov Decision ProcessesDecision Making and Reinforcement LearningMarkov Decision ProcessesSequences of RewardsAssumptionsPoliciesFinding PoliciesLesson 2: Reinforcement LearningRat DinosaursAPIThree Approaches to RLA New Kind of Value FunctionEstimating Q from TransitionsQ Learning ConvergenceGreedy ExpolorationLesson 3: Game TheoryWhat is Game TheoryMinimaxFundamental ResultGame TreeVon NeumannCenter GameSnitchA Beautiful EquilibriumThe Two Step2Step2FuriousLesson 4: Game Theory, ContinuedThe SequencingIterated Prisioner&rsquo;s DilemnaUncertain EndTit for TatFinite State StrategyFolk TheoremSecurity Level ProfileGrim TriggerImplausible ThreatsPavlovComputational Folk TheoremStochastic Games and Multiagent RLZero Sum Stochastic GamesGeneral Sum GamesReinforcement Learning Project",
        "desc_html": "This is the third and final course of the 3-course Machine Learning Series and\nis offered at Georgia Tech as CS7641.\n\nCan we program machines to learn like humans? This Reinforcement Learning\ncourse will teach you the algorithms for designing self-learning agents like\nus!\n\nReinforcement Learning is the area of Machine Learning concerned with the\nactions that software agentsought to take in a particular environment in order\nto maximize rewards. You can apply Reinforcement Learning to robot control,\nchess, backgammon, checkers, and other activities that a software agent can\nlearn. Reinforcement Learning uses behaviorist psychology in order to achieve\nreward maximization.\n\nThis course includes important Reinforcement Learning approaches like Markov\nDecision Processes and Game Theory. Please refer to the Syllabus for a\ndetailed breakdown of topics.\n\nSeries Information: Machine Learning is a graduate-level series of 3 courses,\ncovering the area of Artificial Intelligence concerned with computer programs\nthat modify and improve their performance through experiences.\n\n  * [Machine Learning 1: Supervised Learning](https://www.udacity.com/course/ud675)\n  * [Machine Learning 2: Unsupervised Learning](https://www.udacity.com/course/ud741)\n  * [Machine Learning 3: Reinforcement Learning](https://www.udacity.com/course/ud820) (this course)\n\nIf you are new to Machine Learning, we recommend you take these 3 courses in\norder.\n\nThe entire series is taught as a lively and rigorous dialogue between two\neminent Machine Learning professors and friends: Professor Charles Isbell\n(Georgia Tech) and Professor Michael Littman (Brown University).\n\n**Why Take This Course?**\n\nYou will learn about Reinforcement Learning, the field of Machine Learning\nconcerned with the actions that software agents ought to take in a particular\nenvironment in order to maximize rewards.\n\nMichael: Reinforcement Learning is a very popular field.  \nCharles: Perhaps because you're in it, Michael.  \nMichael: I don't think that's it.\n\nIn this course, you will gain an understanding of topics and methods in\nReinforcement Learning, including Markov Decision Processes and Game Theory.\nYou will gain experience implementing Reinforcement Learning techniques in a\nfinal project.\n\nIn the final project, we'll bring back the 80's and design a Pacman agent\ncapable of eating all the food without getting eaten by monsters.\n\n**Prerequisites and Requirements**\n\nWe recommend you take [Machine Learning 1: Supervised\nLearning](http://www.udacity.com/ud675) and [Machine Learning 2: Unsupervised\nLearning](http://www.udacity.com/ud741) prior to taking this course.\n\nAn introductory course like Udacity's [Introduction to Artificial\nLearning](https://www.udacity.com/course/cs271) provides a helpful background\nfor this course. Programming experience (for example, taking Udacity's\n[Introduction to CS](https://www.udacity.com/course/cs101)), and basic\nfamiliarity with statistics and probability theory is required. Udacity's\n[Intro to Statistics](https://www.udacity.com/course/st101), especially\n[Lessons 8, 9 and\n10](https://www.udacity.com/course/viewer#!/c-st101/l-48738235/m-48688822), is\nhelpful.\n\nThe most important prerequisite for enjoying and doing well in this class is\nyour interest in the material.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n## Syllabus\n\n**Lesson 1: Markov Decision Processes**\n\n  * Decision Making and Reinforcement Learning\n  * Markov Decision Processes\n  * Sequences of Rewards\n  * Assumptions\n  * Policies\n  * Finding Policies\n**Lesson 2: Reinforcement Learning**\n\n  * Rat Dinosaurs\n  * API\n  * Three Approaches to RL\n  * A New Kind of Value Function\n  * Estimating Q from Transitions\n  * Q Learning Convergence\n  * Greedy Expoloration\n**Lesson 3: Game Theory**\n\n  * What is Game Theory\n  * Minimax\n  * Fundamental Result\n  * Game Tree\n  * Von Neumann\n  * Center Game\n  * Snitch\n  * A Beautiful Equilibrium\n  * The Two Step\n  * 2Step2Furious\n**Lesson 4: Game Theory, Continued**\n\n  * The Sequencing\n  * Iterated Prisioner's Dilemna\n  * Uncertain End\n  * Tit for Tat\n  * Finite State Strategy\n  * Folk Theorem\n  * Security Level Profile\n  * Grim Trigger\n  * Implausible Threats\n  * Pavlov\n  * Computational Folk Theorem\n  * Stochastic Games and Multiagent RL\n  * Zero Sum Stochastic Games\n  * General Sum Games\n**Reinforcement Learning Project**\n\n",
        "name": "Machine Learning 3\u2014Reinforcement Learning",
        "provider": "Udacity",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Brown University",
            "Georgia Institute of Technology"
        ],
        "url": "https://www.udacity.com/course/ud820",
        "video_url": "https://www.youtube.com/embed/PTC34uSKrUI?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-05-12",
        "desc": "\u0421\u0438\u0441\u0442\u0435\u043c\u0430LaTeX\u2014 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442 \u0432 \u043d\u0430\u0443\u0447\u043d\u043e\u043c \u043c\u0438\u0440\u0435. \u041b\u0443\u0447\u0448\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435, \u0444\u0438\u0437\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438 \u044d\u043a\u043e\u043d\u043e\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0436\u0443\u0440\u043d\u0430\u043b\u044b \u0438\u0437\u0434\u0430\u044e\u0442\u0441\u044f \u0432 LaTeX \u0438 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u044e\u0442 \u0430\u0432\u0442\u043e\u0440\u0430\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0435\u0433\u043e \u0434\u043b\u044f \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0438 \u0440\u0443\u043a\u043e\u043f\u0438\u0441\u0435\u0439.\u00a0LaTeX \u043d\u0435 \u043e\u0447\u0435\u043d\u044c \u043f\u0440\u043e\u0441\u0442 \u0432 \u043e\u0441\u0432\u043e\u0435\u043d\u0438\u0438, \u043d\u043e \u043e\u0431\u043b\u0430\u0434\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u043e\u0439 \u043f\u0440\u0435\u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432 \u043f\u0435\u0440\u0435\u0434 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u043c\u0438 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u043c\u0438 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430\u043c\u0438 \u0438 \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440\u0430\u043c\u0438 \u043f\u0440\u0435\u0437\u0435\u043d\u0442\u0430\u0446\u0438\u0439:\u0432\u044b\u0441\u043e\u043a\u043e\u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0432\u0435\u0440\u0441\u0442\u043a\u0430 \u2014 \u0442\u0435\u043a\u0441\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u00ab\u043a\u0430\u043a \u0432 \u043a\u043d\u0438\u0436\u043a\u0435\u00bb;\u0443\u0434\u043e\u0431\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u0441\u043e \u0441\u043b\u043e\u0436\u043d\u044b\u043c\u0438 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u043c\u0438 \u0444\u043e\u0440\u043c\u0443\u043b\u0430\u043c\u0438;\u043e\u0442\u043b\u0438\u0447\u043d\u0430\u044f \u043a\u0440\u043e\u0441\u0441-\u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u044c;\u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u044f \u043c\u043d\u043e\u0433\u0438\u0445 \u0440\u0443\u0442\u0438\u043d\u043d\u044b\u0445 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0432: \u043d\u0443\u043c\u0435\u0440\u0430\u0446\u0438\u0438 \u0444\u043e\u0440\u043c\u0443\u043b, \u0440\u0438\u0441\u0443\u043d\u043a\u043e\u0432, \u0442\u0430\u0431\u043b\u0438\u0446, \u0440\u0430\u0437\u0434\u0435\u043b\u043e\u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430, \u043f\u0435\u0440\u0435\u043a\u0440\u0435\u0441\u0442\u043d\u044b\u0445 \u0441\u0441\u044b\u043b\u043e\u043a, \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043a\u043e\u043b\u043e\u043d\u0442\u0438\u0442\u0443\u043b\u043e\u0432, \u043e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u044f \u0441\u0442\u0438\u043b\u0435\u0439 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432 \u0438 \u0442. \u043f.;\u043e\u0433\u0440\u043e\u043c\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0438 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432, \u043f\u0430\u043a\u0435\u0442\u044b-\u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f \u043d\u0430 \u0432\u0441\u0435 \u0441\u043b\u0443\u0447\u0430\u0438 \u0436\u0438\u0437\u043d\u0438.LaTeX \u043e\u0431\u043b\u0435\u0433\u0447\u0430\u0435\u0442 \u0436\u0438\u0437\u043d\u044c \u0432\u0441\u0435\u043c, \u043a\u043e\u043c\u0443 \u043f\u0440\u0438\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u043e\u0444\u043e\u0440\u043c\u043b\u044f\u0442\u044c \u044d\u0441\u0441\u0435, \u0440\u0435\u0444\u0435\u0440\u0430\u0442\u044b, \u043a\u0443\u0440\u0441\u043e\u0432\u044b\u0435 \u0438 \u0434\u0438\u043f\u043b\u043e\u043c\u043d\u044b\u0435 \u0440\u0430\u0431\u043e\u0442\u044b, \u0434\u0438\u0441\u0441\u0435\u0440\u0442\u0430\u0446\u0438\u0438, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0441\u043b\u0430\u0439\u0434\u044b \u043f\u0440\u0435\u0437\u0435\u043d\u0442\u0430\u0446\u0438\u0439 \u043d\u0430 \u0438\u0445 \u043e\u0441\u043d\u043e\u0432\u0435.\u00a0\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438, \u043e\u0441\u0432\u043e\u0438\u0432\u0448\u0438\u0435 LaTeX, \u0432\u0441\u043f\u043e\u043c\u0438\u043d\u0430\u044e\u0442 \u0432\u0435\u0440\u0441\u0442\u043a\u0443 \u0441\u043b\u043e\u0436\u043d\u044b\u0445 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0432 Word \u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0431\u043e\u043b\u044c\u0448\u0438\u0445 \u043f\u0440\u0435\u0437\u0435\u043d\u0442\u0430\u0446\u0438\u0439 \u0432 PowerPoint \u043a\u0430\u043a \u0441\u0442\u0440\u0430\u0448\u043d\u044b\u0439 \u0441\u043e\u043d.\u0415\u0441\u043b\u0438 \u0432\u044b \u0441\u043e\u043c\u043d\u0435\u0432\u0430\u0435\u0442\u0435\u0441\u044c, \u0441\u0442\u043e\u0438\u0442 \u043b\u0438 \u0432\u0430\u043c \u0438\u0437\u0443\u0447\u0430\u0442\u044c LaTeX, \u043f\u043e\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e \u043e \u0435\u0433\u043e \u043f\u0440\u0435\u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432\u0430\u0445 (\u043f\u043e-\u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438):http://www.ctan.org/tex/http://www.andy-roberts.net/writing/latex/benefitshttp://ricardo.ecn.wfu.edu/~cottrell/wp.htmlhttp://www.tug.org/TUGboat/tb22-1-2/tb70heff.pdf\u0423 \u043a\u0443\u0440\u0441\u0430 \u0435\u0441\u0442\u044c \u043e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u0430\u044f \u0433\u0440\u0443\u043f\u043f\u0430 \u0432 \u0441\u043e\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0439 \u0441\u0435\u0442\u0438 \u00ab\u0412\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u0435\u00bb:https://vk.com/hse.latex.LaTeXis the standard in the scientific world. The best mathematical, physical and economic journals are published in LaTeX and authors are encouraged to use it for manuscripts. LaTeX is quite difficult to learn, but ithas many advantages over the most\u00a0popular word processors and presentation software:high-quality typography \u2013 text looks as it would in a well published book;easy to typeset\u00a0with complex mathematical formulas;excellent cross-platform compatibility;automation of many routine processes, i.e. to number formulas, figures, tables, document sections, to create cross references, headers, footers and design styles, etc.;a worldwide community of users and developers; extension packages for any occasion.LaTeX is an excellent tool\u00a0for everyone who is going to draw up an essay, term paper, thesis or dissertation, as well as the presentation slides based upon them. Users who have learned LaTeX, can not ever conceive that they were once creating complex documents in Word or presentations in PowerPoint.If you are in doubt about whether you need to learn LaTeX or not, feel free to\u00a0read more about its benefits (in English):http://www.ctan.org/tex/http://www.andy-roberts.net/writing/latex/benefitshttp://ricardo.ecn.wfu.edu/~cottrell/wp.htmlhttp://www.tug.org/TUGboat/tb22-1-2/tb70heff.pdfThis course offers a special page at the \u00abVKontakte\u00bb social network (in Russian):https://vk.com/hse.latex.Syllabus\u041f\u0435\u0440\u0432\u0430\u044f \u043d\u0435\u0434\u0435\u043b\u044f\u0412\u0432\u0435\u0434\u0435\u043d\u0438\u0435.\u0423\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u0438\u0437\u0434\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b LaTeX. \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u044b\u0435 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430 \u0438 \u043e\u043d\u043b\u0430\u0439\u043d-\u0440\u0435\u0441\u0443\u0440\u0441\u044b, \u043f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u0432 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0438 \u0438 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 \u0441 \u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439.\u0411\u0430\u0437\u043e\u0432\u044b\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430.\u041a\u043b\u0430\u0441\u0441\u044b \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430, \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u043e\u0432, \u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043d\u0430 \u0433\u043b\u0430\u0432\u044b \u0438 \u043f\u0430\u0440\u0430\u0433\u0440\u0430\u0444\u044b. \u041a\u043e\u043c\u0430\u043d\u0434\u044b \u044f\u0437\u044b\u043a\u0430 LaTeX.&nbsp;\u041f\u0435\u0440\u0435\u043a\u0440\u0435\u0441\u0442\u043d\u044b\u0435 \u0441\u0441\u044b\u043b\u043a\u0438 \u0432\u043d\u0443\u0442\u0440\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430.\u041c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0430 \u0432 LaTeX.&nbsp;\u041d\u0430\u0431\u043e\u0440 \u043f\u0440\u043e\u0441\u0442\u0435\u0439\u0448\u0438\u0445 \u0444\u043e\u0440\u043c\u0443\u043b. \u0424\u043e\u0440\u043c\u0443\u043b\u044b \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 \u0438 \u0432\u044b\u043a\u043b\u044e\u0447\u043d\u044b\u0435 \u0444\u043e\u0440\u043c\u0443\u043b\u044b, \u043d\u0443\u043c\u0435\u0440\u0430\u0446\u0438\u044f. \u041d\u0430\u0447\u0435\u0440\u0442\u0430\u043d\u0438\u044f \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b, \u0434\u0440\u043e\u0431\u0438, \u0432\u044b\u0441\u043e\u0442\u0430 \u0441\u043a\u043e\u0431\u043e\u043a, \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u043d\u044b\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438 \u044d\u043a\u043e\u043d\u043e\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f. \u0420\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0441\u043f\u043e\u0441\u043e\u0431\u044b \u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0438 \u0444\u043e\u0440\u043c\u0443\u043b,\n    \u043c\u043d\u043e\u0433\u043e\u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0435 \u0444\u043e\u0440\u043c\u0443\u043b\u044b, \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0439, \u043c\u0430\u0442\u0440\u0438\u0446\u044b. \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043f\u0430\u043a\u0435\u0442\u044b \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0444\u043e\u0440\u043c\u0443\u043b\u0430\u043c\u0438. &nbsp; &nbsp;\u0412\u0442\u043e\u0440\u0430\u044f \u043d\u0435\u0434\u0435\u043b\u044f\u0420\u0438\u0441\u0443\u043d\u043a\u0438.&nbsp;\u0420\u0430\u0441\u0442\u0440\u043e\u0432\u044b\u0439 \u0438\u043b\u0438 \u0432\u0435\u043a\u0442\u043e\u0440\u043d\u044b\u0439 \u0440\u0438\u0441\u0443\u043d\u043e\u043a&nbsp;\u043a\u0430\u043a \u043e\u0431\u044a\u0435\u043a\u0442 \u0432 \u0442\u0435\u043a\u0441\u0442\u0435. \u041e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0435 \u0440\u0438\u0441\u0443\u043d\u043a\u043e\u0432: \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a, \u043d\u043e\u043c\u0435\u0440,&nbsp;\u043f\u0435\u0440\u0435\u043a\u0440\u0435\u0441\u0442\u043d\u044b\u0435 \u0441\u0441\u044b\u043b\u043a\u0438&nbsp; \u041c\u0430\u0441\u0448\u0442\u0430\u0431\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438 \u0434\u0440\u0443\u0433\u0438\u0435 \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438, \u0440\u0430\u043c\u043a\u0438 \u0432\u043e\u043a\u0440\u0443\u0433 \u0440\u0438\u0441\u0443\u043d\u043a\u043e\u0432. \u041e\u0431\u0442\u0435\u043a\u0430\u0435\u043c\u044b\u0435 \u0440\u0438\u0441\u0443\u043d\u043a\u0438.&nbsp;\u0422\u0430\u0431\u043b\u0438\u0446\u044b.&nbsp;\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u0435\u0434\u0438\u043d\u0438\u0446 \u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u044f \u0432&nbsp;LaTeX.&nbsp;\u0422\u0430\u0431\u043b\u0438\u0446\u0430 \u043a\u0430\u043a \u043e\u0431\u044a\u0435\u043a\u0442 \u0432 \u0442\u0435\u043a\u0441\u0442\u0435. \u041e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b: \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a, \u043d\u043e\u043c\u0435\u0440, \u043f\u0435\u0440\u0435\u043a\u0440\u0435\u0441\u0442\u043d\u044b\u0435 \u0441\u0441\u044b\u043b\u043a\u0438. \u041e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u044f\u0447\u0435\u0435\u043a, \u043d\u0430\u0447\u0435\u0440\u0442\u0430\u043d\u0438\u044f \u043b\u0438\u043d\u0438\u0439 \u0441\u0435\u0442\u043a\u0438. \u0412\u044b\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u043d\u0438\u0435 \u0432 \u044f\u0447\u0435\u0439\u043a\u0430\u0445. \u041c\u043d\u043e\u0433\u043e\u0441\u0442\u0440\u0430\u043d\u0438\u0447\u043d\u044b\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b. \u041e\u0431\u0442\u0435\u043a\u0430\u0435\u043c\u044b\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b. \u041e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u0435 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0441\u043f\u0438\u0441\u043a\u043e\u0432 \u0440\u0438\u0441\u0443\u043d\u043a\u043e\u0432 \u0438 \u0442\u0430\u0431\u043b\u0438\u0446.\u0422\u0440\u0435\u0442\u044c\u044f \u043d\u0435\u0434\u0435\u043b\u044f\u041e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0441\u0442\u0430 \u0438 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0445 \u0430\u0431\u0437\u0430\u0446\u0435\u0432.&nbsp;\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0441\u0442\u0438 \u043e \u043a\u043b\u0430\u0441\u0441\u0430\u0445 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430: \u0432\u044b\u0431\u043e\u0440 \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0435\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430. \u041f\u043e\u043b\u044f, \u043a\u043e\u043b\u043e\u043d\u0442\u0438\u0442\u0443\u043b\u044b,&nbsp;\u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0438 \u0440\u0430\u0437\u043c\u0435\u0440 \u043b\u0438\u0441\u0442\u0430, \u0440\u0430\u0437\u043c\u0435\u0440 \u0448\u0440\u0438\u0444\u0442\u0430, \u043c\u0435\u0436\u0434\u0443\u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0439 \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b. \u0420\u0430\u0437\u0440\u044b\u0432 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b, \u0432\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u043e\u0431\u0435\u043b\u044b. \u041e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u0435 \u0430\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u0438 (abstract). \u041e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0433\u043e \u0442\u0438\u0442\u0443\u043b\u044c\u043d\u043e\u0433\u043e \u043b\u0438\u0441\u0442\u0430 (\u043f\u0440\u0438\u043c\u0435\u0440). \u041c\u043d\u043e\u0433\u043e\u0443\u0440\u043e\u0432\u043d\u0435\u0432\u0430\u044f \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430: \u0433\u043b\u0430\u0432\u044b, \u0440\u0430\u0437\u0434\u0435\u043b\u044b, \u043f\u043e\u0434\u0440\u0430\u0437\u0434\u0435\u043b\u044b \u0438 \u0442. \u0434., \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0421\u043d\u043e\u0441\u043a\u0438. \u041e\u0433\u043b\u0430\u0432\u043b\u0435\u043d\u0438\u0435, \u0441\u043f\u0438\u0441\u043a\u0438 \u0442\u0430\u0431\u043b\u0438\u0446 \u0438 \u0438\u043b\u043b\u044e\u0441\u0442\u0440\u0430\u0446\u0438\u0439. \u0413\u0438\u043f\u0435\u0440\u0441\u0441\u044b\u043b\u043a\u0438 \u043d\u0430 \u043c\u0435\u0441\u0442\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0438 \u0432\u043d\u0435\u0448\u043d\u0438\u0435 \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0438. \u041e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u0435 \u043c\u0430\u0440\u043a\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0438 \u043d\u0443\u043c\u0435\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u0447\u043d\u0435\u0439. \u041e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0441\u0442\u0430 \u0432 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043a\u043e\u043b\u043e\u043d\u043e\u043a. &nbsp; &nbsp;\u0421\u0447\u0435\u0442\u0447\u0438\u043a\u0438 \u0438 \u043c\u0430\u043a\u0440\u043e\u043a\u043e\u043c\u0430\u043d\u0434\u044b.&nbsp;\u041e\u0431\u044a\u0435\u043a\u0442\u044b \u0442\u0438\u043f\u0430 \u00ab\u0442\u0435\u043e\u0440\u0435\u043c\u0430\u00bb. \u041f\u0440\u043e\u0441\u0442\u0435\u0439\u0448\u0435\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435: \u043c\u0430\u043a\u0440\u043e\u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0438 \u0438\u0445 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b. \u041f\u0430\u043a\u0435\u0442\u044b, \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u044e\u0449\u0438\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u0421\u0447\u0435\u0442\u0447\u0438\u043a\u0438: \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0438 \u043f\u0435\u0440\u0435\u043f\u043e\u0434\u0447\u0438\u043d\u0435\u043d\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 (\u043d\u0443\u043c\u0435\u0440\u0430\u0446\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446, \u0433\u043b\u0430\u0432, \u0440\u0430\u0437\u0434\u0435\u043b\u043e\u0432,\n\u0442\u0435\u043e\u0440\u0435\u043c \u0438 \u0442. \u043f.) \u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u044b\u0445. \u041f\u0440\u0438\u043c\u0435\u0440: \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434 \u0434\u043b\u044f \u0432\u0435\u0440\u0441\u0442\u043a\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0442\u0438\u043f\u0430 \u00ab\u0437\u0430\u0434\u0430\u0447\u0430\u00bb \u0438 \u00ab\u0440\u0435\u0448\u0435\u043d\u0438\u0435\u00bb. &nbsp; &nbsp;\u0427\u0435\u0442\u0432\u0435\u0440\u0442\u0430\u044f \u043d\u0435\u0434\u0435\u043b\u044f\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0431\u0438\u0431\u043b\u0438\u043e\u0433\u0440\u0430\u0444\u0438\u0435\u0439.&nbsp;\u041e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430 \u0438 \u0441\u0441\u044b\u043b\u043e\u043a \u043d\u0430 \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0438 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u043c \u043c\u0435\u0442\u043e\u0434\u043e\u043c. \u041f\u0430\u043a\u0435\u0442 BibTeX: \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u043e\u0432 \u0438 \u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0435\u0435 \u0441 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u043c\u0438 LaTeX. \u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b \u0446\u0438\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f.\u0413\u0440\u0430\u0444\u0438\u043a\u0430 \u0432 \u043f\u0430\u043a\u0435\u0442\u0435 TikZ.&nbsp;\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u0435\u0439\u0448\u0435\u0439 \u0432\u0435\u043a\u0442\u043e\u0440\u043d\u043e\u0439 \u0433\u0440\u0430\u0444\u0438\u043a\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 LaTeX \u0438 \u0435\u0433\u043e \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0439. \u041f\u0440\u0438\u043d\u0446\u0438\u043f\u044b \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043f\u0430\u043a\u0435\u0442\u043e\u043c&nbsp;TikZ. \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432: \u043e\u0441\u0435\u0439 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442, \u0433\u0435\u043e\u043c\u0435\u0442\u0440\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0444\u0438\u0433\u0443\u0440, \u0433\u0440\u0430\u0444\u0438\u043a\u043e\u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0439. \u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044fTikZ&nbsp;\u0434\u043b\u044f\n\u0438\u043b\u043b\u044e\u0441\u0442\u0440\u0430\u0446\u0438\u0439 \u043a \u044d\u043a\u043e\u043d\u043e\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u044f\u043c. \u0421\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043e\u0431\u043b\u0435\u0433\u0447\u0430\u044e\u0449\u0438\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0433\u0440\u0430\u0444\u0438\u043a\u0438(GeoGebra).\u041f\u044f\u0442\u0430\u044f \u043d\u0435\u0434\u0435\u043b\u044f\u0420\u0443\u0441\u0441\u043a\u0438\u0439 \u044f\u0437\u044b\u043a \u0432 LaTeX.&nbsp;\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u043c\u0438, \u043d\u0430\u0431\u0440\u0430\u043d\u043d\u044b\u043c\u0438 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0440\u0443\u0441\u0441\u043a\u043e\u0433\u043e \u044f\u0437\u044b\u043a\u0430. \u041a\u0438\u0440\u0438\u043b\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0448\u0440\u0438\u0444\u0442\u044b.&nbsp;\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u0432\u0435\u0440\u0441\u0442\u043a\u0438 \u0440\u0443\u0441\u0441\u043a\u043e\u044f\u0437\u044b\u0447\u043d\u044b\u0445 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432.&nbsp;\u041f\u0440\u0435\u0437\u0435\u043d\u0442\u0430\u0446\u0438\u0438.&nbsp;\u041f\u0430\u043a\u0435\u0442beamer: \u043e\u0431\u0449\u0435\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e. \u0412\u044b\u0431\u043e\u0440 \u0441\u0442\u0438\u043b\u044f \u043f\u0440\u0435\u0437\u0435\u043d\u0442\u0430\u0446\u0438\u0438, \u0435\u0433\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 (\u0432\u0441\u0442\u0430\u0432\u043a\u0430 \u043b\u043e\u0433\u043e\u0442\u0438\u043f\u043e\u0432 \u0438 \u0434\u0440.). \u041e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u0435 \u0442\u0438\u0442\u0443\u043b\u044c\u043d\u043e\u0433\u043e \u0441\u043b\u0430\u0439\u0434\u0430. \u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u043f\u0440\u0435\u0437\u0435\u043d\u0442\u0430\u0446\u0438\u0438: \u0440\u0430\u0437\u0434\u0435\u043b\u044b, \u0441\u043b\u0430\u0439\u0434\u044b, \u0431\u043b\u043e\u043a\u0438. \u0421\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430 \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0442\u0435\u043a\u0441\u0442\u0430 \u043d\u0430 \u0441\u043b\u0430\u0439\u0434\u0430\u0445.\n    \u0420\u0435\u0436\u0438\u043chandout\u0434\u043b\u044f \u043f\u0435\u0447\u0430\u0442\u0438 \u0440\u0430\u0437\u0434\u0430\u0442\u043e\u0447\u043d\u043e\u0433\u043e \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u0430. \u041f\u043e\u0441\u0442\u0435\u043f\u0435\u043d\u043d\u043e\u0435 \u043f\u043e\u044f\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u043d\u0430 \u0441\u043b\u0430\u0439\u0434\u0430\u0445, \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0438\u0445 \u043d\u0430\u0447\u0435\u0440\u0442\u0430\u043d\u0438\u044f \u043c\u0435\u0436\u0434\u0443 \u0441\u043b\u0430\u0439\u0434\u0430\u043c\u0438. \u0410\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u044b: \u043a\u043d\u043e\u043f\u043a\u0438 \u0433\u0438\u043f\u0435\u0440\u0441\u0441\u044b\u043b\u043e\u043a \u0438 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0430 \u043c\u0435\u0436\u0434\u0443 \u0441\u043b\u0430\u0439\u0434\u0430\u043c\u0438. \u041f\u0430\u043a\u0435\u0442 lecture \u0434\u043b\u044f \u043e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u044f \u0446\u0438\u043a\u043b\u043e\u0432 \u043f\u0440\u0435\u0437\u0435\u043d\u0442\u0430\u0446\u0438\u0439.",
        "desc_html": "\u0421\u0438\u0441\u0442\u0435\u043c\u0430 **LaTeX** \u2014 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442 \u0432 \u043d\u0430\u0443\u0447\u043d\u043e\u043c \u043c\u0438\u0440\u0435. \u041b\u0443\u0447\u0448\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435, \u0444\u0438\u0437\u0438\u0447\u0435\u0441\u043a\u0438\u0435\n\u0438 \u044d\u043a\u043e\u043d\u043e\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0436\u0443\u0440\u043d\u0430\u043b\u044b \u0438\u0437\u0434\u0430\u044e\u0442\u0441\u044f \u0432 LaTeX \u0438 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u044e\u0442 \u0430\u0432\u0442\u043e\u0440\u0430\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\n\u0435\u0433\u043e \u0434\u043b\u044f \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0438 \u0440\u0443\u043a\u043e\u043f\u0438\u0441\u0435\u0439.\u00a0LaTeX \u043d\u0435 \u043e\u0447\u0435\u043d\u044c \u043f\u0440\u043e\u0441\u0442 \u0432 \u043e\u0441\u0432\u043e\u0435\u043d\u0438\u0438, \u043d\u043e \u043e\u0431\u043b\u0430\u0434\u0430\u0435\u0442\n\u043c\u0430\u0441\u0441\u043e\u0439 \u043f\u0440\u0435\u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432 \u043f\u0435\u0440\u0435\u0434 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u043c\u0438 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u043c\u0438 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440\u0430\u043c\u0438 \u0438 \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440\u0430\u043c\u0438\n\u043f\u0440\u0435\u0437\u0435\u043d\u0442\u0430\u0446\u0438\u0439:  \n\n  * \u0432\u044b\u0441\u043e\u043a\u043e\u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0432\u0435\u0440\u0441\u0442\u043a\u0430 \u2014 \u0442\u0435\u043a\u0441\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u00ab\u043a\u0430\u043a \u0432 \u043a\u043d\u0438\u0436\u043a\u0435\u00bb;  \n\n  * \u0443\u0434\u043e\u0431\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u0441\u043e \u0441\u043b\u043e\u0436\u043d\u044b\u043c\u0438 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u043c\u0438 \u0444\u043e\u0440\u043c\u0443\u043b\u0430\u043c\u0438;  \n\n  * \u043e\u0442\u043b\u0438\u0447\u043d\u0430\u044f \u043a\u0440\u043e\u0441\u0441-\u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u044c;  \n\n  * \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u044f \u043c\u043d\u043e\u0433\u0438\u0445 \u0440\u0443\u0442\u0438\u043d\u043d\u044b\u0445 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0432: \u043d\u0443\u043c\u0435\u0440\u0430\u0446\u0438\u0438 \u0444\u043e\u0440\u043c\u0443\u043b, \u0440\u0438\u0441\u0443\u043d\u043a\u043e\u0432, \u0442\u0430\u0431\u043b\u0438\u0446, \u0440\u0430\u0437\u0434\u0435\u043b\u043e\u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430, \u043f\u0435\u0440\u0435\u043a\u0440\u0435\u0441\u0442\u043d\u044b\u0445 \u0441\u0441\u044b\u043b\u043e\u043a, \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043a\u043e\u043b\u043e\u043d\u0442\u0438\u0442\u0443\u043b\u043e\u0432, \u043e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u044f \u0441\u0442\u0438\u043b\u0435\u0439 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432 \u0438 \u0442. \u043f.;  \n\n  * \u043e\u0433\u0440\u043e\u043c\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0438 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432, \u043f\u0430\u043a\u0435\u0442\u044b-\u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f \u043d\u0430 \u0432\u0441\u0435 \u0441\u043b\u0443\u0447\u0430\u0438 \u0436\u0438\u0437\u043d\u0438.\nLaTeX \u043e\u0431\u043b\u0435\u0433\u0447\u0430\u0435\u0442 \u0436\u0438\u0437\u043d\u044c \u0432\u0441\u0435\u043c, \u043a\u043e\u043c\u0443 \u043f\u0440\u0438\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u043e\u0444\u043e\u0440\u043c\u043b\u044f\u0442\u044c \u044d\u0441\u0441\u0435, \u0440\u0435\u0444\u0435\u0440\u0430\u0442\u044b, \u043a\u0443\u0440\u0441\u043e\u0432\u044b\u0435\n\u0438 \u0434\u0438\u043f\u043b\u043e\u043c\u043d\u044b\u0435 \u0440\u0430\u0431\u043e\u0442\u044b, \u0434\u0438\u0441\u0441\u0435\u0440\u0442\u0430\u0446\u0438\u0438, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0441\u043b\u0430\u0439\u0434\u044b \u043f\u0440\u0435\u0437\u0435\u043d\u0442\u0430\u0446\u0438\u0439 \u043d\u0430 \u0438\u0445 \u043e\u0441\u043d\u043e\u0432\u0435.\n\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438, \u043e\u0441\u0432\u043e\u0438\u0432\u0448\u0438\u0435 LaTeX, \u0432\u0441\u043f\u043e\u043c\u0438\u043d\u0430\u044e\u0442 \u0432\u0435\u0440\u0441\u0442\u043a\u0443 \u0441\u043b\u043e\u0436\u043d\u044b\u0445 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0432 Word \u0438\n\u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0431\u043e\u043b\u044c\u0448\u0438\u0445 \u043f\u0440\u0435\u0437\u0435\u043d\u0442\u0430\u0446\u0438\u0439 \u0432 PowerPoint \u043a\u0430\u043a \u0441\u0442\u0440\u0430\u0448\u043d\u044b\u0439 \u0441\u043e\u043d.  \n\n\u0415\u0441\u043b\u0438 \u0432\u044b \u0441\u043e\u043c\u043d\u0435\u0432\u0430\u0435\u0442\u0435\u0441\u044c, \u0441\u0442\u043e\u0438\u0442 \u043b\u0438 \u0432\u0430\u043c \u0438\u0437\u0443\u0447\u0430\u0442\u044c LaTeX, \u043f\u043e\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e \u043e\n\u0435\u0433\u043e \u043f\u0440\u0435\u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432\u0430\u0445 (\u043f\u043e-\u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438):\n\n  * <http://www.ctan.org/tex/>\n  * <http://www.andy-roberts.net/writing/latex/benefits>\n  * <http://ricardo.ecn.wfu.edu/~cottrell/wp.html>\n  * <http://www.tug.org/TUGboat/tb22-1-2/tb70heff.pdf>\n\u0423 \u043a\u0443\u0440\u0441\u0430 \u0435\u0441\u0442\u044c \u043e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u0430\u044f \u0433\u0440\u0443\u043f\u043f\u0430 \u0432 \u0441\u043e\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0439 \u0441\u0435\u0442\u0438 \u00ab\u0412\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u0435\u00bb:\n<https://vk.com/hse.latex>.  \n  \n\n**LaTeX**\u00a0is the standard in the scientific world. The best mathematical, physical and economic journals are published in LaTeX and authors are encouraged to use it for manuscripts. LaTeX is quite difficult to learn, but it**\u00a0**has many advantages over the most\u00a0popular word processors and presentation software:\n\n  * high-quality typography \u2013 text looks as it would in a well published book;\n  * easy to typeset\u00a0with complex mathematical formulas;\n  * excellent cross-platform compatibility;\n  * automation of many routine processes, i.e. to number formulas, figures, tables, document sections, to create cross references, headers, footers and design styles, etc.;\n  * a worldwide community of users and developers; extension packages for any occasion.\n\nLaTeX is an excellent tool\u00a0for everyone who is going to draw up an essay, term\npaper, thesis or dissertation, as well as the presentation slides based upon\nthem. Users who have learned LaTeX, can not ever conceive that they were once\ncreating complex documents in Word or presentations in PowerPoint.\n\nIf you are in doubt about whether you need to learn LaTeX or not, feel free to\nread more about its benefits (in English):\n\n  * <http://www.ctan.org/tex/>\n  * <http://www.andy-roberts.net/writing/latex/benefits>\n  * <http://ricardo.ecn.wfu.edu/~cottrell/wp.html>\n  * <http://www.tug.org/TUGboat/tb22-1-2/tb70heff.pdf>\n\nThis course offers a special page at the \u00abVKontakte\u00bb social network (in\nRussian):\u00a0<https://vk.com/hse.latex>.\n\n## Syllabus\n\n## \u041f\u0435\u0440\u0432\u0430\u044f \u043d\u0435\u0434\u0435\u043b\u044f\n\n_**\u0412\u0432\u0435\u0434\u0435\u043d\u0438\u0435.**_ \u0423\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u0438\u0437\u0434\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b LaTeX. \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u044b\u0435 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430 \u0438\n\u043e\u043d\u043b\u0430\u0439\u043d-\u0440\u0435\u0441\u0443\u0440\u0441\u044b, \u043f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u0432 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0438 \u0438 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 \u0441 \u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439.\n\n_**\u0411\u0430\u0437\u043e\u0432\u044b\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430.**_ \u041a\u043b\u0430\u0441\u0441\u044b \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430, \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u043e\u0432,\n\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043d\u0430 \u0433\u043b\u0430\u0432\u044b \u0438 \u043f\u0430\u0440\u0430\u0433\u0440\u0430\u0444\u044b. \u041a\u043e\u043c\u0430\u043d\u0434\u044b \u044f\u0437\u044b\u043a\u0430 LaTeX. \u041f\u0435\u0440\u0435\u043a\u0440\u0435\u0441\u0442\u043d\u044b\u0435 \u0441\u0441\u044b\u043b\u043a\u0438 \u0432\u043d\u0443\u0442\u0440\u0438\n\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430.\n\n_**\u041c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0430 \u0432 LaTeX.**_ \u041d\u0430\u0431\u043e\u0440 \u043f\u0440\u043e\u0441\u0442\u0435\u0439\u0448\u0438\u0445 \u0444\u043e\u0440\u043c\u0443\u043b. \u0424\u043e\u0440\u043c\u0443\u043b\u044b \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 \u0438\n\u0432\u044b\u043a\u043b\u044e\u0447\u043d\u044b\u0435 \u0444\u043e\u0440\u043c\u0443\u043b\u044b, \u043d\u0443\u043c\u0435\u0440\u0430\u0446\u0438\u044f. \u041d\u0430\u0447\u0435\u0440\u0442\u0430\u043d\u0438\u044f \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432, \u0438\u043d\u0434\u0435\u043a\u0441\u044b, \u0434\u0440\u043e\u0431\u0438, \u0432\u044b\u0441\u043e\u0442\u0430\n\u0441\u043a\u043e\u0431\u043e\u043a, \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u043d\u044b\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438 \u044d\u043a\u043e\u043d\u043e\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f. \u0420\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435\n\u0441\u043f\u043e\u0441\u043e\u0431\u044b \u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0438 \u0444\u043e\u0440\u043c\u0443\u043b, \u043c\u043d\u043e\u0433\u043e\u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0435 \u0444\u043e\u0440\u043c\u0443\u043b\u044b, \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0439, \u043c\u0430\u0442\u0440\u0438\u0446\u044b.\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043f\u0430\u043a\u0435\u0442\u044b \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0444\u043e\u0440\u043c\u0443\u043b\u0430\u043c\u0438.  \n\n## \u0412\u0442\u043e\u0440\u0430\u044f \u043d\u0435\u0434\u0435\u043b\u044f\n\n_**\u0420\u0438\u0441\u0443\u043d\u043a\u0438.**_ \u0420\u0430\u0441\u0442\u0440\u043e\u0432\u044b\u0439 \u0438\u043b\u0438 \u0432\u0435\u043a\u0442\u043e\u0440\u043d\u044b\u0439 \u0440\u0438\u0441\u0443\u043d\u043e\u043a \u043a\u0430\u043a \u043e\u0431\u044a\u0435\u043a\u0442 \u0432 \u0442\u0435\u043a\u0441\u0442\u0435. \u041e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0435\n\u0440\u0438\u0441\u0443\u043d\u043a\u043e\u0432: \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a, \u043d\u043e\u043c\u0435\u0440, \u043f\u0435\u0440\u0435\u043a\u0440\u0435\u0441\u0442\u043d\u044b\u0435 \u0441\u0441\u044b\u043b\u043a\u0438  \u041c\u0430\u0441\u0448\u0442\u0430\u0431\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438 \u0434\u0440\u0443\u0433\u0438\u0435\n\u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438, \u0440\u0430\u043c\u043a\u0438 \u0432\u043e\u043a\u0440\u0443\u0433 \u0440\u0438\u0441\u0443\u043d\u043a\u043e\u0432. \u041e\u0431\u0442\u0435\u043a\u0430\u0435\u043c\u044b\u0435 \u0440\u0438\u0441\u0443\u043d\u043a\u0438. _**  \n\u0422\u0430\u0431\u043b\u0438\u0446\u044b.**_ \u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u0435\u0434\u0438\u043d\u0438\u0446 \u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u044f \u0432 LaTeX. \u0422\u0430\u0431\u043b\u0438\u0446\u0430 \u043a\u0430\u043a \u043e\u0431\u044a\u0435\u043a\u0442 \u0432 \u0442\u0435\u043a\u0441\u0442\u0435.\n\u041e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b: \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a, \u043d\u043e\u043c\u0435\u0440, \u043f\u0435\u0440\u0435\u043a\u0440\u0435\u0441\u0442\u043d\u044b\u0435 \u0441\u0441\u044b\u043b\u043a\u0438. \u041e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u044f\u0447\u0435\u0435\u043a,\n\u043d\u0430\u0447\u0435\u0440\u0442\u0430\u043d\u0438\u044f \u043b\u0438\u043d\u0438\u0439 \u0441\u0435\u0442\u043a\u0438. \u0412\u044b\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u043d\u0438\u0435 \u0432 \u044f\u0447\u0435\u0439\u043a\u0430\u0445. \u041c\u043d\u043e\u0433\u043e\u0441\u0442\u0440\u0430\u043d\u0438\u0447\u043d\u044b\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b.\n\u041e\u0431\u0442\u0435\u043a\u0430\u0435\u043c\u044b\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b. \u041e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u0435 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0441\u043f\u0438\u0441\u043a\u043e\u0432 \u0440\u0438\u0441\u0443\u043d\u043a\u043e\u0432 \u0438 \u0442\u0430\u0431\u043b\u0438\u0446.\n\n## \u0422\u0440\u0435\u0442\u044c\u044f \u043d\u0435\u0434\u0435\u043b\u044f\n\n_**\u041e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0441\u0442\u0430 \u0438 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0445 \u0430\u0431\u0437\u0430\u0446\u0435\u0432.**_ \u041f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0441\u0442\u0438 \u043e \u043a\u043b\u0430\u0441\u0441\u0430\u0445 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430:\n\u0432\u044b\u0431\u043e\u0440 \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0435\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430. \u041f\u043e\u043b\u044f, \u043a\u043e\u043b\u043e\u043d\u0442\u0438\u0442\u0443\u043b\u044b, \u043e\u0440\u0438\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0438 \u0440\u0430\u0437\u043c\u0435\u0440 \u043b\u0438\u0441\u0442\u0430, \u0440\u0430\u0437\u043c\u0435\u0440\n\u0448\u0440\u0438\u0444\u0442\u0430, \u043c\u0435\u0436\u0434\u0443\u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0439 \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b. \u0420\u0430\u0437\u0440\u044b\u0432 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b, \u0432\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u043e\u0431\u0435\u043b\u044b.\n\u041e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u0435 \u0430\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u0438 (abstract). \u041e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0433\u043e \u0442\u0438\u0442\u0443\u043b\u044c\u043d\u043e\u0433\u043e \u043b\u0438\u0441\u0442\u0430\n(\u043f\u0440\u0438\u043c\u0435\u0440). \u041c\u043d\u043e\u0433\u043e\u0443\u0440\u043e\u0432\u043d\u0435\u0432\u0430\u044f \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430: \u0433\u043b\u0430\u0432\u044b, \u0440\u0430\u0437\u0434\u0435\u043b\u044b, \u043f\u043e\u0434\u0440\u0430\u0437\u0434\u0435\u043b\u044b \u0438 \u0442.\n\u0434., \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0421\u043d\u043e\u0441\u043a\u0438. \u041e\u0433\u043b\u0430\u0432\u043b\u0435\u043d\u0438\u0435, \u0441\u043f\u0438\u0441\u043a\u0438 \u0442\u0430\u0431\u043b\u0438\u0446 \u0438 \u0438\u043b\u043b\u044e\u0441\u0442\u0440\u0430\u0446\u0438\u0439. \u0413\u0438\u043f\u0435\u0440\u0441\u0441\u044b\u043b\u043a\u0438\n\u043d\u0430 \u043c\u0435\u0441\u0442\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0438 \u0432\u043d\u0435\u0448\u043d\u0438\u0435 \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0438. \u041e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u0435 \u043c\u0430\u0440\u043a\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0438\n\u043d\u0443\u043c\u0435\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u0447\u043d\u0435\u0439. \u041e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0441\u0442\u0430 \u0432 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043a\u043e\u043b\u043e\u043d\u043e\u043a.  \n  \n_**\u0421\u0447\u0435\u0442\u0447\u0438\u043a\u0438 \u0438 \u043c\u0430\u043a\u0440\u043e\u043a\u043e\u043c\u0430\u043d\u0434\u044b.**_ \u041e\u0431\u044a\u0435\u043a\u0442\u044b \u0442\u0438\u043f\u0430 \u00ab\u0442\u0435\u043e\u0440\u0435\u043c\u0430\u00bb. \u041f\u0440\u043e\u0441\u0442\u0435\u0439\u0448\u0435\u0435\n\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435: \u043c\u0430\u043a\u0440\u043e\u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0438 \u0438\u0445 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b. \u041f\u0430\u043a\u0435\u0442\u044b, \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u044e\u0449\u0438\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438\n\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u0421\u0447\u0435\u0442\u0447\u0438\u043a\u0438: \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0438 \u043f\u0435\u0440\u0435\u043f\u043e\u0434\u0447\u0438\u043d\u0435\u043d\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445\n(\u043d\u0443\u043c\u0435\u0440\u0430\u0446\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446, \u0433\u043b\u0430\u0432, \u0440\u0430\u0437\u0434\u0435\u043b\u043e\u0432, \u0442\u0435\u043e\u0440\u0435\u043c \u0438 \u0442. \u043f.) \u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u044b\u0445.\n\u041f\u0440\u0438\u043c\u0435\u0440: \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434 \u0434\u043b\u044f \u0432\u0435\u0440\u0441\u0442\u043a\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0442\u0438\u043f\u0430 \u00ab\u0437\u0430\u0434\u0430\u0447\u0430\u00bb \u0438 \u00ab\u0440\u0435\u0448\u0435\u043d\u0438\u0435\u00bb.  \n\n## \u0427\u0435\u0442\u0432\u0435\u0440\u0442\u0430\u044f \u043d\u0435\u0434\u0435\u043b\u044f\n\n_**\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0431\u0438\u0431\u043b\u0438\u043e\u0433\u0440\u0430\u0444\u0438\u0435\u0439.** _\u041e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430 \u0438 \u0441\u0441\u044b\u043b\u043e\u043a \u043d\u0430\n\u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0438 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u043c \u043c\u0435\u0442\u043e\u0434\u043e\u043c. \u041f\u0430\u043a\u0435\u0442 BibTeX: \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u043e\u0432 \u0438\n\u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0435\u0435 \u0441 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u043c\u0438 LaTeX. \u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b \u0446\u0438\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f.  \n_**  \n\u0413\u0440\u0430\u0444\u0438\u043a\u0430 \u0432 \u043f\u0430\u043a\u0435\u0442\u0435 TikZ.**_ \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u0435\u0439\u0448\u0435\u0439 \u0432\u0435\u043a\u0442\u043e\u0440\u043d\u043e\u0439 \u0433\u0440\u0430\u0444\u0438\u043a\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438\nLaTeX \u0438 \u0435\u0433\u043e \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0439. \u041f\u0440\u0438\u043d\u0446\u0438\u043f\u044b \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043f\u0430\u043a\u0435\u0442\u043e\u043c _TikZ_. \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445\n\u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432: \u043e\u0441\u0435\u0439 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442, \u0433\u0435\u043e\u043c\u0435\u0442\u0440\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0444\u0438\u0433\u0443\u0440, \u0433\u0440\u0430\u0444\u0438\u043a\u043e\u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0439. \u041f\u0440\u0438\u043c\u0435\u0440\u044b\n\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f _TikZ_ \u0434\u043b\u044f \u0438\u043b\u043b\u044e\u0441\u0442\u0440\u0430\u0446\u0438\u0439 \u043a \u044d\u043a\u043e\u043d\u043e\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u044f\u043c. \u0421\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0435\n\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043e\u0431\u043b\u0435\u0433\u0447\u0430\u044e\u0449\u0438\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0433\u0440\u0430\u0444\u0438\u043a\u0438 _(GeoGebra)_.\n\n## \u041f\u044f\u0442\u0430\u044f \u043d\u0435\u0434\u0435\u043b\u044f\n\n**_\u0420\u0443\u0441\u0441\u043a\u0438\u0439 \u044f\u0437\u044b\u043a \u0432 LaTeX._** \u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u043c\u0438, \u043d\u0430\u0431\u0440\u0430\u043d\u043d\u044b\u043c\u0438 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0440\u0443\u0441\u0441\u043a\u043e\u0433\u043e \u044f\u0437\u044b\u043a\u0430. \u041a\u0438\u0440\u0438\u043b\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0448\u0440\u0438\u0444\u0442\u044b. \u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u0432\u0435\u0440\u0441\u0442\u043a\u0438 \u0440\u0443\u0441\u0441\u043a\u043e\u044f\u0437\u044b\u0447\u043d\u044b\u0445 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432.**__** _**  \n**_\n\n_**\u041f\u0440\u0435\u0437\u0435\u043d\u0442\u0430\u0446\u0438\u0438.** _\u041f\u0430\u043a\u0435\u0442 _beamer_: \u043e\u0431\u0449\u0435\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e. \u0412\u044b\u0431\u043e\u0440 \u0441\u0442\u0438\u043b\u044f \u043f\u0440\u0435\u0437\u0435\u043d\u0442\u0430\u0446\u0438\u0438,\n\u0435\u0433\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 (\u0432\u0441\u0442\u0430\u0432\u043a\u0430 \u043b\u043e\u0433\u043e\u0442\u0438\u043f\u043e\u0432 \u0438 \u0434\u0440.). \u041e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u0435 \u0442\u0438\u0442\u0443\u043b\u044c\u043d\u043e\u0433\u043e \u0441\u043b\u0430\u0439\u0434\u0430.\n\u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u043f\u0440\u0435\u0437\u0435\u043d\u0442\u0430\u0446\u0438\u0438: \u0440\u0430\u0437\u0434\u0435\u043b\u044b, \u0441\u043b\u0430\u0439\u0434\u044b, \u0431\u043b\u043e\u043a\u0438. \u0421\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430 \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u0438\u044f\n\u0442\u0435\u043a\u0441\u0442\u0430 \u043d\u0430 \u0441\u043b\u0430\u0439\u0434\u0430\u0445. \u0420\u0435\u0436\u0438\u043c _handout_ \u0434\u043b\u044f \u043f\u0435\u0447\u0430\u0442\u0438 \u0440\u0430\u0437\u0434\u0430\u0442\u043e\u0447\u043d\u043e\u0433\u043e \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u0430.\n\u041f\u043e\u0441\u0442\u0435\u043f\u0435\u043d\u043d\u043e\u0435 \u043f\u043e\u044f\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u043d\u0430 \u0441\u043b\u0430\u0439\u0434\u0430\u0445, \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0438\u0445 \u043d\u0430\u0447\u0435\u0440\u0442\u0430\u043d\u0438\u044f \u043c\u0435\u0436\u0434\u0443\n\u0441\u043b\u0430\u0439\u0434\u0430\u043c\u0438. \u0410\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u044b: \u043a\u043d\u043e\u043f\u043a\u0438 \u0433\u0438\u043f\u0435\u0440\u0441\u0441\u044b\u043b\u043e\u043a \u0438 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0430 \u043c\u0435\u0436\u0434\u0443 \u0441\u043b\u0430\u0439\u0434\u0430\u043c\u0438.\n\u041f\u0430\u043a\u0435\u0442 lecture \u0434\u043b\u044f \u043e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u044f \u0446\u0438\u043a\u043b\u043e\u0432 \u043f\u0440\u0435\u0437\u0435\u043d\u0442\u0430\u0446\u0438\u0439.\n\n  \n\n",
        "name": "\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b \u0438 \u043f\u0440\u0435\u0437\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0432 LaTeX (Introduction to LaTeX)",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Higher School of Economics"
        ],
        "url": "https://www.coursera.org/course/latex",
        "video_url": ""
    },
    {
        "date": "2014-05-12",
        "desc": "The confluence of multi-core and distributed-core processors, inexpensive mass storage, ubiquitous wireless connectivity, and commodity software platforms is driving the need for&nbsp;software engineers and programmers&nbsp;who understand how to develop\n    concurrent&nbsp;and networked software for mobile devices that connect to cloud computing platforms. Despite many improvements in processors, storage, and networks, however, developing quality software on-time and on-budget remains hard. Moreover,\n    developing high qualityreusableconcurrent and&nbsp;networked software apps and services is even harder. &nbsp;The principles, methods, and&nbsp;skills required to develop such software are best learned by&nbsp;attaining mastery of&nbsp;patterns,pattern languages,\n    andframeworks.Apattern&nbsp;describes a reusable solution to a common problem that arises within a particular context. When related patterns are woven together they form apattern languagethat\n    defines a vocabulary and a process for the orderly resolution of software development problems. A&nbsp;framework&nbsp;is an integrated set of components that collaborate to provide a reusable\n    architecture for a family of related apps or services. &nbsp;Frameworks can also be viewed as concrete realizations of pattern languages that facilitate direct reuse of detailed design and source code.This MOOC describesby examplehow to apply patterns, pattern languages, and frameworks to&nbsp;alleviate the complexity of developing concurrent and networked&nbsp;software for mobile devices via the use of object-oriented design techniques,Javaprogramming language features, and&nbsp;Android&nbsp;middleware. An extended case study project\n    will be used throughout the MOOC to showcase pattern-oriented software design and programming techniques&nbsp;for concurrent and networked mobile devices and clouds.Note: This course is part of a trans-institution sequence of MOOCs entitledMobile Cloud Computing with AndroidThis MOOC and two others, taught by Dr. Adam Porter from the University of Maryland and Dr. Jules White from Vanderbilt University, have been designed to complement each other as part of the first trans-institution sequence of MOOCs taught on the Coursera\n    platform, structured as follows:The University of Maryland MOOC,Programming Mobile Applications for Android Handheld Systems, will run from January 21st - April 28th. It focuses on the design and programming of user-facing\n        applications. &nbsp;The first Vanderbilt MOOC in the sequence,Programming Mobile Services for Android Handheld Systems, will run from May 12th - July 6th. It focuses on middleware systems programming topics, such as synchronous\n        and asynchronous concurrency models, background service processing, structured data management, local inter-process communication and networking, and integration with cloud-based services. &nbsp;The second Vanderbilt MOOC in the sequence,Programming Cloud Services for Android Handheld Systems, will be run from July 21st - September 29th. It focuses on how to connect Android mobile devices to cloud\n        computing and data storage resources, essentially turning a device into an extension of powerful cloud-based services on popular cloud computing platforms, such as Google App Engine and Amazon EC2.The final Capstone project MOOC in the sequence will run from October 1st - November 3rd.  For this first offering of the Mobile Cloud Computing with Android (MoCCA) Specialization only students in the Signature Track who receive a \"Verified Certificate with Distinction\" are eligible to enroll in the Capstone project course.Some of the programming assignments and the iRemember integrative project for these MOOCs will be coordinated.&nbsp;If you just want to take some of the MOOCs in this sequence or take them all in different order you\u2019re certainly welcome to do so, and you\u2019ll still learn a lot. However, if you take all the MOOCs in this sequence in the order presented you\u2019ll gain a deeper,\n    end-to-end understanding of handheld systems, their applications and services, as well as their integration into the cloud.SyllabusThe course is organized into the following sections:Section 0: Course IntroductionPart 1: Overview of Mobile Cloud Computing with AndroidPart 2:Course Structure and TopicsPart 3: Course Prerequisites and Learning StrategiesPart 4: Overview of Patterns and FrameworksSection 1: Android ConcurrencyModule 1: Concurrency Motivations and ChallengesPart 1: Concurrency MotivationsPart 2: Concurrency ChallengesModule 2: Java Concurrency MechanismsPart 1: Overview of Java Threads (Part 1)Part 2: Overview of Java Threads (Part 2)Part 3: Motivating Java Synchronization &amp; Scheduling MechanismsPart 4: Java Synchronization and Scheduling ClassesPart 5: Java ReentrantLockPart 6: Java ReentrantReadWriteLockPart 7: Java SemaphorePart 8: Java ConditionObjectPart 9: Java CountDownLatchPart 10: Java Synchronization and Scheduling ExamplePart 11: Java Built-in Monitor ObjectsModule 3: Android Concurrency FrameworksPart 1: Overview of Android Concurrency Frameworks and IdiomsPart 2: Android LooperPart 3: Overview of Android HandlerPart 4: Posting and Processing Runnables to Android HandlerPart 5: Sending and Handling Messages to Android HandlerPart 6: The AsyncTask Framework (Part 1)Part 7: The AsyncTask Framework (Part 2)Part 8: Programming with Android Concurrency Frameworks (Part 1)Part 9: Programming with Android Concurrency Frameworks (Part 2)Section 2: Android Services and SecurityModule 1: Android Services and IPCPart 1: Overview of Started and Bound ServicesPart 2: Programming Started Services (Part 1)Part 3: Programming Started Services (Part 2)Part 4: Android IntentServicePart 5: Activity and Service CommunicationPart 6: Service to Activity Communication Using Android MessengerPart 7: Programming Bound Services with Messengers (Part 1)Part 8: Programming Bound Services with Messengers (Part 2)Part 9: Programming Bound Services with AIDLModule 2: Android App Security and RisksPart 1: Traditional App AccountsPart 2: Mobile vs. Traditional App AccountsPart 3: App Account Mapping to Linux UsersPart 4: Apps Lie &amp; StealPart 5: How Android Protects AppsPart 6: What Android Doesn't ProtectPart 7: Avoid Storing Sensitive Data in Public LocationsPart 8: Risks of Insecure File PermissionsModule 3: Building More Secure Android AppsPart 0: The Challenge of Secure CodingPart 1: Security Vulnerability WalkthroughPart 2: Principles of Secure AbstractionsPart 3: Avoid Coupling Data &amp; Security StatePart 4: Build Abstractions that are Hard to Use InsecurelyPart 5: Bound &amp; Strongly Type Security StatePart 6: Avoid Conditional Logic in Secure PathwaysPart 7: Prevent Secure Pathways from Being Broken at RuntimePart 8: Privilege Escalation ConceptsPart 9: Privilege Escalation ScenarioPart 10: Privilege Escalation Code WalkthroughPart 11: Privilege Escalation FixesPart 12: User Interface AttacksPart 13: Cross-platform User Interface AttacksSection 3: Concurrency and Communication Patterns in AndroidModule 1: Coordinating Concurrent Access to Shared DataPart 1: The Monitor Object Pattern (Part 1)Part 2: The Monitor Object Pattern (Part 2)Module 2: Activating Services on DemandPart 1: The Activator Pattern (Part 1)Part 2: The Activator Pattern (Part 2)Module 3: Passing Commands to ServicesPart 1: The Command Processor Pattern (Part 1)Part 2: The Command Processor Pattern (Part 2)Module 4: Automating Marshaling and Demarshaling of DataPart 1: The Proxy Pattern (Part 1)Part 2: The Proxy Pattern (Part 2)Module 5: Supporting Object-Oriented Remote Method CallsPart 1: The Broker Pattern (Part 1)Part 2: The Broker Pattern (Part 2)Module 6: Decoupling Producers from ConsumersPart 1: The Publisher-Subscriber Pattern (Part 1)Part 2: The Publisher-Subscriber Pattern (Part 2)Module 7: Ensuring Only One Looper Per ThreadPart 1: The Thread-Specific Storage PatternModule 8: Passing Message Requests Between ThreadsPart 1: The Active Object PatternModule 9: Decoupling Synchronous &amp; Synchronous ProcessingPart 1: the Half-Sync/Half-Async PatternThroughout the MOOC we'll focus on pattern-oriented software architecture, with an emphasis on concurrent and networked programming in the context of Android middleware systems programming mechanisms, such as synchronous and asynchronous concurrency models, background service processing, storage and retrieval of structured data, and local inter-process communication (IPC) and networking. We illustrate&nbsp;by example&nbsp;how key pattern and framework concepts and relationships are applied in Android Services, Content Providers, Broadcast Receivers, and various secure local and remote IPC mechanisms from both an application and infrastructure perspective. Many code examples are shown throughout using Java, with a case study project used to reify the key points throughout all the modules in this section.The PDF versions of all the slides used in the course will be available online as the videos become available on the course website.",
        "desc_html": "The confluence of multi-core and distributed-core processors, inexpensive mass\nstorage, ubiquitous wireless connectivity, and commodity software platforms is\ndriving the need for software engineers and programmers who understand how to\ndevelop concurrent and networked software for mobile devices that connect to\ncloud computing platforms. Despite many improvements in processors, storage,\nand networks, however, developing quality software on-time and on-budget\nremains hard. Moreover, developing high quality _reusable _ concurrent and\nnetworked software apps and services is even harder.  The principles, methods,\nand skills required to develop such software are best learned by attaining\nmastery of _patterns_, _pattern languages_, and _frameworks_.\n\nA [pattern](http://en.wikipedia.org/wiki/Software_design_pattern) describes a\nreusable solution to a common problem that arises within a particular context.\nWhen related patterns are woven together they form a [pattern\nlanguage](http://en.wikipedia.org/wiki/Pattern_language) that defines a\nvocabulary and a process for the orderly resolution of software development\nproblems. A [framework](http://en.wikipedia.org/wiki/Software_framework) is an\nintegrated set of components that collaborate to provide a reusable\narchitecture for a family of related apps or services.  Frameworks can also be\nviewed as concrete realizations of pattern languages that facilitate direct\nreuse of detailed design and source code.\n\nThis MOOC describes _by example_ how to apply patterns, pattern languages, and\nframeworks to alleviate the complexity of developing concurrent and networked\nsoftware for mobile devices via the use of object-oriented design techniques,\n[Java](http://en.wikipedia.org/wiki/Java_\\(programming_language\\))programming\nlanguage features, and [Android ](http://developer.android.com/)middleware. An\nextended case study project will be used throughout the MOOC to showcase\npattern-oriented software design and programming techniques for concurrent and\nnetworked mobile devices and clouds.\n\n**Note: This course is part of a trans-institution sequence of MOOCs entitled [Mobile Cloud Computing with Android](https://www.coursera.org/specialization/mobilecloudcomputing/2)**\n\nThis MOOC and two others, taught by Dr. Adam Porter from the University of\nMaryland and Dr. Jules White from Vanderbilt University, have been designed to\ncomplement each other as part of the first trans-institution sequence of MOOCs\ntaught on the Coursera platform, structured as follows:\n\n  * The University of Maryland MOOC, [Programming Mobile Applications for Android Handheld Systems](https://www.coursera.org/course/android), will run from January 21st - April 28th. It focuses on the design and programming of user-facing applications.  \n  * The first Vanderbilt MOOC in the sequence, [Programming Mobile Services for Android Handheld Systems](http://www.coursera.org/course/posa), will run from May 12th - July 6th. It focuses on middleware systems programming topics, such as synchronous and asynchronous concurrency models, background service processing, structured data management, local inter-process communication and networking, and integration with cloud-based services.  \n  * The second Vanderbilt MOOC in the sequence, [Programming Cloud Services for Android Handheld Systems](http://www.coursera.org/course/mobilecloud), will be run from July 21st - September 29th. It focuses on how to connect Android mobile devices to cloud computing and data storage resources, essentially turning a device into an extension of powerful cloud-based services on popular cloud computing platforms, such as Google App Engine and Amazon EC2.   \n\n  * The final Capstone project MOOC in the sequence will run from October 1st - November 3rd. For this first offering of the Mobile Cloud Computing with Android (MoCCA) Specialization only students in the Signature Track who receive a \"Verified Certificate with Distinction\" are eligible to enroll in the Capstone project course. \n\nSome of the programming assignments and the iRemember integrative project for\nthese MOOCs will be coordinated.  \n\nIf you just want to take some of the MOOCs in this sequence or take them all\nin different order you\u2019re certainly welcome to do so, and you\u2019ll still learn a\nlot. However, if you take all the MOOCs in this sequence in the order\npresented you\u2019ll gain a deeper, end-to-end understanding of handheld systems,\ntheir applications and services, as well as their integration into the cloud.\n\n## Syllabus\n\nThe course is organized into the following sections:\n\n  * **Section 0: Course Introduction**\n    * Part 1: Overview of Mobile Cloud Computing with Android  \n\n    * Part 2:Course Structure and Topics\n    * Part 3: Course Prerequisites and Learning Strategies\n    * Part 4: Overview of Patterns and Frameworks\n  * **Section 1: Android Concurrency**\n    * Module 1: Concurrency Motivations and Challenges\n      * Part 1: Concurrency Motivations  \n\n      * Part 2: Concurrency Challenges\n    * Module 2: Java Concurrency Mechanisms\n      * Part 1: Overview of Java Threads (Part 1)  \n\n      * Part 2: Overview of Java Threads (Part 2)\n      * Part 3: Motivating Java Synchronization & Scheduling Mechanisms\n      * Part 4: Java Synchronization and Scheduling Classes\n      * Part 5: Java ReentrantLock\n      * Part 6: Java ReentrantReadWriteLock\n      * Part 7: Java Semaphore\n      * Part 8: Java ConditionObject\n      * Part 9: Java CountDownLatch\n      * Part 10: Java Synchronization and Scheduling Example\n      * Part 11: Java Built-in Monitor Objects\n    * Module 3: Android Concurrency Frameworks\n      * Part 1: Overview of Android Concurrency Frameworks and Idioms  \n\n      * Part 2: Android Looper\n      * Part 3: Overview of Android Handler\n      * Part 4: Posting and Processing Runnables to Android Handler\n      * Part 5: Sending and Handling Messages to Android Handler\n      * Part 6: The AsyncTask Framework (Part 1)\n      * Part 7: The AsyncTask Framework (Part 2)\n      * Part 8: Programming with Android Concurrency Frameworks (Part 1)\n      * Part 9: Programming with Android Concurrency Frameworks (Part 2)\n  * **Section 2: Android Services and Security**\n    * Module 1: Android Services and IPC\n      * Part 1: Overview of Started and Bound Services  \n\n      * Part 2: Programming Started Services (Part 1)\n      * Part 3: Programming Started Services (Part 2)\n      * Part 4: Android IntentService\n      * Part 5: Activity and Service Communication\n      * Part 6: Service to Activity Communication Using Android Messenger\n      * Part 7: Programming Bound Services with Messengers (Part 1)\n      * Part 8: Programming Bound Services with Messengers (Part 2)\n      * Part 9: Programming Bound Services with AIDL\n    * Module 2: Android App Security and Risks\n      * Part 1: Traditional App Accounts\n      * Part 2: Mobile vs. Traditional App Accounts\n      * Part 3: App Account Mapping to Linux Users\n      * Part 4: Apps Lie & Steal\n      * Part 5: How Android Protects Apps\n      * Part 6: What Android Doesn't Protect\n      * Part 7: Avoid Storing Sensitive Data in Public Locations\n      * Part 8: Risks of Insecure File Permissions\n    * Module 3: Building More Secure Android Apps\n      * Part 0: The Challenge of Secure Coding\n      * Part 1: Security Vulnerability Walkthrough\n      * Part 2: Principles of Secure Abstractions\n      * Part 3: Avoid Coupling Data & Security State\n      * Part 4: Build Abstractions that are Hard to Use Insecurely\n      * Part 5: Bound & Strongly Type Security State\n      * Part 6: Avoid Conditional Logic in Secure Pathways\n      * Part 7: Prevent Secure Pathways from Being Broken at Runtime\n      * Part 8: Privilege Escalation Concepts\n      * Part 9: Privilege Escalation Scenario\n      * Part 10: Privilege Escalation Code Walkthrough\n      * Part 11: Privilege Escalation Fixes\n      * Part 12: User Interface Attacks\n      * Part 13: Cross-platform User Interface Attacks\n  * **Section 3: Concurrency and Communication Patterns in Android**\n    * Module 1: Coordinating Concurrent Access to Shared Data\n      * Part 1: The Monitor Object Pattern (Part 1)\n      * Part 2: The Monitor Object Pattern (Part 2)\n    * Module 2: Activating Services on Demand\n      * Part 1: The Activator Pattern (Part 1)\n      * Part 2: The Activator Pattern (Part 2)\n    * Module 3: Passing Commands to Services\n      * Part 1: The Command Processor Pattern (Part 1)\n      * Part 2: The Command Processor Pattern (Part 2)\n    * Module 4: Automating Marshaling and Demarshaling of Data\n      * Part 1: The Proxy Pattern (Part 1)\n      * Part 2: The Proxy Pattern (Part 2)\n    * Module 5: Supporting Object-Oriented Remote Method Calls\n      * Part 1: The Broker Pattern (Part 1)\n      * Part 2: The Broker Pattern (Part 2)\n    * Module 6: Decoupling Producers from Consumers\n      * Part 1: The Publisher-Subscriber Pattern (Part 1)\n      * Part 2: The Publisher-Subscriber Pattern (Part 2)\n    * Module 7: Ensuring Only One Looper Per Thread\n      * Part 1: The Thread-Specific Storage Pattern\n    * Module 8: Passing Message Requests Between Threads\n      * Part 1: The Active Object Pattern\n    * Module 9: Decoupling Synchronous & Synchronous Processing\n      * Part 1: the Half-Sync/Half-Async Pattern\n\nThroughout the MOOC we'll focus on pattern-oriented software architecture,\nwith an emphasis on concurrent and networked programming in the context of\nAndroid middleware systems programming mechanisms, such as synchronous and\nasynchronous concurrency models, background service processing, storage and\nretrieval of structured data, and local inter-process communication (IPC) and\nnetworking. We illustrate _by example_ how key pattern and framework concepts\nand relationships are applied in Android Services, Content Providers,\nBroadcast Receivers, and various secure local and remote IPC mechanisms from\nboth an application and infrastructure perspective. Many code examples are\nshown throughout using Java, with a case study project used to reify the key\npoints throughout all the modules in this section.\n\nThe PDF versions of all the slides used in the course will be available online\nas the videos become available on the course website.\n\n",
        "name": "Pattern-Oriented Software Architectures: Programming Mobile Services for Android Handheld Systems",
        "provider": "Coursera",
        "rating": "4",
        "reviews": "1",
        "university": [
            "Vanderbilt University"
        ],
        "url": "https://www.coursera.org/course/posa",
        "video_url": ""
    },
    {
        "date": "2014-05-12",
        "desc": "This course introduces acoustics by using the concept of impedance. It starts with vibrations and waves, demonstrating how vibrations can be envisaged as a kind of wave, mathematically and physically. The essential measures for acoustic waves, such as dB scale, octave scale, acoustic pressure, energy, intensity, will also be explained. These measures are realized by one-dimensional examples, which provide clear and simple physical insights.The course then moves on to explaining waves on a flat surface of discontinuity, demonstrating how propagation characteristics of waves change in space where there is a distributed impedance mismatch.&nbsp;Subsequent topics are radiation, scattering, and diffraction, which can be explained in a unified way by seeing the changes of waves due to spatially distributed impedance. Lastly, the course covers sound in closed space, which is considered to be a space that is surrounded by spatially distributed impedance, and introduces two spaces: acoustically large and small space. In Part 1, we will handle topics from vibrations and waves to waves on a flat surface of discontinuity. The later&nbsp;parts will be&nbsp;covered in Part 2.This course is for graduate students and advanced undergraduates in acoustics, audio engineering, and noise control engineering. Practicing engineers and researchers in audio engineering and noise control, or students in engineering and physics disciplines, who want to gain an understanding of sound and vibration concepts, are also welcome.SyllabusWeek 1: Vibration &amp; WavesHow are time and space&nbsp;related? What about the relation between frequency and wavelength?Does the characteristic impedance of medium determine reflection and transmission?Do we well see the waves of a string in terms of driving point impedance?&nbsp;Week 2: Acoustics Wave Equation and Its Basic Physical Measures(1D acoustic wave equation, Acoustic Intensity and Energy, Units of Sound)What are&nbsp;the relations of acoustic pressure, density, and particle velocity?How do they make acoustic wave equation?Is acoustic wave well analogous with one dimension string wave?&nbsp;Week 3: Acoustics Wave Equation and Its Basic Physical Measures(Acoustic Intensity and Energy, Solutions of the Wave equation, Demonstration: hearing system)What about the relation between acoustic intensity and energy?How does human hearing system measure sound and its characteristics?Let us experience the change of sound in level and frequency!&nbsp;Week 4: Waves on a Flat Surface of Discontinuity(Normal incidence on a Flat Surface, The Mass Law)How mathematically express the boundary conditions at discontinuity?How does impedance at discontinuity determine reflection and transmission?When can we use mass law?&nbsp;&nbsp;Week 5: Waves on a Flat Surface of Discontinuity(Transmission Loss, Snell\u2019s Law, Transmission and Reflection of an Infinite Plate/Finite Structure)How different is the transmission loss of a flexible partition compared to the mass law?Does the obliqueness of wave play a critical role to determine transmitted and reflected wave?What&nbsp;are the roles of partition and fluid loading impedance to transmission loss?",
        "desc_html": "This course introduces acoustics by using the concept of impedance. It starts\nwith vibrations and waves, demonstrating how vibrations can be envisaged as a\nkind of wave, mathematically and physically. The essential measures for\nacoustic waves, such as dB scale, octave scale, acoustic pressure, energy,\nintensity, will also be explained. These measures are realized by one-\ndimensional examples, which provide clear and simple physical insights.  \n  \nThe course then moves on to explaining waves on a flat surface of\ndiscontinuity, demonstrating how propagation characteristics of waves change\nin space where there is a distributed impedance mismatch. Subsequent topics\nare radiation, scattering, and diffraction, which can be explained in a\nunified way by seeing the changes of waves due to spatially distributed\nimpedance. Lastly, the course covers sound in closed space, which is\nconsidered to be a space that is surrounded by spatially distributed\nimpedance, and introduces two spaces: acoustically large and small space. In\nPart 1, we will handle topics from vibrations and waves to waves on a flat\nsurface of discontinuity. The later parts will be covered in Part 2.  \n  \nThis course is for graduate students and advanced undergraduates in acoustics,\naudio engineering, and noise control engineering. Practicing engineers and\nresearchers in audio engineering and noise control, or students in engineering\nand physics disciplines, who want to gain an understanding of sound and\nvibration concepts, are also welcome.\n\n## Syllabus\n\n**Week 1: Vibration & Waves**\n\n  * How are time and space related? What about the relation between frequency and wavelength?\n  * Does the characteristic impedance of medium determine reflection and transmission?\n  * Do we well see the waves of a string in terms of driving point impedance?\n\n\n\n**Week 2: Acoustics Wave Equation and Its Basic Physical Measures**\n\n(1D acoustic wave equation, Acoustic Intensity and Energy, Units of Sound)\n\n  * What are the relations of acoustic pressure, density, and particle velocity?\n  * How do they make acoustic wave equation?\n  * Is acoustic wave well analogous with one dimension string wave?\n\n** **\n\n**Week 3: Acoustics Wave Equation and Its Basic Physical Measures**\n\n(Acoustic Intensity and Energy, Solutions of the Wave equation, Demonstration:\nhearing system)\n\n  * What about the relation between acoustic intensity and energy? \n  * How does human hearing system measure sound and its characteristics?\n  * Let us experience the change of sound in level and frequency! \n\n\n\n**Week 4: Waves on a Flat Surface of Discontinuity**\n\n(Normal incidence on a Flat Surface, The Mass Law)\n\n  * How mathematically express the boundary conditions at discontinuity?\n  * How does impedance at discontinuity determine reflection and transmission?\n  * When can we use mass law?\n\n\n\n **Week 5: Waves on a Flat Surface of Discontinuity**\n\n(Transmission Loss, Snell\u2019s Law, Transmission and Reflection of an Infinite\nPlate/Finite Structure)\n\n  * How different is the transmission loss of a flexible partition compared to the mass law?\n  * Does the obliqueness of wave play a critical role to determine transmitted and reflected wave?\n  * What are the roles of partition and fluid loading impedance to transmission loss?\n\n",
        "name": "Introduction to Acoustics (Part 1)",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Korea Advanced Institute of Science and Technology"
        ],
        "url": "https://www.coursera.org/course/acoustics1",
        "video_url": ""
    },
    {
        "date": "2014-05-06",
        "desc": "*Note - This is an Archived course*This is a past/archived course. At this time, you can only explore this course in a self-paced fashion. Certain features of this course may not be active, but many people enjoy watching the videos and working with the materials. Make sure to check for reruns of this course.In recent years, flying robots such as miniature helicopters or quadrotors have received a large gain in popularity. Potential applications range from aerial filming over remote visual inspection to automatic 3D reconstruction of buildings. Navigating a quadrotor manually requires a skilled pilot and constant concentration. Therefore, there is a strong scientific interest to develop solutions that enable quadrotors to fly autonomously and without constant human supervision. This is a challenging research problem because the payload of a quadrotor is uttermost constrained and so both the quality of the onboard sensors and the available computing power is strongly limited.In this course, we will introduce the basic concepts for autonomous navigation for quadrotors including topics such as probabilistic state estimation, linear control, and path planning. You will learn how to infer the position of the quadrotor from its sensor readings, how to navigate along a series of waypoints, and how to plan collision free trajectories. The course consists of a series of weekly lecture videos that we be interleaved by interactive quizzes and hands-on programming tasks. The programming exercises will require you to write small code snippets in Python to make a quadrotor fly in simulation.This course is intended for graduate students in computer science, electrical engineering or mechanical engineering. The course is based on the TUM lecture \u201cVisual Navigation for Flying Robots\u201d which received the TUM TeachInf best lecture award in 2012 and 2013. The course website from last year (including lecture videos and course syllabus) can be found here: http://vision.in.tum.de/teaching/ss2013/visnav2013",
        "desc_html": "*Note - This is an Archived course*  \n  \nThis is a past/archived course. At this time, you can only explore this course\nin a self-paced fashion. Certain features of this course may not be active,\nbut many people enjoy watching the videos and working with the materials. Make\nsure to check for reruns of this course.  \n  \nIn recent years, flying robots such as miniature helicopters or quadrotors\nhave received a large gain in popularity. Potential applications range from\naerial filming over remote visual inspection to automatic 3D reconstruction of\nbuildings. Navigating a quadrotor manually requires a skilled pilot and\nconstant concentration. Therefore, there is a strong scientific interest to\ndevelop solutions that enable quadrotors to fly autonomously and without\nconstant human supervision. This is a challenging research problem because the\npayload of a quadrotor is uttermost constrained and so both the quality of the\nonboard sensors and the available computing power is strongly limited.  \n  \nIn this course, we will introduce the basic concepts for autonomous navigation\nfor quadrotors including topics such as probabilistic state estimation, linear\ncontrol, and path planning. You will learn how to infer the position of the\nquadrotor from its sensor readings, how to navigate along a series of\nwaypoints, and how to plan collision free trajectories. The course consists of\na series of weekly lecture videos that we be interleaved by interactive\nquizzes and hands-on programming tasks. The programming exercises will require\nyou to write small code snippets in Python to make a quadrotor fly in\nsimulation.  \n  \nThis course is intended for graduate students in computer science, electrical\nengineering or mechanical engineering. The course is based on the TUM lecture\n\u201cVisual Navigation for Flying Robots\u201d which received the TUM TeachInf best\nlecture award in 2012 and 2013. The course website from last year (including\nlecture videos and course syllabus) can be found here:\nhttp://vision.in.tum.de/teaching/ss2013/visnav2013\n\n",
        "name": "AUTONAVx: Autonomous Navigation for Flying Robots",
        "provider": "edX",
        "rating": "4",
        "reviews": "2",
        "university": [
            "Technische Universit\u00e4t M\u00fcnchen (Technical University of Munich)"
        ],
        "url": "https://www.edx.org/course/autonomous-navigation-flying-robots-tumx-autonavx",
        "video_url": "https://www.youtube.com/embed/XkVFLyeaIIo?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-05-05",
        "desc": "R es un entorno inform\u00e1tico de computaci\u00f3n estad\u00edstica y de generaci\u00f3n de gr\u00e1ficos. R funciona en un amplio rango de sistemas operativos como UNIX, Windows o MacOS. Pese a su potencialidad, versatilidad y flexibilidad; R puede parecer \u00e1rido en el momento en que el usuario trata de interaccionar con sus componentes. Se suele decir que \u201cla curva de aprendizaje es lenta\u201d. Sin embargo, los resultados que produce son ampliamente satisfactorios. Este curso est\u00e1 destinado a \u201clubricar\u201d esos primeros encuentros con \u00e9ste entorno estad\u00edstico.",
        "desc_html": "R es un entorno inform\u00e1tico de computaci\u00f3n estad\u00edstica y de generaci\u00f3n de\ngr\u00e1ficos. R funciona en un amplio rango de sistemas operativos como UNIX,\nWindows o MacOS. Pese a su potencialidad, versatilidad y flexibilidad; R puede\nparecer \u00e1rido en el momento en que el usuario trata de interaccionar con sus\ncomponentes. Se suele decir que \u201cla curva de aprendizaje es lenta\u201d. Sin\nembargo, los resultados que produce son ampliamente satisfactorios. Este curso\nest\u00e1 destinado a \u201clubricar\u201d esos primeros encuentros con \u00e9ste entorno\nestad\u00edstico.\n\n",
        "name": "Aprende An\u00e1lisis Estad\u00edstico de Datos con R (2\u00aa edici\u00f3n)",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Universidad Cat\u00f3lica de Murcia"
        ],
        "url": "https://www.miriadax.net/web/aprende-analisis-estadistico-datos-r-2edicion",
        "video_url": "https://www.youtube.com/embed/Ai5BuFKOero?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-04-28",
        "desc": "This course follows on from Data Mining with Weka and provides a deeper account of data mining tools and techniques. Again the emphasis is on principles and practical data mining using Weka, rather than mathematical theory or advanced details of particular algorithms. Students will work with multimillion-instance datasets, classify text, experiment with clustering, association rules, neural networks, and much more.",
        "desc_html": "This course follows on from Data Mining with Weka and provides a deeper\naccount of data mining tools and techniques. Again the emphasis is on\nprinciples and practical data mining using Weka, rather than mathematical\ntheory or advanced details of particular algorithms. Students will work with\nmultimillion-instance datasets, classify text, experiment with clustering,\nassociation rules, neural networks, and much more.\n\n",
        "name": "More Data Mining with Weka",
        "provider": "Independent",
        "rating": "5",
        "reviews": "2",
        "university": [
            "University of Waikato"
        ],
        "url": "https://weka.waikato.ac.nz/moredataminingwithweka",
        "video_url": "https://www.youtube.com/embed/iqQn6YfyGs0?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-04-28",
        "desc": "Smartphones, tablettes, ces appareils ultra-portables sont d\u00e9sormais omnipr\u00e9sents dans notre vie quotidienne. Il y a des applications pour presque tout : retoucher ses photos, r\u00e9server une place de cin\u00e9ma, r\u00e9viser le code de la route, choisir une recette de cuisine ou trouver les restaurants les plus proches.Derri\u00e8re ces applications il y a un savoir-faire sp\u00e9cifique \u00e0 la programmation sur plateformes mobiles. En effet, contrairement aux ordinateurs classiques, les contraintes impos\u00e9es par les caract\u00e9ristiques ces terminaux font que certains \u00abgestes simples\u00bb pour l'utilisateur, comme faire d\u00e9rouler une liste de donn\u00e9es, impliquent en r\u00e9alit\u00e9 des m\u00e9canismes plus complexes.Ce MOOC de 10 semaines est consacr\u00e9 \u00e0 la programmation sur iPhone et iPad. Les s\u00e9ances abordent successivement les principaux m\u00e9canismes offerts par iOS pour le d\u00e9veloppement d'applications embarqu\u00e9es : l'environnement de d\u00e9veloppement, la notion de vue, les principaux \u00abframeworks\u00bb, etc. Un parall\u00e8le avec la probl\u00e9matique du d\u00e9veloppement de syst\u00e8mes embarqu\u00e9s est \u00e9galement fait.",
        "desc_html": "Smartphones, tablettes, ces appareils ultra-portables sont d\u00e9sormais\nomnipr\u00e9sents dans notre vie quotidienne. Il y a des applications pour presque\ntout : retoucher ses photos, r\u00e9server une place de cin\u00e9ma, r\u00e9viser le code de\nla route, choisir une recette de cuisine ou trouver les restaurants les plus\nproches.  \nDerri\u00e8re ces applications il y a un savoir-faire sp\u00e9cifique \u00e0 la programmation\nsur plateformes mobiles. En effet, contrairement aux ordinateurs classiques,\nles contraintes impos\u00e9es par les caract\u00e9ristiques ces terminaux font que\ncertains \u00abgestes simples\u00bb pour l'utilisateur, comme faire d\u00e9rouler une liste\nde donn\u00e9es, impliquent en r\u00e9alit\u00e9 des m\u00e9canismes plus complexes.  \nCe MOOC de 10 semaines est consacr\u00e9 \u00e0 la programmation sur iPhone et iPad. Les\ns\u00e9ances abordent successivement les principaux m\u00e9canismes offerts par iOS pour\nle d\u00e9veloppement d'applications embarqu\u00e9es : l'environnement de d\u00e9veloppement,\nla notion de vue, les principaux \u00abframeworks\u00bb, etc. Un parall\u00e8le avec la\nprobl\u00e9matique du d\u00e9veloppement de syst\u00e8mes embarqu\u00e9s est \u00e9galement fait.\n\n",
        "name": "Programmation sur iPhone et iPad",
        "provider": "France Universit\u00e9 Numerique",
        "rating": "4",
        "reviews": "1",
        "university": [
            "Sorbonne Universit\u00e9s"
        ],
        "url": "https://www.france-universite-numerique-mooc.fr/courses/UPMC/18001/Trimestre_2_2014/about",
        "video_url": ""
    },
    {
        "date": "2014-04-28",
        "desc": "Cybercrime has become both more widespread and harder to battle. Researchers and anecdotal\nexperience show that the cybercrime scene is becoming increasingly organized\nand consolidated, with strong links also to traditional criminal networks.\nModern attacks are indeed stealthy and often profit oriented.Malicious software (malware) is the traditional way in which cybercriminals infect user\nand enterprise hosts to gain access to their private, financial, and\nintellectual property data. Once stolen, such information can enable more\nsophisticated attacks, generate illegal revenue, and allow for cyber-espionage.By mixing a practical, hands-on approach with the theory and techniques behind the scene, the course discusses the current academic and underground research in the\nfield, trying to answer the foremost question about malware and underground\neconomy, namely, \"Should we care?\".Students will learn how traditional and mobile malware work, how they are analyzed and\ndetected, peering through the underground ecosystem that drives this profitable\nbut illegal business.\n\nUnderstanding how malware operates is of paramount importance to form knowledgeable experts, teachers, researchers, and practitioners able to fight back.  Besides, it allows us to gather intimate knowledge of the systems and the threats, which is a necessary step to successfully devise novel, effective, and practical mitigation techniques.SyllabusWeek One: Introduction to Malicious SoftwareWeek Two: (A Glimpse at) Static Analysis and its LimitationWeek Three: (A Glimpse at) Dynamic Analysis and its LimitationWeek Four: Introduction to Mobile Malware ThreatsWeek Five: Specialized Underground CybercrimeWeek Six: Cybercrime economy (and its costs)",
        "desc_html": "Cybercrime has become both more widespread and harder to battle. Researchers\nand anecdotal experience show that the cybercrime scene is becoming\nincreasingly organized and consolidated, with strong links also to traditional\ncriminal networks. Modern attacks are indeed stealthy and often profit\noriented.  \n  \nMalicious software (malware) is the traditional way in which cybercriminals\ninfect user and enterprise hosts to gain access to their private, financial,\nand intellectual property data. Once stolen, such information can enable more\nsophisticated attacks, generate illegal revenue, and allow for cyber-\nespionage.  \n  \nBy mixing a practical, hands-on approach with the theory and techniques behind\nthe scene, the course discusses the current academic and underground research\nin the field, trying to answer the foremost question about malware and\nunderground economy, namely, \"Should we care?\".  \n  \n\u00a0Students will learn how traditional and mobile malware work, how they are\nanalyzed and detected, peering through the underground ecosystem that drives\nthis profitable but illegal business. Understanding how malware operates is of\nparamount importance to form knowledgeable experts, teachers, researchers, and\npractitioners able to fight back. Besides, it allows us to gather intimate\nknowledge of the systems and the threats, which is a necessary step to\nsuccessfully devise novel, effective, and practical mitigation techniques.\n\n## Syllabus\n\nWeek One: Introduction to Malicious Software  \nWeek Two: (A Glimpse at) Static Analysis and its Limitation  \nWeek Three: (A Glimpse at) Dynamic Analysis and its Limitation  \nWeek Four: Introduction to Mobile Malware Threats  \nWeek Five: Specialized Underground Cybercrime  \nWeek Six: Cybercrime economy (and its costs)\n\n",
        "name": "Malicious Software and its Underground Economy: Two Sides to Every Story",
        "provider": "Coursera",
        "rating": "4.3333333333333",
        "reviews": "3",
        "university": [
            "University of London International Programmes"
        ],
        "url": "https://www.coursera.org/course/malsoftware",
        "video_url": ""
    },
    {
        "date": "2014-04-27",
        "desc": "\u062f\u0631\u0627\u0633\u0629 \u0623\u0633\u0627\u0633\u064a\u0627\u062a \u0627\u0644\u062a\u0634\u0641\u064a\u0631, \u0648\u0623\u0647\u0645 \u0627\u0644\u0637\u0631\u0642 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u0629 \u0641\u064a\u0647\u0627. \u0643\u0645\u0627 \u0633\u064a\u062a\u0645 \u0627\u0644\u062a\u0637\u0631\u0642 \u0644\u0623\u0647\u0645 \u0623\u0646\u0648\u0627\u0639 \u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u0627\u0644\u062a\u0642\u0644\u064a\u062f\u064a \u0648\u0627\u0644\u062d\u062f\u064a\u062b.\u0633\u0646\u062a\u0646\u0627\u0648\u0644 \u0623\u0647\u0645 \u0627\u0644\u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0627\u062a \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u0629 \u0641\u064a \u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u0648\u0645\u0627\u0647\u064a \u0627\u0644\u0639\u0646\u0627\u0635\u0631 \u0627\u0644\u0623\u0633\u0627\u0633\u064a\u0629 \u0627\u0644\u0648\u0627\u062c\u0628 \u0627\u0644\u0627\u0646\u062a\u0628\u0627\u0647 \u0644\u0647\u0627 \u0644\u062a\u062d\u062f\u064a\u062f \u0645\u0642\u062f\u0627\u0631 \u0635\u0644\u0627\u0628\u0629 \u0648\u0645\u0645\u0627\u0646\u0639\u0629 \u0627\u0644\u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0629 \u0644\u0644\u062a\u0641\u0643\u064a\u0643, \u0648\u0645\u062f\u0649 \u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f\u064a\u0629 \u0639\u0644\u0649 \u0645\u0641\u0627\u062a\u064a\u062d \u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u0648\u0641\u0643 \u0627\u0644\u062a\u0634\u0641\u064a\u0631. \u0648\u0633\u0646\u062a\u0646\u0627\u0648\u0644 \u0627\u0644\u062a\u0648\u0627\u0642\u064a\u0639 \u0627\u0644\u0631\u0642\u0645\u064a\u0629, \u0648\u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0627\u062a\u0647\u0627 \u0641\u064a \u0627\u0644\u062d\u064a\u0627\u0629 \u0627\u0644\u0639\u0645\u0644\u064a\u0629 \u0648\u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0627\u062a \u0627\u0644\u062a\u062c\u0627\u0631\u064a\u0629.",
        "desc_html": "\u062f\u0631\u0627\u0633\u0629 \u0623\u0633\u0627\u0633\u064a\u0627\u062a \u0627\u0644\u062a\u0634\u0641\u064a\u0631, \u0648\u0623\u0647\u0645 \u0627\u0644\u0637\u0631\u0642 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u0629 \u0641\u064a\u0647\u0627. \u0643\u0645\u0627 \u0633\u064a\u062a\u0645 \u0627\u0644\u062a\u0637\u0631\u0642 \u0644\u0623\u0647\u0645 \u0623\u0646\u0648\u0627\u0639\n\u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u0627\u0644\u062a\u0642\u0644\u064a\u062f\u064a \u0648\u0627\u0644\u062d\u062f\u064a\u062b.  \n  \n\u0633\u0646\u062a\u0646\u0627\u0648\u0644 \u0623\u0647\u0645 \u0627\u0644\u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0627\u062a \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u0629 \u0641\u064a \u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u0648\u0645\u0627\u0647\u064a \u0627\u0644\u0639\u0646\u0627\u0635\u0631 \u0627\u0644\u0623\u0633\u0627\u0633\u064a\u0629 \u0627\u0644\u0648\u0627\u062c\u0628\n\u0627\u0644\u0627\u0646\u062a\u0628\u0627\u0647 \u0644\u0647\u0627 \u0644\u062a\u062d\u062f\u064a\u062f \u0645\u0642\u062f\u0627\u0631 \u0635\u0644\u0627\u0628\u0629 \u0648\u0645\u0645\u0627\u0646\u0639\u0629 \u0627\u0644\u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0629 \u0644\u0644\u062a\u0641\u0643\u064a\u0643, \u0648\u0645\u062f\u0649 \u0627\u0644\u0627\u0639\u062a\u0645\u0627\u062f\u064a\u0629\n\u0639\u0644\u0649 \u0645\u0641\u0627\u062a\u064a\u062d \u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u0648\u0641\u0643 \u0627\u0644\u062a\u0634\u0641\u064a\u0631. \u0648\u0633\u0646\u062a\u0646\u0627\u0648\u0644 \u0627\u0644\u062a\u0648\u0627\u0642\u064a\u0639 \u0627\u0644\u0631\u0642\u0645\u064a\u0629, \u0648\u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0627\u062a\u0647\u0627 \u0641\u064a\n\u0627\u0644\u062d\u064a\u0627\u0629 \u0627\u0644\u0639\u0645\u0644\u064a\u0629 \u0648\u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0627\u062a \u0627\u0644\u062a\u062c\u0627\u0631\u064a\u0629.\n\n",
        "name": "\u0623\u0633\u0627\u0633\u064a\u0627\u062a \u0627\u0644\u062a\u0634\u0641\u064a\u0631",
        "provider": "Rwaq (\u0631\u0648\u0627\u0642)",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "http://www.rwaq.org/courses/introduction-to-encryption",
        "video_url": "https://www.youtube.com/embed/u-UPj2736Ao?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-04-23",
        "desc": "In this introductory programming class, you&rsquo;ll learn Object Oriented Programming, a must-have technique for software engineers that will allow you to reuse and share code easily. You&rsquo;ll learn by doing, and will build byte-sized (ha!) mini projects in each lesson to learn and practice programming concepts.We&rsquo;ve heard that programming can be intimidating for newcomers, and we&rsquo;ve created this course to make sure that you have a great learning experience! You&rsquo;ll learn&nbsp;actively&nbsp;with our mini projects (see the awesome list below), which you&rsquo;ll be able to share proudly with your friends. You&rsquo;ll also learn important programming concepts one by one, with no surprises or leaps of logic along the way.You&rsquo;ll pick up some great tools for your programming toolkit in this course! You will:Start coding in the programming language Python;Reuse and share code with Object Oriented Programming;Create and share amazing, life-hacking projects!&nbsp;This introductory course is for you if you want to be a software engineer, or if you want to collaborate with programmers. Mastering Object Oriented Programming will propel your career in tech forward, and it&rsquo;s also a great way to learn how software engineers think about solving problems.Why Take This Course?You should take this course if you want to build awesome projects, while writing only a few lines of code. Here are some of them:Project Take a Break: Do you know a friend who works too many hours? We will write a program that schedules breaks throughout the day -- reminding your friend to listen to music, get up and dance to their favorite song, or just walk away from the computer every once in awhile.http://youtu.be/C29aerpwkc8Project Profanity Editor: Imagine it&rsquo;s late at night and you get an email from your boss, requesting your help with something. You reply, &ldquo;I can take a shot at it&rdquo; but accidentally end up including an awkward word (sh*t). Oops. We will write a python program that detects curse words, and saves clumsy email writers from embarrassing moments.&nbsp;http://youtu.be/Rvj2UI-wVXAMovie Website: We will learn how to make an awesome webpage that lists your favorite movies and shows their trailers.&nbsp;https://www.youtube.com/watch?v=X0FoelOIZM0&amp;t=1m24s&nbsp;While building these projects we will learn about a programming technique that is used by software engineers on a daily basis; it is called Object Oriented Programming.Finally, we will work together to get better at reading help documents and using other people&rsquo;s code almost like lego blocks to build our programs. By building these projects, you&rsquo;ll become more confident in your ability to code and transition from &ldquo;programming looks like magic&rdquo; to &ldquo;oh, I can do that.&rdquo;Prerequisites and RequirementsWe require some familiarity with the following programming ideas in any computer language (C++, Java, Python, English etc.):if statementsloopsfunctions&nbsp;Don&rsquo;t worry if you feel you need a refresher on any of these programming ideas. That&rsquo;s ok. We will provide information that will remind you how to use these ideas when building programs.See the&nbsp;Technology Requirements&nbsp;for using UdacitySyllabusLesson 0: Introduction (30 min)We will begin with an introduction from the instructor. More specifically, we will talk about the projects we will build and the ideas we will learn in this course. Then we will conduct a short test to ensure you have all the prerequisites necessary for the course. Finally, we will work together to download Python on your computer.Lesson 1: Using Functions (3.5 hours)We will use functions (webbrowser.open and os.rename) from the Python Standard Library to build two projects in this lesson. After that we will present a scenario where using functions will not present a very elegant solution; this will illuminate the need for a new programming tool called Classes.Lesson 2: Using Classes (5 hours)Here we will learn about important object-oriented programming concepts like classes and instances. We will build three cool projects while using classes. These include drawing shapes with Turtle, sending text messages with Twilio and checking curse words with a function called open.We will leverage modules from within the Python Standard Library and also learn to download and use an external Python package (twilio).Lesson 3: Making Classes (5 hours)In this lesson we will learn to create our first class. While doing this we will build a website that plays trailers of your favorite movies. Here are some of the programming ideas we will learn in this lesson:How to create a classHow to instantiate an objectHow to access class attributes and methodsWhat is the self keywordWhat are constructors (__init__)What are DocStringsHow to create and access Class VariablesHow does Inheritance workHow to override methods &lt;br /&gt;Final Project (6 hours)Here, you will use the skills learned in this course to identify a problem statement and idea for a project. You will then identify step-by step directions (in simple English) to design a solution for the previously identified problem. Finally, you will use this design and your newly learned object-oriented programming skills to write code to realize your project.",
        "desc_html": "In this introductory programming class, you'll learn Object Oriented\nProgramming, a must-have technique for software engineers that will allow you\nto reuse and share code easily. You'll learn by doing, and will build byte-\nsized (ha!) mini projects in each lesson to learn and practice programming\nconcepts.\n\nWe've heard that programming can be intimidating for newcomers, and we've\ncreated this course to make sure that you have a great learning experience!\nYou'll learn actively with our mini projects (see the awesome list below),\nwhich you'll be able to share proudly with your friends. You'll also learn\nimportant programming concepts one by one, with no surprises or leaps of logic\nalong the way.\n\nYou'll pick up some great tools for your programming toolkit in this course!\nYou will:\n\n  * Start coding in the programming language Python;\n  * Reuse and share code with Object Oriented Programming;\n  * Create and share amazing, life-hacking projects! \n\nThis introductory course is for you if you want to be a software engineer, or\nif you want to collaborate with programmers. Mastering Object Oriented\nProgramming will propel your career in tech forward, and it's also a great way\nto learn how software engineers think about solving problems.\n\n**Why Take This Course?**\n\nYou should take this course if you want to build awesome projects, while\nwriting only a few lines of code. Here are some of them:\n\n  * Project Take a Break: Do you know a friend who works too many hours? We will write a program that schedules breaks throughout the day -- reminding your friend to listen to music, get up and dance to their favorite song, or just walk away from the computer every once in awhile.<http://youtu.be/C29aerpwkc8>\n  * Project Profanity Editor: Imagine it's late at night and you get an email from your boss, requesting your help with something. You reply, \"I can take a shot at it\" but accidentally end up including an awkward word (sh*t). Oops. We will write a python program that detects curse words, and saves clumsy email writers from embarrassing moments. <http://youtu.be/Rvj2UI-wVXA>\n  * Movie Website: We will learn how to make an awesome webpage that lists your favorite movies and shows their trailers. [https://www.youtube.com/watch?v=X0FoelOIZM0&t=1m24s](https://www.youtube.com/watch?v=X0FoelOIZM0&t=1m24s) \n\nWhile building these projects we will learn about a programming technique that\nis used by software engineers on a daily basis; it is called Object Oriented\nProgramming.\n\nFinally, we will work together to get better at reading help documents and\nusing other people's code almost like lego blocks to build our programs. By\nbuilding these projects, you'll become more confident in your ability to code\nand transition from \"programming looks like magic\" to \"oh, I can do that.\"\n\n**Prerequisites and Requirements**\n\nWe require some familiarity with the following programming ideas in any\ncomputer language (C++, Java, Python, English etc.):\n\n  * if statements\n  * loops\n  * functions \n\nDon't worry if you feel you need a refresher on any of these programming\nideas. That's ok. We will provide information that will remind you how to use\nthese ideas when building programs.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n## Syllabus\n\n**Lesson 0: Introduction (30 min)**\n\nWe will begin with an introduction from the instructor. More specifically, we\nwill talk about the projects we will build and the ideas we will learn in this\ncourse. Then we will conduct a short test to ensure you have all the\nprerequisites necessary for the course. Finally, we will work together to\ndownload Python on your computer.\n\n**Lesson 1: Using Functions (3.5 hours)**\n\nWe will use functions (webbrowser.open and os.rename) from the Python Standard\nLibrary to build two projects in this lesson. After that we will present a\nscenario where using functions will not present a very elegant solution; this\nwill illuminate the need for a new programming tool called Classes.\n\n**Lesson 2: Using Classes (5 hours)**\n\nHere we will learn about important object-oriented programming concepts like\nclasses and instances. We will build three cool projects while using classes.\nThese include drawing shapes with Turtle, sending text messages with Twilio\nand checking curse words with a function called open.\n\nWe will leverage modules from within the Python Standard Library and also\nlearn to download and use an external Python package (twilio).\n\n**Lesson 3: Making Classes (5 hours)**\n\nIn this lesson we will learn to create our first class. While doing this we\nwill build a website that plays trailers of your favorite movies. Here are\nsome of the programming ideas we will learn in this lesson:\n\n  * How to create a class\n  * How to instantiate an object\n  * How to access class attributes and methods\n  * What is the self keyword\n  * What are constructors (__init__)\n  * What are DocStrings\n  * How to create and access Class Variables\n  * How does Inheritance work\n  * How to override methods <br />\n\n**Final Project (6 hours)**\n\nHere, you will use the skills learned in this course to identify a problem\nstatement and idea for a project. You will then identify step-by step\ndirections (in simple English) to design a solution for the previously\nidentified problem. Finally, you will use this design and your newly learned\nobject-oriented programming skills to write code to realize your project.\n\n",
        "name": "Programming Foundations with Python: Learn Object-Oriented Programming",
        "provider": "Udacity",
        "rating": "4",
        "reviews": "2",
        "university": [],
        "url": "https://www.udacity.com/course/ud036",
        "video_url": "https://www.youtube.com/embed/bwq2W6XUvyg?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-04-21",
        "desc": "This is an\nunconventional course in modern Data Analysis, Machine Learning and Data\nMining. Its contents are heavily influenced by the idea that data analysis\nshould help in enhancing and augmenting knowledge of the domain as represented\nby the concepts and statements of relation between them. According to this\nview, two main pathways for data analysis are summarization, for developing and\naugmenting concepts, and correlation, for enhancing and establishing relations.\nThe term summarization embraces here both simple summaries like totals and\nmeans and more complex summaries: the principal\ncomponents of a set of features and cluster structures in a set of entities.\nSimilarly, correlation covers both bivariate and multivariate relations between\ninput and target features including Bayes classifiers.The view of the data as a subject of\ncomputational data analysis that is adhered to here has emerged quite recently.\nTypically, in sciences and in statistics, a problem comes first, and then the\ninvestigator turns to data that might be useful in advancing towards a\nsolution. Yet nowadays the situation is reversed frequently, especially with\nthe advent of Big Data. Typical questions then are: Take a look at this data\nset - what sense can be made out of it? \u2013 Is there any structure in the data\nset? Can these features help in predicting those? This is more reminiscent to a\ntraveler\u2019s view of the world rather than that of a scientist. The scientist\nsits at his desk, gets reproducible signals from the universe and tries to accommodate\nthem into a great model of the universe. The traveler deals with what come on\ntheir way \u2013 here is the data analysis niche.\u00a0\nA textbook by the instructor along these lines has been published by\nSpringer-London in 2011: \u201cCore\nconcepts in data analysis is clean and devoid\nof any fuzziness. The author presents his theses with a refreshing clarity\nseldom seen in a text of this sophistication. \u2026 To single out just one of the\ntext\u2019s many successes: I doubt readers will ever encounter again such a detailed\nand excellent treatment of correlation concepts. (Computing Reviews of\nACM, June 2011).\u201dSyllabusWeek 1. Intro:Examples of dataand data analysis problems;\n  visualization.Week 2. 1D analysis. Feature scales.\n  Histogram. Two common types of histograms: Gaussian and Power Law. Central\n  values. Minkowski distance and data recovery view. Validation with Bootstrap.Week 3-4. 2D analysiscases:(Both\n  quantitative: Scatter-plot, linear regression, correlation and determinacy\n  coefficients: meaning and properties.  Both\n  nominal: Contingency table, Quetelet index, Pearson chi-squared coefficient,\n  its double meaning and visualization).Week 5-6. Learning multivariate correlations(Bayes\n  approach and Na\u00efve Bayes classifier with a Bag-of-words text model; Decision\n  trees and criteria for building them.)Week 7. Principal components (PCA) and SVD(SVD model behind\n  PCA: student marks as the product of subject factor scores and subject loadings.\n  Application to deriving a hidden underlying factor. Data visualization with\n  PCA. Conventional PCA and data normalization issues.)Week 8. Clustering with k-means(K-Means\n  iterations and K-Means featuresK-Means\n  criterion. Anomalous clusters and intelligent K-Means.)",
        "desc_html": "This is an unconventional course in modern Data Analysis, Machine Learning and\nData Mining. Its contents are heavily influenced by the idea that data\nanalysis should help in enhancing and augmenting knowledge of the domain as\nrepresented by the concepts and statements of relation between them. According\nto this view, two main pathways for data analysis are summarization, for\ndeveloping and augmenting concepts, and correlation, for enhancing and\nestablishing relations. The term summarization embraces here both simple\nsummaries like totals and means and more complex summaries: the principal\ncomponents of a set of features and cluster structures in a set of entities.\nSimilarly, correlation covers both bivariate and multivariate relations\nbetween input and target features including Bayes classifiers.\n\nThe view of the data as a subject of computational data analysis that is\nadhered to here has emerged quite recently. Typically, in sciences and in\nstatistics, a problem comes first, and then the investigator turns to data\nthat might be useful in advancing towards a solution. Yet nowadays the\nsituation is reversed frequently, especially with the advent of Big Data.\nTypical questions then are: Take a look at this data set - what sense can be\nmade out of it? \u2013 Is there any structure in the data set? Can these features\nhelp in predicting those? This is more reminiscent to a traveler\u2019s view of the\nworld rather than that of a scientist. The scientist sits at his desk, gets\nreproducible signals from the universe and tries to accommodate them into a\ngreat model of the universe. The traveler deals with what come on their way \u2013\nhere is the data analysis niche.\u00a0 A textbook by the instructor along these\nlines has been published by Springer-London in 2011: \u201cCore concepts in data\nanalysis is clean and devoid of any fuzziness. The author presents his theses\nwith a refreshing clarity seldom seen in a text of this sophistication. \u2026 To\nsingle out just one of the text\u2019s many successes: I doubt readers will ever\nencounter again such a detailed and excellent treatment of correlation\nconcepts. (Computing Reviews of ACM, June 2011).\u201d********\n\n## Syllabus\n\n**Week 1. Intro:** Examples of data** **and data analysis problems; visualization.\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\n\n\n\n**Week 2. 1D analysis**. Feature scales. Histogram. Two common types of histograms: Gaussian and Power Law. Central values. Minkowski distance and data recovery view. Validation with Bootstrap. \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\n\n\n**Week 3-4. 2D analysis** cases: \n\n(Both quantitative: Scatter-plot, linear regression, correlation and\ndeterminacy coefficients: meaning and properties. Both nominal: Contingency\ntable, Quetelet index, Pearson chi-squared coefficient, its double meaning and\nvisualization).\n\n**Week 5-6. Learning multivariate correlations**\n\n(Bayes approach and Na\u00efve Bayes classifier with a Bag-of-words text model;\nDecision trees and criteria for building them.)\n\n\n\n**Week 7. Principal components (PCA) and SVD**\n\n(SVD model behind PCA: student marks as the product of subject factor scores\nand subject loadings. Application to deriving a hidden underlying factor. Data\nvisualization with PCA. Conventional PCA and data normalization issues.)\n\n\n\n**Week 8. Clustering with k-means**\n\n(K-Means iterations and K-Means features\n\nK-Means criterion. Anomalous clusters and intelligent K-Means.)\n\n",
        "name": "Core Concepts in Data Analysis",
        "provider": "Coursera",
        "rating": "3",
        "reviews": "3",
        "university": [
            "Higher School of Economics"
        ],
        "url": "https://www.coursera.org/course/datan",
        "video_url": ""
    },
    {
        "date": "2014-04-20",
        "desc": "The past decade has witnessed the successful of application of many AI techniques used at `web-scale\u2019, on what are popularly referred to as big data platforms based on the map-reduce parallel computing paradigm and associated technologies such as distributed file systems, no-SQL databases and stream computing engines. Online advertising, machine translation, natural language understanding, sentiment mining, personalized medicine, and national security are some examples of such AI-based web-intelligence applications that are already in the public eye. Others, though less apparent, impact the operations of large enterprises from sales and marketing to manufacturing and supply chains. In this course we explore some such applications, the AI/statistical techniques that make them possible, along with parallel implementations using map-reduce and related platforms.This course was offered thrice during Fall 2012, Spring 2012 and Fall 2013; in Fall of both years it was also taken for credit at IIT Delhi and IIIT Delhi. During this period, I also wrote a book to elucidate the ideas discussed in the course at a 'popular' level:The Intelligent Web: Search, Smart Algorithms and Big Datapublished by Oxford University Press, UK, in November 2013.Now in this edition, the course is being offered in 'self-study' mode.SyllabusIntroduction and Overview&nbsp;Look: Search, Indexing and MemoryListen: Streams, Information and Language, Analyzing Sentiment and IntentLoad: Databases and their Evolution, Big data Technology and TrendsProgramming: Map-ReduceLearn: Classification, Clustering, and Mining, Information ExtractionConnect: Reasoning: Logic and its Limits, Dealing with UncertaintyProgramming: Bayesian Inference for Medical DiagnosticsPredict: Forecasting, Neural Models, Deep Learning, and Research TopicsData Analysis: Regression and&nbsp;Feature Selection",
        "desc_html": "The past decade has witnessed the successful of application of many AI\ntechniques used at `web-scale\u2019, on what are popularly referred to as big data\nplatforms based on the map-reduce parallel computing paradigm and associated\ntechnologies such as distributed file systems, no-SQL databases and stream\ncomputing engines. Online advertising, machine translation, natural language\nunderstanding, sentiment mining, personalized medicine, and national security\nare some examples of such AI-based web-intelligence applications that are\nalready in the public eye. Others, though less apparent, impact the operations\nof large enterprises from sales and marketing to manufacturing and supply\nchains. In this course we explore some such applications, the AI/statistical\ntechniques that make them possible, along with parallel implementations using\nmap-reduce and related platforms.\n\nThis course was offered thrice during Fall 2012, Spring 2012 and Fall 2013; in\nFall of both years it was also taken for credit at IIT Delhi and IIIT Delhi.\nDuring this period, I also wrote a book to elucidate the ideas discussed in\nthe course at a 'popular' level:\n\n[The Intelligent Web: Search, Smart Algorithms and Big\nData](http://www.amazon.com/The-Intelligent-Web-Search-\nalgorithms/dp/0199646716) published by Oxford University Press, UK, in\nNovember 2013.\n\nNow in this edition, the course is being offered in 'self-study' mode.\n\n## Syllabus\n\nIntroduction and Overview\n\nLook: Search, Indexing and Memory\n\nListen: Streams, Information and Language, Analyzing Sentiment and Intent\n\nLoad: Databases and their Evolution, Big data Technology and Trends  \nProgramming: Map-Reduce\n\nLearn: Classification, Clustering, and Mining, Information Extraction\n\nConnect: Reasoning: Logic and its Limits, Dealing with Uncertainty  \nProgramming: Bayesian Inference for Medical Diagnostics\n\nPredict: Forecasting, Neural Models, Deep Learning, and Research Topics  \nData Analysis: Regression and Feature Selection\n\n",
        "name": "Web Intelligence and Big Data",
        "provider": "Coursera",
        "rating": "1.8",
        "reviews": "5",
        "university": [
            "IIT (Indian Institute of Technology Delhi)",
            "Indraprastha Institute of Information Technology Delhi"
        ],
        "url": "https://www.coursera.org/course/bigdata",
        "video_url": ""
    },
    {
        "date": "2014-04-14",
        "desc": "This is the second course in the 3-course Machine Learning Series and is offered at Georgia Tech as CS7641.Ever wonder how Netflix can predict what movies you'll like? Or how Amazon knows what you want to buy before you do? The answer can be found in Unsupervised Learning!Closely related to pattern recognition, Unsupervised Learning is about analyzing data and looking for patterns. It is an extremely powerful tool for identifying structure in data. This course focuses on how you can use Unsupervised Learning approaches -- including randomized optimization, clustering, and feature selection and transformation -- to find structure in unlabeled data.Series Information: Machine Learning is a graduate-level series of 3 courses, covering the area of Artificial Intelligence concerned with computer programs that modify and improve their performance through experiences.Machine Learning 1: Supervised LearningMachine Learning 2: Unsupervised Learning&nbsp;(this course)Machine Learning 3: Reinforcement LearningIf you are new to Machine Learning, we recommend you take these 3 courses in order.The entire series is taught as an engaging dialogue between two eminent Machine Learning professors and friends: Professor Charles Isbell (Georgia Tech) and Professor Michael Littman (Brown University).Why Take This Course?You will learn about and practice a variety of Unsupervised Learning approaches, including: randomized optimization, clustering, feature selection and transformation, and information theory.You will learn important Machine Learning methods, techniques and best practices, and will gain experience implementing them in this course through a hands-on final project in which you will be designing a movie recommendation system (just like Netflix!).Prerequisites and RequirementsWe recommend you take&nbsp;Machine Learning 1: Supervised Learning&nbsp;prior to taking this course.This class will assume that you have programming experience as you will be expected to work with python libraries such as numpy and scikit. A good grasp of probability and statistics is also required. Udacity's&nbsp;Intro to Statistics, especially&nbsp;Lessons 8, 9 and 10, may be a useful refresher.An introductory course like Udacity's&nbsp;Introduction to Artificial Learning&nbsp;also provides a helpful background for this course.See the&nbsp;Technology Requirements&nbsp;for using UdacitySyllabusLesson 1: Randomized optimizationOptimization, randomizedHill climbingRandom restart hill climbingSimulated annealingAnnealing algorithmProperties of simulated annealingGenetic algorithmsGA skeletonCrossover exampleWhat have we learnedMIMICMIMIC: A probability modelMIMIC: Pseudo codeMIMIC: Estimating distributionsFinding dependency treesProbability distributionLesson 2: ClusteringClustering and expectation maximizationBasic clustering problemSingle linkage clustering (SLC)Running time of SLCIssues with SLCK-means clusteringK-means in Euclidean spaceK-means as optimizationSoft clusteringMaximum likelihood GaussianExpectation Maximization (EM)Impossibility theoremLesson 3: Feature SelectionAlgorithmsFiltering and WrappingSpeedSearchingRelevanceRelevance vs. UsefulnessLesson 4: Feature TransformationFeature TransformationWords like TeslaPrincipal Components AnalysisIndependent Components AnalysisCocktail Party ProblemMatrixAlternativesLesson 5: Information TheoryHistory -Sending a MessageExpected size of the messageInformation between two variablesMutual informationTwo Independent CoinsTwo Dependent CoinsKullback Leibler DivergenceUnsupervised Learning Project",
        "desc_html": "_This is the second course in the 3-course Machine Learning Series and is\noffered at Georgia Tech as CS7641._\n\nEver wonder how Netflix can predict what movies you'll like? Or how Amazon\nknows what you want to buy before you do? The answer can be found in\nUnsupervised Learning!\n\nClosely related to pattern recognition, Unsupervised Learning is about\nanalyzing data and looking for patterns. It is an extremely powerful tool for\nidentifying structure in data. This course focuses on how you can use\nUnsupervised Learning approaches -- including randomized optimization,\nclustering, and feature selection and transformation -- to find structure in\nunlabeled data.\n\nSeries Information: Machine Learning is a graduate-level series of 3 courses,\ncovering the area of Artificial Intelligence concerned with computer programs\nthat modify and improve their performance through experiences.\n\n  * [Machine Learning 1: Supervised Learning](https://www.udacity.com/course/ud675)\n  * [Machine Learning 2: Unsupervised Learning](https://www.udacity.com/course/ud741) (this course)\n  * [Machine Learning 3: Reinforcement Learning](https://www.udacity.com/course/ud820)\n\nIf you are new to Machine Learning, we recommend you take these 3 courses in\norder.\n\nThe entire series is taught as an engaging dialogue between two eminent\nMachine Learning professors and friends: Professor Charles Isbell (Georgia\nTech) and Professor Michael Littman (Brown University).\n\n**Why Take This Course?**\n\nYou will learn about and practice a variety of Unsupervised Learning\napproaches, including: randomized optimization, clustering, feature selection\nand transformation, and information theory.\n\nYou will learn important Machine Learning methods, techniques and best\npractices, and will gain experience implementing them in this course through a\nhands-on final project in which you will be designing a movie recommendation\nsystem (just like Netflix!).\n\n**Prerequisites and Requirements**\n\nWe recommend you take [Machine Learning 1: Supervised\nLearning](https://www.udacity.com/ud675) prior to taking this course.\n\nThis class will assume that you have programming experience as you will be\nexpected to work with python libraries such as numpy and scikit. A good grasp\nof probability and statistics is also required. Udacity's [Intro to\nStatistics](https://www.udacity.com/course/st101), especially [Lessons 8, 9\nand\n10](https://www.udacity.com/course/viewer#!/c-st101/l-48738235/m-48688822),\nmay be a useful refresher.\n\nAn introductory course like Udacity's [Introduction to Artificial\nLearning](https://www.udacity.com/course/cs271) also provides a helpful\nbackground for this course.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n## Syllabus\n\n**Lesson 1: Randomized optimization**\n\n  * Optimization, randomized\n  * Hill climbing\n  * Random restart hill climbing\n  * Simulated annealing\n  * Annealing algorithm\n  * Properties of simulated annealing\n  * Genetic algorithms\n  * GA skeleton\n  * Crossover example\n  * What have we learned\n  * MIMIC\n  * MIMIC: A probability model\n  * MIMIC: Pseudo code\n  * MIMIC: Estimating distributions\n  * Finding dependency trees\n  * Probability distribution\n**Lesson 2: Clustering**\n\n  * Clustering and expectation maximization\n  * Basic clustering problem\n  * Single linkage clustering (SLC)\n  * Running time of SLC\n  * Issues with SLC\n  * K-means clustering\n  * K-means in Euclidean space\n  * K-means as optimization\n  * Soft clustering\n  * Maximum likelihood Gaussian\n  * Expectation Maximization (EM)\n  * Impossibility theorem\n**Lesson 3: Feature Selection**\n\n  * Algorithms\n  * Filtering and Wrapping\n  * Speed\n  * Searching\n  * Relevance\n  * Relevance vs. Usefulness\n**Lesson 4: Feature Transformation**\n\n  * Feature Transformation\n  * Words like Tesla\n  * Principal Components Analysis\n  * Independent Components Analysis\n  * Cocktail Party Problem\n  * Matrix\n  * Alternatives\n**Lesson 5: Information Theory**\n\n  * History -Sending a Message\n  * Expected size of the message\n  * Information between two variables\n  * Mutual information\n  * Two Independent Coins\n  * Two Dependent Coins\n  * Kullback Leibler Divergence\n**Unsupervised Learning Project**\n\n",
        "name": "Machine Learning 2\u2014Unsupervised Learning",
        "provider": "Udacity",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Brown University",
            "Georgia Institute of Technology"
        ],
        "url": "https://www.udacity.com/course/ud741",
        "video_url": "https://www.youtube.com/embed/N6s3nYK7zP8?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-04-10",
        "desc": "SAP Business Suite software comprises a set of fully integrated applications such as SAP ERP, SAP CRM, SAP SCM, and SAP SRM that enable enterprises to run their core business operations more efficiently. It provides end-to-end process support for areas such as customer engagement, finance, human resources, manufacturing, procurement, logistics, and IT management. Whenever technological evolution and customer demand led to new market categories, SAP has delivered enterprise applications that transform technology into practical, everyday business value across 26 industries.With SAP HANA, SAP offers the first full in-memory platform in the cloud today, and has taken the lead in making the concept of a real-time enterprise a reality.SAP Business Suite powered by SAP HANA not only brings together transactions and analytics on a single in-memory platform; it completely redefines the concept of real time (which the \u2018R\u2019 in R/1, R/2 and R/3 has always stood for). It enables business processes be re-thought, drives real-time business transformation, and generates customer value both for business and IT.In this course, we\u2019ll learn about the value of SAP Business Suite powered by SAP HANA for lines of business and industries, and how to best exploit this value.",
        "desc_html": "SAP Business Suite software comprises a set of fully integrated applications\nsuch as SAP ERP, SAP CRM, SAP SCM, and SAP SRM that enable enterprises to run\ntheir core business operations more efficiently. It provides end-to-end\nprocess support for areas such as customer engagement, finance, human\nresources, manufacturing, procurement, logistics, and IT management. Whenever\ntechnological evolution and customer demand led to new market categories, SAP\nhas delivered enterprise applications that transform technology into\npractical, everyday business value across 26 industries.  \n  \nWith SAP HANA, SAP offers the first full in-memory platform in the cloud\ntoday, and has taken the lead in making the concept of a real-time enterprise\na reality.  \n  \nSAP Business Suite powered by SAP HANA not only brings together transactions\nand analytics on a single in-memory platform; it completely redefines the\nconcept of real time (which the \u2018R\u2019 in R/1, R/2 and R/3 has always stood for).\nIt enables business processes be re-thought, drives real-time business\ntransformation, and generates customer value both for business and IT.  \n  \nIn this course, we\u2019ll learn about the value of SAP Business Suite powered by\nSAP HANA for lines of business and industries, and how to best exploit this\nvalue.\n\n",
        "name": "SAP Business Suite powered by SAP HANA",
        "provider": "openSAP",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.sap.com/course/suitehana1",
        "video_url": ""
    },
    {
        "date": "2014-04-01",
        "desc": "Ten minutes into this class you will make your own completely personalized version of the insanely addictive game&nbsp;2048. Even if you've never coded before. Pretty cool, no?You'll do this by making small (but important) modifications to the source code for the original 2048 game. If this sounds intimidating, don't worry. We'll teach you the basics of HTML and CSS and how they interact with Javascript (don't worry if that sentence doesn't mean anything to you yet. It will soon).The purpose of this class is to have fun learning how to quickly and easily take an existing open source program, make some changes, and create something that looks and feels completely new. The game you create will be mobile friendly (you can play it on your phone!) and totally shareable.Why Take This Course?In this course, you'll learn:How a computer program works (specifically small web applications like the 2048 game).What HTML, CSS, and Javascript are and how they interact to make a functioning web application.How to make small changes to HTML and CSS files that have&nbsp;very large&nbsp;changes in a program (large enough to turn the original 2048 game into a drastically different&nbsp;Udacity version).How to use Github to make a copy of an open-source program, make changes to that copy, create your own version, and then host that version so you can share it with your friends.Why open-source is such an amazing idea :)Prerequisites and RequirementsNothing!Really. This course is for complete beginners. It is designed to help someone who has never seen computer code take their first steps into the world of programming and web-development.See the&nbsp;Technology Requirements&nbsp;for using UdacitySyllabusLesson 1: Exploring the HTML and CSSYou will create our own version of 2048 by making changes to the existing HTML and CSS files. Within 10 minutes, you'll have your own game. Within an hour, you're friends will be playing&nbsp;your&nbsp;2048 game (fun bonus: your game will be totally mobile-friendly). The topics we'll cover are:What is open source?What is HTML? What is CSS? Javascript?How do these three interact to lead to a fully functioning web/mobile app?What is Github?How do I get someone else's code, make changes, and create my own version?How do I host and share my game?",
        "desc_html": "Ten minutes into this class you will make your own completely personalized\nversion of the insanely addictive game\n[2048](http://gabrielecirulli.github.io/2048/). Even if you've never coded\nbefore. Pretty cool, no?\n\nYou'll do this by making small (but important) modifications to the source\ncode for the original 2048 game. If this sounds intimidating, don't worry.\nWe'll teach you the basics of HTML and CSS and how they interact with\nJavascript (don't worry if that sentence doesn't mean anything to you yet. It\nwill soon).\n\nThe purpose of this class is to have fun learning how to quickly and easily\ntake an existing open source program, make some changes, and create something\nthat looks and feels completely new. The game you create will be mobile\nfriendly (you can play it on your phone!) and totally shareable.\n\n**Why Take This Course?**\n\nIn this course, you'll learn:\n\n  * How a computer program works (specifically small web applications like the 2048 game).\n  * What HTML, CSS, and Javascript are and how they interact to make a functioning web application.\n  * How to make small changes to HTML and CSS files that have very large changes in a program (large enough to turn the original 2048 game into a drastically different [Udacity version](http://2048-class.github.io/2048/)).\n  * How to use Github to make a copy of an open-source program, make changes to that copy, create your own version, and then host that version so you can share it with your friends.\n  * Why open-source is such an amazing idea :)\n\n**Prerequisites and Requirements**\n\nNothing!\n\nReally. This course is for complete beginners. It is designed to help someone\nwho has never seen computer code take their first steps into the world of\nprogramming and web-development.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n## Syllabus\n\n**Lesson 1: Exploring the HTML and CSS**\n\nYou will create our own version of 2048 by making changes to the existing HTML\nand CSS files. Within 10 minutes, you'll have your own game. Within an hour,\nyou're friends will be playing your 2048 game (fun bonus: your game will be\ntotally mobile-friendly). The topics we'll cover are:\n\n  * What is open source?\n  * What is HTML? What is CSS? Javascript?\n  * How do these three interact to lead to a fully functioning web/mobile app?\n  * What is Github?\n  * How do I get someone else's code, make changes, and create my own version?\n  * How do I host and share my game?\n\n",
        "name": "Make your own 2048",
        "provider": "Udacity",
        "rating": "1",
        "reviews": "1",
        "university": [],
        "url": "https://www.udacity.com/course/ud248",
        "video_url": "https://www.youtube.com/embed/915_kRZ6Hfc?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-04-01",
        "desc": "Vous avez envie de d\u00e9velopper des animations ou des petits jeux pour le web. Vous n'avez pas de connaissance particuli\u00e8re des langages web. En revanche, vous avez des notions d'algorithmique et peut-\u00eatre que vous programmez d\u00e9j\u00e0 un peu. Ce MOOC \"Initiation \u00e0 HTML5 - animations et jeux\" est pour vous. Mais si vous avez d\u00e9j\u00e0 une exp\u00e9rience de d\u00e9veloppement web, ce MOOC vous permettra de d\u00e9couvrir quelques-unes des nouveaut\u00e9s d'HTML5 et de les mettre en oeuvre sur un projet d'animation ou de jeu.Ce MOOC s'\u00e9chelonne sur 7 semaines. Chaque semaine, votre travail consistera \u00e0 suivre des vid\u00e9os, r\u00e9pondre \u00e0 des quiz et effectuer de petits exercices.Une premi\u00e8re partie est consacr\u00e9e \u00e0 diff\u00e9rents langages. Nous verrons qu'une page web est structur\u00e9e en diff\u00e9rents \u00e9l\u00e9ments et que c'est le langage HTML qui permet de d\u00e9crire cette structure. Afin de positionner certains de ces \u00e9l\u00e9ments les uns par rapport aux autres et d'appliquer une charte graphique, nous introduirons le langage CSS. Ensuite, gr\u00e2ce au langage JavaScript, nous verrons qu'il est possible de faire en sorte que cette structure HTML et que ce rendu graphique initial soient transform\u00e9s en direct - repositionnement, cr\u00e9ation, modification du contenu et du style... - , et ce pour l'instant sans \u00e9change avec le serveur. Nous verrons \u00e9galement, que cette page web peut r\u00e9agir et se transformer suite \u00e0 un clic souris ou une action au clavier et nous introduirons pour cela les \u00e9v\u00e9nements JavaScript.",
        "desc_html": "Vous avez envie de d\u00e9velopper des animations ou des petits jeux pour le web.\nVous n'avez pas de connaissance particuli\u00e8re des langages web. En revanche,\nvous avez des notions d'algorithmique et peut-\u00eatre que vous programmez d\u00e9j\u00e0 un\npeu. Ce MOOC \"Initiation \u00e0 HTML5 - animations et jeux\" est pour vous. Mais si\nvous avez d\u00e9j\u00e0 une exp\u00e9rience de d\u00e9veloppement web, ce MOOC vous permettra de\nd\u00e9couvrir quelques-unes des nouveaut\u00e9s d'HTML5 et de les mettre en oeuvre sur\nun projet d'animation ou de jeu.  \nCe MOOC s'\u00e9chelonne sur 7 semaines. Chaque semaine, votre travail consistera \u00e0\nsuivre des vid\u00e9os, r\u00e9pondre \u00e0 des quiz et effectuer de petits exercices.  \nUne premi\u00e8re partie est consacr\u00e9e \u00e0 diff\u00e9rents langages. Nous verrons qu'une\npage web est structur\u00e9e en diff\u00e9rents \u00e9l\u00e9ments et que c'est le langage HTML\nqui permet de d\u00e9crire cette structure. Afin de positionner certains de ces\n\u00e9l\u00e9ments les uns par rapport aux autres et d'appliquer une charte graphique,\nnous introduirons le langage CSS. Ensuite, gr\u00e2ce au langage JavaScript, nous\nverrons qu'il est possible de faire en sorte que cette structure HTML et que\nce rendu graphique initial soient transform\u00e9s en direct - repositionnement,\ncr\u00e9ation, modification du contenu et du style... - , et ce pour l'instant sans\n\u00e9change avec le serveur. Nous verrons \u00e9galement, que cette page web peut\nr\u00e9agir et se transformer suite \u00e0 un clic souris ou une action au clavier et\nnous introduirons pour cela les \u00e9v\u00e9nements JavaScript.\n\n",
        "name": "Introduction \u00e0 HTML5 - Animations et jeux",
        "provider": "France Universit\u00e9 Numerique",
        "rating": "0",
        "reviews": "0",
        "university": [
            "American College of Education"
        ],
        "url": "https://www.france-universite-numerique-mooc.fr/courses/groupeinsa/13001/Trimestre_2_2014/about",
        "video_url": ""
    },
    {
        "date": "2014-04-01",
        "desc": "\u062a\u0647\u062f\u0641 \u0647\u0630\u0647 \u0627\u0644\u0645\u0627\u062f\u0629 \u0625\u0644\u0649 \u062a\u0642\u062f\u064a\u0645 \u0627\u0644\u0645\u0641\u0627\u0647\u064a\u0645 \u0627\u0644\u0622\u0633\u0627\u0633\u064a\u0629 \u0644\u0628\u0631\u0645\u062c\u0629 \u0627\u0644\u062d\u0627\u0633\u0628 \u0627\u0644\u0622\u0644\u064a \u0644\u063a\u064a\u0631 \u0627\u0644\u0645\u062a\u062e\u0635\u0635\u064a\u0646 \u062d\u064a\u062b \u0644\u0627 \u062a\u062a\u0637\u0644\u0628 \u0627\u0644\u0645\u0627\u062f\u0629 \u062e\u0628\u0631\u0629 \u0628\u0633\u064a\u0637\u0629 \u062c\u062f\u0627 \u0641\u064a \u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0644\u062d\u0627\u0633\u0628 \u0627\u0644\u0622\u0644\u064a. \u0644\u063a\u0629 \u0627\u0644\u0628\u0631\u0645\u062c\u0629 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u0629 \u0633\u062a\u0643\u0648\u0646 \u0644\u063a\u0629 \u0628\u0627\u064a\u062b\u0648\u0646 Python \u062d\u064a\u062b \u062a\u062a\u064a\u062d \u0628\u0628\u0633\u0627\u0637\u062a\u0647\u0627 \u0627\u0644\u062a\u0631\u0643\u064a\u0632 \u0639\u0644\u0649 \u0627\u0644\u0645\u0641\u0627\u0647\u064a\u0645 \u0627\u0644\u0627\u0633\u0627\u0633\u064a\u0629. \u0648 \u0647\u064a \u0627\u0644\u0644\u063a\u0629 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u0629 \u0641\u064a \u0623\u063a\u0644\u0628 \u0627\u0644\u0645\u0648\u0627\u062f \u0627\u0644\u0645\u0645\u0627\u062b\u0644\u0629 \u0641\u064a \u0627\u0644\u062c\u0627\u0645\u0639\u0627\u062a \u0627\u0644\u0623\u062e\u0631\u0649. \u062a\u062d\u0636\u0649 \u0647\u0630\u0647 \u0627\u0644\u0645\u0627\u062f\u0629 \u0628\u0642\u0628\u0648\u0644 \u0643\u0628\u064a\u0631 \u062c\u062f\u0627 \u0645\u0646 \u0627\u0644\u0637\u0644\u0627\u0628 \u0641\u064a \u0623\u0646\u062d\u0627\u0621 \u0627\u0644\u0639\u0627\u0644\u0645.&nbsp;\u0633\u064a\u062a\u062f\u0645 \u0627\u0644\u062a\u062f\u0631\u064a\u0633 \u0639\u0646 \u0637\u0631\u064a\u0642 \u0627\u0644\u0643\u062b\u064a\u0631 \u0645\u0646 \u0627\u0644\u0623\u0645\u062b\u0644\u0629 \u0648 \u0627\u0644\u0628\u0631\u0627\u0645\u062c \u0627\u0644\u0635\u063a\u064a\u0631\u0629 \u0627\u0644\u0644\u062a\u064a \u0633\u064a\u0642\u0648\u0645 \u0627\u0644\u0637\u0644\u0627\u0628 \u0628\u0643\u062a\u0627\u0628\u062a\u0647\u0627 \u062d\u064a\u062b \u0633\u064a\u0631\u0643\u0632 \u0643\u0644 \u062a\u062f\u0631\u064a\u0628 \u0639\u0644\u0649 \u0627\u062d\u062f\u0649 \u0627\u0644\u0645\u0647\u0627\u0631\u0627\u062a \u0648 \u064a\u0639\u0645\u0644 \u0639\u0644\u0649 \u062a\u0637\u0648\u064a\u0631\u064a\u0647\u0627. \u062a\u0639\u062a\u0645\u062f \u0637\u0631\u064a\u0642\u0629 \u0627\u0644\u062a\u062f\u0631\u064a\u0633 \u0627\u0644\u0646\u0647\u0627\u0626\u064a\u0629 \u0639\u0644\u0649 \u0627\u0644\u0627\u0645\u0643\u0627\u0646\u064a\u0629 \u0627\u0644\u0645\u062a\u0627\u062d\u0629 \u0641\u064a \u0631\u0648\u0627\u0642 \u062d\u064a\u062b \u0645\u0646 \u0627\u0644\u0645\u0645\u0643\u0646 \u062a\u0635\u0645\u064a\u0645 \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a \u0628\u0633\u064a\u0637\u0629 \u062e\u0644\u0627\u0644 \u0639\u0631\u0636 \u0627\u0644\u0645\u062d\u0627\u0636\u0631\u0629 \u0644\u0644\u062a\u0623\u0643\u064a\u062f \u0639\u0644\u0649 \u0645\u0634\u0627\u0631\u0643\u0629 \u0627\u0644\u0637\u0644\u0627\u0628.",
        "desc_html": "\u062a\u0647\u062f\u0641 \u0647\u0630\u0647 \u0627\u0644\u0645\u0627\u062f\u0629 \u0625\u0644\u0649 \u062a\u0642\u062f\u064a\u0645 \u0627\u0644\u0645\u0641\u0627\u0647\u064a\u0645 \u0627\u0644\u0622\u0633\u0627\u0633\u064a\u0629 \u0644\u0628\u0631\u0645\u062c\u0629 \u0627\u0644\u062d\u0627\u0633\u0628 \u0627\u0644\u0622\u0644\u064a \u0644\u063a\u064a\u0631 \u0627\u0644\u0645\u062a\u062e\u0635\u0635\u064a\u0646\n\u062d\u064a\u062b \u0644\u0627 \u062a\u062a\u0637\u0644\u0628 \u0627\u0644\u0645\u0627\u062f\u0629 \u062e\u0628\u0631\u0629 \u0628\u0633\u064a\u0637\u0629 \u062c\u062f\u0627 \u0641\u064a \u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0644\u062d\u0627\u0633\u0628 \u0627\u0644\u0622\u0644\u064a. \u0644\u063a\u0629 \u0627\u0644\u0628\u0631\u0645\u062c\u0629\n\u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u0629 \u0633\u062a\u0643\u0648\u0646 \u0644\u063a\u0629 \u0628\u0627\u064a\u062b\u0648\u0646 Python \u062d\u064a\u062b \u062a\u062a\u064a\u062d \u0628\u0628\u0633\u0627\u0637\u062a\u0647\u0627 \u0627\u0644\u062a\u0631\u0643\u064a\u0632 \u0639\u0644\u0649 \u0627\u0644\u0645\u0641\u0627\u0647\u064a\u0645\n\u0627\u0644\u0627\u0633\u0627\u0633\u064a\u0629. \u0648 \u0647\u064a \u0627\u0644\u0644\u063a\u0629 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u0629 \u0641\u064a \u0623\u063a\u0644\u0628 \u0627\u0644\u0645\u0648\u0627\u062f \u0627\u0644\u0645\u0645\u0627\u062b\u0644\u0629 \u0641\u064a \u0627\u0644\u062c\u0627\u0645\u0639\u0627\u062a \u0627\u0644\u0623\u062e\u0631\u0649.\n\u062a\u062d\u0636\u0649 \u0647\u0630\u0647 \u0627\u0644\u0645\u0627\u062f\u0629 \u0628\u0642\u0628\u0648\u0644 \u0643\u0628\u064a\u0631 \u062c\u062f\u0627 \u0645\u0646 \u0627\u0644\u0637\u0644\u0627\u0628 \u0641\u064a \u0623\u0646\u062d\u0627\u0621 \u0627\u0644\u0639\u0627\u0644\u0645.  \n  \n  \n  \n\u0633\u064a\u062a\u062f\u0645 \u0627\u0644\u062a\u062f\u0631\u064a\u0633 \u0639\u0646 \u0637\u0631\u064a\u0642 \u0627\u0644\u0643\u062b\u064a\u0631 \u0645\u0646 \u0627\u0644\u0623\u0645\u062b\u0644\u0629 \u0648 \u0627\u0644\u0628\u0631\u0627\u0645\u062c \u0627\u0644\u0635\u063a\u064a\u0631\u0629 \u0627\u0644\u0644\u062a\u064a \u0633\u064a\u0642\u0648\u0645 \u0627\u0644\u0637\u0644\u0627\u0628\n\u0628\u0643\u062a\u0627\u0628\u062a\u0647\u0627 \u062d\u064a\u062b \u0633\u064a\u0631\u0643\u0632 \u0643\u0644 \u062a\u062f\u0631\u064a\u0628 \u0639\u0644\u0649 \u0627\u062d\u062f\u0649 \u0627\u0644\u0645\u0647\u0627\u0631\u0627\u062a \u0648 \u064a\u0639\u0645\u0644 \u0639\u0644\u0649 \u062a\u0637\u0648\u064a\u0631\u064a\u0647\u0627. \u062a\u0639\u062a\u0645\u062f \u0637\u0631\u064a\u0642\u0629\n\u0627\u0644\u062a\u062f\u0631\u064a\u0633 \u0627\u0644\u0646\u0647\u0627\u0626\u064a\u0629 \u0639\u0644\u0649 \u0627\u0644\u0627\u0645\u0643\u0627\u0646\u064a\u0629 \u0627\u0644\u0645\u062a\u0627\u062d\u0629 \u0641\u064a \u0631\u0648\u0627\u0642 \u062d\u064a\u062b \u0645\u0646 \u0627\u0644\u0645\u0645\u0643\u0646 \u062a\u0635\u0645\u064a\u0645 \u0627\u062e\u062a\u0628\u0627\u0631\u0627\u062a\n\u0628\u0633\u064a\u0637\u0629 \u062e\u0644\u0627\u0644 \u0639\u0631\u0636 \u0627\u0644\u0645\u062d\u0627\u0636\u0631\u0629 \u0644\u0644\u062a\u0623\u0643\u064a\u062f \u0639\u0644\u0649 \u0645\u0634\u0627\u0631\u0643\u0629 \u0627\u0644\u0637\u0644\u0627\u0628.\n\n",
        "name": "\u0645\u0642\u062f\u0645\u0629 \u0625\u0644\u0649 \u0628\u0631\u0645\u062c\u0629 \u0627\u0644\u062d\u0627\u0633\u0628 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0644\u063a\u0629 Python",
        "provider": "Rwaq (\u0631\u0648\u0627\u0642)",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "http://www.rwaq.org/courses/introduction-to-programming",
        "video_url": "https://www.youtube.com/embed/gqx4DYN3OGQ?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-04-01",
        "desc": "\u672c\u8bfe\u7a0b\u4e3b\u8981\u8ba8\u8bba\u4eba\u3001\u5a92\u4ecb\u3001\u4fe1\u606f\u5728\u793e\u4f1a\u5316\u5a92\u4f53\u73af\u5883\u4e0b\u7684\u65b0\u89c4\u5f8b\u3002\u5305\u62ec\u5a92\u4f53\u7684\u7ed3\u6784\u6027\u6846\u67b6\u3001\u4fe1\u606f\u63a5\u53d7\u8005\u7684\u6ce8\u610f\u529b\u8def\u5f84\u3001\u4fe1\u606f\u4f20\u64ad\u8def\u5f84\u7684\u4f18\u5316\uff1b\u7f51\u7edc\u4eba\u7fa4\u8bc6\u522b\u7684\u65b9\u5f0f\u548c\u5de5\u5177\uff1b\u7f51\u7edc\u4eba\u7fa4\u805a\u5408\u65b9\u5f0f\u548c\u4e92\u52a8\u89c4\u5f8b\uff1b\u7f51\u7edc\u53e3\u7891\u4ea7\u751f\u7684\u5185\u5728\u52a8\u56e0\u3001\u5916\u5728\u9a71\u52a8\u529b\u3001\u5404\u7c7b\u6570\u636e\u5206\u6790\u5de5\u5177\u548c\u65b9\u6cd5\uff1b\u4ee5\u53ca\u79fb\u52a8\u65f6\u4ee3\u7684\u7ec8\u7aef\u7ade\u4e89\u3002This course focuses on regular patterns of interactions among people, media and information under surrounding social media. The curriculum&nbsp;mainly concerns: the framework&nbsp;and structures of net medias; the\ninteresting focus and evolution of the message-acceptor; the optimization of info-transition paths; methods&nbsp;and tools for detecting online communities; the building, development and interaction within, inside and between online communities; word-of-mouth dynamics along the social net; terminal-competition in mobile medias; useful data analytics.Syllabus\u7b2c\u4e00\u5468:&nbsp; \u5e8f\u8a00&nbsp;\n\u8ba1\u7b97\u673a\u4fe1\u606f\u6280\u672f\u7684\u53d8\u9769\uff0c\u662f\u9020\u5c31\u6570\u5b57\u5a92\u4f53\uff0c\u6539\u53d8\u4eba\u3001\u5a92\u4ecb\u3001\u4fe1\u606f\u4e4b\u95f4\u5173\u7cfb\u7684\u6838\u5fc3\u3002\u7b2c\u4e8c\u5468\uff1a\u6211\u4eec\u662f\u5426\u8ba4\u6e05\u4eca\u5929\u4e92\u8054\u7f51\u4e16\u754c\u7684\u57fa\u672c\u7ed3\u6784\uff1f\u89e3\u91ca\uff1a\u793e\u4f1a\u5316\u5a92\u4f53\u53ca\u5176\u57fa\u7840\u5e73\u53f0\uff0c\u5a92\u4f53\u7ed3\u6784\u6027\u6846\u67b6\u3001\u4fe1\u606f\u4f20\u64ad\u6d41\u52a8\u8def\u5f84\u3002\u7b2c\u4e09\u5468\uff1a\u6211\u4eec\u662f\u5426\u80fd\u8bc6\u522b\u5e76\u6d1e\u5bdf\u751f\u5b58\u5728\u793e\u4f1a\u5316\u5a92\u4f53\u4e2d\u7684\u5404\u7c7b\u4eba\u7fa4\uff1f\u5206\u6790\u793e\u4f1a\u5316\u5a92\u4f53\u4eba\u7fa4\u7684\u8bc6\u522b\u65b9\u5f0f\u3001\u8bc6\u522b\u5de5\u5177\u3002\u7b2c\u56db\u5468\uff1a\u6211\u4eec\u662f\u5426\u80fd\u5398\u6e05\u7f51\u7edc\u793e\u4f1a\u4eba\u7fa4\u7684\u9576\u5d4c\u3001\u8fde\u63a5\u548c\u6d8c\u73b0\u7684\u89c4\u5f8b\uff1f\u5206\u6790\u7f51\u7edc\u793e\u4f1a\u4eba\u7fa4\u5728\u4e0d\u540c\u9636\u6bb5\u805a\u5408\u7684\u65b9\u5f0f\u548c\u89c4\u5f8b\u3002\u7b2c\u4e94\u5468\uff1a\u6211\u4eec\u662f\u5426\u80fd\u591f\u83b7\u77e5\u7f51\u7edc\u4eba\u7fa4\u4e4b\u95f4\u4ea7\u751f\u4e92\u52a8\u3001\u5bf9\u8bdd\u7684\u7f18\u7531\uff1f\u5206\u6790\u4e92\u52a8\u591a\u5be1\u3001\u60c5\u611f\u5173\u7cfb\u3001\u4eb2\u758f\u7a0b\u5ea6\u3001\u4e92\u60e0\u884c\u4e3a\u548c\u6700\u7ec8\u4ea7\u751f\u7684\u6548\u679c\u6709\u4f55\u5fc5\u7136\u5173\u8054\u3002\u7b2c\u516d\u5468\uff1a\u6211\u4eec\u662f\u5426\u7406\u89e3\u7f51\u7edc\u53e3\u7891\u7684\u4ea7\u751f\u3001\u4f5c\u7528\u53ca\u5176\u5bf9\u793e\u4f1a\u53d1\u5c55\u7684\u5f71\u54cd\uff1f\u5206\u6790\u7f51\u7edc\u53e3\u7891\u4ea7\u751f\u7684\u5185\u5728\u52a8\u56e0\u3001\u5916\u5728\u9a71\u52a8\u529b\uff1b\u4ee5\u53ca\u5404\u7c7b\u7f51\u7edc\u53e3\u7891\u7684\u8bc4\u6d4b\u5de5\u5177\u548c\u8bc4\u4f30\u65b9\u6cd5\u3002\u7b2c\u4e03\u5468\uff1a\u6211\u4eec\u662f\u5426\u4ee5APP\u4e3a\u4f8b\u80fd\u591f\u7406\u89e3\u5360\u636e\u79fb\u52a8\u4e92\u8054\u7f51\u5165\u53e3\u7684\u72ec\u7279\u4f5c\u7528\uff1f\u4ee5\u624b\u673a\u7ec8\u7aefAPP\u4e3a\u4f8b\uff0c\u5206\u6790\u5176\u5e94\u7528\u7c7b\u522b\u3001\u72ec\u7279\u4ef7\u503c\uff1b\u4ee5\u53caAPP\u5e7f\u544a\u7684\u6295\u653e\u5f62\u5f0f\u3001\u5b9a\u4f4d\u3001\u7528\u6237\u5206\u6790\uff0c\u4ee5\u53ca\u77e5\u8bc6\u6027\u53ca\u4ea4\u4e92\u6027\u3002\u7b2c\u516b\u5468\uff1a\u6211\u4eec\u662f\u5426\u80fd\u591f\u533a\u522b\u7f51\u7edc\u516c\u5173\u548c\u7f51\u7edc\u8425\u9500\u7684\u672c\u8d28\u5dee\u522b\uff1f\u5f53\u4ee3\u516c\u5171\u4f20\u64ad\u91c7\u7528\u793e\u4f1a\u5316\u5a92\u4f53\u5df2\u6210\u5e38\u6001\uff0c\u89e3\u6790\u5728\u7ebf\u6d3b\u52a8\u7b56\u5212\u7684\u57fa\u672c\u65b9\u6cd5\u3001\u5927\u6570\u636e\u516c\u5173\u7684\u65b0\u8981\u6c42\u548c\u65b0\u6807\u51c6\u3002\u7b2c\u4e5d\u5468\uff1a\u6211\u4eec\u662f\u5426\u7406\u89e3\u79fb\u52a8\u65f6\u4ee3\u7684\u7ec8\u7aef\u9769\u547d\uff1a\u641c\u7d22\u5f15\u64ce\u4e4b\u4ef7\u503c\uff1f\u5206\u6790\u79fb\u52a8\u641c\u7d22\u5165\u53e3\u7684\u6f14\u53d8\uff0c\u79fb\u52a8\u641c\u7d22\u7ec8\u7aef\u7684\u7ade\u4e89\uff0c\u684c\u9762\u641c\u7d22\u548c\u79fb\u52a8\u641c\u7d22\u7ec8\u7aef\u7684\u7ade\u4e89\uff1b\u5a92\u4f53\u4f7f\u7528\u8005\u7684\u7ec8\u7aef\u4f7f\u7528\u4e60\u60ef\u4e0e\u5a92\u4f53\u63a5\u89e6\u4e60\u60ef\u3002\u89e3\u91ca\u641c\u7d22\u5f15\u64ce\u5728\u54c1\u724c\u4f20\u64ad\u3001\u5e02\u573a\u63a8\u5e7f\u4e2d\u7684\u73b0\u72b6\u4e0e\u95ee\u9898\u3001\u4ef7\u503c\u4e0e\u524d\u666f\u3002\u7b2c\u5341\u5468\uff1a\u8bfe\u7a0b\u5c0f\u7ed3\u3002&nbsp;1st week: Introduction. IT\nrevolution brings up digital media and transforms the relationship among\npeople, media &amp; information.2nd week: The fundamental\nstructure of web. Social media as a platform, the framework of media, the paths\nof messages transition &amp; diffusion.3rd week: Observation and\ndiscrimination of the special crowds (communities) living in the words of social\nmedia. Introduction of useful methods &amp; tools for identifying online\ncommunities (data analytics).4th week: Clarifying the\nprinciples of embedding, concatenation and emergence operations in online\nsociety. Analysis the different stages in the development of community.5th week: Emotional\nrelationships among online crowds. Sentimental analysis in social network.6th week: Understanding the\nword-of-mouth in social network; how it is engendered or formed, its dynamics, and\nits effects in online society, with test tools and estimate methods.7th week: The unique effect\nof occupying the entrance in webs. Take APP as case-study to show the values of\nthe terminals of mobile phones, the classification of APP, position analysis, the types of putting-on the market, customer analysis and effects,\netc. of advertisement.&nbsp;8th week: PR vs. Marketing\nin socialnet. Net is already a popular social stage for modern public\ncommunication. Analysis the basic methods for online planning or strategy, the\nnew standards &amp; criteria for Big Data PR.9th week: The importance of\nsearching engines in the mobile epoch. The evolution of mobile searching, competition in the terminals of mobile searching, the competition in between desk &amp;\nmobile search engines, users\u2019 habits with media equipment and their effects.\nThe current situation, perspectives and problems with applying search engines in\nbrand communication, market promotion, etc.10th\nweek: Summary and discussion.",
        "desc_html": "\u672c\u8bfe\u7a0b\u4e3b\u8981\u8ba8\u8bba\u4eba\u3001\u5a92\u4ecb\u3001\u4fe1\u606f\u5728\u793e\u4f1a\u5316\u5a92\u4f53\u73af\u5883\u4e0b\u7684\u65b0\u89c4\u5f8b\u3002\u5305\u62ec\u5a92\u4f53\u7684\u7ed3\u6784\u6027\u6846\u67b6\u3001\u4fe1\u606f\u63a5\u53d7\u8005\u7684\u6ce8\u610f\u529b\u8def\u5f84\u3001\u4fe1\u606f\u4f20\u64ad\u8def\u5f84\u7684\u4f18\u5316\uff1b\u7f51\u7edc\u4eba\u7fa4\u8bc6\u522b\u7684\u65b9\u5f0f\u548c\u5de5\u5177\uff1b\u7f51\u7edc\u4eba\u7fa4\n\u805a\u5408\u65b9\u5f0f\u548c\u4e92\u52a8\u89c4\u5f8b\uff1b\u7f51\u7edc\u53e3\u7891\u4ea7\u751f\u7684\u5185\u5728\u52a8\u56e0\u3001\u5916\u5728\u9a71\u52a8\u529b\u3001\u5404\u7c7b\u6570\u636e\u5206\u6790\u5de5\u5177\u548c\u65b9\u6cd5\uff1b\u4ee5\u53ca\u79fb\u52a8\u65f6\u4ee3\u7684\u7ec8\u7aef\u7ade\u4e89\u3002\n\nThis course focuses on regular patterns of interactions among people, media\nand information under surrounding social media. The curriculum mainly\nconcerns: the framework and structures of net medias; the interesting focus\nand evolution of the message-acceptor; the optimization of info-transition\npaths; methods and tools for detecting online communities; the building,\ndevelopment and interaction within, inside and between online communities;\nword-of-mouth dynamics along the social net; terminal-competition in mobile\nmedias; useful data analytics.  \n  \n  \n  \n  \n  \n\n## Syllabus\n\n\u7b2c\u4e00\u5468:  \u5e8f\u8a00  \u8ba1\u7b97\u673a\u4fe1\u606f\u6280\u672f\u7684\u53d8\u9769\uff0c\u662f\u9020\u5c31\u6570\u5b57\u5a92\u4f53\uff0c\u6539\u53d8\u4eba\u3001\u5a92\u4ecb\u3001\u4fe1\u606f\u4e4b\u95f4\u5173\u7cfb\u7684\u6838\u5fc3\u3002\n\n\u7b2c\u4e8c\u5468\uff1a\u6211\u4eec\u662f\u5426\u8ba4\u6e05\u4eca\u5929\u4e92\u8054\u7f51\u4e16\u754c\u7684\u57fa\u672c\u7ed3\u6784\uff1f\u89e3\u91ca\uff1a\u793e\u4f1a\u5316\u5a92\u4f53\u53ca\u5176\u57fa\u7840\u5e73\u53f0\uff0c\u5a92\u4f53\u7ed3\u6784\u6027\u6846\u67b6\u3001\u4fe1\u606f\u4f20\u64ad\u6d41\u52a8\u8def\u5f84\u3002\n\n\u7b2c\u4e09\u5468\uff1a\u6211\u4eec\u662f\u5426\u80fd\u8bc6\u522b\u5e76\u6d1e\u5bdf\u751f\u5b58\u5728\u793e\u4f1a\u5316\u5a92\u4f53\u4e2d\u7684\u5404\u7c7b\u4eba\u7fa4\uff1f\u5206\u6790\u793e\u4f1a\u5316\u5a92\u4f53\u4eba\u7fa4\u7684\u8bc6\u522b\u65b9\u5f0f\u3001\u8bc6\u522b\u5de5\u5177\u3002\n\n\u7b2c\u56db\u5468\uff1a\u6211\u4eec\u662f\u5426\u80fd\u5398\u6e05\u7f51\u7edc\u793e\u4f1a\u4eba\u7fa4\u7684\u9576\u5d4c\u3001\u8fde\u63a5\u548c\u6d8c\u73b0\u7684\u89c4\u5f8b\uff1f\u5206\u6790\u7f51\u7edc\u793e\u4f1a\u4eba\u7fa4\u5728\u4e0d\u540c\u9636\u6bb5\u805a\u5408\u7684\u65b9\u5f0f\u548c\u89c4\u5f8b\u3002\n\n\u7b2c\u4e94\u5468\uff1a\u6211\u4eec\u662f\u5426\u80fd\u591f\u83b7\u77e5\u7f51\u7edc\u4eba\u7fa4\u4e4b\u95f4\u4ea7\u751f\u4e92\u52a8\u3001\u5bf9\u8bdd\u7684\u7f18\u7531\uff1f\u5206\u6790\u4e92\u52a8\u591a\u5be1\u3001\u60c5\u611f\u5173\u7cfb\u3001\u4eb2\u758f\u7a0b\u5ea6\u3001\u4e92\u60e0\u884c\u4e3a\u548c\u6700\u7ec8\u4ea7\u751f\u7684\u6548\u679c\u6709\u4f55\u5fc5\u7136\u5173\u8054\u3002\n\n\u7b2c\u516d\u5468\uff1a\u6211\u4eec\u662f\u5426\u7406\u89e3\u7f51\u7edc\u53e3\u7891\u7684\u4ea7\u751f\u3001\u4f5c\u7528\u53ca\u5176\u5bf9\u793e\u4f1a\u53d1\u5c55\u7684\u5f71\u54cd\uff1f\u5206\u6790\u7f51\u7edc\u53e3\u7891\u4ea7\u751f\u7684\u5185\u5728\u52a8\u56e0\u3001\u5916\u5728\u9a71\u52a8\u529b\uff1b\u4ee5\u53ca\u5404\u7c7b\u7f51\u7edc\u53e3\u7891\u7684\u8bc4\u6d4b\u5de5\u5177\u548c\u8bc4\u4f30\u65b9\u6cd5\u3002\n\n\u7b2c\u4e03\u5468\uff1a\u6211\u4eec\u662f\u5426\u4ee5APP\u4e3a\u4f8b\u80fd\u591f\u7406\u89e3\u5360\u636e\u79fb\u52a8\u4e92\u8054\u7f51\u5165\u53e3\u7684\u72ec\u7279\u4f5c\u7528\uff1f\u4ee5\u624b\u673a\u7ec8\u7aefAPP\u4e3a\u4f8b\uff0c\u5206\u6790\u5176\u5e94\u7528\u7c7b\u522b\u3001\u72ec\u7279\u4ef7\u503c\uff1b\u4ee5\u53caAPP\u5e7f\u544a\u7684\u6295\u653e\u5f62\u5f0f\u3001\u5b9a\u4f4d\u3001\u7528\u6237\u5206\u6790\uff0c\n\u4ee5\u53ca\u77e5\u8bc6\u6027\u53ca\u4ea4\u4e92\u6027\u3002\n\n\u7b2c\u516b\u5468\uff1a\u6211\u4eec\u662f\u5426\u80fd\u591f\u533a\u522b\u7f51\u7edc\u516c\u5173\u548c\u7f51\u7edc\u8425\u9500\u7684\u672c\u8d28\u5dee\u522b\uff1f\u5f53\u4ee3\u516c\u5171\u4f20\u64ad\u91c7\u7528\u793e\u4f1a\u5316\u5a92\u4f53\u5df2\u6210\u5e38\u6001\uff0c\u89e3\u6790\u5728\u7ebf\u6d3b\u52a8\u7b56\u5212\u7684\u57fa\u672c\u65b9\u6cd5\u3001\u5927\u6570\u636e\u516c\u5173\u7684\u65b0\u8981\u6c42\u548c\u65b0\u6807\u51c6\u3002\n\n\u7b2c\u4e5d\u5468\uff1a\u6211\u4eec\u662f\u5426\u7406\u89e3\u79fb\u52a8\u65f6\u4ee3\u7684\u7ec8\u7aef\u9769\u547d\uff1a\u641c\u7d22\u5f15\u64ce\u4e4b\u4ef7\u503c\uff1f\u5206\u6790\u79fb\u52a8\u641c\u7d22\u5165\u53e3\u7684\u6f14\u53d8\uff0c\u79fb\u52a8\u641c\u7d22\u7ec8\u7aef\u7684\u7ade\u4e89\uff0c\u684c\u9762\u641c\u7d22\u548c\u79fb\u52a8\u641c\u7d22\u7ec8\u7aef\u7684\u7ade\u4e89\uff1b\u5a92\u4f53\u4f7f\u7528\u8005\u7684\u7ec8\u7aef\u4f7f\u7528\u4e60\u60ef\u4e0e\n\u5a92\u4f53\u63a5\u89e6\u4e60\u60ef\u3002\u89e3\u91ca\u641c\u7d22\u5f15\u64ce\u5728\u54c1\u724c\u4f20\u64ad\u3001\u5e02\u573a\u63a8\u5e7f\u4e2d\u7684\u73b0\u72b6\u4e0e\u95ee\u9898\u3001\u4ef7\u503c\u4e0e\u524d\u666f\u3002\n\n\u7b2c\u5341\u5468\uff1a\u8bfe\u7a0b\u5c0f\u7ed3\u3002\n\n\n\n1st week: Introduction. IT revolution brings up digital media and transforms\nthe relationship among people, media & information.\n\n2nd week: The fundamental structure of web. Social media as a platform, the\nframework of media, the paths of messages transition & diffusion.\n\n3rd week: Observation and discrimination of the special crowds (communities)\nliving in the words of social media. Introduction of useful methods & tools\nfor identifying online communities (data analytics).\n\n4th week: Clarifying the principles of embedding, concatenation and emergence\noperations in online society. Analysis the different stages in the development\nof community.\n\n5th week: Emotional relationships among online crowds. Sentimental analysis in\nsocial network.\n\n6th week: Understanding the word-of-mouth in social network; how it is\nengendered or formed, its dynamics, and its effects in online society, with\ntest tools and estimate methods.\n\n7th week: The unique effect of occupying the entrance in webs. Take APP as\ncase-study to show the values of the terminals of mobile phones, the\nclassification of APP, position analysis, the types of putting-on the market,\ncustomer analysis and effects, etc. of advertisement.\n\n8th week: PR vs. Marketing in socialnet. Net is already a popular social stage\nfor modern public communication. Analysis the basic methods for online\nplanning or strategy, the new standards & criteria for Big Data PR.\n\n9th week: The importance of searching engines in the mobile epoch. The\nevolution of mobile searching, competition in the terminals of mobile\nsearching, the competition in between desk & mobile search engines, users\u2019\nhabits with media equipment and their effects. The current situation,\nperspectives and problems with applying search engines in brand communication,\nmarket promotion, etc.\n\n10th week: Summary and discussion.\n\n  \n  \n  \n  \n  \n\n",
        "name": "\u5927\u6570\u636e\u4e0e\u4fe1\u606f\u4f20\u64ad         Big Data and Information Dissemination",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Fudan University"
        ],
        "url": "https://www.coursera.org/course/fdubigdata",
        "video_url": ""
    },
    {
        "date": "2014-03-31",
        "desc": "General game players are computer systems able to play strategy games\nbased solely on formal game descriptions supplied at \"runtime\". &nbsp;(In\nother words, they don't know the rules until the game starts.) &nbsp;Unlike\nspecialized game players, such as Deep Blue, general game players cannot\nrely on algorithms designed in advance for specific games; they must discover\nsuch algorithms themselves. &nbsp;General game playing expertise depends\non intelligence on the part of the game player and not just intelligence\nof the programmer of the game player.GGP is an interesting application in its own right. &nbsp;It is intellectually\n    engaging and more than a little fun. &nbsp;But it is much more than that.\n    &nbsp;It provides a theoretical framework for modeling discrete dynamic\n    systems and for defining rationality in a way that takes into account problem\n    representation and complexities like incompleteness of information and\n    resource bounds. &nbsp;It has practical applications in areas where these\n    features are important, e.g. in business and law. &nbsp;More fundamentally,\n    it raises questions about the nature of intelligence and serves as a laboratory\n    in which to evaluate competing approaches to artificial intelligence.This course is an introduction to General Game Playing (GGP). &nbsp;Students\nwill get an introduction to the theory of General Game Playing and will&nbsp;learn\nhow to create GGP programs capable of competing against other programs\nand humans.",
        "desc_html": "General game players are computer systems able to play strategy games based\nsolely on formal game descriptions supplied at \"runtime\".  (In other words,\nthey don't know the rules until the game starts.)  Unlike specialized game\nplayers, such as Deep Blue, general game players cannot rely on algorithms\ndesigned in advance for specific games; they must discover such algorithms\nthemselves.  General game playing expertise depends on intelligence on the\npart of the game player and not just intelligence of the programmer of the\ngame player.  \n  \n\nGGP is an interesting application in its own right.  It is intellectually\nengaging and more than a little fun.  But it is much more than that.  It\nprovides a theoretical framework for modeling discrete dynamic systems and for\ndefining rationality in a way that takes into account problem representation\nand complexities like incompleteness of information and resource bounds.  It\nhas practical applications in areas where these features are important, e.g.\nin business and law.  More fundamentally, it raises questions about the nature\nof intelligence and serves as a laboratory in which to evaluate competing\napproaches to artificial intelligence.\n\n  \nThis course is an introduction to General Game Playing (GGP).  Students will\nget an introduction to the theory of General Game Playing and will learn how\nto create GGP programs capable of competing against other programs and humans.\n\n",
        "name": "General Game Playing",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Stanford University"
        ],
        "url": "https://www.coursera.org/course/ggp",
        "video_url": ""
    },
    {
        "date": "2014-03-29",
        "desc": "Since the very beginning of computer technology, processors have been built with ever-increasing clock frequencies and smarter optimizations for achieving a faster software execution. Developers and the software industry are used to applications becoming faster by merely exchanging the underlying hardware. However, since the beginning of the century it has become apparent that this approach no longer works.Moore's law about the ever-increasing number of transistors per chip is still valid, but power consumption, thermal management and memory latency issues are making make serial code acceleration increasingly harder. Instead, hardware vendors now use additional transistors for multiple processing elements (&lsquo;cores&rsquo;) per processor chip and deeper memory hierarchies. Modern hardware has the capability to transform any desktop, server, or even mobile system into some kind of parallel computer. This makes parallel programming the new default for application development. The exploitation of any additional horsepower from hardware is now in the responsibility of the software.The openHPI online course &ldquo;Parallel Programming Concepts&rdquo; presents relevant theoretical and practical foundations for parallel programming. We show crucial theoretical ideas such as semaphores and actors, the architecture of modern parallel hardware, different programming models such as task parallelism, message passing and functional programming, and several patterns and best practices.The course is suitable for all participants who are interested in getting a broader overview of parallelism, especially beyond the usage of multiple threads. Participants should have knowledge in at least one programming language - other skills are not necessary.SyllabusWeek 1:Terminology and fundamental conceptsWeek 2:Shared Memory Parallelism - BasicsWeek 3:Shared memory parallelism &ndash; ProgrammingWeek 4:AcceleratorsWeek 5:Distributed memory parallelismWeek 6:Patterns, best practices and examplesExam:Exam",
        "desc_html": "Since the very beginning of computer technology, processors have been built\nwith ever-increasing clock frequencies and smarter optimizations for achieving\na faster software execution. Developers and the software industry are used to\napplications becoming faster by merely exchanging the underlying hardware.\nHowever, since the beginning of the century it has become apparent that this\napproach no longer works.\n\nMoore's law about the ever-increasing number of transistors per chip is still\nvalid, but power consumption, thermal management and memory latency issues are\nmaking make serial code acceleration increasingly harder. Instead, hardware\nvendors now use additional transistors for multiple processing elements\n('cores') per processor chip and deeper memory hierarchies. Modern hardware\nhas the capability to transform any desktop, server, or even mobile system\ninto some kind of parallel computer. This makes parallel programming the new\ndefault for application development. The exploitation of any additional\nhorsepower from hardware is now in the responsibility of the software.\n\nThe openHPI online course \"Parallel Programming Concepts\" presents relevant\ntheoretical and practical foundations for parallel programming. We show\ncrucial theoretical ideas such as semaphores and actors, the architecture of\nmodern parallel hardware, different programming models such as task\nparallelism, message passing and functional programming, and several patterns\nand best practices.\n\nThe course is suitable for all participants who are interested in getting a\nbroader overview of parallelism, especially beyond the usage of multiple\nthreads. Participants should have knowledge in at least one programming\nlanguage - other skills are not necessary.\n\n## Syllabus\n\n  * **Week 1:** Terminology and fundamental concepts\n  * **Week 2:** Shared Memory Parallelism - Basics\n  * **Week 3:** Shared memory parallelism - Programming\n  * **Week 4:** Accelerators\n  * **Week 5:** Distributed memory parallelism\n  * **Week 6:** Patterns, best practices and examples\n  * **Exam:** Exam\n\n",
        "name": "Parallel Programming Concepts",
        "provider": "openHPI",
        "rating": "5",
        "reviews": "1",
        "university": [],
        "url": "https://open.hpi.de/courses/parprog2014",
        "video_url": "https://www.youtube.com/embed/miE2mAjt5hc?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-03-24",
        "desc": "En este curso, el alumno conocer&aacute; esta micro computadora mostr&aacute;ndole qu&eacute; se puede hacer, qu&eacute; distribuciones existen, c&oacute;mo desarrollar aplicaciones simples utilizando python y c&oacute;mo controlar dispositivos externos utilizando una interfaz GPIO. La metodolog&iacute;a se basa en ense&ntilde;ar primero la teor&iacute;a, luego mostrar en la pr&aacute;ctica &ldquo;c&oacute;mo se hace&rdquo; y al finalizar se pide al alumno que replique lo mostrado y lo mejore, logrando as&iacute; validar el aprendizaje.&nbsp;Modalidades del Curso:&nbsp;El curso se imparte en 2 modalidades:Modalidad Light: Dise&ntilde;ada para personas que no puedan dedicarle mucho tiempo al curso o no tengan acceso a un Raspberry Pi pero que desean aprender mas acerca de esta tecnologia.Modalidad Avanzada: Ademas de los requisitos de la modadlidad light, se le pide al estudiante que desarrolle los proyectos semanales sobre el Raspberry Pi y se le pide un proyecto final.Prerrequisitos:Modalidad Light: NingunoModalidad Avanzada: Raspberry Pi&nbsp;Syllabus&nbsp;Instalaci&oacute;n, Configuraci&oacute;n, Accesorios y dem&aacute;s aspectos a considerarDemos de instalaci&oacute;n Wheezy y otras distribucionesIntroduccion a PythonIntroduccion a la programaci&oacute;n en Python para Raspberry PiEjemplo completo PythonModulo GPIO del Raspberry Pi para conexiones externasElementos b&aacute;sicos de hardware y como controlarlos con el GPIOPr&oacute;ximos Pasos: Proyectos y Comunidad&nbsp;&nbsp;",
        "desc_html": "En este curso, el alumno conocera esta micro computadora mostrandole que se\npuede hacer, que distribuciones existen, como desarrollar aplicaciones simples\nutilizando python y como controlar dispositivos externos utilizando una\ninterfaz GPIO. La metodologia se basa en ense\u00f1ar primero la teoria, luego\nmostrar en la practica \"como se hace\" y al finalizar se pide al alumno que\nreplique lo mostrado y lo mejore, logrando asi validar el aprendizaje.\n\n**Modalidades del Curso:** El curso se imparte en 2 modalidades:\n\n  * Modalidad Light: Dise\u00f1ada para personas que no puedan dedicarle mucho tiempo al curso o no tengan acceso a un Raspberry Pi pero que desean aprender mas acerca de esta tecnologia.\n  * Modalidad Avanzada: Ademas de los requisitos de la modadlidad light, se le pide al estudiante que desarrolle los proyectos semanales sobre el Raspberry Pi y se le pide un proyecto final.\n\n**Prerrequisitos:**\n\n  * Modalidad Light: Ninguno\n  * Modalidad Avanzada: Raspberry Pi\n\n\n\n## Syllabus\n\n\n\n  * Instalacion, Configuracion, Accesorios y demas aspectos a considerar\n  * Demos de instalacion Wheezy y otras distribuciones\n  * Introduccion a Python\n  * Introduccion a la programacion en Python para Raspberry Pi\n  * Ejemplo completo Python\n  * Modulo GPIO del Raspberry Pi para conexiones externas\n  * Elementos basicos de hardware y como controlarlos con el GPIO\n  * Proximos Pasos: Proyectos y Comunidad\n\n\n\n\n\n",
        "name": "Introducci\u00f3n a Raspberry Pi (Ver-2)",
        "provider": "Telescopio",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Galileo University"
        ],
        "url": "http://telescopio.galileo.edu/curso/introduccion-a-raspberry-pi-2/",
        "video_url": "https://www.youtube.com/embed/Wufjlk1Re1U?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-03-18",
        "desc": "Do you work with surveys, demographic information, evaluation data, test scores, or observation data? Are you interested in making the data you collect more useful by organizing it, analyzing it, and applying it in different ways?This self-paced, online course is intended for anyone who wants to learn more about how to structure, visualize, and manipulate data. This includes student, educators, researchers, journalists, and small business owners.",
        "desc_html": "Do you work with surveys, demographic information, evaluation data, test\nscores, or observation data? Are you interested in making the data you collect\nmore useful by organizing it, analyzing it, and applying it in different ways?  \n  \nThis self-paced, online course is intended for anyone who wants to learn more\nabout how to structure, visualize, and manipulate data. This includes student,\neducators, researchers, journalists, and small business owners.\n\n",
        "name": "Making Sense of Data",
        "provider": "Independent",
        "rating": "3.2857142857143",
        "reviews": "7",
        "university": [
            "Google"
        ],
        "url": "https://datasense.withgoogle.com/preview",
        "video_url": "https://www.youtube.com/embed/ZVotO69oFMA?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-03-17",
        "desc": "This is the first course in the 3-course Machine Learning Series and is offered at Georgia Tech as CS7641.Please note that this is first course is different in structure compared to most Udacity CS courses. There is a final project at the end of the course, and there are no programming quizzes throughout this course.This course covers Supervised Learning, a machine learning task that makes it possible for your phone to recognize your voice, your email to filter spam, and for computers to learn a bunch of other cool stuff.Supervised Learning is an important component of all kinds of technologies, from stopping credit card fraud, to finding faces in camera images, to recognizing spoken language. Our goal is to give you the skills that you need to understand these technologies and interpret their output, which is important for solving a range of data science problems. And for surviving a robot uprising.Series Information: Machine Learning is a graduate-level series of 3 courses, covering the area of Artificial Intelligence concerned with computer programs that modify and improve their performance through experiences.Machine Learning 1: Supervised Learning&nbsp;(this course)Machine Learning 2: Unsupervised LearningMachine Learning 3: Reinforcement LearningIf you are new to Machine Learning, we recommend you take these 3 courses in order.The entire series is taught as a lively and rigorous dialogue between two eminent Machine Learning professors and friends: Professor Charles Isbell (Georgia Tech) and Professor Michael Littman (Brown University).Why Take This Course?In this course, you will gain an understanding of a variety of topics and methods in Supervised Learning. Like function approximation in general, Supervised Learning prompts you to make generalizations based on fundamental assumptions about the world.Michael: So why wouldn't you call it \"function induction?\"Charles: Because someone said \"supervised learning\" first.Topics covered in this course include: Decision trees, neural networks, instance-based learning, ensemble learning, computational learning theory, Bayesian learning, and many other fascinating machine learning concepts.In your final project, you will explore important techniques in Supervised Learning, and apply your knowledge to analyze how algorithms behave under a variety of circumstances.Prerequisites and RequirementsA strong familiarity with Probability Theory, Linear Algebra and Statistics is required. An understanding ofIntro to Statistics, especially&nbsp;Lessons 8, 9 and 10, would be helpful.Students should also have some experience in programming (perhaps through&nbsp;Introduction to CS) and a familiarity with Neural Networks (as covered in&nbsp;Introduction to Artificial Learning).See the&nbsp;Technology Requirements&nbsp;for using UdacitySyllabusLesson 0: Machine Learning is the ROXDefinition of Machine LearningSupervised learningInduction and deductionUnsupervised learningReinforcement learningLesson 1: Decision TreesClassification and Regression overviewClassification learningExample: DatingRepresentationDecision trees learningDecision tree expressivenessID3 algorithmID3 biasDecision trees and continuous attributesLesson 2: Regression and ClassificationRegression and function approximationLinear regression and best fitOrder of polynomialPolynomial regressionCross validationLesson 3: Neural NetworksArtificial neural networksPerceptron unitsXOR as perceptron networkPerceptron trainingGradient descentComparison of learning rulesSigmoid functionOptimizing weightsRestriction biasPreference biasLesson 4: Instance-Based LearningInstance based learning beforeInstance based learning nowK-NN algorithmWon&rsquo;t you compute my neighbors?Domain K-NNowledgeK-NN biasCurse of dimensionalityLesson 5: Ensemble B&amp;BEnsemble learning: BoostingEnsemble learning algorithmEnsemble learning outputsWeak learningBoosting in codeWhen D agreesLesson 6: Kernel Methods and Support Vector Machines (SVM)sSupport Vector MachinesOptimal separatorSVMs: Linearly marriedKernel methodsLesson 7: Computational Learning TheoryComputational Learning TheoryLearning theoryResources in Machine LearningDefining inductive learningTeacher with constrained queriesLearner with constrained queriesLearner with mistake boundsVersion spacesPAC learningEpsilon exhaustedHaussler theoremLesson 8: VC DimensionsInfinite hypothesis spacesPower of a hypothesis spaceWhat does VC stand for?Internal trainingLinear separatorsThe ringPolygonsSampling complexityVC of finite HLesson 9: Bayesian LearningBayes RuleBayesian learningBayesian learning in action!Noisy dataBest hypothesisMinimum description lengthBayesian classificationLesson 10: Bayesian InferenceJoint distributionAdding attributesConditional independenceBelief networksSampling from the joint distributionRecovering the joint distributionInferencing rulesNa&iuml;ve BayesWhy Na&iuml;ve Bayes is coolSupervised Learning Final Project: Using Machine Learning to Analyze Datasets",
        "desc_html": "This is the first course in the 3-course Machine Learning Series and is\noffered at Georgia Tech as CS7641.\n\nPlease note that this is first course is different in structure compared to\nmost Udacity CS courses. There is a final project at the end of the course,\nand there are no programming quizzes throughout this course.\n\nThis course covers Supervised Learning, a machine learning task that makes it\npossible for your phone to recognize your voice, your email to filter spam,\nand for computers to learn a bunch of other cool stuff.\n\nSupervised Learning is an important component of all kinds of technologies,\nfrom stopping credit card fraud, to finding faces in camera images, to\nrecognizing spoken language. Our goal is to give you the skills that you need\nto understand these technologies and interpret their output, which is\nimportant for solving a range of data science problems. And for surviving a\nrobot uprising.\n\nSeries Information: Machine Learning is a graduate-level series of 3 courses,\ncovering the area of Artificial Intelligence concerned with computer programs\nthat modify and improve their performance through experiences.\n\n  * [Machine Learning 1: Supervised Learning](https://www.udacity.com/course/ud675) (this course)\n  * [Machine Learning 2: Unsupervised Learning](https://www.udacity.com/course/ud741)\n  * [Machine Learning 3: Reinforcement Learning](https://www.udacity.com/course/ud820)\n\nIf you are new to Machine Learning, we recommend you take these 3 courses in\norder.\n\nThe entire series is taught as a lively and rigorous dialogue between two\neminent Machine Learning professors and friends: Professor Charles Isbell\n(Georgia Tech) and Professor Michael Littman (Brown University).\n\n**Why Take This Course?**\n\nIn this course, you will gain an understanding of a variety of topics and\nmethods in Supervised Learning. Like function approximation in general,\nSupervised Learning prompts you to make generalizations based on fundamental\nassumptions about the world.\n\nMichael: So why wouldn't you call it \"function induction?\"  \nCharles: Because someone said \"supervised learning\" first.\n\nTopics covered in this course include: Decision trees, neural networks,\ninstance-based learning, ensemble learning, computational learning theory,\nBayesian learning, and many other fascinating machine learning concepts.\n\nIn your final project, you will explore important techniques in Supervised\nLearning, and apply your knowledge to analyze how algorithms behave under a\nvariety of circumstances.\n\n**Prerequisites and Requirements**\n\nA strong familiarity with Probability Theory, Linear Algebra and Statistics is\nrequired. An understanding of[Intro to\nStatistics](https://www.udacity.com/course/st101), especially [Lessons 8, 9\nand\n10](https://www.udacity.com/course/viewer#!/c-st101/l-48738235/m-48688822),\nwould be helpful.\n\nStudents should also have some experience in programming (perhaps through\n[Introduction to CS](https://www.udacity.com/course/cs101)) and a familiarity\nwith Neural Networks (as covered in [Introduction to Artificial\nLearning](https://www.udacity.com/course/cs271)).\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n## Syllabus\n\n**Lesson 0: Machine Learning is the ROX**\n\n  * Definition of Machine Learning\n  * Supervised learning\n  * Induction and deduction\n  * Unsupervised learning\n  * Reinforcement learning\n**Lesson 1: Decision Trees**\n\n  * Classification and Regression overview\n  * Classification learning\n  * Example: Dating\n  * Representation\n  * Decision trees learning\n  * Decision tree expressiveness\n  * ID3 algorithm\n  * ID3 bias\n  * Decision trees and continuous attributes\n**Lesson 2: Regression and Classification**\n\n  * Regression and function approximation\n  * Linear regression and best fit\n  * Order of polynomial\n  * Polynomial regression\n  * Cross validation\n**Lesson 3: Neural Networks**\n\n  * Artificial neural networks\n  * Perceptron units\n  * XOR as perceptron network\n  * Perceptron training\n  * Gradient descent\n  * Comparison of learning rules\n  * Sigmoid function\n  * Optimizing weights\n  * Restriction bias\n  * Preference bias\n**Lesson 4: Instance-Based Learning**\n\n  * Instance based learning before\n  * Instance based learning now\n  * K-NN algorithm\n  * Won't you compute my neighbors?\n  * Domain K-NNowledge\n  * K-NN bias\n  * Curse of dimensionality\n**Lesson 5: Ensemble B&B**\n\n  * Ensemble learning: Boosting\n  * Ensemble learning algorithm\n  * Ensemble learning outputs\n  * Weak learning\n  * Boosting in code\n  * When D agrees\n**Lesson 6: Kernel Methods and Support Vector Machines (SVM)s**\n\n  * Support Vector Machines\n  * Optimal separator\n  * SVMs: Linearly married\n  * Kernel methods\n**Lesson 7: Computational Learning Theory**\n\n  * Computational Learning Theory\n  * Learning theory\n  * Resources in Machine Learning\n  * Defining inductive learning\n  * Teacher with constrained queries\n  * Learner with constrained queries\n  * Learner with mistake bounds\n  * Version spaces\n  * PAC learning\n  * Epsilon exhausted\n  * Haussler theorem\n**Lesson 8: VC Dimensions**\n\n  * Infinite hypothesis spaces\n  * Power of a hypothesis space\n  * What does VC stand for?\n  * Internal training\n  * Linear separators\n  * The ring\n  * Polygons\n  * Sampling complexity\n  * VC of finite H\n**Lesson 9: Bayesian Learning**\n\n  * Bayes Rule\n  * Bayesian learning\n  * Bayesian learning in action!\n  * Noisy data\n  * Best hypothesis\n  * Minimum description length\n  * Bayesian classification\n**Lesson 10: Bayesian Inference**\n\n  * Joint distribution\n  * Adding attributes\n  * Conditional independence\n  * Belief networks\n  * Sampling from the joint distribution\n  * Recovering the joint distribution\n  * Inferencing rules\n  * Naive Bayes\n  * Why Naive Bayes is cool\n**Supervised Learning Final Project: Using Machine Learning to Analyze Datasets**\n\n",
        "name": "Machine Learning 1\u2014Supervised Learning",
        "provider": "Udacity",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Brown University",
            "Georgia Institute of Technology"
        ],
        "url": "https://www.udacity.com/course/ud675",
        "video_url": "https://www.youtube.com/embed/kOIKduAOD5k?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-03-17",
        "desc": "This course will discuss the major ideas used today in the implementation of programming language compilers, including lexical analysis, parsing, syntax-directed translation, abstract syntax trees, types and type checking, intermediate languages, dataflow analysis, program optimization, code generation, and runtime systems. As a result, you will learn how a program written in a high-level language designed for humans is systematically translated into a program written in low-level assembly more suited to machines. Along the way we will also touch on how programming languages are designed, programming language semantics, and why there are so many different kinds of programming languages.The course lectures will be presented in short videos. To help you master the material, there will be in-lecture questions to answer, quizzes, and two exams: a midterm and a final. There will also be homework in the form of exercises that ask you to show a sequence of logical steps needed to derive a specific result, such as the sequence of steps a type checker would perform to type check a piece of code, or the sequence of steps a parser would perform to parse an input string. This checking technology is the result of ongoing research at Stanford into developing innovative tools for education, and we're excited to be the first course ever to make it available to students.An optional course project is to write a complete compiler for COOL, the Classroom Object Oriented Language. COOL has the essential features of a realistic programming language, but is small and simple enough that it can be implemented in a few thousand lines of code. Students who choose to do the project can implement it in either C++ or Java.I hope you enjoy the course!Why Study Compilers?Everything that computers do is the result of some program, and all of the millions of programs in the world are written in one of the many thousands of programming languages that have been developed over the last 60 years. Designing and implementing a programming language turns out to be difficult; some of the best minds in computer science have thought about the problems involved and contributed beautiful and deep results. Learning something about compilers will show you the interplay of theory and practice in computer science, especially how powerful general ideas combined with engineering insight can lead to practical solutions to very hard problems. Knowing how a compiler works will also make you a better programmer and increase your ability to learn new programming languages quickly.",
        "desc_html": "This course will discuss the major ideas used today in the implementation of\nprogramming language compilers, including lexical analysis, parsing, syntax-\ndirected translation, abstract syntax trees, types and type checking,\nintermediate languages, dataflow analysis, program optimization, code\ngeneration, and runtime systems. As a result, you will learn how a program\nwritten in a high-level language designed for humans is systematically\ntranslated into a program written in low-level assembly more suited to\nmachines. Along the way we will also touch on how programming languages are\ndesigned, programming language semantics, and why there are so many different\nkinds of programming languages.\n\nThe course lectures will be presented in short videos. To help you master the\nmaterial, there will be in-lecture questions to answer, quizzes, and two\nexams: a midterm and a final. There will also be homework in the form of\nexercises that ask you to show a sequence of logical steps needed to derive a\nspecific result, such as the sequence of steps a type checker would perform to\ntype check a piece of code, or the sequence of steps a parser would perform to\nparse an input string. This checking technology is the result of ongoing\nresearch at Stanford into developing innovative tools for education, and we're\nexcited to be the first course ever to make it available to students.\n\nAn optional course project is to write a complete compiler for COOL, the\nClassroom Object Oriented Language. COOL has the essential features of a\nrealistic programming language, but is small and simple enough that it can be\nimplemented in a few thousand lines of code. Students who choose to do the\nproject can implement it in either C++ or Java.  \nI hope you enjoy the course!\n\n**Why Study Compilers?**\n\nEverything that computers do is the result of some program, and all of the\nmillions of programs in the world are written in one of the many thousands of\nprogramming languages that have been developed over the last 60 years.\nDesigning and implementing a programming language turns out to be difficult;\nsome of the best minds in computer science have thought about the problems\ninvolved and contributed beautiful and deep results. Learning something about\ncompilers will show you the interplay of theory and practice in computer\nscience, especially how powerful general ideas combined with engineering\ninsight can lead to practical solutions to very hard problems. Knowing how a\ncompiler works will also make you a better programmer and increase your\nability to learn new programming languages quickly.\n\n",
        "name": "Compilers",
        "provider": "Coursera",
        "rating": "5",
        "reviews": "2",
        "university": [
            "Stanford University"
        ],
        "url": "https://www.coursera.org/course/compilers",
        "video_url": ""
    },
    {
        "date": "2014-03-17",
        "desc": "This\n course serves as an introduction to linear and discrete \noptimization from the viewpoint of a mathematician or computer \nscientist.\u00a0 Besides learning how linear and discrete optimization can be applied, we focus on \nunderstanding methods that solve linear programs and discrete optimization problems in a mathematically \nrigorous way.We will answer\u00a0 questions like:Does a particular method work correctly?Does it terminate and, if yes, in what time?Can we prove that a solution is optimal?The\n course starts by discussing what a linear program is and how linear programming can be \napplied. Then, we will treat the simplex method and the theory of \nduality. We will then discuss some combinatorial optimization problems like maximum weight bipartite matching and maximum flows.The\n course constitutes about half of the material on linear and discrete optimization \nthat is taught for mathematics and computer science undergraduates at \nEPFL and will feature video lectures, quizzes, programming assignments, \nand a final exam.SyllabusLinear programming, modeling, equivalence of standard formsBasic solutions, primal and dual feasible basic solutions, pivoting and the simplex methodTermination and complexity of the simplex methodInteger programming, bipartite matching and flowsModels of computation, bit-complexity",
        "desc_html": "This course serves as an introduction to linear and discrete optimization from\nthe viewpoint of a mathematician or computer scientist.\u00a0 Besides learning how\nlinear and discrete optimization can be applied, we focus on understanding\nmethods that solve linear programs and discrete optimization problems in a\nmathematically rigorous way.  \n  \nWe will answer\u00a0 questions like:  \n  \n\n  * Does a particular method work correctly?\n  * Does it terminate and, if yes, in what time?\n  * Can we prove that a solution is optimal?\nThe course starts by discussing what a linear program is and how linear\nprogramming can be applied. Then, we will treat the simplex method and the\ntheory of duality. We will then discuss some combinatorial optimization\nproblems like maximum weight bipartite matching and maximum flows.  \n  \nThe course constitutes about half of the material on linear and discrete\noptimization that is taught for mathematics and computer science\nundergraduates at EPFL and will feature video lectures, quizzes, programming\nassignments, and a final exam.  \n\n## Syllabus\n\n  * Linear programming, modeling, equivalence of standard forms \n  * Basic solutions, primal and dual feasible basic solutions, pivoting and the simplex method\n  * Termination and complexity of the simplex method \n  * Integer programming, bipartite matching and flows\n  * Models of computation, bit-complexity\n  \n\n",
        "name": "Linear and Discrete Optimization",
        "provider": "Coursera",
        "rating": "5",
        "reviews": "2",
        "university": [
            "\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne"
        ],
        "url": "https://www.coursera.org/course/linearopt",
        "video_url": ""
    },
    {
        "date": "2014-03-12",
        "desc": "Exploratory Data Analysis (EDA) is an approach to data analysis for summarizing and visualizing the important characteristics of a data set. Promoted by&nbsp;John Tukey, EDA focuses on exploring data to understand the data&rsquo;s underlying structure and variables, to develop intuition about the data set, consider how that data set came into existence, and decide how it can be investigated with more formal statistical methods.If you're interested in supplemental reading material for the course check out the&nbsp;Exploratory Data Analysisbook. (Not Required)Why Take This Course?You will...Understand EDA as a journey and a way to explore dataExplore data at multiple levels using appropriate visualizationsAcquire statistical knowledge for summarizing dataDemonstrate curiosity and skepticism when performing EDADevelop intuition around a data set and understand how the data was generated.Prerequisites and RequirementsA background in statistics is helpful but not required. Consider taking&nbsp;Statistics: The Science of Decisionsprior to taking this course. Relevant topics include:Mean, median, modeNormal, uniform, and skewed distributionsHistograms and box plotsFamiliarity with the following CS and Math topics will help students:Variable assignmentComparison and logical operators ( &lt;, &gt;, &lt;=, &gt;=, ==, &amp;, | )If else statementsSquare roots, logarithms, and exponentialsSee the&nbsp;Technology Requirements&nbsp;for using UdacityWhat Will I Learn?ProjectsJump into a new dataset. Explore, create plots, and summarize the fascinating things you find.SyllabusLesson 1: What is EDA? (1 hour)We'll start by learn about what exploratory data analysis (EDA) is and why it is important. You'll meet the amazing instructors for the course and find out about the course structure and final project.Lesson 2: R Basics (3 hours)EDA, which comes before formal hypothesis testing and modeling, makes use of visual methods to analyze and summarize data sets. R will be our tool for generating those visuals and conducting analyses. In this lesson, we will install RStudio and packages, learn the layout and basic commands of R, practice writing basic R scripts, and inspect data sets.Lesson 3: Explore One Variable (4 hours)We perform EDA to understand the distribution of a variable and to check for anomalies and outliers. Learn how to quantify and visualize individual variables within a data set as we begin to make sense of a pseudo-data set of Facebook users. While the data set does not contain real user data, it does contain a wealth of information. Through the lesson, we will create histograms and boxplots, transform variables, and examine tradeoffs in visualizations.Problem Set 3 (2 hours)Lesson 4: Explore Two Variables (4 hours)EDA allows us to identify the most important variables and relationships within a data set before building predictive models. In this lesson, we will learn techniques for exploring the relationship between any two variables in a data set. We'll create scatter plots, calculate correlations, and investigate conditional means.Problem Set 4 (2 hours)Lesson 5: Explore Many Variables (4 hours)Data sets can be complex. In this lesson, we will learn powerful methods and visualizations for examining relationships among multiple variables. We'll learn how to reshape data frames and how to use aesthetics like color and shape to uncover more information. Extending our knowledge of previous plots, we'll continue to build intuition around the Facebook data set and explore some new data sets as well.Problem Set 5 (2 hours)Lesson 6: Diamonds and Price Predictions (2 hours)Investigate the diamonds data set alongside Facebook Data Scientist, Solomon Messing. He'll recap many of the strategies covered in the course and show how predictive modeling can allow us to determine a good price for a diamond. As a final project, you will create your own exploratory data analysis on a data set of your choice.Final Project (10+ hours)You've explored simulated Facebook user data and the diamonds data set. Now, it's your turn to conduct your own exploratory data analysis. Choose one data set to explore (one provided by Udacity or your own) and create a RMD file that uncovers the patterns, anomalies and relationships of the data set.",
        "desc_html": "Exploratory Data Analysis (EDA) is an approach to data analysis for\nsummarizing and visualizing the important characteristics of a data set.\nPromoted by [John Tukey](http://en.wikipedia.org/wiki/John_Tukey), EDA focuses\non exploring data to understand the data's underlying structure and variables,\nto develop intuition about the data set, consider how that data set came into\nexistence, and decide how it can be investigated with more formal statistical\nmethods.\n\nIf you're interested in supplemental reading material for the course check out\nthe [Exploratory Data Analysis](http://www.amazon.com/gp/product/0201076160/re\nf=as_li_ss_il?ie=UTF8&camp=1789&creative=390957&creativeASIN=0201076160&linkCo\nde=as2&tag=udacity-20)book. (Not Required)\n\n**Why Take This Course?**\n\nYou will...\n\n  * Understand EDA as a journey and a way to explore data\n  * Explore data at multiple levels using appropriate visualizations\n  * Acquire statistical knowledge for summarizing data\n  * Demonstrate curiosity and skepticism when performing EDA\n  * Develop intuition around a data set and understand how the data was generated.\n\n**Prerequisites and Requirements**\n\nA background in statistics is helpful but not required. Consider taking\n[Statistics: The Science of\nDecisions](https://www.udacity.com/course/st095)prior to taking this course.\nRelevant topics include:\n\n  * Mean, median, mode\n  * Normal, uniform, and skewed distributions\n  * Histograms and box plots\n\n  \nFamiliarity with the following CS and Math topics will help students:\n\n  * Variable assignment\n  * Comparison and logical operators ( <, >, <=, >=, ==, &, | )\n  * If else statements\n  * Square roots, logarithms, and exponentials\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n**What Will I Learn?** **Projects**\n\nJump into a new dataset. Explore, create plots, and summarize the fascinating\nthings you find.\n\n## Syllabus\n\n**Lesson 1: What is EDA? (1 hour)**\n\nWe'll start by learn about what exploratory data analysis (EDA) is and why it\nis important. You'll meet the amazing instructors for the course and find out\nabout the course structure and final project.\n\n**Lesson 2: R Basics (3 hours)**\n\nEDA, which comes before formal hypothesis testing and modeling, makes use of\nvisual methods to analyze and summarize data sets. R will be our tool for\ngenerating those visuals and conducting analyses. In this lesson, we will\ninstall RStudio and packages, learn the layout and basic commands of R,\npractice writing basic R scripts, and inspect data sets.\n\n**Lesson 3: Explore One Variable (4 hours)**\n\nWe perform EDA to understand the distribution of a variable and to check for\nanomalies and outliers. Learn how to quantify and visualize individual\nvariables within a data set as we begin to make sense of a pseudo-data set of\nFacebook users. While the data set does not contain real user data, it does\ncontain a wealth of information. Through the lesson, we will create histograms\nand boxplots, transform variables, and examine tradeoffs in visualizations.\n\n**Problem Set 3 (2 hours)** **Lesson 4: Explore Two Variables (4 hours)**\n\nEDA allows us to identify the most important variables and relationships\nwithin a data set before building predictive models. In this lesson, we will\nlearn techniques for exploring the relationship between any two variables in a\ndata set. We'll create scatter plots, calculate correlations, and investigate\nconditional means.\n\n**Problem Set 4 (2 hours)** **Lesson 5: Explore Many Variables (4 hours)**\n\nData sets can be complex. In this lesson, we will learn powerful methods and\nvisualizations for examining relationships among multiple variables. We'll\nlearn how to reshape data frames and how to use aesthetics like color and\nshape to uncover more information. Extending our knowledge of previous plots,\nwe'll continue to build intuition around the Facebook data set and explore\nsome new data sets as well.\n\n**Problem Set 5 (2 hours)** **Lesson 6: Diamonds and Price Predictions (2 hours)**\n\nInvestigate the diamonds data set alongside Facebook Data Scientist, Solomon\nMessing. He'll recap many of the strategies covered in the course and show how\npredictive modeling can allow us to determine a good price for a diamond. As a\nfinal project, you will create your own exploratory data analysis on a data\nset of your choice.\n\n**Final Project (10+ hours)**\n\nYou've explored simulated Facebook user data and the diamonds data set. Now,\nit's your turn to conduct your own exploratory data analysis. Choose one data\nset to explore (one provided by Udacity or your own) and create a RMD file\nthat uncovers the patterns, anomalies and relationships of the data set.\n\n",
        "name": "Data Analysis with R",
        "provider": "Udacity",
        "rating": "4.6",
        "reviews": "5",
        "university": [
            "Facebook"
        ],
        "url": "https://www.udacity.com/course/ud651",
        "video_url": "https://www.youtube.com/embed/kLQOxEr5U_s?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-03-10",
        "desc": "Los objetivos del curso son conocer qu\u00e9 es la agilidad y el Lean aplicado a la tecnolog\u00eda. Profundizar en las t\u00e9cnicas \u00e1giles que necesitar\u00e1 para gestionar con \u00e9xito el d\u00eda a d\u00eda de los proyectos software y tecnol\u00f3gicos.Durante el curso se profundizar\u00e1 en el cliclo de vida iterativo, el \u00e1gil, en c\u00f3mo se planifican y estiman este tipo de proyectos, c\u00f3mo se toman los requisitos, y se repasar\u00e1n las metodolog\u00edas m\u00e1s populares (c\u00f3mo Scrum y XP). Tambi\u00e9n se tratar\u00e1 el Lean, Kanban, y su relaci\u00f3n con la agilidad.",
        "desc_html": "Los objetivos del curso son conocer qu\u00e9 es la agilidad y el Lean aplicado a la\ntecnolog\u00eda. Profundizar en las t\u00e9cnicas \u00e1giles que necesitar\u00e1 para gestionar\ncon \u00e9xito el d\u00eda a d\u00eda de los proyectos software y tecnol\u00f3gicos.  \n  \nDurante el curso se profundizar\u00e1 en el cliclo de vida iterativo, el \u00e1gil, en\nc\u00f3mo se planifican y estiman este tipo de proyectos, c\u00f3mo se toman los\nrequisitos, y se repasar\u00e1n las metodolog\u00edas m\u00e1s populares (c\u00f3mo Scrum y XP).\nTambi\u00e9n se tratar\u00e1 el Lean, Kanban, y su relaci\u00f3n con la agilidad.\n\n",
        "name": "Agilidad y Lean. Gestionando los proyectos y negocios del s. XXI (2\u00aa edici\u00f3n)",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Universidad Rey Juan Carlos"
        ],
        "url": "https://www.miriadax.net/web/agilidad-lean-2edicion",
        "video_url": "https://www.youtube.com/embed/z0qq7ni5ZhI?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-03-10",
        "desc": "In this course you learn the most important aspects of IT security. Sensitize your workflow for potential risks and threats that may arise due to omitted safety precautions. IT security experts in terms of practical IT security solutions are presented.More information about the course and registration will follow shortly. This course is only available in German.",
        "desc_html": "In this course you learn the most important aspects of IT security. Sensitize\nyour workflow for potential risks and threats that may arise due to omitted\nsafety precautions. IT security experts in terms of practical IT security\nsolutions are presented.  \nMore information about the course and registration will follow shortly. This\ncourse is only available in German.\n\n",
        "name": "IT Security",
        "provider": "OpenCourseWorld",
        "rating": "5",
        "reviews": "1",
        "university": [
            "Technische Universit\u00e4t M\u00fcnchen (Technical University of Munich)"
        ],
        "url": "http://www.opencourseworld.de/pages/coursedescription.jsf?courseId=485951",
        "video_url": ""
    },
    {
        "date": "2014-03-04",
        "desc": "This course teaches the efficient use of mobile applications in various areas in the field of mobile systems.",
        "desc_html": "This course teaches the efficient use of mobile applications in various areas\nin the field of mobile systems.\n\n",
        "name": "Mobile Computing",
        "provider": "OpenCourseWorld",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Saarland University"
        ],
        "url": "http://www.opencourseworld.de/pages/coursedescription.jsf?courseId=486015",
        "video_url": ""
    },
    {
        "date": "2014-03-02",
        "desc": "How does cellular technology enable massive surveillance? Do users have rights against surveillance? How does surveillance affect how we use cellular and other technologies? How does it affect our democratic institutions? Do you know that the metadata collected by a cellular network speaks volumes about its users? In this course you will explore all of these questions while investigating related issues in WiFi and Internet surveillance. The issues explored in this course are at the intersection of networking technology, law, and sociology and will appeal to anyone interested in the technical, political, and moral questions inherent in the use of information networks. The course will include broad overviews for the novice, while pointing to the detailed resources needed for those engaged in the development of corporate or governmental policies.",
        "desc_html": "How does cellular technology enable massive surveillance? Do users have rights\nagainst surveillance? How does surveillance affect how we use cellular and\nother technologies? How does it affect our democratic institutions? Do you\nknow that the metadata collected by a cellular network speaks volumes about\nits users? In this course you will explore all of these questions while\ninvestigating related issues in WiFi and Internet surveillance. The issues\nexplored in this course are at the intersection of networking technology, law,\nand sociology and will appeal to anyone interested in the technical,\npolitical, and moral questions inherent in the use of information networks.\nThe course will include broad overviews for the novice, while pointing to the\ndetailed resources needed for those engaged in the development of corporate or\ngovernmental policies.\n\n",
        "name": "ENGRI1280x: Wiretaps to Big Data: Privacy and Surveillance in the Age of Interconnection",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Cornell University"
        ],
        "url": "https://www.edx.org/course/wiretaps-big-data-privacy-surveillance-cornellx-engri1280x",
        "video_url": "https://www.youtube.com/embed/4dHV_vStlgg?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-03-01",
        "desc": "This is a course on programming, data structures and algorithms. The learner is assumed to have no prior experience of programming, but is expected to be at the level of a second year undergraduate college student in science or engineering. The course will run over ten weeks with about 2-3 hours of lectures per week.At the end of each week, the learner is expected to write some programs and submit them for grading. These programming problems are classified as easy, moderate or difficult. The easy problems, typically, are repeats from the lecture. The moderate and difficult ones will require increasing levels of initiative from the learner.&nbsp;In addition, at the end of each week the learner is expected to answer a set of objective-type assessment questions.&nbsp;SyllabusIntroduction to Computers and ProgrammingWriting your first programVariables and operators and expressionsVariable declarations, more operators, precedenceInput, Output StatementsConditionalsLoopsArrays and Multidimensional arraysPointersFunctionsRunning time of a programComputing time complexityPolynomial evaluation and multiplicationSearching: Linear and BinaryFinding minimum and maximumSorting I: Insertion, MergeSorting II: Counting, RadixFinding i-th smallest numberStructures and User-defined data typesBrief introduction to C++: Classes and objectsData Structures: Abstract Data TypeListsStacks: Last In First OutQueues: First In First OutTreesTree traversalHeapsGraphs and RepresentationGreedy algorithmsDynamic programmingMatrix Chain MultiplicationDijkstra's AlgorithmStringsBoyer-Moore String Matching AlgorithmFile I/OModular Programming",
        "desc_html": "This is a course on programming, data structures and algorithms. The learner\nis assumed to have no prior experience of programming, but is expected to be\nat the level of a second year undergraduate college student in science or\nengineering. The course will run over ten weeks with about 2-3 hours of\nlectures per week.\n\nAt the end of each week, the learner is expected to write some programs and\nsubmit them for grading. These programming problems are classified as easy,\nmoderate or difficult. The easy problems, typically, are repeats from the\nlecture. The moderate and difficult ones will require increasing levels of\ninitiative from the learner.  \n  \nIn addition, at the end of each week the learner is expected to answer a set\nof objective-type assessment questions.\n\n## Syllabus\n\n  * Introduction to Computers and Programming\n  * Writing your first program\n  * Variables and operators and expressions\n  * Variable declarations, more operators, precedence\n  * Input, Output Statements\n  * Conditionals\n  * Loops\n  * Arrays and Multidimensional arrays\n  * Pointers\n  * Functions\n  * Running time of a program\n  * Computing time complexity\n  * Polynomial evaluation and multiplication\n  * Searching: Linear and Binary\n  * Finding minimum and maximum\n  * Sorting I: Insertion, Merge\n  * Sorting II: Counting, Radix\n  * Finding i-th smallest number\n  * Structures and User-defined data types\n  * Brief introduction to C++: Classes and objects\n  * Data Structures: Abstract Data Type\n  * Lists\n  * Stacks: Last In First Out\n  * Queues: First In First Out\n  * Trees\n  * Tree traversal\n  * Heaps\n  * Graphs and Representation\n  * Greedy algorithms\n  * Dynamic programming\n  * Matrix Chain Multiplication\n  * Dijkstra's Algorithm\n  * Strings\n  * Boyer-Moore String Matching Algorithm\n  * File I/O\n  * Modular Programming\n\n",
        "name": "Programming, Data Structures and Algorithms",
        "provider": "NPTEL",
        "rating": "2",
        "reviews": "1",
        "university": [
            "IIT ( Indian Institute of Technology Madras)"
        ],
        "url": "https://onlinecourses.nptel.ac.in/programming101",
        "video_url": "https://www.youtube.com/embed/x7qGFTtvNts?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-02-26",
        "desc": "In this course, we will explore how to wrangle data from diverse sources and shape it to enable data-driven applications. Some data scientists spend the bulk of their time doing this!Students will learn how to gather and extract data from widely used data formats. They will learn how to assess the quality of data and explore best practices for data cleaning. We will also introduce students to MongoDB, covering the essentials of storing data and the MongoDB query language together with exploratory analysis using the MongoDB aggregation framework.This is a great course for those interested in entry-level data science positions as well as current business/data analysts looking to add big data to their repertoire, and managers working with data professionals or looking to leverage big data.In this course, we will explore how to wrangle data from diverse sources and shape it to enable data-driven applications. Some data scientists spend the bulk of their time doing this!Students will learn how to gather and extract data from widely used data formats. They will learn how to assess the quality of data and explore best practices for data cleaning. We will also introduce students to MongoDB, covering the essentials of storing data and the MongoDB query language together with exploratory analysis using the MongoDB aggregation framework.This is a great course for those interested in entry-level data science positions as well as current business/data analysts looking to add big data to their repertoire, and managers working with data professionals or looking to leverage big data.Why Take This Course?At the end of the class, students should be able to:Programmatically extract data stored in common formats such as csv, Microsoft Excel, JSON, XML and scrape web sites to parse data from HTML.Audit data for quality (validity, accuracy, completeness, consistency, and uniformity) and critically assess options for cleaning data in different contexts.Store, retrieve, and analyze data using MongoDB.This course concludes with a final project where students incorporate what they have learned to address a real-world data analysis problem.Prerequisites and RequirementsThe ideal student should have the following skills:Programming experience in Python or a willingness to read a little documentation to understand examples and exercises throughout the course.The ability to perform rudimentary system administration on Windows or UnixAt least some experience using a unix shell or Windows PowerShell will be helpful, but is not required.No prior experience with databases is needed.About MongoDB&nbsp;This course is developed in conjunction with MongoDB, Inc., the originator and primary contributor to the open source database&nbsp;MongoDB. MongoDB is the leading NoSQL database. Designed for how we build and run applications today, MongoDB empowers organizations to be more agile and scalable. It enables new types of applications, better customer experience, faster time to market and lower costs.See the&nbsp;Technology Requirements&nbsp;for using UdacityWhat Will I Learn?ProjectsUse important skills from data munging to improve OpenStreetMaps data for a part of the world that you care about and give back to the community.SyllabusSyllabusLesson 1: Data Extraction FundamentalsAssessing the Quality of DataIntro to Tabular FormatsParsing CSVParsing XLS with XLRDIntro to JSONUsing Web APIsLesson 2: Data in More Complex FormatsIntro to XMLXML Design PrinciplesParsing XMLWeb ScrapingParsing HTMLLesson 3: Data QualityWhat is Data Cleaning?Sources of Dirty DataMeasuring Data QualityA Blueprint for CleaningAuditing ValidityAuditing AccuracyAuditing CompletenessAuditing ConsistencyAuditing UniformityLesson 4: Working with MongoDBData Modelling in MongoDBIntroduction to PyMongoField QueriesProjection QueriesGetting Data into MongoDBUsing mongoimportOperators like $gt, $lt, $exists, $regexQuerying Arrays and using $in and $all OperatorsChanging entries: $update, $set, $unsetLesson 5: Analyzing DataExamples of Aggregation FrameworkThe Aggregation PipelineAggregation Operators: $match, $project, $unwind, $groupMultiple Stages Using a Given OperatorLesson 6: Case Study - OpenStreetMap DataUsing iterative parsing for large datafilesOpen Street Map XML OverviewExercises around OpenStreetMap dataFinal Project Instructions",
        "desc_html": "In this course, we will explore how to wrangle data from diverse sources and\nshape it to enable data-driven applications. Some data scientists spend the\nbulk of their time doing this!\n\nStudents will learn how to gather and extract data from widely used data\nformats. They will learn how to assess the quality of data and explore best\npractices for data cleaning. We will also introduce students to MongoDB,\ncovering the essentials of storing data and the MongoDB query language\ntogether with exploratory analysis using the MongoDB aggregation framework.\n\nThis is a great course for those interested in entry-level data science\npositions as well as current business/data analysts looking to add big data to\ntheir repertoire, and managers working with data professionals or looking to\nleverage big data.\n\nIn this course, we will explore how to wrangle data from diverse sources and\nshape it to enable data-driven applications. Some data scientists spend the\nbulk of their time doing this!\n\nStudents will learn how to gather and extract data from widely used data\nformats. They will learn how to assess the quality of data and explore best\npractices for data cleaning. We will also introduce students to MongoDB,\ncovering the essentials of storing data and the MongoDB query language\ntogether with exploratory analysis using the MongoDB aggregation framework.\n\nThis is a great course for those interested in entry-level data science\npositions as well as current business/data analysts looking to add big data to\ntheir repertoire, and managers working with data professionals or looking to\nleverage big data.\n\n**Why Take This Course?**\n\nAt the end of the class, students should be able to:\n\n  * Programmatically extract data stored in common formats such as csv, Microsoft Excel, JSON, XML and scrape web sites to parse data from HTML.\n  * Audit data for quality (validity, accuracy, completeness, consistency, and uniformity) and critically assess options for cleaning data in different contexts.\n  * Store, retrieve, and analyze data using MongoDB.\n\n  \nThis course concludes with a final project where students incorporate what\nthey have learned to address a real-world data analysis problem.\n\n**Prerequisites and Requirements**\n\nThe ideal student should have the following skills:\n\n  * Programming experience in Python or a willingness to read a little documentation to understand examples and exercises throughout the course.\n  * The ability to perform rudimentary system administration on Windows or Unix\n\nAt least some experience using a unix shell or Windows PowerShell will be\nhelpful, but is not required.\n\nNo prior experience with databases is needed.\n\nAbout MongoDB  \nThis course is developed in conjunction with MongoDB, Inc., the originator and\nprimary contributor to the open source database\n[MongoDB](https://github.com/mongodb). MongoDB is the leading NoSQL database.\nDesigned for how we build and run applications today, MongoDB empowers\norganizations to be more agile and scalable. It enables new types of\napplications, better customer experience, faster time to market and lower\ncosts.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n**What Will I Learn?** **Projects**\n\nUse important skills from data munging to improve OpenStreetMaps data for a\npart of the world that you care about and give back to the community.\n\n## Syllabus\n\n**Syllabus**\n\n**Lesson 1: Data Extraction Fundamentals**\n\n  * Assessing the Quality of Data\n  * Intro to Tabular Formats\n  * Parsing CSV\n  * Parsing XLS with XLRD\n  * Intro to JSON\n  * Using Web APIs\n**Lesson 2: Data in More Complex Formats**\n\n  * Intro to XML\n  * XML Design Principles\n  * Parsing XML\n  * Web Scraping\n  * Parsing HTML\n**Lesson 3: Data Quality**\n\n  * What is Data Cleaning?\n  * Sources of Dirty Data\n  * Measuring Data Quality\n  * A Blueprint for Cleaning\n  * Auditing Validity\n  * Auditing Accuracy\n  * Auditing Completeness\n  * Auditing Consistency\n  * Auditing Uniformity\n**Lesson 4: Working with MongoDB**\n\n  * Data Modelling in MongoDB\n  * Introduction to PyMongo\n  * Field Queries\n  * Projection Queries\n  * Getting Data into MongoDB\n  * Using mongoimport\n  * Operators like $gt, $lt, $exists, $regex\n  * Querying Arrays and using $in and $all Operators\n  * Changing entries: $update, $set, $unset\n**Lesson 5: Analyzing Data**\n\n  * Examples of Aggregation Framework\n  * The Aggregation Pipeline\n  * Aggregation Operators: $match, $project, $unwind, $group\n  * Multiple Stages Using a Given Operator\n**Lesson 6: Case Study - OpenStreetMap Data**\n\n  * Using iterative parsing for large datafiles\n  * Open Street Map XML Overview\n  * Exercises around OpenStreetMap data\n  * Final Project Instructions\n\n",
        "name": "Data Wrangling with MongoDB",
        "provider": "Udacity",
        "rating": "4",
        "reviews": "1",
        "university": [
            "MongoDB University"
        ],
        "url": "https://www.udacity.com/course/ud032",
        "video_url": "https://www.youtube.com/embed/h12MQ3d1Z1Y?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-02-24",
        "desc": "This course serves as an introduction to the field of informatics, with a specific focus on the users of information systems, the information that can be accessed through these systems and the social/organizational issues associated with it.",
        "desc_html": "This course serves as an introduction to the field of informatics, with a\nspecific focus on the users of information systems, the information that can\nbe accessed through these systems and the social/organizational issues\nassociated with it.\n\n",
        "name": "Introduction to Informatics",
        "provider": "CourseSites",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Drexel University College of Computing &amp; Informatics"
        ],
        "url": "https://www.coursesites.com/webapps/Bb-sites-course-creation-BBLEARN/pages/mooccatalog.html",
        "video_url": ""
    },
    {
        "date": "2014-02-24",
        "desc": "\u8bfe\u7a0b\u4ecb\u7ecd\u89c6\u9891\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u91cc\u3002\u5728\u5317\u4eac\u5927\u5b66\u4fe1\u606f\u79d1\u5b66\u6280\u672f\u5b66\u9662\uff0c\u672c\u79d1\u751f\u7a0b\u5e8f\u8bbe\u8ba1\u7c7b\u57fa\u7840\u8bfe\u7a0b\u4f53\u7cfb\u5305\u542b\u4e86\u56db\u95e8\u8bfe\uff0c\u6309\u4fee\u8bfe\u987a\u5e8f\u5206\u522b\u4e3a\uff1a\u8ba1\u7b97\u6982\u8bba\u3001\u7a0b\u5e8f\u8bbe\u8ba1\u5b9e\u4e60\u3001\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u3001\u7b97\u6cd5\u5206\u6790\u4e0e\u8bbe\u8ba1\u3002\u5176\u4e2d\u201c\u7a0b\u5e8f\u8bbe\u8ba1\u5b9e\u4e60\u201d\u8bfe\u7a0b\u662f\u4e00\u95e8\u8fde\u63a5\u201c\u8ba1\u7b97\u6982\u8bba\u201d\u548c\u201c\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u201d\u3001\u627f\u4e0a\u542f\u4e0b\u7684\u8bfe\u7a0b\u3002\u8bfe\u7a0b\u7684\u4e3b\u8981\u5185\u5bb9\u4e3b\u8981\u5206\u4e3a\u4e24\u4e2a\u65b9\u9762\uff1a(1)C++\u8bed\u8a00\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\uff0c\u7ea6\u5360\u8bfe\u65f6\u91cf\u768465%\uff1b(2) \u57fa\u672c\u7b97\u6cd5\u601d\u60f3\uff0c\u7ea6\u5360\u8bfe\u65f6\u91cf\u768435%\u3002\u5728\u7b2c\u4e00\u90e8\u5206\u4e2d\uff0c\u8bb2\u6388C++\u8bed\u8a00\u4e2d\u548c\u9762\u5411\u5bf9\u8c61\u6709\u5173\u7684\u6982\u5ff5\u548c\u8bed\u6cd5\uff0c\u5982\u7c7b\u548c\u5bf9\u8c61\u3001\u8fd0\u7b97\u7b26\u91cd\u8f7d\u3001\u7ee7\u627f\u548c\u591a\u6001\u3001\u7c7b\u6a21\u677f\u548c\u7b97\u6cd5\u6a21\u677f\u3001\u6807\u51c6\u6a21\u677f\u5e93\u7b49\u3002\u76ee\u6807\u662f\u4f7f\u5f97\u5b66\u751f\u80fd\u591f\u7528C++\u8bed\u8a00\uff0c\u4ee5\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u6cd5\u7f16\u5199\u53ef\u7ef4\u62a4\u6027\u3001\u53ef\u6269\u5145\u6027\u597d\u7684\uff0c\u8f83\u5927\u89c4\u6a21\u7684\u7a0b\u5e8f\uff0c\u521d\u6b65\u9886\u4f1a\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u65b9\u6cd5\u7684\u4f18\u52bf\u6240\u5728\u3002\u5728\u7b2c\u4e8c\u90e8\u5206\u4e2d\uff0c\u8bb2\u6388\u4e00\u4e9b\u57fa\u672c\u7684\u7b97\u6cd5\u601d\u60f3\uff08\u5982\u679a\u4e3e\u3001\u9012\u5f52\u3001\u641c\u7d22\u3001\u52a8\u6001\u89c4\u5212\u7b49\uff09\uff0c\u5e76\u8fdb\u884c\u5927\u91cf\u7684\u9ad8\u5f3a\u5ea6\u7684\u7f16\u7a0b\u8bad\u7ec3\u3002\u8bad\u7ec3\u7684\u65b9\u5f0f\u662f\u5728\u201c\u5728\u7ebf\u7a0b\u5e8f\u8bc4\u6d4b\u5e73\u53f0\u201d\u4e0a\u63d0\u4ea4\u7a0b\u5e8f\uff0c\u7cfb\u7edf\u7acb\u5373\u5224\u5b9a\u7a0b\u5e8f\u662f\u5426\u6b63\u786e\u3002\u6b64\u79cd\u5f62\u5f0f\u80fd\u591f\u6709\u6548\u4fc3\u4f7f\u5b66\u751f\u5168\u9762\u7ec6\u81f4\u5730\u601d\u8003\u95ee\u9898\uff0c\u63d0\u9ad8\u7f16\u7a0b\u7684\u51c6\u786e\u6027\uff0c\u589e\u5f3a\u7a0b\u5e8f\u67e5\u9519\u3001\u8c03\u8bd5\u7684\u80fd\u529b\u3002\u901a\u8fc7\u8bad\u7ec3\uff0c\u5b66\u751f\u80fd\u591f\u6253\u4e0b\u8f83\u4e3a\u575a\u5b9e\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\uff0c\u4e3a\u8fdb\u4e00\u6b65\u5b66\u4e60\u5176\u4ed6\u8ba1\u7b97\u673a\u4e13\u4e1a\u8bfe\u7a0b\uff0c\u6216\u5728\u5176\u4ed6\u4e13\u4e1a\u9886\u57df\u8fd0\u7528\u8ba1\u7b97\u673a\u7f16\u7a0b\u89e3\u51b3\u95ee\u9898\uff0c\u521b\u9020\u826f\u597d\u7684\u6761\u4ef6\u3002\u53e6\u5916\uff0c\u672c\u8bfe\u7a0b\u5c06ACM\u56fd\u9645\u5927\u5b66\u751f\u7a0b\u5e8f\u8bbe\u8ba1\u7ade\u8d5b\u4e2d\u4e00\u4e9b\u4f18\u79c0\u7684\u57fa\u7840\u9898\u5f15\u5165\u8bfe\u7a0b\u6559\u5b66\uff0c\u589e\u52a0\u5185\u5bb9\u7684\u8da3\u5473\u6027\uff0c\u5e76\u63d0\u9ad8\u5b66\u751f\u5b66\u4e60\u7684\u79ef\u6781\u6027\u548c\u6210\u5c31\u611f\u3002Syllabus\u7b2c1\u5468 \u4eceC\u8d70\u8fdbC++\u7b2c2\u5468 \u7c7b\u548c\u5bf9\u8c61\u521d\u63a2\u7b2c3\u5468 \u7c7b\u548c\u5bf9\u8c61\u8fdb\u9636\u7b2c4\u5468 \u8fd0\u7b97\u7b26\u91cd\u8f7d\u7b2c5\u5468 \u7ee7\u627f\u4e0e\u6d3e\u751f\u7b2c6\u5468 \u591a\u6001\u4e0e\u865a\u51fd\u6570\u7b2c7\u5468 \u8f93\u5165\u8f93\u51fa,\u6587\u4ef6\u64cd\u4f5c\u548c\u6a21\u677f\u7b2c8\u5468 \u6807\u51c6\u6a21\u677f\u5e93STL (1)\u7b2c9\u5468 \u6807\u51c6\u6a21\u677f\u5e93STL (2)\u7b2c10\u5468 \u679a\u4e3e\u7b97\u6cd5\u7b2c11\u5468 \u9012\u5f52\u7b97\u6cd5\u7b2c12\u5468 \u52a8\u6001\u89c4\u5212\u7b97\u6cd5\u7b2c13\u5468 \u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u7b97\u6cd5\u7b2c14\u5468 \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u7b97\u6cd5\u4efb\u52a1\u5b89\u6392\uff08\u4f5c\u4e1a\u53ca\u8003\u8bd5\uff09\u8003\u8bd5\u5206\u4e3a\u671f\u4e2d\u8003\u8bd5\u548c\u671f\u672b\u8003\u8bd5\u8bc4\u5206\u65b9\u6848\u8bc4\u5206\u6309\u7167\u65e5\u5e38\u4f5c\u4e1a\u7684\u5b8c\u6210\u60c5\u51b5\u548c\u671f\u4e2d\u671f\u672b\u8003\u8bd5\u7684\u7b54\u9898\u60c5\u51b5\u8fdb\u884c\u3002\u8bfe\u7a0b\u53c2\u4e0e\uff08\u5982\u8bba\u575b\u56de\u7b54\u95ee\u9898\u7b49\uff09 5 %\uff0cC++\u4f5c\u4e1a 20 % \uff0c\u5728POJ\u5728\u7ebf\u63d0\u4ea4\u7684\u7f16\u7a0b\u4f5c\u4e1a 20 %\uff0c\u671f\u4e2d\u8003\u8bd5\uff08\u5185\u5bb9\u4e3aC++\u8bed\u8a00) 25 %\uff0c\u671f\u672b\u8003\u8bd5\uff08\u5185\u5bb9\u4e3a\u5728\u7ebf\u63d0\u4ea4\u7684\u7f16\u7a0b\u9898) \u00a030 %\u3002POJ\u4f5c\u4e1a\u5728\u7a0b\u5e8f\u81ea\u52a8\u8bc4\u6d4b\u7f51\u7ad9\u53d1\u5e03\uff1ahttp://cxsjsx.openjudge.cn/\u8bfe\u7a0b\u53c2\u4e0e\u505a\u5f97\u7279\u522b\u597d\u7684\u540c\u5b66\uff0c\u9664\u4e86\u83b7\u5f97\u8bfe\u7a0b\u53c2\u4e0e\u90e8\u5206\u53ef\u5f97\u6ee1\u5206\uff0c\u8fd8\u53ef\u4ee5\u53e6\u5916\u83b7\u5f971-5\u5206\u603b\u5206\u52a0\u5206\u3002",
        "desc_html": "\u8bfe\u7a0b\u4ecb\u7ecd\u89c6\u9891\u53ef\u4ee5\u8bbf\u95ee[\u8fd9\u91cc](http://video.study.163.com/edu-\nvideo/nos/mp4/2014/01/22/331991_hd.mp4 )\u3002  \n  \n\u5728\u5317\u4eac\u5927\u5b66\u4fe1\u606f\u79d1\u5b66\u6280\u672f\u5b66\u9662\uff0c\u672c\u79d1\u751f\u7a0b\u5e8f\u8bbe\u8ba1\u7c7b\u57fa\u7840\u8bfe\u7a0b\u4f53\u7cfb\u5305\u542b\u4e86\u56db\u95e8\u8bfe\uff0c\u6309\u4fee\u8bfe\u987a\u5e8f\u5206\u522b\u4e3a\uff1a**\u8ba1\u7b97\u6982\u8bba\u3001\u7a0b\u5e8f\u8bbe\u8ba1\u5b9e\u4e60\u3001\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u3001\u7b97\u6cd5\u5206\u6790\u4e0e\u8bbe\u8ba1**\u3002\u5176\u4e2d\n\u201c\u7a0b\u5e8f\u8bbe\u8ba1\u5b9e\u4e60\u201d\u8bfe\u7a0b\u662f\u4e00\u95e8\u8fde\u63a5\u201c\u8ba1\u7b97\u6982\u8bba\u201d\u548c\u201c\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u201d\u3001\u627f\u4e0a\u542f\u4e0b\u7684\u8bfe\u7a0b\u3002\n\n  \n\n\u8bfe\u7a0b\u7684\u4e3b\u8981\u5185\u5bb9\u4e3b\u8981\u5206\u4e3a\u4e24\u4e2a\u65b9\u9762\uff1a(1) **C++\u8bed\u8a00**\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\uff0c\u7ea6\u5360\u8bfe\u65f6\u91cf\u768465%\uff1b(2) \u57fa\u672c**\u7b97\u6cd5\u601d\u60f3**\uff0c\u7ea6\u5360\u8bfe\u65f6\u91cf\u768435%\u3002\n\n  \n\n\u5728\u7b2c\u4e00\u90e8\u5206\u4e2d\uff0c\u8bb2\u6388C++\u8bed\u8a00\u4e2d\u548c\u9762\u5411\u5bf9\u8c61\u6709\u5173\u7684\u6982\u5ff5\u548c\u8bed\u6cd5\uff0c\u5982\u7c7b\u548c\u5bf9\u8c61\u3001\u8fd0\u7b97\u7b26\u91cd\u8f7d\u3001\u7ee7\u627f\u548c\u591a\u6001\u3001\u7c7b\u6a21\u677f\u548c\u7b97\u6cd5\u6a21\u677f\u3001\u6807\u51c6\u6a21\u677f\u5e93\u7b49\u3002\u76ee\u6807\u662f\u4f7f\u5f97\u5b66\u751f\u80fd\u591f\u7528C++\u8bed\u8a00\n\uff0c\u4ee5\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u6cd5\u7f16\u5199\u53ef\u7ef4\u62a4\u6027\u3001\u53ef\u6269\u5145\u6027\u597d\u7684\uff0c\u8f83\u5927\u89c4\u6a21\u7684\u7a0b\u5e8f\uff0c\u521d\u6b65\u9886\u4f1a\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u65b9\u6cd5\u7684\u4f18\u52bf\u6240\u5728\u3002  \n  \n\n\u5728\u7b2c\u4e8c\u90e8\u5206\u4e2d\uff0c\u8bb2\u6388\u4e00\u4e9b\u57fa\u672c\u7684\u7b97\u6cd5\u601d\u60f3\uff08\u5982\u679a\u4e3e\u3001\u9012\u5f52\u3001\u641c\u7d22\u3001\u52a8\u6001\u89c4\u5212\u7b49\uff09\uff0c\u5e76\u8fdb\u884c\u5927\u91cf\u7684\u9ad8\u5f3a\u5ea6\u7684\u7f16\u7a0b\u8bad\u7ec3\u3002\u8bad\u7ec3\u7684\u65b9\u5f0f\u662f\u5728\u201c\u5728\u7ebf\u7a0b\u5e8f\u8bc4\u6d4b\u5e73\u53f0\u201d\u4e0a\u63d0\u4ea4\u7a0b\u5e8f\uff0c\u7cfb\u7edf\u7acb\u5373\n\u5224\u5b9a\u7a0b\u5e8f\u662f\u5426\u6b63\u786e\u3002\u6b64\u79cd\u5f62\u5f0f\u80fd\u591f\u6709\u6548\u4fc3\u4f7f\u5b66\u751f\u5168\u9762\u7ec6\u81f4\u5730\u601d\u8003\u95ee\u9898\uff0c\u63d0\u9ad8\u7f16\u7a0b\u7684\u51c6\u786e\u6027\uff0c\u589e\u5f3a\u7a0b\u5e8f\u67e5\u9519\u3001\u8c03\u8bd5\u7684\u80fd\u529b\u3002\u901a\u8fc7\u8bad\u7ec3\uff0c\u5b66\u751f\u80fd\u591f\u6253\u4e0b\u8f83\u4e3a\u575a\u5b9e\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\uff0c\u4e3a\u8fdb\n\u4e00\u6b65\u5b66\u4e60\u5176\u4ed6\u8ba1\u7b97\u673a\u4e13\u4e1a\u8bfe\u7a0b\uff0c\u6216\u5728\u5176\u4ed6\u4e13\u4e1a\u9886\u57df\u8fd0\u7528\u8ba1\u7b97\u673a\u7f16\u7a0b\u89e3\u51b3\u95ee\u9898\uff0c\u521b\u9020\u826f\u597d\u7684\u6761\u4ef6\u3002\n\n  \n\n\u53e6\u5916\uff0c\u672c\u8bfe\u7a0b\u5c06ACM\u56fd\u9645\u5927\u5b66\u751f\u7a0b\u5e8f\u8bbe\u8ba1\u7ade\u8d5b\u4e2d\u4e00\u4e9b\u4f18\u79c0\u7684\u57fa\u7840\u9898\u5f15\u5165\u8bfe\u7a0b\u6559\u5b66\uff0c\u589e\u52a0\u5185\u5bb9\u7684\u8da3\u5473\u6027\uff0c\u5e76\u63d0\u9ad8\u5b66\u751f\u5b66\u4e60\u7684\u79ef\u6781\u6027\u548c\u6210\u5c31\u611f\u3002\n\n## Syllabus\n\n\u7b2c1\u5468 \u4eceC\u8d70\u8fdbC++\n\n\u7b2c2\u5468 \u7c7b\u548c\u5bf9\u8c61\u521d\u63a2\n\n\u7b2c3\u5468 \u7c7b\u548c\u5bf9\u8c61\u8fdb\u9636\n\n\u7b2c4\u5468 \u8fd0\u7b97\u7b26\u91cd\u8f7d\n\n\u7b2c5\u5468 \u7ee7\u627f\u4e0e\u6d3e\u751f\n\n\u7b2c6\u5468 \u591a\u6001\u4e0e\u865a\u51fd\u6570\n\n\u7b2c7\u5468 \u8f93\u5165\u8f93\u51fa,\u6587\u4ef6\u64cd\u4f5c\u548c\u6a21\u677f\n\n\u7b2c8\u5468 \u6807\u51c6\u6a21\u677f\u5e93STL (1)\n\n\u7b2c9\u5468 \u6807\u51c6\u6a21\u677f\u5e93STL (2)\n\n\u7b2c10\u5468 \u679a\u4e3e\u7b97\u6cd5\n\n\u7b2c11\u5468 \u9012\u5f52\u7b97\u6cd5\n\n\u7b2c12\u5468 \u52a8\u6001\u89c4\u5212\u7b97\u6cd5\n\n\u7b2c13\u5468 \u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u7b97\u6cd5\n\n\u7b2c14\u5468 \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u7b97\u6cd5  \n  \n\n**\u4efb\u52a1\u5b89\u6392\uff08\u4f5c\u4e1a\u53ca\u8003\u8bd5\uff09**\n\n\u8003\u8bd5\u5206\u4e3a\u671f\u4e2d\u8003\u8bd5\u548c\u671f\u672b\u8003\u8bd5\n\n**\u8bc4\u5206\u65b9\u6848**\n\n\u8bc4\u5206\u6309\u7167\u65e5\u5e38\u4f5c\u4e1a\u7684\u5b8c\u6210\u60c5\u51b5\u548c\u671f\u4e2d\u671f\u672b\u8003\u8bd5\u7684\u7b54\u9898\u60c5\u51b5\u8fdb\u884c\u3002\u8bfe\u7a0b\u53c2\u4e0e\uff08\u5982\u8bba\u575b\u56de\u7b54\u95ee\u9898\u7b49\uff09 5 %\uff0cC++\u4f5c\u4e1a 20 % \uff0c\u5728POJ\u5728\u7ebf\u63d0\u4ea4\u7684\u7f16\u7a0b\u4f5c\u4e1a 20\n%\uff0c\u671f\u4e2d\u8003\u8bd5\uff08\u5185\u5bb9\u4e3aC++\u8bed\u8a00) 25 %\uff0c\u671f\u672b\u8003\u8bd5\uff08\u5185\u5bb9\u4e3a\u5728\u7ebf\u63d0\u4ea4\u7684\u7f16\u7a0b\u9898) \u00a030 %\u3002\n\nPOJ\u4f5c\u4e1a\u5728\u7a0b\u5e8f\u81ea\u52a8\u8bc4\u6d4b\u7f51\u7ad9\u53d1\u5e03\uff1a<http://cxsjsx.openjudge.cn/>\n\n\u8bfe\u7a0b\u53c2\u4e0e\u505a\u5f97\u7279\u522b\u597d\u7684\u540c\u5b66\uff0c\u9664\u4e86\u83b7\u5f97\u8bfe\u7a0b\u53c2\u4e0e\u90e8\u5206\u53ef\u5f97\u6ee1\u5206\uff0c\u8fd8\u53ef\u4ee5\u53e6\u5916\u83b7\u5f971-5\u5206\u603b\u5206\u52a0\u5206\u3002  \n\n",
        "name": "\u7a0b\u5e8f\u8bbe\u8ba1\u5b9e\u4e60 / Practice on Programming",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Peking University"
        ],
        "url": "https://www.coursera.org/course/pkupop",
        "video_url": ""
    },
    {
        "date": "2014-02-18",
        "desc": "Android es la plataforma libre desarrollada por Google, ampliamente utilizada en multitud de dispositivos como m\u00f3viles, tabletas, TV o sistemas empotrados. Su expansi\u00f3n ha sido expectacular, superando en la actualidad al S.O. Microsoft Windows. Tras realizar este curso conocer\u00e1s los fundamentos del desarrollo de aplicaciones en Android y podr\u00e1s realizar sencillas aplicaciones, que incluyan los aspectos m\u00e1s importantes y novedosos de esta plataforma. Incluyendo: principales elemementos del interfaz de usuario, posicionamiento, mapas, seguridad y bases de datos.",
        "desc_html": "Android es la plataforma libre desarrollada por Google, ampliamente utilizada\nen multitud de dispositivos como m\u00f3viles, tabletas, TV o sistemas empotrados.\nSu expansi\u00f3n ha sido expectacular, superando en la actualidad al S.O.\nMicrosoft Windows. Tras realizar este curso conocer\u00e1s los fundamentos del\ndesarrollo de aplicaciones en Android y podr\u00e1s realizar sencillas\naplicaciones, que incluyan los aspectos m\u00e1s importantes y novedosos de esta\nplataforma. Incluyendo: principales elemementos del interfaz de usuario,\nposicionamiento, mapas, seguridad y bases de datos.\n\n",
        "name": "Android: introducci\u00f3n a la programaci\u00f3n",
        "provider": "UPV [X]",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Universitat Polit\u00e8cnica de Val\u00e8ncia"
        ],
        "url": "http://cursointroduccionandroid.upvx.es/ficha",
        "video_url": "https://www.youtube.com/embed/nGVmgHUo7sA?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-02-17",
        "desc": "*Note - This is an Archived course*\nThis is a past/archived course. At this time, you can only explore this course in a self-paced fashion. Certain features of this course may not be active, but many people enjoy watching the videos and working with the materials. Make sure to check for reruns of this course.\nThis course gives an introduction to all major programming concepts, techniques, and paradigms in a unified framework. We cover the three main programming paradigms: functional, object-oriented, and declarative dataflow. We explain the four ways to do data abstraction and discuss the trade-offs between objects and abstract data types. We present declarative dataflow, the most useful paradigm for concurrent programming, and show how it avoids race conditions. We give a simple formal semantics for all concepts and illustrate them with practical code that runs on the accompanying open-source platform, the Mozart Programming System. This course is targeted toward people with a basic knowledge of programming. It will be most useful to beginning programming students, but the unconventional approach should be insightful even to seasoned professionals.\nTo learn more about the practical organization of the course, watch our second introductory video: http://youtu.be/M0Dlswd_hIQ\nAll required readings are available within the courseware, courtesy of The MIT Press. A print version of the course textbook, Concepts, Techniques, and Models of Computer Programming, is also available for purchase. The MIT Press is offering enrolled students a special 30% discount on books ordered directly through the publisher\u2019s website. To take advantage of this offer, please use promotion code\u00a0CTMCP30 at The MIT Press site.\nBefore, during, and after the course, check out the course's official Facebook page for announcements and discussions.\nAt the end of this course, the successful participant will be able to :\n\n\t\tSpecify problems, break them down into their basic steps, and design algorithms and abstractions to solve them\n\t\n\t\tChoose the right programming paradigm and write a program in this paradigm to solve a problem\n\t\n\t\tUse formal semantics to reason about program correctness\n\t\n\t\tWrite small concurrent programs in the deterministic dataflow paradigm",
        "desc_html": "*Note - This is an Archived course* This is a past/archived course. At this time, you can only explore this course in a self-paced fashion. Certain features of this course may not be active, but many people enjoy watching the videos and working with the materials. Make sure to check for reruns of this course. This course gives an introduction to all major programming concepts, techniques, and paradigms in a unified framework. We cover the three main programming paradigms: functional, object-oriented, and declarative dataflow. We explain the four ways to do data abstraction and discuss the trade-offs between objects and abstract data types. We present declarative dataflow, the most useful paradigm for concurrent programming, and show how it avoids race conditions. We give a simple formal semantics for all concepts and illustrate them with practical code that runs on the accompanying open-source platform, the Mozart Programming System. This course is targeted toward people with a basic knowledge of programming. It will be most useful to beginning programming students, but the unconventional approach should be insightful even to seasoned professionals. To learn more about the practical organization of the course, watch our second introductory video: http://youtu.be/M0Dlswd_hIQ All required readings are available within the courseware, courtesy of The MIT Press. A print version of the course textbook, Concepts, Techniques, and Models of Computer Programming, is also available for purchase. The MIT Press is offering enrolled students a special 30% discount on books ordered directly through the publisher\u2019s website. To take advantage of this offer, please use promotion code\u00a0CTMCP30 at The MIT Press site. Before, during, and after the course, check out the course's official Facebook page for announcements and discussions. At the end of this course, the successful participant will be able to : Specify problems, break them down into their basic steps, and design algorithms and abstractions to solve them Choose the right programming paradigm and write a program in this paradigm to solve a problem Use formal semantics to reason about program correctness Write small concurrent programs in the deterministic dataflow paradigm \n\n",
        "name": "Louv1.01x: Paradigms of Computer Programming",
        "provider": "edX",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Universit\u00e9 catholique de Louvain"
        ],
        "url": "https://www.edx.org/course/louvainx/louvainx-louv1-01x-paradigms-computer-1203",
        "video_url": "https://www.youtube.com/embed/D1q2dCNGDOE?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-02-17",
        "desc": "\u54c8\u7d22\u00b7\u666e\u62c9\u7279\u7eb3\u6559\u6388 \u8fd9\u95e8\u5728\u7ebf\u8bfe\u7a0b\u4e3b\u8981\u662f\u8bb2\u5217\u5f0f\u5185\u5b58\u6570\u636e\u5e93\u4e2d\u4f01\u4e1a\u6570\u636e\u7684\u7ba1\u7406\u3002\u4f34\u968f\u7740\u786c\u4ef6\u548c\u8f6f\u4ef6\u7684\u98de\u901f\u53d1\u5c55\uff0c\u4e00\u9879\u9769\u547d\u6027\u7684\u6280\u672f\u5e94\u8fd0\u800c\u751f\uff0c\u4eba\u4eec\u4ece\u6b64\u53ef\u4ee5\u5728\u77ac\u95f4\u4ece\u591a\u4e2a\u89d2\u5ea6\u5206\u6790\u6d77\u91cf\u7684\u4f01\u4e1a\u6570\u636e\u3002\u672c\u8bfe\u7a0b\u5c06\u5bf9\u8be5\u6280\u672f\u7684\u57fa\u672c\u6982\u5ff5\u548c\u8bbe\u8ba1\u539f\u7406\u8fdb\u884c\u8be6\u7ec6\u8bb2\u89e3\u3002\u4e0d\u4ec5\u5982\u6b64\uff0c\u6211\u4eec\u8fd8\u5c06\u63a2\u8ba8\u672a\u6765\u4f01\u4e1a\u5e94\u7528\u7684\u57fa\u672c\u8bbe\u8ba1\u539f\u7406\u53ca\u53d1\u5c55\u65b9\u5411\u3002\u5f53\u4f60\u4ece\u4f20\u7edf\u7684\u884c\u5f0f\u786c\u76d8\u6570\u636e\u5e93\u8fc1\u79fb\u5230\u5217\u5f0f\u5185\u5b58\u6570\u636e\u5e93\u65f6\uff0c\u4f60\u4f1a\u53d1\u73b0\uff0c\u5f88\u591a\u4e0d\u53ef\u80fd\u7684\u4e8b\u90fd\u5c06\u53d8\u6210\u73b0\u5b9e",
        "desc_html": "\u54c8\u7d22\u00b7\u666e\u62c9\u7279\u7eb3\u6559\u6388 \u8fd9\u95e8\u5728\u7ebf\u8bfe\u7a0b\u4e3b\u8981\u662f\u8bb2\u5217\u5f0f\u5185\u5b58\u6570\u636e\u5e93\u4e2d\u4f01\u4e1a\u6570\u636e\u7684\u7ba1\u7406\u3002\u4f34\u968f\u7740\u786c\u4ef6\u548c\u8f6f\u4ef6\u7684\u98de\u901f\u53d1\u5c55\uff0c\u4e00\u9879\u9769\u547d\u6027\u7684\u6280\u672f\u5e94\u8fd0\u800c\u751f\uff0c\u4eba\u4eec\u4ece\u6b64\u53ef\u4ee5\u5728\u77ac\u95f4\u4ece\u591a\u4e2a\u89d2\u5ea6\u5206\n\u6790\u6d77\u91cf\u7684\u4f01\u4e1a\u6570\u636e\u3002\u672c\u8bfe\u7a0b\u5c06\u5bf9\u8be5\u6280\u672f\u7684\u57fa\u672c\u6982\u5ff5\u548c\u8bbe\u8ba1\u539f\u7406\u8fdb\u884c\u8be6\u7ec6\u8bb2\u89e3\u3002\u4e0d\u4ec5\u5982\u6b64\uff0c\u6211\u4eec\u8fd8\u5c06\u63a2\u8ba8\u672a\u6765\u4f01\u4e1a\u5e94\u7528\u7684\u57fa\u672c\u8bbe\u8ba1\u539f\u7406\u53ca\u53d1\u5c55\u65b9\u5411\u3002\u5f53\u4f60\u4ece\u4f20\u7edf\u7684\u884c\u5f0f\u786c\u76d8\u6570\u636e\u5e93\u8fc1\n\u79fb\u5230\u5217\u5f0f\u5185\u5b58\u6570\u636e\u5e93\u65f6\uff0c\u4f60\u4f1a\u53d1\u73b0\uff0c\u5f88\u591a\u4e0d\u53ef\u80fd\u7684\u4e8b\u90fd\u5c06\u53d8\u6210\u73b0\u5b9e\n\n",
        "name": "\u5185\u5b58\u6570\u636e\u5e93\u7ba1\u7406",
        "provider": "openHPI",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://openhpi.cn/course/inmemorydatabases-2014",
        "video_url": ""
    },
    {
        "date": "2014-02-15",
        "desc": "\u0641\u064a \u0647\u0630\u0647 \u0627\u0644\u0645\u0627\u062f\u0629 \u0627\u0644\u062a\u0641\u0627\u0639\u0644\u064a\u0629 \u0633\u0646\u0623\u062e\u0630\u0643 \u0645\u0646 \u0646\u0642\u0637\u0629 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0641\u064a \u0645\u062c\u0627\u0644 \u0628\u0631\u0645\u062c\u0629 \u0648 \u062a\u0635\u0645\u064a\u0645 \u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a \u0625\u0644\u0649 \u0645\u0631\u062d\u0644\u0629 \u062a\u0643\u0648\u0646 \u0642\u0627\u062f\u0631 \u0641\u064a\u0647\u0627 \u0639\u0644\u0649 \u062a\u0635\u0645\u064a\u0645 \u0645\u0648\u0642\u0639 \u0628\u0633\u064a\u0637 \u062e\u0627\u0635 \u0628\u0643 \u0645\u0631\u062a\u0628\u0637 \u0628\u0642\u0627\u0639\u062f\u0629 \u0628\u064a\u0627\u0646\u0627\u062a. \u0633\u0646\u0642\u0648\u0645 \u0628\u062a\u0639\u0631\u064a\u0641\u0643 \u0628\u0639\u062f\u062f \u0643\u0628\u064a\u0631 \u0645\u0646 \u0627\u0644\u062a\u0642\u0646\u064a\u0627\u062a \u0627\u0644\u0645\u062e\u062a\u0644\u0641\u0629 \u0627\u0644\u062a\u064a \u0633\u062a\u062c\u0639\u0644 \u0631\u062d\u0644\u062a\u0643 \u062a\u062c\u0627\u0647 \u0627\u0644\u0625\u062d\u062a\u0631\u0627\u0641 \u0623\u0633\u0647\u0644.\u0633\u0646\u0628\u062f\u0623 \u0645\u0639\u0643 \u0628\u0627\u0633\u062a\u0639\u0631\u0627\u0636 \u0623\u0633\u0627\u0633\u064a\u0627\u062a \u0627\u0644\u0623\u0633\u0627\u0633\u064a\u0627\u062a\u060c \u0639\u0644\u0649 \u0633\u0628\u064a\u0644 \u0627\u0644\u0645\u062b\u0627\u0644 \u0633\u0646\u062e\u0628\u0631\u0643 \u0644\u0645\u0627\u0630\u0627 \u064a\u062c\u0628 \u0623\u0646 \u062a\u0633\u062a\u062e\u062f\u0645 \u0645\u0627\u064a\u0633\u0645\u0649 \u0628\u0645\u062d\u0631\u0631 \u0646\u0635\u0648\u0635 \u0644\u0643\u062a\u0627\u0628\u0629 \u0623\u0643\u0648\u0627\u062f\u0643 \u0627\u0644\u0628\u0631\u0645\u062c\u064a\u0629\u060c \u0648 \u0633\u0646\u0631\u064a\u0643 \u0643\u064a\u0641 \u064a\u0645\u0643\u0646 \u0627\u0646 \u062a\u062c\u0639\u0644 \u062c\u0647\u0627\u0632 \u0643\u0645\u0628\u064a\u0648\u062a\u0631 \u0633\u064a\u0631\u0641\u0631 \u0648 \u0645\u0646\u0635\u0629 \u0628\u0631\u0645\u062c\u064a\u0629\u060c \u062b\u0645 \u0633\u0646\u0631\u064a\u0643 \u0643\u064a\u0641 \u062a\u0623\u062e\u0630 \u0645\u0648\u0642\u0639 \u0625\u0644\u0649 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a \u0644\u064a\u0631\u0627\u0647 \u0643\u0644 \u0627\u0644\u0639\u0627\u0644\u0645.",
        "desc_html": "\u0641\u064a \u0647\u0630\u0647 \u0627\u0644\u0645\u0627\u062f\u0629 \u0627\u0644\u062a\u0641\u0627\u0639\u0644\u064a\u0629 \u0633\u0646\u0623\u062e\u0630\u0643 \u0645\u0646 \u0646\u0642\u0637\u0629 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0641\u064a \u0645\u062c\u0627\u0644 \u0628\u0631\u0645\u062c\u0629 \u0648 \u062a\u0635\u0645\u064a\u0645 \u0645\u0648\u0627\u0642\u0639\n\u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a \u0625\u0644\u0649 \u0645\u0631\u062d\u0644\u0629 \u062a\u0643\u0648\u0646 \u0642\u0627\u062f\u0631 \u0641\u064a\u0647\u0627 \u0639\u0644\u0649 \u062a\u0635\u0645\u064a\u0645 \u0645\u0648\u0642\u0639 \u0628\u0633\u064a\u0637 \u062e\u0627\u0635 \u0628\u0643 \u0645\u0631\u062a\u0628\u0637 \u0628\u0642\u0627\u0639\u062f\u0629\n\u0628\u064a\u0627\u0646\u0627\u062a. \u0633\u0646\u0642\u0648\u0645 \u0628\u062a\u0639\u0631\u064a\u0641\u0643 \u0628\u0639\u062f\u062f \u0643\u0628\u064a\u0631 \u0645\u0646 \u0627\u0644\u062a\u0642\u0646\u064a\u0627\u062a \u0627\u0644\u0645\u062e\u062a\u0644\u0641\u0629 \u0627\u0644\u062a\u064a \u0633\u062a\u062c\u0639\u0644 \u0631\u062d\u0644\u062a\u0643 \u062a\u062c\u0627\u0647\n\u0627\u0644\u0625\u062d\u062a\u0631\u0627\u0641 \u0623\u0633\u0647\u0644.  \n  \n  \n  \n\u0633\u0646\u0628\u062f\u0623 \u0645\u0639\u0643 \u0628\u0627\u0633\u062a\u0639\u0631\u0627\u0636 \u0623\u0633\u0627\u0633\u064a\u0627\u062a \u0627\u0644\u0623\u0633\u0627\u0633\u064a\u0627\u062a\u060c \u0639\u0644\u0649 \u0633\u0628\u064a\u0644 \u0627\u0644\u0645\u062b\u0627\u0644 \u0633\u0646\u062e\u0628\u0631\u0643 \u0644\u0645\u0627\u0630\u0627 \u064a\u062c\u0628 \u0623\u0646\n\u062a\u0633\u062a\u062e\u062f\u0645 \u0645\u0627\u064a\u0633\u0645\u0649 \u0628\u0645\u062d\u0631\u0631 \u0646\u0635\u0648\u0635 \u0644\u0643\u062a\u0627\u0628\u0629 \u0623\u0643\u0648\u0627\u062f\u0643 \u0627\u0644\u0628\u0631\u0645\u062c\u064a\u0629\u060c \u0648 \u0633\u0646\u0631\u064a\u0643 \u0643\u064a\u0641 \u064a\u0645\u0643\u0646 \u0627\u0646 \u062a\u062c\u0639\u0644 \u062c\u0647\u0627\u0632\n\u0643\u0645\u0628\u064a\u0648\u062a\u0631 \u0633\u064a\u0631\u0641\u0631 \u0648 \u0645\u0646\u0635\u0629 \u0628\u0631\u0645\u062c\u064a\u0629\u060c \u062b\u0645 \u0633\u0646\u0631\u064a\u0643 \u0643\u064a\u0641 \u062a\u0623\u062e\u0630 \u0645\u0648\u0642\u0639 \u0625\u0644\u0649 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a \u0644\u064a\u0631\u0627\u0647 \u0643\u0644\n\u0627\u0644\u0639\u0627\u0644\u0645.\n\n",
        "name": "\u0645\u062f\u062e\u0644 \u0625\u0644\u0649 \u0628\u0631\u0645\u062c\u0629 \u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0644\u063a\u0629 Ruby",
        "provider": "Rwaq (\u0631\u0648\u0627\u0642)",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "http://www.rwaq.org/courses/introduction-to-web-development",
        "video_url": "https://www.youtube.com/embed/O-JEWXuGtoM?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-02-14",
        "desc": "*Note - This is an Archived course*This is a past/archived course. At this time, you can only explore this course in a self-paced fashion. Certain features of this course may not be active, but many people enjoy watching the videos and working with the materials. Make sure to check for reruns of this course.Robots are rapidly evolving from factory workhorses, which are physically bound to their work-cells, to increasingly complex machines capable of performing challenging tasks in our daily environment. The objective of this course is to provide the basic concepts and algorithms required to develop mobile robots that act autonomously in complex environments. The main emphasis is put on mobile robot locomotion and kinematics, environment perception, probabilistic map based localization and mapping, and motion planning.This lecture closely follows the textbook Introduction to Autonomous Mobile Robots by Roland Siegwart, Illah Nourbakhsh, Davide Scaramuzza, The MIT Press, second edition 2011All required readings are available within the courseware, courtesy of The MIT Press. A print version of the course textbook, Introduction to Autonomous Mobile Robots, is also available for purchase. The MIT Press is offering enrolled students a special 30% discount on books ordered directly through the publisher\u2019s website. To take advantage of this offer, please use promotion code IAMR30 at The MIT Press site.",
        "desc_html": "*Note - This is an Archived course*  \n  \nThis is a past/archived course. At this time, you can only explore this course\nin a self-paced fashion. Certain features of this course may not be active,\nbut many people enjoy watching the videos and working with the materials. Make\nsure to check for reruns of this course.  \n  \nRobots are rapidly evolving from factory workhorses, which are physically\nbound to their work-cells, to increasingly complex machines capable of\nperforming challenging tasks in our daily environment. The objective of this\ncourse is to provide the basic concepts and algorithms required to develop\nmobile robots that act autonomously in complex environments. The main emphasis\nis put on mobile robot locomotion and kinematics, environment perception,\nprobabilistic map based localization and mapping, and motion planning.  \n  \nThis lecture closely follows the textbook Introduction to Autonomous Mobile\nRobots by Roland Siegwart, Illah Nourbakhsh, Davide Scaramuzza, The MIT Press,\nsecond edition 2011  \n  \nAll required readings are available within the courseware, courtesy of The MIT\nPress. A print version of the course textbook, Introduction to Autonomous\nMobile Robots, is also available for purchase. The MIT Press is offering\nenrolled students a special 30% discount on books ordered directly through the\npublisher\u2019s website. To take advantage of this offer, please use promotion\ncode IAMR30 at The MIT Press site.\n\n",
        "name": "AMRx: Autonomous Mobile Robots",
        "provider": "edX",
        "rating": "2.5",
        "reviews": "2",
        "university": [
            "ETH Zurich"
        ],
        "url": "https://www.edx.org/course/autonomous-mobile-robots-ethx-amrx",
        "video_url": "https://www.youtube.com/embed/RyMzGMpLpjk?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-02-10",
        "desc": "In diesem Kurs werden Sie Schritt f\u00fcr Schritt in die Entwicklung von Windows Store Apps eingewiesen. Der Kurs verbindet dabei allgemeines theoretisches Wissen von Hochschulreferenten mit konkretem Praxiswissen und setzt auf ein instruktionsorientiertes Kurscurriculum mit hohem Interaktionsanteil zwischen den Teilnehmern und \u00dcbungen zur Programmierung.Die Teilnehmer sind nach 8 Wochen in der Lage, eine eigene Microsoft Store App zu entwickeln und zu publizieren.",
        "desc_html": "In diesem Kurs werden Sie Schritt f\u00fcr Schritt in die Entwicklung von Windows\nStore Apps eingewiesen. Der Kurs verbindet dabei allgemeines theoretisches\nWissen von Hochschulreferenten mit konkretem Praxiswissen und setzt auf ein\ninstruktionsorientiertes Kurscurriculum mit hohem Interaktionsanteil zwischen\nden Teilnehmern und \u00dcbungen zur Programmierung.  \nDie Teilnehmer sind nach 8 Wochen in der Lage, eine eigene Microsoft Store App\nzu entwickeln und zu publizieren.\n\n",
        "name": "How to create a Windows 8 App",
        "provider": "OpenCourseWorld",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Microsoft Deutschland GmbH"
        ],
        "url": "http://www.opencourseworld.de/pages/coursedescription.jsf?courseId=487693",
        "video_url": ""
    },
    {
        "date": "2014-02-05",
        "desc": "The Introduction to Data Science class will survey the foundational topics in data science, namely:Data ManipulationData Analysis with Statistics and Machine LearningData Communication with Information VisualizationData at Scale -- Working with Big DataThe class will focus on breadth and present the topics briefly instead of focusing on a single topic in depth. This will give you the opportunity to sample and apply the basic techniques of data science.Why Take This Course?You will have an opportunity to work through a data science project end to end, from analyzing a dataset to visualizing and communicating your data analysis.Through working on the class project, you will be exposed to and understand the skills that are needed to become a data scientist yourself.Prerequisites and RequirementsThe ideal students for this class are prepared individuals who have:Strong interest in data scienceBackground in intro level statisticsPython programming experienceOr understanding of programming concepts such as variables, functions, loops, and basic python data structures like lists and dictionariesIf you need to brush up on your programming, we highly recommend&nbsp;Introduction to Computer Science: Building a Search Engine. If you need a refresher on statistics, enroll in&nbsp;Statistics: The Science of Decisions. Both classes are on Udacity!See the&nbsp;Technology Requirements&nbsp;for using UdacityWhat Will I Learn?ProjectsUse statistical analysis, machine learning, and MapReduce to discover interesting patterns and trends about the New York Subway.SyllabusLesson 1: Introduction to Data ScienceIntroduction to Data ScienceWhat is a Data ScientistPi-Chaun (Data Scientist @ Google): What is Data Science?Gabor (Data Scientist @ Twitter): What is Data Science?Problems Solved by Data SciencePandasDataframesCreate a New DataframeLesson 2: Data WranglingWhat is Data Wrangling?Acquiring DataCommon Data FormatsWhat are Relational Databases?Aadhaar DataAadhaar Data and Relational DatabasesIntroduction to Databases SchemasAPI&rsquo;sData in JSON FormatHow to Access an API efficientlyMissing ValuesEasy ImputationImpute using Linear RegressionTip of the Imputation IcebergLesson 3: Data AnalysisStatistical RigorKurt (Data Scientist @ Twitter) - Why is Stats Useful?Introduction to Normal DistributionT TestWelch T TestNon-Parametric TestsNon-Normal DataStats vs. Machine LearningDifferent Types of Machine LearningPrediction with RegressionCost FunctionHow to Minimize Cost FunctionCoefficients of DeterminationLesson 4: Data VisualizationEffective Information VisualizationNapoleon's March on RussiaDon (Principal Data Scientist @ AT&amp;T): Communicating FindingsRishiraj (Principal Data Scientist @ AT&amp;T): Communicating Findings WellVisual EncodingsPerception of Visual CuesPlotting in PythonData ScalesVisualizing Time Series DataLesson 5: MapReduceBig Data and MapReduceBasics of MapReduceMapperReducerMapReduce with Aadhaar DataMapReduce EcosystemJoshua (Data Scientist @ Twitter): MapReduce Tools, PigMapReduce with Subway Data",
        "desc_html": "The Introduction to Data Science class will survey the foundational topics in\ndata science, namely:\n\n  * Data Manipulation\n  * Data Analysis with Statistics and Machine Learning\n  * Data Communication with Information Visualization\n  * Data at Scale -- Working with Big Data\n\n  \nThe class will focus on breadth and present the topics briefly instead of\nfocusing on a single topic in depth. This will give you the opportunity to\nsample and apply the basic techniques of data science.\n\n**Why Take This Course?**\n\nYou will have an opportunity to work through a data science project end to\nend, from analyzing a dataset to visualizing and communicating your data\nanalysis.\n\nThrough working on the class project, you will be exposed to and understand\nthe skills that are needed to become a data scientist yourself.\n\n**Prerequisites and Requirements**\n\nThe ideal students for this class are prepared individuals who have:\n\n  * Strong interest in data science\n  * Background in intro level statistics\n  * Python programming experience\n  * Or understanding of programming concepts such as variables, functions, loops, and basic python data structures like lists and dictionaries\n\n  \nIf you need to brush up on your programming, we highly recommend [Introduction\nto Computer Science: Building a Search\nEngine](https://www.udacity.com/course/cs101). If you need a refresher on\nstatistics, enroll in [Statistics: The Science of\nDecisions](https://www.udacity.com/course/st095). Both classes are on Udacity!\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n**What Will I Learn?** **Projects**\n\nUse statistical analysis, machine learning, and MapReduce to discover\ninteresting patterns and trends about the New York Subway.\n\n## Syllabus\n\n**Lesson 1: Introduction to Data Science**\n\n  * Introduction to Data Science\n  * What is a Data Scientist\n  * Pi-Chaun (Data Scientist @ Google): What is Data Science?\n  * Gabor (Data Scientist @ Twitter): What is Data Science?\n  * Problems Solved by Data Science\n  * Pandas\n  * Dataframes\n  * Create a New Dataframe\n**Lesson 2: Data Wrangling**\n\n  * What is Data Wrangling?\n  * Acquiring Data\n  * Common Data Formats\n  * What are Relational Databases?\n  * Aadhaar Data\n  * Aadhaar Data and Relational Databases\n  * Introduction to Databases Schemas\n  * API's\n  * Data in JSON Format\n  * How to Access an API efficiently\n  * Missing Values\n  * Easy Imputation\n  * Impute using Linear Regression\n  * Tip of the Imputation Iceberg\n**Lesson 3: Data Analysis**\n\n  * Statistical Rigor\n  * Kurt (Data Scientist @ Twitter) - Why is Stats Useful?\n  * Introduction to Normal Distribution\n  * T Test\n  * Welch T Test\n  * Non-Parametric Tests\n  * Non-Normal Data\n  * Stats vs. Machine Learning\n  * Different Types of Machine Learning\n  * Prediction with Regression\n  * Cost Function\n  * How to Minimize Cost Function\n  * Coefficients of Determination\n**Lesson 4: Data Visualization**\n\n  * Effective Information Visualization\n  * Napoleon's March on Russia\n  * Don (Principal Data Scientist @ AT&T): Communicating Findings\n  * Rishiraj (Principal Data Scientist @ AT&T): Communicating Findings Well\n  * Visual Encodings\n  * Perception of Visual Cues\n  * Plotting in Python\n  * Data Scales\n  * Visualizing Time Series Data\n**Lesson 5: MapReduce**\n\n  * Big Data and MapReduce\n  * Basics of MapReduce\n  * Mapper\n  * Reducer\n  * MapReduce with Aadhaar Data\n  * MapReduce Ecosystem\n  * Joshua (Data Scientist @ Twitter): MapReduce Tools, Pig\n  * MapReduce with Subway Data\n\n",
        "name": "Intro to Data Science",
        "provider": "Udacity",
        "rating": "4",
        "reviews": "2",
        "university": [],
        "url": "https://www.udacity.com/course/ud359",
        "video_url": "https://www.youtube.com/embed/ZB38GB4EF7s?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-02-01",
        "desc": "\u0645\u0627\u062a\u0644\u0627\u0628 \u0647\u064a \u0625\u062d\u062f\u0649 \u0627\u0644\u0644\u063a\u0627\u062a \u0627\u0644\u062a\u064a \u064a\u0633\u062a\u062e\u062f\u0645\u0647\u0627 \u0627\u0644\u0645\u0647\u0646\u062f\u0633\u0648\u0646 \u0648\u0627\u0644\u0639\u0644\u0645\u0627\u0621 \u0644\u0625\u0646\u0634\u0627\u0621 \u0628\u0631\u0627\u0645\u062c \u0644\u0644\u062d\u0633\u0627\u0628\u0627\u062a \u0627\u0644\u0647\u0646\u062f\u0633\u064a\u0629 \u0648\u0627\u0644\u0639\u0644\u0645\u064a\u0629. \u064a\u0633\u0645\u062d \u0645\u0627\u062a\u0644\u0627\u0628 \u0628\u062a\u062d\u0644\u064a\u0644 \u0643\u0645\u064a\u0627\u062a \u0643\u0628\u064a\u0631\u0629 \u0645\u0646 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0628\u0643\u0641\u0627\u0621\u0629 \u0639\u0627\u0644\u064a\u0629.\u0641\u064a \u0647\u0630\u0647 \u0627\u0644\u0645\u0627\u062f\u0629 \u060c \u064a\u062a\u0645 \u0634\u0631\u062d \u0643\u064a\u0641\u064a\u0629 \u0627\u0644\u0625\u0633\u062a\u0641\u0627\u062f\u0629 \u0628\u0644\u063a\u0629 \u0627\u0644\u0645\u0627\u062a\u0644\u0627\u0628 \u062d\u062a\u0649 \u064a\u0635\u0628\u062d \u0644\u0644\u0637\u0627\u0644\u0628 \u0642\u062f\u0631\u0629 \u0639\u0644\u0649 \u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0628\u0627\u0631\u062a\u064a\u0627\u062d \u0645\u0639 \u0627\u0644\u0628\u0631\u0645\u062c\u0629 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0644\u063a\u0629.\u064a\u062d\u062a\u0648\u064a \u0627\u0644\u0645\u0646\u0647\u062c \u0639\u0644\u0649:\u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0644\u0645\u062a\u063a\u064a\u0631\u0627\u062a variables\u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u0645\u0635\u0641\u0648\u0641\u0627\u062a Martix operations\u0639\u0645\u0644 \u0627\u0644\u062f\u0648\u0627\u0644 functions\u0639\u0645\u0644 \u0631\u0633\u0648\u0645\u0627\u062a \u0628\u064a\u0627\u0646\u064a\u0629\u0628\u0646\u0627\u0621 \u0628\u0631\u0627\u0645\u062c \u062a\u0641\u0627\u0639\u0644\u064a\u0629\u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0635\u0646\u0627\u062f\u064a\u0642 \u0627\u0644\u0623\u062f\u0648\u0627\u062a \u0627\u0644\u0645\u062e\u062a\u0644\u0641\u0629",
        "desc_html": "\u0645\u0627\u062a\u0644\u0627\u0628 \u0647\u064a \u0625\u062d\u062f\u0649 \u0627\u0644\u0644\u063a\u0627\u062a \u0627\u0644\u062a\u064a \u064a\u0633\u062a\u062e\u062f\u0645\u0647\u0627 \u0627\u0644\u0645\u0647\u0646\u062f\u0633\u0648\u0646 \u0648\u0627\u0644\u0639\u0644\u0645\u0627\u0621 \u0644\u0625\u0646\u0634\u0627\u0621 \u0628\u0631\u0627\u0645\u062c \u0644\u0644\u062d\u0633\u0627\u0628\u0627\u062a\n\u0627\u0644\u0647\u0646\u062f\u0633\u064a\u0629 \u0648\u0627\u0644\u0639\u0644\u0645\u064a\u0629. \u064a\u0633\u0645\u062d \u0645\u0627\u062a\u0644\u0627\u0628 \u0628\u062a\u062d\u0644\u064a\u0644 \u0643\u0645\u064a\u0627\u062a \u0643\u0628\u064a\u0631\u0629 \u0645\u0646 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0628\u0643\u0641\u0627\u0621\u0629 \u0639\u0627\u0644\u064a\u0629.\n\n  \n  \n\n\u0641\u064a \u0647\u0630\u0647 \u0627\u0644\u0645\u0627\u062f\u0629 \u060c \u064a\u062a\u0645 \u0634\u0631\u062d \u0643\u064a\u0641\u064a\u0629 \u0627\u0644\u0625\u0633\u062a\u0641\u0627\u062f\u0629 \u0628\u0644\u063a\u0629 \u0627\u0644\u0645\u0627\u062a\u0644\u0627\u0628 \u062d\u062a\u0649 \u064a\u0635\u0628\u062d \u0644\u0644\u0637\u0627\u0644\u0628 \u0642\u062f\u0631\u0629 \u0639\u0644\u0649\n\u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0628\u0627\u0631\u062a\u064a\u0627\u062d \u0645\u0639 \u0627\u0644\u0628\u0631\u0645\u062c\u0629 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0644\u063a\u0629.\n\n  \n  \n\n\u064a\u062d\u062a\u0648\u064a \u0627\u0644\u0645\u0646\u0647\u062c \u0639\u0644\u0649:\n\n  \n  \n\n  \n\n  * \u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0627\u0644\u0645\u062a\u063a\u064a\u0631\u0627\u062a variables\n  \n\n  * \u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u0645\u0635\u0641\u0648\u0641\u0627\u062a Martix operations\n  \n\n  * \u0639\u0645\u0644 \u0627\u0644\u062f\u0648\u0627\u0644 functions\n  \n\n  * \u0639\u0645\u0644 \u0631\u0633\u0648\u0645\u0627\u062a \u0628\u064a\u0627\u0646\u064a\u0629\n  \n\n  * \u0628\u0646\u0627\u0621 \u0628\u0631\u0627\u0645\u062c \u062a\u0641\u0627\u0639\u0644\u064a\u0629\n  \n\n  * \u0627\u0644\u062a\u0639\u0627\u0645\u0644 \u0645\u0639 \u0635\u0646\u0627\u062f\u064a\u0642 \u0627\u0644\u0623\u062f\u0648\u0627\u062a \u0627\u0644\u0645\u062e\u062a\u0644\u0641\u0629\n  \n\n",
        "name": "\u0627\u0644\u0628\u0631\u0645\u062c\u0629 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0627\u062a\u0644\u0627\u0628 MATLAB",
        "provider": "Rwaq (\u0631\u0648\u0627\u0642)",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "http://www.rwaq.org/courses/programming-with-matlab",
        "video_url": "https://www.youtube.com/embed/FjM45QVpW8I?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-01-31",
        "desc": "Learn how to program all the major systems of a robotic car from the leader of Google and Stanford's autonomous driving teams. This class will teach you basic methods in Artificial Intelligence, including: probabilistic inference, planning and search, localization, tracking and control, all with a focus on robotics. Extensive programming examples and assignments will apply these methods in the context of building self-driving cars.This course is offered as part of the Georgia Tech Masters in Computer Science. The updated course includes a final project, where you must chase a runaway robot that is trying to escape!Why Take This Course?This course will teach you probabilistic inference, planning and search, localization, tracking and control, all with a focus on robotics.At the end of the course, you will leverage what you learned by solving the problem of a runaway robot that you must chase and hunt down!Prerequisites and RequirementsSuccess in this course requires some programming experience and some mathematical fluency.Programming in this course is done in Python. We will use some basic object-oriented concepts to model robot motion and perception. If you don&rsquo;t know Python but have experience with another language, you should be able to pick up the syntax fairly quickly. If you have no programming experience, you should consider taking Udacity&rsquo;s&nbsp;Introduction to Computer Science&nbsp;course before attempting this one.The math used will be centered on probability and linear algebra. You don&rsquo;t need to be an expert in either, but some familiarity with concepts in probability (e.g. probabilities must add to one, conditional probability, and Bayes&rsquo; rule) will be extremely helpful. It is possible to learn these concepts during the course, but it will take more work. Knowledge of linear algebra, while helpful, is not required.See the&nbsp;Technology Requirements&nbsp;for using Udacity.SyllabusLesson 1: LocalizationLocalizationTotal ProbabilityUniform DistributionProbability After SenseNormalize DistributionPhit and PmissSum of ProbabilitiesSense FunctionExact MotionMove FunctionBayes RuleTheorem of Total ProbabilityLesson 2: Kalman FiltersGaussian IntroVariance ComparisonMaximize GaussianMeasurement and MotionParameter UpdateNew Mean VarianceGaussian MotionKalman Filter CodeKalman PredictionKalman Filter DesignKalman MatricesLesson 3: Particle FiltersSlate SpaceBelief ModalityParticle FiltersUsing Robot ClassRobot WorldRobot ParticlesLesson 4: SearchMotion PlanningCompute CostOptimal PathFirst Search ProgramExpansion GridDynamic ProgrammingComputing ValueOptimal PolicyLesson 5: PID ControlRobot MotionSmoothing AlgorithmPath SmoothingZero Data WeightPid ControlProportional ControlImplement P ControllerOscillationsPd ControllerSystematic BiasPid ImplementationParameter OptimizationLesson 6: SLAM (Simultaneous Localization and Mapping)LocalizationPlanningSegmented SteFun with ParametersSLAMGraph SLAMImplementing ConstraintsAdding LandmarksMatrix ModificationUntouched FieldsLandmark PositionConfident MeasurementsImplementing SLAMRunaway Robot Final Project",
        "desc_html": "Learn how to program all the major systems of a robotic car from the leader of\nGoogle and Stanford's autonomous driving teams. This class will teach you\nbasic methods in Artificial Intelligence, including: probabilistic inference,\nplanning and search, localization, tracking and control, all with a focus on\nrobotics. Extensive programming examples and assignments will apply these\nmethods in the context of building self-driving cars.\n\nThis course is offered as part of the Georgia Tech Masters in Computer\nScience. The updated course includes a final project, where you must chase a\nrunaway robot that is trying to escape!\n\n**Why Take This Course?**\n\nThis course will teach you probabilistic inference, planning and search,\nlocalization, tracking and control, all with a focus on robotics.\n\nAt the end of the course, you will leverage what you learned by solving the\nproblem of a runaway robot that you must chase and hunt down!\n\n**Prerequisites and Requirements**\n\nSuccess in this course requires some programming experience and some\nmathematical fluency.\n\nProgramming in this course is done in Python. We will use some basic object-\noriented concepts to model robot motion and perception. If you don't know\nPython but have experience with another language, you should be able to pick\nup the syntax fairly quickly. If you have no programming experience, you\nshould consider taking Udacity's [Introduction to Computer\nScience](https://www.udacity.com/course/cs101) course before attempting this\none.\n\nThe math used will be centered on probability and linear algebra. You don't\nneed to be an expert in either, but some familiarity with concepts in\nprobability (e.g. probabilities must add to one, conditional probability, and\nBayes' rule) will be extremely helpful. It is possible to learn these concepts\nduring the course, but it will take more work. Knowledge of linear algebra,\nwhile helpful, is not required.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity.\n\n## Syllabus\n\n**Lesson 1: Localization**\n\n  * Localization\n  * Total Probability\n  * Uniform Distribution\n  * Probability After Sense\n  * Normalize Distribution\n  * Phit and Pmiss\n  * Sum of Probabilities\n  * Sense Function\n  * Exact Motion\n  * Move Function\n  * Bayes Rule\n  * Theorem of Total Probability\n**Lesson 2: Kalman Filters**\n\n  * Gaussian Intro\n  * Variance Comparison\n  * Maximize Gaussian\n  * Measurement and Motion\n  * Parameter Update\n  * New Mean Variance\n  * Gaussian Motion\n  * Kalman Filter Code\n  * Kalman Prediction\n  * Kalman Filter Design\n  * Kalman Matrices\n**Lesson 3: Particle Filters**\n\n  * Slate Space\n  * Belief Modality\n  * Particle Filters\n  * Using Robot Class\n  * Robot World\n  * Robot Particles\n**Lesson 4: Search**\n\n  * Motion Planning\n  * Compute Cost\n  * Optimal Path\n  * First Search Program\n  * Expansion Grid\n  * Dynamic Programming\n  * Computing Value\n  * Optimal Policy\n**Lesson 5: PID Control**\n\n  * Robot Motion\n  * Smoothing Algorithm\n  * Path Smoothing\n  * Zero Data Weight\n  * Pid Control\n  * Proportional Control\n  * Implement P Controller\n  * Oscillations\n  * Pd Controller\n  * Systematic Bias\n  * Pid Implementation\n  * Parameter Optimization\n**Lesson 6: SLAM (Simultaneous Localization and Mapping)**\n\n  * Localization\n  * Planning\n  * Segmented Ste\n  * Fun with Parameters\n  * SLAM\n  * Graph SLAM\n  * Implementing Constraints\n  * Adding Landmarks\n  * Matrix Modification\n  * Untouched Fields\n  * Landmark Position\n  * Confident Measurements\n  * Implementing SLAM\n**Runaway Robot Final Project**\n\n",
        "name": "CS 8802, Artificial Intelligence for Robotics: Programming a Robotic Car",
        "provider": "Udacity",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Stanford University"
        ],
        "url": "https://www.udacity.com/course/cs373",
        "video_url": "https://www.youtube.com/embed/g-fk3RQiw5Q?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-01-27",
        "desc": "Ce MOOC fait partie de la collection de MOOC \u00ab Comp\u00e9tences num\u00e9riques et C2i \u00bb. Les 4 premiers MOOCs de cette collection ouvrent en 2014 et permettent de se former aux comp\u00e9tences du C2i niveau 1.Avant-hier, l'ordinateur a transform\u00e9 notre fa\u00e7on de travailler de mani\u00e8re individuelle.Hier, les r\u00e9seaux ont transform\u00e9 notre fa\u00e7on de travailler \u00e0 plusieurs.Internet, nous a permis ensuite d'acc\u00e9der \u00e0 des documents, \u00e0 des donn\u00e9es, ind\u00e9pendamment de leur localisation.Aujourd'hui, tout se passe dans le nuage : o\u00f9 que nous soyons, \u00e0 partir d'un simple t\u00e9l\u00e9phone, nous pouvons communiquer, produire, partager, collaborer.Tout cela est possible gr\u00e2ce \u00e0 des techniques performantes, mises en place par les g\u00e9ants de l'internet. Les choix que nous faisons pour les mat\u00e9riels, les logiciels et les services ne sont pas simples et nous n\u2019en mesurons pas toujours les implications, que ce soit en mati\u00e8re d\u2019interop\u00e9rabilit\u00e9, de s\u00e9curit\u00e9, de protection de nos donn\u00e9es, et plus globalement de libert\u00e9 d\u2019action. Ce MOOC a pour objectif principal de vous apporter des connaissances pour \u00e9clairer vos choix, et des comp\u00e9tences techniques \u00e9l\u00e9mentaires pour \u00e9voluer dans cet environnement num\u00e9rique complexe.",
        "desc_html": "Ce MOOC fait partie de la collection de MOOC \u00ab Comp\u00e9tences num\u00e9riques et C2i\n\u00bb. Les 4 premiers MOOCs de cette collection ouvrent en 2014 et permettent de\nse former aux comp\u00e9tences du C2i niveau 1.  \nAvant-hier, l'ordinateur a transform\u00e9 notre fa\u00e7on de travailler de mani\u00e8re\nindividuelle.  \nHier, les r\u00e9seaux ont transform\u00e9 notre fa\u00e7on de travailler \u00e0 plusieurs.  \nInternet, nous a permis ensuite d'acc\u00e9der \u00e0 des documents, \u00e0 des donn\u00e9es,\nind\u00e9pendamment de leur localisation.  \nAujourd'hui, tout se passe dans le nuage : o\u00f9 que nous soyons, \u00e0 partir d'un\nsimple t\u00e9l\u00e9phone, nous pouvons communiquer, produire, partager, collaborer.  \nTout cela est possible gr\u00e2ce \u00e0 des techniques performantes, mises en place par\nles g\u00e9ants de l'internet. Les choix que nous faisons pour les mat\u00e9riels, les\nlogiciels et les services ne sont pas simples et nous n\u2019en mesurons pas\ntoujours les implications, que ce soit en mati\u00e8re d\u2019interop\u00e9rabilit\u00e9, de\ns\u00e9curit\u00e9, de protection de nos donn\u00e9es, et plus globalement de libert\u00e9\nd\u2019action. Ce MOOC a pour objectif principal de vous apporter des connaissances\npour \u00e9clairer vos choix, et des comp\u00e9tences techniques \u00e9l\u00e9mentaires pour\n\u00e9voluer dans cet environnement num\u00e9rique complexe.\n\n",
        "name": "Donn\u00e9es et services num\u00e9riques, dans le nuage et ailleurs",
        "provider": "France Universit\u00e9 Numerique",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Certificat informatique et internet"
        ],
        "url": "https://www.france-universite-numerique-mooc.fr/courses/C2i/11002/Trimestre_1_2014/about",
        "video_url": ""
    },
    {
        "date": "2014-01-27",
        "desc": "In this 5-week course we\u2019ll introduce the fundamentals of programming. This is the first part of a class which has been taught for seventeen years at Stony Brook University, and is an accessible introduction to combining arts and computing. The other two portions are Introduction to Computational Arts: Image Manipulation and Introduction to Computational Arts: Sound Art.For programming we\u2019ll be using the free and open source programming language and integrated development environment, Processing. The course will provide the essentials of programming in a visual context, allowing you to visualize, design, and create generative art with Processing.You will complete both technical assignments and an artistic project, and learn how to participate in an aesthetic critique. We\u2019ll cover the history of generative \u00a0art in the Twentieth and 21st Centuries to give context for your artistic endeavors.Peer review is integral to the success of this class; we will also teach you how to give constructive criticism. By the end of the 5 weeks you should have a strong foundation for how computers work and deal with data.Additionally, you\u2019ll create an online portfolio of digital art projects, and be able to communicate ideas about art.Each week you\u2019ll watch two video series - one on the theory and one on the practice. There will be technical assignments and artistic projects which will be peer reviewed. We\u2019re looking forward to working with you.SyllabusIntroduction to Computational Arts: ProcessingJan 2014Consortium for Digital Arts & Technology (CDACT)Stony Brook University and CourseraCOURSE INFORMATIONInstructorsDr. Margaret Schedel & Timothy VallierCourse DescriptionThis multidisciplinary production class serves as an introduction to, and exploration of electronic media in the arts. Lectures will cover concepts and presentations of artists working in various capacities with computers, as well as tutorials on specific software packages.PrerequisiteNo prerequisites or prior knowledge needed. Familiarity with computers is helpful but not necessary.Course RequirementsInternet connectionWindows or Apple computerAbility to install software on your machine (admin account)Processing software:http://processing.org/Digication e-Portfolio account (links and details will be provided) or other web-based sharingCourse Learning OutcomesLearners who successfully complete this course will have learned the basic skills of Processing, Students will be learn to give critical feedback to their peers about technical and artistic matters through a grounding in the history of technology and the arts. A digital portfolio will showcase your work from this course.Outcomes:Understand the basics of computers, input and output devices, memory, and disks as demonstrated through quizzes and projectsNavigate file systems in Windows and Mac OS XDemonstrate creative/conceptual awareness of generative design through peer critiqueInstall and set-up a digital environment using Processing language.Generate and manipulate type, image and sound, incorporating principles of color, shape and gridsCreate a multi-media Processing Sketch and host on a websiteTextbook & Course MaterialsRequired TextNo required textsOptional Texts:PROCESSING:Generative Design: Visualize, Program, and Create with Processingby Hartmut Bohnacker (Author), Benedikt Gross (Author), Julia Laub (Author), Claudius Lazzeroni (Editor) ISBN-13: 978-1616890773Publisher: Princeton Architectural PressWEB:HTML and CSS: Design and Build Websitesby Jon DuckettISBN-13: 978-1118008188Publisher: WileyGRADING POLICY & COURSE REQUIREMENTSGradingAssignments and your final project are graded through a peer-review process; quizzes are multiple-choice and are graded by the computer. Your work on the assignments, projects will be graded by your peers using unique rubrics for each task.Quizzes (5) 30%Assignments (4) 40%Project (1) 30 %QuizzesAfter watching each video lecture series, you will take a multiple choice quiz which will count towards your final grade. You can only take these quizzes ONCE. We are using this MOOC to flip the classroom and we do not give our students multiple chances.There are also \u201cin-video questions,\u201d and you must answer these questions correctly in order to advance the video, but these questions are NOT graded, you can re-do the \u201cin-video\u201d quiz as many times as you need to.AssignmentsAssignments are purely technical; each module will include a detailed explanation of how to complete and grade each assignment. There will be one assignment (which may have multiple components) \u00a0every week that there is no project due. \u00a0Each assignment should take you no more than one hour.ProjectThe final project is both aesthetic and technical; there will be an explanation of how to grade the project but you must remember that art is subjective. You can expect the project to take at \u00a0least 4 hours to complete.Disclaimer: \u201cThe course schedule, policies, procedures, and assignments in this course are subject to change in the event of extenuating circumstances, by mutual agreement, and/or to ensure better student learning.\u201dCOURSE SCHEDULEWeek 1 Introduction to Computing and ProcessingWeek 2 Drawing in Processing: Arguments, Functions, and PrimitivesWeek 3 Dynamic Drawing: Code blocks, text, and loops.Week 4 External Input and Interactive SketchesWeek 5 Sound, Images, and Publishing",
        "desc_html": "In this 5-week course we\u2019ll introduce the fundamentals of programming. This is\nthe first part of a class which has been taught for seventeen years at Stony\nBrook University, and is an accessible introduction to combining arts and\ncomputing. The other two portions are Introduction to Computational Arts:\nImage Manipulation and Introduction to Computational Arts: Sound Art.\n\nFor programming we\u2019ll be using the free and open source programming language\nand integrated development environment, Processing. The course will provide\nthe essentials of programming in a visual context, allowing you to visualize,\ndesign, and create generative art with Processing.\n\nYou will complete both technical assignments and an artistic project, and\nlearn how to participate in an aesthetic critique. We\u2019ll cover the history of\ngenerative \u00a0art in the Twentieth and 21st Centuries to give context for your\nartistic endeavors.\n\nPeer review is integral to the success of this class; we will also teach you\nhow to give constructive criticism. By the end of the 5 weeks you should have\na strong foundation for how computers work and deal with data.\n\nAdditionally, you\u2019ll create an online portfolio of digital art projects, and\nbe able to communicate ideas about art.\n\nEach week you\u2019ll watch two video series - one on the theory and one on the\npractice. There will be technical assignments and artistic projects which will\nbe peer reviewed. We\u2019re looking forward to working with you.\n\n  \n\n## Syllabus\n\nIntroduction to Computational Arts: Processing  \nJan 2014  \nConsortium for Digital Arts & Technology (CDACT)  \nStony Brook University and Coursera\n\n## COURSE INFORMATION\n\n## Instructors\n\nDr. Margaret Schedel & Timothy Vallier\n\nCourse Description\n\nThis multidisciplinary production class serves as an introduction to, and\nexploration of electronic media in the arts. Lectures will cover concepts and\npresentations of artists working in various capacities with computers, as well\nas tutorials on specific software packages.\n\nPrerequisite\n\nNo prerequisites or prior knowledge needed. Familiarity with computers is\nhelpful but not necessary.\n\nCourse Requirements\n\n  * Internet connection\n\n  * Windows or Apple computer\n\n  * Ability to install software on your machine (admin account)\n\n  * Processing software: <http://processing.org/>\n\n  * Digication e-Portfolio account (links and details will be provided) or other web-based sharing \n\nCourse Learning Outcomes\n\nLearners who successfully complete this course will have learned the basic\nskills of Processing, Students will be learn to give critical feedback to\ntheir peers about technical and artistic matters through a grounding in the\nhistory of technology and the arts. A digital portfolio will showcase your\nwork from this course.\n\nOutcomes:\n\n  1. Understand the basics of computers, input and output devices, memory, and disks as demonstrated through quizzes and projects\n\n  2. Navigate file systems in Windows and Mac OS X\n\n  3. Demonstrate creative/conceptual awareness of generative design through peer critique\n\n  4. Install and set-up a digital environment using Processing language.\n\n  5. Generate and manipulate type, image and sound, incorporating principles of color, shape and grids\n\n  6. Create a multi-media Processing Sketch and host on a website\n\n  \n\n**Textbook & Course Materials  \n**Required Text  \n\u00a0\u00a0No required texts\n\nOptional Texts:\n\nPROCESSING:\n\n[Generative Design: Visualize, Program, and Create with\nProcessing](http://www.amazon.com/Generative-Design-Visualize-Program-Processi\nng/dp/1616890770/ref=sr_1_8?s=books&ie=UTF8&qid=1372862359&sr=1-8&keywords=pro\ncessing&tag=coursera-course743-20)\n\nby Hartmut Bohnacker (Author), Benedikt Gross (Author), Julia Laub (Author),\nClaudius Lazzeroni (Editor) ISBN-13: 978-1616890773\n\nPublisher: Princeton Architectural Press\n\n  \n\nWEB:\n\n[HTML and CSS: Design and Build Websites ](http://www.amazon.com/gp/product/11\n18008189/ref=ox_sc_imb_mini_detail?ie=UTF8&smid=ATVPDKIKX0DER&tag=coursera-\ncourse743-20)\n\nby Jon Duckett\n\nISBN-13: 978-1118008188\n\nPublisher: Wiley\n\n  \n  \n  \n\n## GRADING POLICY & COURSE REQUIREMENTS\n\nGrading\n\nAssignments and your final project are graded through a peer-review process;\nquizzes are multiple-choice and are graded by the computer. Your work on the\nassignments, projects will be graded by your peers using unique rubrics for\neach task.\n\n  \n\nQuizzes (5) 30%\n\nAssignments (4) 40%\n\nProject (1) 30 %\n\n  \n\nQuizzes\n\nAfter watching each video lecture series, you will take a multiple choice quiz\nwhich will count towards your final grade. You can only take these quizzes\nONCE. We are using this MOOC to flip the classroom and we do not give our\nstudents multiple chances.\n\nThere are also \u201cin-video questions,\u201d and you must answer these questions\ncorrectly in order to advance the video, but these questions are NOT graded,\nyou can re-do the \u201cin-video\u201d quiz as many times as you need to.\n\nAssignments\n\nAssignments are purely technical; each module will include a detailed\nexplanation of how to complete and grade each assignment. There will be one\nassignment (which may have multiple components) \u00a0every week that there is no\nproject due. \u00a0Each assignment should take you no more than one hour.\n\n  \n\nProject\n\nThe final project is both aesthetic and technical; there will be an\nexplanation of how to grade the project but you must remember that art is\nsubjective. You can expect the project to take at \u00a0least 4 hours to complete.\n\nDisclaimer: \u201cThe course schedule, policies, procedures, and assignments in\nthis course are subject to change in the event of extenuating circumstances,\nby mutual agreement, and/or to ensure better student learning.\u201d\n\n**COURSE SCHEDULE**\n\nWeek 1 Introduction to Computing and Processing  \nWeek 2 Drawing in Processing: Arguments, Functions, and Primitives  \nWeek 3 Dynamic Drawing: Code blocks, text, and loops.  \nWeek 4 External Input and Interactive Sketches  \nWeek 5 Sound, Images, and Publishing\n\n",
        "name": "Introduction to Computational Arts: Processing",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "State University of New York"
        ],
        "url": "https://www.coursera.org/course/compartsprocessing",
        "video_url": ""
    },
    {
        "date": "2014-01-21",
        "desc": "This is an introductory course on computer networking, specifically the Internet. It focuses on explaining how the Internet works, ranging from how bits are modulated on wires and in wireless to application-level protocols like BitTorrent and HTTP. It also explains the principles of how to design networks and network protocols. Students gain experience reading and understanding RFCs (Internet protocol specifications) as statements of what a system should do. The course grounds many of the concepts in current practice and recent developments, such as net neutrality and DNS security.PREREQUISITESStudents need an introductory course in probability, a strong understanding of bits and bytes, and knowledge of how computers lay out data in memory.",
        "desc_html": "This is an introductory course on computer networking, specifically the\nInternet. It focuses on explaining how the Internet works, ranging from how\nbits are modulated on wires and in wireless to application-level protocols\nlike BitTorrent and HTTP. It also explains the principles of how to design\nnetworks and network protocols. Students gain experience reading and\nunderstanding RFCs (Internet protocol specifications) as statements of what a\nsystem should do. The course grounds many of the concepts in current practice\nand recent developments, such as net neutrality and DNS security.\n\n**PREREQUISITES**\n\nStudents need an introductory course in probability, a strong understanding of\nbits and bytes, and knowledge of how computers lay out data in memory.\n\n",
        "name": "Networking: Introduction to Computer Networking",
        "provider": "Stanford OpenEdx",
        "rating": "4.6666666666667",
        "reviews": "3",
        "university": [
            "Stanford University"
        ],
        "url": "https://class.stanford.edu/courses/Engineering/Networking/Winter2014/about",
        "video_url": ""
    },
    {
        "date": "2014-01-20",
        "desc": "In this course you will simulate the time evolution of prices of financial assets, use the Black-Scholes model to price European or Asian options and compute the Value-at-Risk of a portfolio. The approach is hands-on with a strong emphasis on practical simulations that you will program, run and explore in your own computer.CertificationYou will receive a&nbsp;certificate of participation&nbsp;after having completed&nbsp;at least 75% of the course learning activities&nbsp;(videos, quizzes and homework).Learning objectivesAt the end of this course you will know how to answer the following questions:Why are random numbers needed in quantitative finance? And, if they are random, how can they be used to give precise, accurate answers to quantitative financial problems?What is the Black-Scholes model?What is geometric brownian motion and how can it be used to simulate the evolution of asset prices in financial markets?How are Monte Carlo methods used to determine the right price of a derivative product, such as a European call option?What is the theory of copulas and how can it be used to model general dependencies among financial assets?How is financial risk modeled, characterized and quantified?WorkloadYou will need between 5 and 8 hours of work per week during a total of 12 weeks to complete all the learning activities, including the homework.Prior knowledgeThe course is geared to students not only in economics and finance, but also in mathematics, computer science, engineering, physics and the natural sciences.No knowledge of finance is required.Basic knowledge of Calculus (integration and differentiation, Taylor series), Linear Algebra (matrices, determinants, eigenvalues and eigenvectors) and Probability (random variables, probability density and cumulative distribution functions) at an introductory undergraduate level is strongly recommended.Programming knowledge is recommended. We will be designing simulations that can be executed in either GNU Octave or in Matlab. The programs will be short, intuitive, fully documented and easy to follow. Yet they will be powerful tools under your control, and will allow you to explore, experiment and learn at your own initiative.SyllabusThe course is structured in 9 chaptersChapter 1: Introduction [2014/01/20 - 2014/01/29]Chapter 2: Understanding random numbers [2014/01/30 - 2014/02/05]Chapter 3: Generating random numbers [2014/02/06 - 2014/02/12]Chapter 4: Brownian motion [2014/02/13 - 2014/02/26]Chapter 5: Ordinary differential equations [2014/02/27 - 2014/03/05]Chapter 6: Stochastic differential equations [2014/03/06 - 2014/03/12]Chapter 7: Pricing of simple derivative products [2014/03/13 - 2014/03/26]Chapter 8: Pricing of more complex derivative products [2014/03/27 - 2014/04/02]Chapter 9: Modeling and quantifying financial risk [2014/04/03 - 2014/04/16]Chapters are divided into units. Each unit consists of a video followed by a quiz. At the end of each chapter you will solve and turn in some homework exercises. In these exercises you will explore additional material on your own and then respond to questions in multiple choice format.Some of the explanations in the videos and the exercises make reference to short programs that you can download and execute in your own computer. You are encouraged to experiment with these programs (modify the values of parameters, complete or rewrite the code to alter the model or to implement related functionality) and run your own simulations. The code provided can be executed in either GNU Octave or MATLAB.",
        "desc_html": "In this course you will simulate the time evolution of prices of financial\nassets, use the Black-Scholes model to price European or Asian options and\ncompute the Value-at-Risk of a portfolio. The approach is hands-on with a\nstrong emphasis on practical simulations that you will program, run and\nexplore in your own computer.\n\n**Certification**\n\nYou will receive a certificate of participation after having completed at\nleast 75% of the course learning activities (videos, quizzes and homework).\n\n**Learning objectives**\n\nAt the end of this course you will know how to answer the following questions:\n\n  1. Why are random numbers needed in quantitative finance? And, if they are random, how can they be used to give precise, accurate answers to quantitative financial problems?\n  2. What is the Black-Scholes model?\n  3. What is geometric brownian motion and how can it be used to simulate the evolution of asset prices in financial markets?\n  4. How are Monte Carlo methods used to determine the right price of a derivative product, such as a European call option?\n  5. What is the theory of copulas and how can it be used to model general dependencies among financial assets?\n  6. How is financial risk modeled, characterized and quantified?\n**Workload**\n\nYou will need between 5 and 8 hours of work per week during a total of 12\nweeks to complete all the learning activities, including the homework.\n\n**Prior knowledge**\n\nThe course is geared to students not only in economics and finance, but also\nin mathematics, computer science, engineering, physics and the natural\nsciences.\n\nNo knowledge of finance is required.\n\nBasic knowledge of Calculus (integration and differentiation, Taylor series),\nLinear Algebra (matrices, determinants, eigenvalues and eigenvectors) and\nProbability (random variables, probability density and cumulative distribution\nfunctions) at an introductory undergraduate level is strongly recommended.\n\nProgramming knowledge is recommended. We will be designing simulations that\ncan be executed in either GNU Octave or in Matlab. The programs will be short,\nintuitive, fully documented and easy to follow. Yet they will be powerful\ntools under your control, and will allow you to explore, experiment and learn\nat your own initiative.\n\n## Syllabus\n\nThe course is structured in 9 chapters\n\nChapter 1: Introduction [2014/01/20 - 2014/01/29]  \nChapter 2: Understanding random numbers [2014/01/30 - 2014/02/05]  \nChapter 3: Generating random numbers [2014/02/06 - 2014/02/12]  \nChapter 4: Brownian motion [2014/02/13 - 2014/02/26]  \nChapter 5: Ordinary differential equations [2014/02/27 - 2014/03/05]  \nChapter 6: Stochastic differential equations [2014/03/06 - 2014/03/12]  \nChapter 7: Pricing of simple derivative products [2014/03/13 - 2014/03/26]  \nChapter 8: Pricing of more complex derivative products [2014/03/27 -\n2014/04/02]  \nChapter 9: Modeling and quantifying financial risk [2014/04/03 - 2014/04/16]\n\nChapters are divided into units. Each unit consists of a video followed by a\nquiz. At the end of each chapter you will solve and turn in some homework\nexercises. In these exercises you will explore additional material on your own\nand then respond to questions in multiple choice format.\n\nSome of the explanations in the videos and the exercises make reference to\nshort programs that you can download and execute in your own computer. You are\nencouraged to experiment with these programs (modify the values of parameters,\ncomplete or rewrite the code to alter the model or to implement related\nfunctionality) and run your own simulations. The code provided can be executed\nin either GNU Octave or MATLAB.\n\n",
        "name": "Monte Carlo Methods in Finance",
        "provider": "iversity",
        "rating": "5",
        "reviews": "2",
        "university": [],
        "url": "https://iversity.org/courses/monte-carlo-methods-in-finance",
        "video_url": "https://www.youtube.com/embed/o7kLhdVvZyE?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-01-17",
        "desc": "Become familiar with the challenges that come with the planning, development, testing, and maintenance of HTML5 apps. Web Engineering takes you through the concepts, methods, techniques, and tools needed for systematically developing websites and Web applications. In Web Engineering I&nbsp;\"Basics of Web Development\"&nbsp;we learned how to create a professional website, and now we take a step further as you develop your very own HTML5 app!Using the HTML5 mobile application framework Sencha Touch, you will go online and practice handling the infrastructure and tools needed for the development and maintenance of an established Web app. In particular, you will learn the basic technical and architectural principles necessary for Web app building.Learning ObjectivesAt the end of the two-part course, you will be able to:Develop a high-performance, secure and accessible website, upon a client&rsquo;s request.Design and realise an HTML5 app and upload this to app stores.Prerequisites for Course ParticipationYou must have a working knowledge of HTML/CSS.SyllabusWeb Engineering II builds upon on the material learned in the first course,&nbsp;Web Engineering I.Each chapter presents the following content through a series of instructional videos, screencasts and online interactive exercises. You will also work in small groups, applying and testing practical examples of key technical aspects in Web development.Chapter 11: Starter Kit: Tools for the HTML5 App in the CloudChapter 12: REST Architectural Style for Mobile Web ApplicationsChapter 13: Interactive Exercises with JavaScript at CodecademyChapter 14: Single-Page Applications with AJAX, JSON, and REST APIsChapter 15: Overview of HTML5 and its JavaScript APIsChapter 16: Exercises with the HTML5 Mobile Application Framework Sencha TouchChapter 17: Introduction to NoSQL Databases for Web AppsChapter 18: Full-Stack JavaScript: Design and Implementation of a WebSocket AppChapter 19: Preparing an HTML5 App for App StoresChapter 20: Screen Casting Web Apps for User DocumentationAs a learning object for exploring and applying the course content, we will use the mobile Web-based Audience-Response SystemARSnova. It will be used as a live feedback app throughout the MOOC.",
        "desc_html": "Become familiar with the challenges that come with the planning, development,\ntesting, and maintenance of HTML5 apps. Web Engineering takes you through the\nconcepts, methods, techniques, and tools needed for systematically developing\nwebsites and Web applications. In Web Engineering I [\"Basics of Web\nDevelopment\"](https://iversity.org/courses/web-engineering-i-grundlagen-der-\nweb-entwicklung) we learned how to create a professional website, and now we\ntake a step further as you develop your very own HTML5 app!\n\nUsing the HTML5 mobile application framework Sencha Touch, you will go online\nand practice handling the infrastructure and tools needed for the development\nand maintenance of an established Web app. In particular, you will learn the\nbasic technical and architectural principles necessary for Web app building.\n\n**Learning Objectives**\n\nAt the end of the two-part course, you will be able to:\n\n  1. Develop a high-performance, secure and accessible website, upon a client's request.\n  2. Design and realise an HTML5 app and upload this to app stores.\n\n**Prerequisites for Course Participation**\n\nYou must have a working knowledge of HTML/CSS.\n\n## Syllabus\n\nWeb Engineering II builds upon on the material learned in the first course,\n[Web Engineering I](https://iversity.org/courses/web-engineering-i-grundlagen-\nder-web-entwicklung).\n\nEach chapter presents the following content through a series of instructional\nvideos, screencasts and online interactive exercises. You will also work in\nsmall groups, applying and testing practical examples of key technical aspects\nin Web development.\n\n  * Chapter 11: Starter Kit: Tools for the HTML5 App in the Cloud\n  * Chapter 12: REST Architectural Style for Mobile Web Applications\n  * Chapter 13: Interactive Exercises with JavaScript at Codecademy\n  * Chapter 14: Single-Page Applications with AJAX, JSON, and REST APIs\n  * Chapter 15: Overview of HTML5 and its JavaScript APIs\n  * Chapter 16: Exercises with the HTML5 Mobile Application Framework Sencha Touch\n  * Chapter 17: Introduction to NoSQL Databases for Web Apps\n  * Chapter 18: Full-Stack JavaScript: Design and Implementation of a WebSocket App\n  * Chapter 19: Preparing an HTML5 App for App Stores\n  * Chapter 20: Screen Casting Web Apps for User Documentation\n\nAs a learning object for exploring and applying the course content, we will\nuse the mobile Web-based Audience-Response\nSystem[ARSnova](https://arsnova.eu/blog/). It will be used as a live feedback\napp throughout the MOOC.\n\n",
        "name": "Web Engineering II: Developing Mobile HTML5 Apps",
        "provider": "iversity",
        "rating": "3.5",
        "reviews": "2",
        "university": [
            "Technische Hochschule Mittelhessen"
        ],
        "url": "https://iversity.org/courses/web-engineerihttps://iversity.org/courses/web-engineering-ii-developing-mobile-html5-apps",
        "video_url": "https://www.youtube.com/embed/swyEs8Zz2ak?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-01-13",
        "desc": "Les innovations des m\u00e9dias num\u00e9riques se succ\u00e8dent \u00e0 un rythme qui semble effr\u00e9n\u00e9. Le cours propose de faire un tour d'horizon du sujet et des principes sous-jacents, parfois plus anciens qu'il n'y para\u00eet.Bas\u00e9 sur les enseignements du CNAM et de l\u2019ENJMIN (BAC+3 \u00e0 Master Sp\u00e9cialis\u00e9), ce cours s'organise autour de six mots-cl\u00e9s : num\u00e9risation, interaction, synth\u00e8se, augmentation, lire et jouer. Dans ces six parties de dur\u00e9es \u00e9gales, nous alternerons les aspects th\u00e9oriques et la pratique, avec quelques aper\u00e7us historiques.Les d\u00e9monstrations et les exercices sur les questions d\u2019interaction sont r\u00e9alis\u00e9s avec le logiciel libre Processing. Une partie du cours est consacr\u00e9e \u00e0 son apprentissage et il permet aux apprenants d\u2019approfondir \u00e0 leur rythme les notions \u00e9tudi\u00e9es.A l\u2019issue de ce cours, les participants seront en mesure de r\u00e9aliser des applications simples et pourront mesurer leur capacit\u00e9 \u00e0 s\u2019ins\u00e9rer dans une formation sup\u00e9rieure du domaine.",
        "desc_html": "Les innovations des m\u00e9dias num\u00e9riques se succ\u00e8dent \u00e0 un rythme qui semble\neffr\u00e9n\u00e9. Le cours propose de faire un tour d'horizon du sujet et des principes\nsous-jacents, parfois plus anciens qu'il n'y para\u00eet.  \nBas\u00e9 sur les enseignements du CNAM et de l\u2019ENJMIN (BAC+3 \u00e0 Master Sp\u00e9cialis\u00e9),\nce cours s'organise autour de six mots-cl\u00e9s : num\u00e9risation, interaction,\nsynth\u00e8se, augmentation, lire et jouer. Dans ces six parties de dur\u00e9es \u00e9gales,\nnous alternerons les aspects th\u00e9oriques et la pratique, avec quelques aper\u00e7us\nhistoriques.  \nLes d\u00e9monstrations et les exercices sur les questions d\u2019interaction sont\nr\u00e9alis\u00e9s avec le logiciel libre Processing. Une partie du cours est consacr\u00e9e\n\u00e0 son apprentissage et il permet aux apprenants d\u2019approfondir \u00e0 leur rythme\nles notions \u00e9tudi\u00e9es.  \nA l\u2019issue de ce cours, les participants seront en mesure de r\u00e9aliser des\napplications simples et pourront mesurer leur capacit\u00e9 \u00e0 s\u2019ins\u00e9rer dans une\nformation sup\u00e9rieure du domaine.\n\n",
        "name": "Introduction aux technologies des m\u00e9dias interactifs num\u00e9riques",
        "provider": "France Universit\u00e9 Numerique",
        "rating": "0",
        "reviews": "0",
        "university": [
            "CNAM"
        ],
        "url": "https://www.france-universite-numerique-mooc.fr/courses/CNAM/01004/Trimestre_1_2014/about",
        "video_url": ""
    },
    {
        "date": "2014-01-10",
        "desc": "This course provides an introduction to basic computational methods for\nunderstanding what nervous systems do and for determining how they function.\nWe will explore the computational principles governing various aspects\nof vision, sensory-motor control, learning, and memory. Specific topics\nthat will be covered include representation of information by spiking neurons,\nprocessing of information in neural networks, and algorithms for adaptation\nand learning. We will make use of Matlab demonstrations and exercises to\ngain a deeper understanding of concepts and methods introduced in the course.\nThe course is primarily aimed at third- or fourth-year undergraduates and\nbeginning graduate students, as well as professionals and distance learners\ninterested in learning how the brain processes information.SyllabusTopics covered include:1. Basic Neurobiology2. Neural Encoding and Decoding Techniques3. Information Theory and Neural Coding4. Single Neuron Models (Biophysical and Simplified)5. Synapse and Network Models (Feedforward and Recurrent)6. Synaptic Plasticity and Learning",
        "desc_html": "This course provides an introduction to basic computational methods for\nunderstanding what nervous systems do and for determining how they function.\nWe will explore the computational principles governing various aspects of\nvision, sensory-motor control, learning, and memory. Specific topics that will\nbe covered include representation of information by spiking neurons,\nprocessing of information in neural networks, and algorithms for adaptation\nand learning. We will make use of Matlab demonstrations and exercises to gain\na deeper understanding of concepts and methods introduced in the course. The\ncourse is primarily aimed at third- or fourth-year undergraduates and\nbeginning graduate students, as well as professionals and distance learners\ninterested in learning how the brain processes information.\n\n## Syllabus\n\nTopics covered include:  \n  \n1\\. Basic Neurobiology  \n2\\. Neural Encoding and Decoding Techniques  \n3\\. Information Theory and Neural Coding  \n4\\. Single Neuron Models (Biophysical and Simplified)  \n5\\. Synapse and Network Models (Feedforward and Recurrent)  \n6\\. Synaptic Plasticity and Learning\n\n",
        "name": "Computational Neuroscience",
        "provider": "Coursera",
        "rating": "4",
        "reviews": "1",
        "university": [
            "University of Washington"
        ],
        "url": "https://www.coursera.org/course/compneuro",
        "video_url": ""
    },
    {
        "date": "2014-01-10",
        "desc": "Artificial\nvision applications, such as object detection in natural images and automatic\nsegmentation of medical acquisitions, rely on models that interpret the visual\ninformation provided to a computer. The model provides a compromise between the\nsupport given by the observations and the prior domain knowledge. This course\nis concerned with the two computational problems that arise when using such models\nin practice.Inference\n(Energy Minimization):Given a visual observation (for example, an image or an MRI scan), we\nare interested in estimating its most likely interpretation (i.e. the location of all\nthe objects in the image, or the segments of the MRI scan) according to the\nmodel. While the problem cannot be solved optimally, we will describe state of the art approximate algorithms that provide very accurate solutions in\npractice. While the theoretical properties of the algorithms will be discussed\nbriefly, the main emphasis will be on their application.Learning\n(Parameter Estimation):Given a set of training samples consisting of inputs and their desired\noutputs, (for example, images and the location of the objects, or MRI scans and\ntheir segmentations) we would like to estimate a model that is suited to the\ntask at hand. We will show how the problem of learning a model can be\nformulated as empirical risk minimization. Furthermore, we will present\nefficient algorithms for solving the corresponding optimization problem.SyllabusLecture\n1: Introduction to artificial vision with discrete graphical models: In this lecture, the interdisciplinary nature of\ncomputational vision is briefly introduced along with its potential use in\ndifferent application domains. Subsequently, the concept of discrete modeling\nof artificial vision tasks is introduced from theoretical view point along with\nshort examples demonstrating the interest of such an approach in low, mid and\nhigh-level vision. Examples refer to blind image deconvolution, knowledge-based\nimage segmentation, optical flow, graph matching, 2d-to-3d view-point invariant\ndetection and modeling and grammar-driven image based reconstruction.Lecture\n2: Reparameterization and dynamic programming:In this lecture, we provide a brief introduction to\nundirected graphical models. We also provide a formal definition of the problem\nof inference (specifically, energy minimization). We introduce the concept of\nreparameterization, which forms the building block of all the inference\nalgorithms discussed in the course. We describe a simple inference algorithm\nknown as dynamic programming, which consists of a series of reparameterization.\nWe show how dynamic programming can be used to perform exact inference on\nchains.Lecture\n3:Maximum flow and minimum cut:&nbsp;In this lecture, we introduce the concept of functions on arcs of a directed graph. We\nfocus on a special function known as the flow function. Associated with this\nfunction is the combinatorial optimization problem of computing the maximum\nflow of a directed graph. We also introduce the concept of a cut in a directed\ngraph, and prove that the minimum cost cut is equivalent to the maximum flow.\nWe describe a simple algorithm for solving the maximum flow, or equivalent the\nminimum cut, problem.Lecture\n4:Minimum cut based inference: In this lecture,we show how the problem of inference for undirected\ngraphical models with two labels can be formulated as a minimum cut problem. We\ncharacterize the energy function that can be minimized optimally using the\nminimum cut problem. We show examples using the image segmentation and texture\nsynthesis problems, which can be formulated using two labels. We consider the\nmulti-label problem, and devise approximate algorithms for inference based on\nthe minimum cut algorithms. We show examples using the stereo reconstruction\nand the image denoising problems.Lecture\n5: Belief propagation:In this lecture we present the basic concepts of\nmessage passing and belief propagation networks. The concept is initially\ndemonstrated using chains, extended to the case of trees and then eventually to\narbitrary graphs. The strengths and the limitations of such an optimization\nframework are presented. The image completion and texture synthesis problems\nare considered as examples to demonstrate the interest of such a family of\noptimization algorithms.Lecture\n6: Linear programing and duality:&nbsp;In this lecture, discrete inference is addressed through concepts coming\nfrom linear programming relaxations. In particular, we explain how a\ngraph-optimization problem can be expressed as a linear programing one and then\nhow one can take benefit of the duality theorem to develop efficient\noptimization methods. The problem of optical flow and its deformable\nregistration variant in medical image analysis is considered as an example to\ndemonstrate the interest of such optimization algorithms.Lecture\n7: Dual decomposition and higher order graphs:In this lecture, we introduce the dual decomposition\nframework for the optimization of low rank and higher order graphical models.\nFirst, we demonstrate the concept of the method using a simple toy example and\nthen we extend to the most general optimization problem case. Three different\nexamples are considered in the context of higher order optimization, the\nproblem of linear mapping between images, the case of dense deformable graph\nmatching and the development of pose invariant object segmentation methods in\nthe context of medical imaging.Lecture 8: Parameter learning:In this lecture, we introduce two frameworks for estimating the parameters\nof a graphical model using fully supervised training data. The first framework\nmaximizes the likelihood of the training data while regularizing the\nparameters. The second framework minimizes the empirical risk, as measured by a\nuser-defined loss function, while regularizing the parameters. We provide a\nbrief description of the algorithms required to solve the related optimization\nproblems. We show the results obtained on standard machine learning\ndatasets.",
        "desc_html": "Artificial vision applications, such as object detection in natural images and\nautomatic segmentation of medical acquisitions, rely on models that interpret\nthe visual information provided to a computer. The model provides a compromise\nbetween the support given by the observations and the prior domain knowledge.\nThis course is concerned with the two computational problems that arise when\nusing such models in practice.\n\n_Inference (Energy Minimization):_\n\nGiven a visual observation (for example, an image or an MRI scan), we are\ninterested in estimating its most likely interpretation (i.e. the location of\nall the objects in the image, or the segments of the MRI scan) according to\nthe model. While the problem cannot be solved optimally, we will describe\nstate of the art approximate algorithms that provide very accurate solutions\nin practice. While the theoretical properties of the algorithms will be\ndiscussed briefly, the main emphasis will be on their application.\n\n_\u00a0Learning (Parameter Estimation):_  \n\nGiven a set of training samples consisting of inputs and their desired\noutputs, (for example, images and the location of the objects, or MRI scans\nand their segmentations) we would like to estimate a model that is suited to\nthe task at hand. We will show how the problem of learning a model can be\nformulated as empirical risk minimization. Furthermore, we will present\nefficient algorithms for solving the corresponding optimization problem.\n\n## Syllabus\n\n  * **Lecture 1: Introduction to artificial vision with discrete graphical models**: In this lecture, the interdisciplinary nature of computational vision is briefly introduced along with its potential use in different application domains. Subsequently, the concept of discrete modeling of artificial vision tasks is introduced from theoretical view point along with short examples demonstrating the interest of such an approach in low, mid and high-level vision. Examples refer to blind image deconvolution, knowledge-based image segmentation, optical flow, graph matching, 2d-to-3d view-point invariant detection and modeling and grammar-driven image based reconstruction.\n  * **Lecture 2: Reparameterization and dynamic programming**: In this lecture, we provide a brief introduction to undirected graphical models. We also provide a formal definition of the problem of inference (specifically, energy minimization). We introduce the concept of reparameterization, which forms the building block of all the inference algorithms discussed in the course. We describe a simple inference algorithm known as dynamic programming, which consists of a series of reparameterization. We show how dynamic programming can be used to perform exact inference on chains.  \n** **\n  * **Lecture 3: ********Maximum flow and minimum cut**:  In this lecture, we introduce the concept of functions on arcs of a directed graph. We focus on a special function known as the flow function. Associated with this function is the combinatorial optimization problem of computing the maximum flow of a directed graph. We also introduce the concept of a cut in a directed graph, and prove that the minimum cost cut is equivalent to the maximum flow. We describe a simple algorithm for solving the maximum flow, or equivalent the minimum cut, problem.\n  * **Lecture 4: ****Minimum cut based inference**: In this lecture, we show how the problem of inference for undirected graphical models with two labels can be formulated as a minimum cut problem. We characterize the energy function that can be minimized optimally using the minimum cut problem. We show examples using the image segmentation and texture synthesis problems, which can be formulated using two labels. We consider the multi-label problem, and devise approximate algorithms for inference based on the minimum cut algorithms. We show examples using the stereo reconstruction and the image denoising problems.  \n\n  * **Lecture 5: Belief propagation: **In this lecture we present the basic concepts of message passing and belief propagation networks. The concept is initially demonstrated using chains, extended to the case of trees and then eventually to arbitrary graphs. The strengths and the limitations of such an optimization framework are presented. The image completion and texture synthesis problems are considered as examples to demonstrate the interest of such a family of optimization algorithms.  \n\n  * **Lecture 6: Linear programing and duality:  **In this lecture, discrete inference is addressed through concepts coming from linear programming relaxations. In particular, we explain how a graph-optimization problem can be expressed as a linear programing one and then how one can take benefit of the duality theorem to develop efficient optimization methods. The problem of optical flow and its deformable registration variant in medical image analysis is considered as an example to demonstrate the interest of such optimization algorithms.\n  * **Lecture 7: Dual decomposition and higher order graphs: **In this lecture, we introduce the dual decomposition framework for the optimization of low rank and higher order graphical models. First, we demonstrate the concept of the method using a simple toy example and then we extend to the most general optimization problem case. Three different examples are considered in the context of higher order optimization, the problem of linear mapping between images, the case of dense deformable graph matching and the development of pose invariant object segmentation methods in the context of medical imaging.  \n\n  * **Lecture 8: Parameter learning: **In this lecture, we introduce two frameworks for estimating the parameters of a graphical model using fully supervised training data. The first framework maximizes the likelihood of the training data while regularizing the parameters. The second framework minimizes the empirical risk, as measured by a user-defined loss function, while regularizing the parameters. We provide a brief description of the algorithms required to solve the related optimization problems. We show the results obtained on standard machine learning datasets. \n  \n  \n\n",
        "name": "Discrete Inference and Learning in Artificial Vision",
        "provider": "Coursera",
        "rating": "2.5",
        "reviews": "2",
        "university": [
            "\u00c9cole Centrale Paris"
        ],
        "url": "https://www.coursera.org/course/artificialvision",
        "video_url": ""
    },
    {
        "date": "2014-01-06",
        "desc": "So you&rsquo;ve heard mobile is kind of a big deal, and you&rsquo;re not sure how to transform your traditional desktop-focused web apps into fast, effective mobile experiences. This course is designed to teach web developers what they need to know to create great cross-device mobile web experiences. This course will focus on building mobile web apps, which will work across multiple platforms including Android, iOS, and others.Why Take This Course?After completing this class, you&rsquo;ll have built a web application with a first-class mobile experience. You&rsquo;ll understand what it takes to build great web experiences on mobile devices, have gained experience with the tools you need to test performance, and be able to apply your knowledge to your own projects in the future.Prerequisites and RequirementsThis course is for experienced front-end web developers who&rsquo;d like to learn what it takes to create&nbsp;greatmobile&nbsp;experiences. In order to succeed in this class, you should be comfortable with HTML, CSS, and Javascript, and should have experience creating web apps, either professionally or for fun. You don't need to know any specific HTML5 extras or APIs, we'll cover any of those that we need as the course progresses.See the&nbsp;Technology Requirements&nbsp;for using UdacityWhat Will I Learn?ProjectsDesign and build a mobile app that takes advantage of touch screen functionality.SyllabusIn this course, you will learn how to build web experiences that adapt to the different screen sizes and capabilities that mobile devices offer, and how to scalably optimize media for mobile and desktop. We will cover programming touch interaction, as well as how to optimize form field input for mobile devices and use APIs like geolocation and the accelerometer, and ensuring your web experiences work great when network conditions are sub-optimal. Finally, you&rsquo;ll gain the tools to investigate performance in mobile applications, with a strong understanding of mobile networking, battery usage patterns and optimizing paint techniques to build smooth animations on mobile.Lesson 01: SyllabusWe&rsquo;ll start with a high-level overview of the course and what to expect in it. We&rsquo;ll also go into more depth on what we mean by mobile web development, and why you should care about it.Lesson 02: Mobile Development ToolsWorkflow and tooling is incredibly important for building great web apps, and this carries over to mobile web development. This lesson will show you how to use the Chrome Developer Tools to develop for the mobile web.Lesson 03: Mobile UX and ViewportDesigning for the mobile web is all about a smooth user experience. This lesson will get you thinking about how to achieve that on mobile, and we&rsquo;ll introduce the first of many tools you need to achieve this: the viewport.Lesson 04: Fluid DesignMobile means lots of different devices and form factors. We&rsquo;ll discuss how to make your site responsive, clean, and user-friendly on multiple devices and layouts.Lesson 05: Media QueriesSometimes different devices call for fundamentally different layouts. This lesson will teach you how to achieve this using media queries.Lesson 06: Responsive ImagesMedia requirements are different in mobile - network constraints and very high resolution screens set up a conflict that can be challenging. We&rsquo;ll talk about how best to integrate media into your mobile web applications, and adaptively scaling images based on the environment.Lesson 07: Optimizing PerformanceUsers expect a fast, seamless experience on mobile. We&rsquo;ll go over optimizing various performance metrics to improve that experience, such as network, cpu, rendering, and battery performance.Lesson 08: TouchTouch input is fundamentally different from mouse input, and requires you to think about your user interactions differently. We&rsquo;ll go over UX concerns with touch-based interaction, and how to design user interactions that work across devices.Lesson 09: InputUsing a keyboard on mobile is awful. We&rsquo;ll discuss ways to improve it, using semantic input for form data, and other user input options on mobile.Lesson 10: Device AccessMobile devices have a full array of sensors typically unavailable on desktop. We&rsquo;ll talk about camera access, geolocation, and other sensors and feedback you have access to on mobile.Lesson 11: Offline and StorageIt&rsquo;s an unfortunate reality that mobile users aren&rsquo;t always online. We&rsquo;ll go over using the local cache as well as local storage APIs to give your users a great offline (and partially-online) experience as well.Lesson 12: Wrap-upWe&rsquo;ll finish up the class by talking briefly about other topics to consider, such as app experience, monetization, deployment and distribution. We&rsquo;ll also point you to other resources to look at moving forward in your career.",
        "desc_html": "So you've heard mobile is kind of a big deal, and you're not sure how to\ntransform your traditional desktop-focused web apps into fast, effective\nmobile experiences. This course is designed to teach web developers what they\nneed to know to create great cross-device mobile web experiences. This course\nwill focus on building mobile web apps, which will work across multiple\nplatforms including Android, iOS, and others.\n\n**Why Take This Course?**\n\nAfter completing this class, you'll have built a web application with a first-\nclass mobile experience. You'll understand what it takes to build great web\nexperiences on mobile devices, have gained experience with the tools you need\nto test performance, and be able to apply your knowledge to your own projects\nin the future.\n\n**Prerequisites and Requirements**\n\nThis course is for experienced front-end web developers who'd like to learn\nwhat it takes to create\n[great](http://www.chrome.com/racer)[mobile](http://sketchpad.io/)\nexperiences. In order to succeed in this class, you should be comfortable with\nHTML, CSS, and Javascript, and should have experience creating web apps,\neither professionally or for fun. You don't need to know any specific HTML5\nextras or APIs, we'll cover any of those that we need as the course\nprogresses.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n**What Will I Learn?** **Projects**\n\nDesign and build a mobile app that takes advantage of touch screen\nfunctionality.\n\n## Syllabus\n\nIn this course, you will learn how to build web experiences that adapt to the\ndifferent screen sizes and capabilities that mobile devices offer, and how to\nscalably optimize media for mobile and desktop. We will cover programming\ntouch interaction, as well as how to optimize form field input for mobile\ndevices and use APIs like geolocation and the accelerometer, and ensuring your\nweb experiences work great when network conditions are sub-optimal. Finally,\nyou'll gain the tools to investigate performance in mobile applications, with\na strong understanding of mobile networking, battery usage patterns and\noptimizing paint techniques to build smooth animations on mobile.\n\n**Lesson 01: Syllabus**\n\nWe'll start with a high-level overview of the course and what to expect in it.\nWe'll also go into more depth on what we mean by mobile web development, and\nwhy you should care about it.\n\n**Lesson 02: Mobile Development Tools**\n\nWorkflow and tooling is incredibly important for building great web apps, and\nthis carries over to mobile web development. This lesson will show you how to\nuse the Chrome Developer Tools to develop for the mobile web.\n\n**Lesson 03: Mobile UX and Viewport**\n\nDesigning for the mobile web is all about a smooth user experience. This\nlesson will get you thinking about how to achieve that on mobile, and we'll\nintroduce the first of many tools you need to achieve this: the viewport.\n\n**Lesson 04: Fluid Design**\n\nMobile means lots of different devices and form factors. We'll discuss how to\nmake your site responsive, clean, and user-friendly on multiple devices and\nlayouts.\n\n**Lesson 05: Media Queries**\n\nSometimes different devices call for fundamentally different layouts. This\nlesson will teach you how to achieve this using media queries.\n\n**Lesson 06: Responsive Images**\n\nMedia requirements are different in mobile - network constraints and very high\nresolution screens set up a conflict that can be challenging. We'll talk about\nhow best to integrate media into your mobile web applications, and adaptively\nscaling images based on the environment.\n\n**Lesson 07: Optimizing Performance**\n\nUsers expect a fast, seamless experience on mobile. We'll go over optimizing\nvarious performance metrics to improve that experience, such as network, cpu,\nrendering, and battery performance.\n\n**Lesson 08: Touch**\n\nTouch input is fundamentally different from mouse input, and requires you to\nthink about your user interactions differently. We'll go over UX concerns with\ntouch-based interaction, and how to design user interactions that work across\ndevices.\n\n**Lesson 09: Input**\n\nUsing a keyboard on mobile is awful. We'll discuss ways to improve it, using\nsemantic input for form data, and other user input options on mobile.\n\n**Lesson 10: Device Access**\n\nMobile devices have a full array of sensors typically unavailable on desktop.\nWe'll talk about camera access, geolocation, and other sensors and feedback\nyou have access to on mobile.\n\n**Lesson 11: Offline and Storage**\n\nIt's an unfortunate reality that mobile users aren't always online. We'll go\nover using the local cache as well as local storage APIs to give your users a\ngreat offline (and partially-online) experience as well.\n\n**Lesson 12: Wrap-up**\n\nWe'll finish up the class by talking briefly about other topics to consider,\nsuch as app experience, monetization, deployment and distribution. We'll also\npoint you to other resources to look at moving forward in your career.\n\n",
        "name": "Mobile Web Development",
        "provider": "Udacity",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Google"
        ],
        "url": "https://www.udacity.com/course/cs256",
        "video_url": "https://www.youtube.com/embed/bFmMT2ZDQ8M?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2014-01-06",
        "desc": "\"Introduction to Databases\" was one of Stanford's inaugural three massive open online courses in the fall of 2011 and was offered again in early 2013. January 2014 will mark its third offering. The course includes video lectures and demos with in-video quizzes to check understanding, in-depth standalone quizzes, a wide variety of automatically-checked interactive programming exercises, midterm and final exams, a discussion forum, optional additional exercises with solutions, and pointers to readings and resources. Taught by Professor Jennifer Widom, the curriculum draws from Stanford's popular Introduction to Databases course.WHY LEARN ABOUT DATABASESDatabases are incredibly prevalent -- they underlie technology used by most people every day if not every hour. Databases reside behind a huge fraction of websites; they're a crucial component of telecommunications systems, banking systems, video games, and just about any other software system or electronic device that maintains some amount of persistent information. In addition to persistence, database systems provide a number of other properties that make them exceptionally useful and convenient: reliability, efficiency, scalability, concurrency control, data abstractions, and high-level query languages. Databases are so ubiquitous and important that computer science graduates frequently cite their database class as the one most useful to them in their industry or graduate-school careers.PREREQUISITES:The course does not assume prior knowledge of any specific topics, however a solid computer science foundation -- a reasonable amount of programming, as well as knowledge of basic computer science theory -- will make the material more accessible. Also bear in mind that picking and choosing which topics to learn is a great approach, and not all topics require the same level of background.SyllabusThis course covers database design and the use of database management systems for applications. It includes extensive coverage of the relational model, relational algebra, and SQL. It also covers XML data including DTDs and XML Schema for validation, and the query and transformation languages XPath, XQuery, and XSLT. The course includes database design in UML, and relational design principles based on dependencies and normal forms. Many additional key database topics from the design and application-building perspective are also covered: indexes, views, transactions, authorization, integrity constraints, triggers, on-line analytical processing (OLAP), JSON, and emerging NoSQL systems. Working through the entire course provides comprehensive coverage of the field, but most of the topics are also well-suited for \"a la carte\" learning.",
        "desc_html": "\"Introduction to Databases\" was one of Stanford's inaugural three massive open\nonline courses in the fall of 2011 and was offered again in early 2013.\nJanuary 2014 will mark its third offering. The course includes video lectures\nand demos with in-video quizzes to check understanding, in-depth standalone\nquizzes, a wide variety of automatically-checked interactive programming\nexercises, midterm and final exams, a discussion forum, optional additional\nexercises with solutions, and pointers to readings and resources. Taught by\nProfessor Jennifer Widom, the curriculum draws from Stanford's popular\nIntroduction to Databases course.\n\n**WHY LEARN ABOUT DATABASES**\n\nDatabases are incredibly prevalent -- they underlie technology used by most\npeople every day if not every hour. Databases reside behind a huge fraction of\nwebsites; they're a crucial component of telecommunications systems, banking\nsystems, video games, and just about any other software system or electronic\ndevice that maintains some amount of persistent information. In addition to\npersistence, database systems provide a number of other properties that make\nthem exceptionally useful and convenient: reliability, efficiency,\nscalability, concurrency control, data abstractions, and high-level query\nlanguages. Databases are so ubiquitous and important that computer science\ngraduates frequently cite their database class as the one most useful to them\nin their industry or graduate-school careers.\n\n******PREREQUISITES:**\n\nThe course does not assume prior knowledge of any specific topics, however a\nsolid computer science foundation -- a reasonable amount of programming, as\nwell as knowledge of basic computer science theory -- will make the material\nmore accessible. Also bear in mind that picking and choosing which topics to\nlearn is a great approach, and not all topics require the same level of\nbackground.\n\n## Syllabus\n\nThis course covers database design and the use of database management systems\nfor applications. It includes extensive coverage of the relational model,\nrelational algebra, and SQL. It also covers XML data including DTDs and XML\nSchema for validation, and the query and transformation languages XPath,\nXQuery, and XSLT. The course includes database design in UML, and relational\ndesign principles based on dependencies and normal forms. Many additional key\ndatabase topics from the design and application-building perspective are also\ncovered: indexes, views, transactions, authorization, integrity constraints,\ntriggers, on-line analytical processing (OLAP), JSON, and emerging NoSQL\nsystems. Working through the entire course provides comprehensive coverage of\nthe field, but most of the topics are also well-suited for \"a la carte\"\nlearning.\n\n",
        "name": "DB: Introduction to Databases",
        "provider": "Stanford OpenEdx",
        "rating": "4.3333333333333",
        "reviews": "3",
        "university": [
            "Stanford University"
        ],
        "url": "https://class.stanford.edu/courses/Home/Databases/Engineering/about",
        "video_url": ""
    },
    {
        "date": "2014-01-06",
        "desc": "Computer networks from ISPs to WiFi and cellular networks are a key part\nof the information economy. These networks are the foundation for the Web,\nand they enable companies such as Google, Facebook and Amazon. This course\nintroduces the fundamental problems of computer networking, from sending\nbits over wires to running distributed applications. For each problem,\nwe explore the design strategies that have proven valuable in practice.\nTopics include error detection and correction, multiple-access, bandwidth\nallocation, routing, internetworking, reliability, quality of service,\nnaming, content delivery, and security. As we cover these topics, you will\nlearn how the internals of the Internet work to support the Web and other\nnetworked applications. You will develop a detailed understanding of widely-used\nnetworking technologies such as TCP/IP, HTTP, 802.11, Ethernet, and DNS.SyllabusIntroduction, Protocols and LayeringPhysical and Link layersRetransmissions, Multiple access, SwitchingNetwork layer, InternetworkingIntra- and Inter-domain RoutingTransport layer, ReliabilityCongestion ControlDNS, Web/HTTP, Content DistributionQuality of Service and Real-time AppsNetwork Security",
        "desc_html": "Computer networks from ISPs to WiFi and cellular networks are a key part of\nthe information economy. These networks are the foundation for the Web, and\nthey enable companies such as Google, Facebook and Amazon. This course\nintroduces the fundamental problems of computer networking, from sending bits\nover wires to running distributed applications. For each problem, we explore\nthe design strategies that have proven valuable in practice. Topics include\nerror detection and correction, multiple-access, bandwidth allocation,\nrouting, internetworking, reliability, quality of service, naming, content\ndelivery, and security. As we cover these topics, you will learn how the\ninternals of the Internet work to support the Web and other networked\napplications. You will develop a detailed understanding of widely-used\nnetworking technologies such as TCP/IP, HTTP, 802.11, Ethernet, and DNS.\n\n## Syllabus\n\n  * Introduction, Protocols and Layering\n  * Physical and Link layers\n  * Retransmissions, Multiple access, Switching\n  * Network layer, Internetworking\n  * Intra- and Inter-domain Routing\n  * Transport layer, Reliability\n  * Congestion Control\n  * DNS, Web/HTTP, Content Distribution\n  * Quality of Service and Real-time Apps\n  * Network Security\n\n",
        "name": "Computer Networks",
        "provider": "Coursera",
        "rating": "5",
        "reviews": "4",
        "university": [
            "University of Washington"
        ],
        "url": "https://www.coursera.org/course/comnetworks",
        "video_url": ""
    },
    {
        "date": "2014-01-06",
        "desc": "In this course you will learn how to program in R and how to use R for\neffective data analysis. You will learn how to install and configure software\nnecessary for a statistical programming environment, discuss generic programming\nlanguage concepts as they are implemented in a high-level statistical language.\nThe course covers practical issues in statistical computing which includes\nprogramming in R, reading data into R, creating informative data graphics,\naccessing R packages, creating R packages with documentation, writing R\nfunctions, debugging, and organizing and commenting R code. Topics in statistical\ndata analysis and optimization will provide working examples.SyllabusA student who has completed this course is able to:Read formatted data into RSubset, remove missing values from, and clean tabular dataWrite custom functions in R to implement new functionality and making use of control structures such as loops and conditionalsUse the R code debugger to identify problems in R functionsMake a scatterplot/boxplot/histogram/image plot and modify a plot with custom annotationsDefine a new data class in R and write methods for that class",
        "desc_html": "In this course you will learn how to program in R and how to use R for\neffective data analysis. You will learn how to install and configure software\nnecessary for a statistical programming environment, discuss generic\nprogramming language concepts as they are implemented in a high-level\nstatistical language. The course covers practical issues in statistical\ncomputing which includes programming in R, reading data into R, creating\ninformative data graphics, accessing R packages, creating R packages with\ndocumentation, writing R functions, debugging, and organizing and commenting R\ncode. Topics in statistical data analysis and optimization will provide\nworking examples.\n\n## Syllabus\n\nA student who has completed this course is able to:\n\n  * Read formatted data into R\n  * Subset, remove missing values from, and clean tabular data\n  * Write custom functions in R to implement new functionality and making use of control structures such as loops and conditionals\n  * Use the R code debugger to identify problems in R functions\n  * Make a scatterplot/boxplot/histogram/image plot and modify a plot with custom annotations\n  * Define a new data class in R and write methods for that class\n\n",
        "name": "Computing for Data Analysis",
        "provider": "Coursera",
        "rating": "3.4285714285714",
        "reviews": "14",
        "university": [
            "Johns Hopkins University"
        ],
        "url": "https://www.coursera.org/course/compdata",
        "video_url": ""
    },
    {
        "date": "2013-12-18",
        "desc": "This course is aimed at experienced BI system administrators responsible for the implementation, deployment, and administration of SAP BusinessObjects BI 4 but is also open to anyone interested in this topic.To get the best out of this course, you should have a fundamental understanding of SAP BusinessObjects BI 4 Platform and a desire to learn more.",
        "desc_html": "This course is aimed at experienced BI system administrators responsible for\nthe implementation, deployment, and administration of SAP BusinessObjects BI 4\nbut is also open to anyone interested in this topic.  \n  \nTo get the best out of this course, you should have a fundamental\nunderstanding of SAP BusinessObjects BI 4 Platform and a desire to learn more.\n\n",
        "name": "BI 4 Platform Innovation and Implementation",
        "provider": "openSAP",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.sap.com/courses/bifour1-1",
        "video_url": ""
    },
    {
        "date": "2013-12-13",
        "desc": "SAP HANA is an in-memory data platform that is deployable as an appliance or in the cloud. At its core, it is an innovative in-memory relational database management system that makes full sense of the capabilities of current hardware to increase application performance, to reduce cost of ownership, and to enable new scenarios and applications that were not possible before.With SAP HANA, you have the opportunity to build applications that integrate the business logic, control logic, and the database layer with unprecedented performance. As a developer, one of the key questions is how you can minimize data movements. The more you can do directly on the data in memory next to the CPUs, the better the application will perform.This course will introduce you to native software development on SAP HANA. Registration, learning content, and the final exam are free of charge. However, to fully benefit from the course, you can access a fee-based system environment to develop your own code. SAP works with several cloud providers to give you a choice of infrastructure platforms and attractive pricing models to enable system access at a very low cost.",
        "desc_html": "SAP HANA is an in-memory data platform that is deployable as an appliance or\nin the cloud. At its core, it is an innovative in-memory relational database\nmanagement system that makes full sense of the capabilities of current\nhardware to increase application performance, to reduce cost of ownership, and\nto enable new scenarios and applications that were not possible before.  \n  \nWith SAP HANA, you have the opportunity to build applications that integrate\nthe business logic, control logic, and the database layer with unprecedented\nperformance. As a developer, one of the key questions is how you can minimize\ndata movements. The more you can do directly on the data in memory next to the\nCPUs, the better the application will perform.  \n  \nThis course will introduce you to native software development on SAP HANA.\nRegistration, learning content, and the final exam are free of charge.\nHowever, to fully benefit from the course, you can access a fee-based system\nenvironment to develop your own code. SAP works with several cloud providers\nto give you a choice of infrastructure platforms and attractive pricing models\nto enable system access at a very low cost.\n\n",
        "name": "Introduction to Software Development on SAP HANA",
        "provider": "openSAP",
        "rating": "5",
        "reviews": "3",
        "university": [],
        "url": "https://open.sap.com/course/hana1-1",
        "video_url": ""
    },
    {
        "date": "2013-11-24",
        "desc": "This FREE MOOC (Massive Open Online Course) investigates the use of clouds running data analytics collaboratively for processing Big Data to solve problems in Big Data Applications and Analytics. Case studies such as Netflix recommender systems, Genomic data, and more will be discussed.",
        "desc_html": "This FREE MOOC (Massive Open Online Course) investigates the use of clouds\nrunning data analytics collaboratively for processing Big Data to solve\nproblems in Big Data Applications and Analytics. Case studies such as Netflix\nrecommender systems, Genomic data, and more will be discussed.\n\n",
        "name": "Big Data applications and Analytics",
        "provider": "Independent",
        "rating": "3",
        "reviews": "1",
        "university": [
            "Indiana University"
        ],
        "url": "https://bigdatacourse.appspot.com/",
        "video_url": "https://www.youtube.com/embed/y7ZVD8EYUR4?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-11-18",
        "desc": "This class teaches you how to build powerful web and mobile apps and host them in the cloud, without writing a line of code.By the end of this short course, you'll use the skills you've developed to conceptualize and create your own app. To get you there, your instructors Samantha and Andy will first help you build an app that could be used to manage logistics at a music festival. Though this is a very specific app use case, the skills you learn will be applicable to just about any business app you&rsquo;d want to develop.Why Take This Course?After completing this course you will have built your own web and mobile app. You will become familiar with the concept of abstraction and how to think about concrete problems in their most general sense -- a concept critical for all developers. In addition, you will learn how to map out a data model, create data visualizations, and automate manual processes after analyzing your abstractions.What kind of apps can you build? Well, Facebook uses a Salesforce app to manage their entire hire-to-retire process: collecting resumes, sharing feedback, making job offers, and developing talent. And the Obama 2012 campaign built apps to mobilize their vast volunteer network and visualize the pulse of the nation in real-time. What will you build?Prerequisites and RequirementsGood news! You don't need any programming experience and you don't need to know anything about Salesforce. You'll learn the ins and outs of point-and-click development, so all you need now is an interest in building an app.One thing you should know: the skills you learn in this course are in high demand and will help further your career.See the&nbsp;Technology Requirements&nbsp;for using UdacityProjectsDesign and build your own mobile-friendly Salesforce app.SyllabusIn this class you&rsquo;ll learn the basics of building apps with Force.com, a part of Salesforce Platform. These apps are typically business apps: they solve organizational and logistical problems. You probably wouldn&rsquo;t use Salesforce to build a computer game (though you could!).There are two ways to build apps in Force.com: with or without code. This class will only cover the non-coding, point-and-click app building interface. But don&rsquo;t be fooled! Building powerful apps does not require writing code.This class contains an introductory lesson, five primary lessons where you'll be building and learning (each of which has an accompanying problem set to practice your skills), and a final project where you'll put everything together.Lesson 0: What is Salesforce (15 mins)What&nbsp;is&nbsp;Salesforce Platform? What does it do? Why should I learn about it? What kind of jobs can I get after I learn how to use it?In this lesson, you&rsquo;ll meet the instructors, get to know the class, and learn a bit about Salesforce in general.Lesson 1: Creating your First App (90 minutes)In this lesson you&rsquo;ll get acquainted with Force.com and actually build the beginnings of your first app. You&rsquo;ll get some experience taking a big problem (in this case, managing a music festival), breaking it into smaller parts, and representing those parts in Salesforce. As you do this, you&rsquo;ll learn about the basic components of a Salesforce app and add some simple (but powerful) functionality to your app. More concretely, you&rsquo;ll learn about:Salesforce Data: Salesforce represents data as objects, fields, and records. You&rsquo;ll learn what these terms mean and build them into your app.Relationships: When the pieces of your app start communicating, interesting things can happen. In this lesson you&rsquo;ll learn the basics of Salesforce relationship fields.Validation Rules: If you&rsquo;ve ever incorrectly entered your credit card number into a website, you already know about validation rules. In this lesson, you&rsquo;ll learn how to build them into your app.Formulas and Summaries: These tools let you easily keep track of quantifiable things like money spent, customers contacted, or tickets sold. In this lesson you&rsquo;ll learn how to build these automated calculations into your app.Lesson 2: Building out your Data Model (90 mins)Behind every powerful business app is a well-planned data model (also known as a schema). In this lesson you&rsquo;ll learn how to decompose a complex problem into its component pieces and then connect those pieces together with the appropriate relationship fields. The data model you build will serve as the schematic skeleton onto which you&rsquo;ll build dynamic functionality in later lessons. The specific topics covered are:One-to-Many Relationships: These relationships let the pieces of your app talk to each other. In this lesson you&rsquo;ll learn how and when (and why) to use master-detail and lookup relationships in the apps you build.Many-to-Many Relationships: You&rsquo;ll learn how to use a junction object to add flexibility into your data model.Customizing the User Interface: Good apps should be easy to use! In this lesson you&rsquo;ll learn how to configure the layout of your app to make sure the UI is simple and intuitive.Schema Builder: There are many ways to get things done in Salesforce. In this lesson you&rsquo;ll start using the schema builder to understand how your app works.Data Loading: This is a convenient way to get lots of data onto your app at once.Lesson 3: Visualizing your Data (45 mins)No matter what kind of app you&rsquo;re building, you&rsquo;ve probably got some data that you want other people in your organization to understand quickly and easily. In this lesson you&rsquo;ll learn how quickly communicate information with real-time data visualizations. Specifically, you&rsquo;ll learn how to make:Reports: These let you gather related information into one place. These let you gather data according to specific criteria and display it in neat rows and columns.Charts: These let you graphically summarize the information in a report.Dashboards: Different people want access to different information. A dashboard is a collection of charts that give specific people in your organization exactly the information that they need in real-time.Views: Data is good, but sometimes you have too much. Views let you selectively and quickly display only the data you care about.Lesson 4: Adding Automation (45 mins)In this lesson you&rsquo;ll think about how to use your app to automate manual tasks. You&rsquo;ll learn how to use two important Salesforce tools:Workflows: There are situations where a series of steps need to happen in sequence: first do this, then do that. Workflows let you automate processes like these, such as sending an email, assigning a task, or updating a field.Approval Processes: You don&rsquo;t want every job to be completely automated. Sometimes you need someone to step in and say &ldquo;this looks good.&rdquo; Approval processes add a human element to your automated tasks.Lesson 5: Make it Social. Make it Mobile. (45 mins)This is it. With a few clicks of the mouse you&rsquo;ll make your app social and mobile. The tools you&rsquo;ll use are:Chatter: This will let your users collaborate on the projects and records they work on together.Salesforce1: That web app you&rsquo;ve been building this whole time? It&rsquo;s actually a mobile app too. You&rsquo;ll even learn how to quickly customize your mobile interface and add functionality for mobile productivity.Final Project: Build your own App (2-4 hours)By the time you get here, you will have already built a music festival management app. Now it&rsquo;s time to take your own idea and turn it into a functional web and mobile app.",
        "desc_html": "This class teaches you how to build powerful web and mobile apps and host them\nin the cloud, without writing a line of code.\n\nBy the end of this short course, you'll use the skills you've developed to\nconceptualize and create your own app. To get you there, your instructors\nSamantha and Andy will first help you build an app that could be used to\nmanage logistics at a music festival. Though this is a very specific app use\ncase, the skills you learn will be applicable to just about any business app\nyou'd want to develop.\n\nWhy Take This Course?\n\nAfter completing this course you will have built your own web and mobile app.\nYou will become familiar with the concept of abstraction and how to think\nabout concrete problems in their most general sense -- a concept critical for\nall developers. In addition, you will learn how to map out a data model,\ncreate data visualizations, and automate manual processes after analyzing your\nabstractions.\n\nWhat kind of apps can you build? Well, Facebook uses a Salesforce app to\nmanage their entire hire-to-retire process: collecting resumes, sharing\nfeedback, making job offers, and developing talent. And the Obama 2012\ncampaign built apps to mobilize their vast volunteer network and visualize the\npulse of the nation in real-time. What will you build?\n\nPrerequisites and Requirements\n\nGood news! You don't need any programming experience and you don't need to\nknow anything about Salesforce. You'll learn the ins and outs of point-and-\nclick development, so all you need now is an interest in building an app.\n\nOne thing you should know: the skills you learn in this course are in high\ndemand and will help further your career.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\nProjects\n\nDesign and build your own mobile-friendly Salesforce app.\n\n## Syllabus\n\nIn this class you'll learn the basics of building apps with Force.com, a part\nof Salesforce Platform. These apps are typically business apps: they solve\norganizational and logistical problems. You probably wouldn't use Salesforce\nto build a computer game (though you could!).\n\nThere are two ways to build apps in Force.com: with or without code. This\nclass will only cover the non-coding, point-and-click app building interface.\nBut don't be fooled! Building powerful apps does not require writing code.\n\nThis class contains an introductory lesson, five primary lessons where you'll\nbe building and learning (each of which has an accompanying problem set to\npractice your skills), and a final project where you'll put everything\ntogether.\n\nLesson 0: What is Salesforce (15 mins)\n\nWhat is Salesforce Platform? What does it do? Why should I learn about it?\nWhat kind of jobs can I get after I learn how to use it?\n\nIn this lesson, you'll meet the instructors, get to know the class, and learn\na bit about Salesforce in general.\n\nLesson 1: Creating your First App (90 minutes)\n\nIn this lesson you'll get acquainted with Force.com and actually build the\nbeginnings of your first app. You'll get some experience taking a big problem\n(in this case, managing a music festival), breaking it into smaller parts, and\nrepresenting those parts in Salesforce. As you do this, you'll learn about the\nbasic components of a Salesforce app and add some simple (but powerful)\nfunctionality to your app. More concretely, you'll learn about:\n\n  * Salesforce Data: Salesforce represents data as objects, fields, and records. You'll learn what these terms mean and build them into your app.\n  * Relationships: When the pieces of your app start communicating, interesting things can happen. In this lesson you'll learn the basics of Salesforce relationship fields.\n  * Validation Rules: If you've ever incorrectly entered your credit card number into a website, you already know about validation rules. In this lesson, you'll learn how to build them into your app.\n  * Formulas and Summaries: These tools let you easily keep track of quantifiable things like money spent, customers contacted, or tickets sold. In this lesson you'll learn how to build these automated calculations into your app.\nLesson 2: Building out your Data Model (90 mins)\n\nBehind every powerful business app is a well-planned data model (also known as\na schema). In this lesson you'll learn how to decompose a complex problem into\nits component pieces and then connect those pieces together with the\nappropriate relationship fields. The data model you build will serve as the\nschematic skeleton onto which you'll build dynamic functionality in later\nlessons. The specific topics covered are:\n\n  * One-to-Many Relationships: These relationships let the pieces of your app talk to each other. In this lesson you'll learn how and when (and why) to use master-detail and lookup relationships in the apps you build.\n  * Many-to-Many Relationships: You'll learn how to use a junction object to add flexibility into your data model.\n  * Customizing the User Interface: Good apps should be easy to use! In this lesson you'll learn how to configure the layout of your app to make sure the UI is simple and intuitive.\n  * Schema Builder: There are many ways to get things done in Salesforce. In this lesson you'll start using the schema builder to understand how your app works.\n  * Data Loading: This is a convenient way to get lots of data onto your app at once.\nLesson 3: Visualizing your Data (45 mins)\n\nNo matter what kind of app you're building, you've probably got some data that\nyou want other people in your organization to understand quickly and easily.\nIn this lesson you'll learn how quickly communicate information with real-time\ndata visualizations. Specifically, you'll learn how to make:\n\n  * Reports: These let you gather related information into one place. These let you gather data according to specific criteria and display it in neat rows and columns.\n  * Charts: These let you graphically summarize the information in a report.\n  * Dashboards: Different people want access to different information. A dashboard is a collection of charts that give specific people in your organization exactly the information that they need in real-time.\n  * Views: Data is good, but sometimes you have too much. Views let you selectively and quickly display only the data you care about.\nLesson 4: Adding Automation (45 mins)\n\nIn this lesson you'll think about how to use your app to automate manual\ntasks. You'll learn how to use two important Salesforce tools:\n\n  * Workflows: There are situations where a series of steps need to happen in sequence: first do this, then do that. Workflows let you automate processes like these, such as sending an email, assigning a task, or updating a field.\n  * Approval Processes: You don't want every job to be completely automated. Sometimes you need someone to step in and say \"this looks good.\" Approval processes add a human element to your automated tasks.\nLesson 5: Make it Social. Make it Mobile. (45 mins)\n\nThis is it. With a few clicks of the mouse you'll make your app social and\nmobile. The tools you'll use are:\n\n  * Chatter: This will let your users collaborate on the projects and records they work on together.\n  * Salesforce1: That web app you've been building this whole time? It's actually a mobile app too. You'll even learn how to quickly customize your mobile interface and add functionality for mobile productivity.\nFinal Project: Build your own App (2-4 hours)\n\nBy the time you get here, you will have already built a music festival\nmanagement app. Now it's time to take your own idea and turn it into a\nfunctional web and mobile app.\n\n",
        "name": "Introduction to Salesforce App Development",
        "provider": "Udacity",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Salesforce"
        ],
        "url": "https://www.udacity.com/course/ud162",
        "video_url": "https://www.youtube.com/embed/nB-OjiwuOTk?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-11-18",
        "desc": "Curso de Estad\u00edstica aplicada a las Ciencias de la Salud. En esta primera parte el curso se centrar\u00e1 en la estad\u00edstica descriptiva de una o m\u00e1s variables y de sus relaciones. El curso tambi\u00e9n introducir\u00e1 el manejo del programa de an\u00e1lisis de datos R y el paque rk.Teaching con el que se realizar\u00e1n los an\u00e1lisis estad\u00edsticos.",
        "desc_html": "Curso de Estad\u00edstica aplicada a las Ciencias de la Salud. En esta primera\nparte el curso se centrar\u00e1 en la estad\u00edstica descriptiva de una o m\u00e1s\nvariables y de sus relaciones. El curso tambi\u00e9n introducir\u00e1 el manejo del\nprograma de an\u00e1lisis de datos R y el paque rk.Teaching con el que se\nrealizar\u00e1n los an\u00e1lisis estad\u00edsticos.\n\n",
        "name": "Curso Pr\u00e1ctico de Bioestad\u00edstica con R (Primera parte)",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.miriadax.net/web/curso-practico-bioestadistica-r",
        "video_url": "https://www.youtube.com/embed/BTFOsbzInZo?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-11-18",
        "desc": "This course on Grid Computing aims to provide you with an understanding of the key concepts that underlie Grid technology and the role that Grid Computing can play in computationally intensive problems. It also aims to help researchers, regardless of their major (High Energy Physics, Biology, Earth observation, etc), to feel confident of their ability to use the Grid Infrastructure. This includes working with portals, workflow management systems and Grid middleware. By demonstrating practical examples on Grid, you will effectively develop your skills on accessing the grid resources, submitting workloads and developing applications on shared computational and storage grid resources.",
        "desc_html": "This course on Grid Computing aims to provide you with an understanding of the\nkey concepts that underlie Grid technology and the role that Grid Computing\ncan play in computationally intensive problems. It also aims to help\nresearchers, regardless of their major (High Energy Physics, Biology, Earth\nobservation, etc), to feel confident of their ability to use the Grid\nInfrastructure. This includes working with portals, workflow management\nsystems and Grid middleware. By demonstrating practical examples on Grid, you\nwill effectively develop your skills on accessing the grid resources,\nsubmitting workloads and developing applications on shared computational and\nstorage grid resources.\n\n",
        "name": "Introduction to Grid Computing",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of Amsterdam"
        ],
        "url": "http://mooc.uva.nl/portal",
        "video_url": "https://www.youtube.com/embed/XAcXOxLRNjI?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-11-14",
        "desc": "The Apache&trade; Hadoop&reg; project develops open-source software for reliable, scalable, distributed computing. Learn the fundamental principles behind it, and how you can use its power to make sense of your Big Data.Why Take This Course?How Hadoop fits into the world (recognize the problems it solves)Understand the concepts of HDFS and MapReduce (find out how it solves the problems)Write MapReduce programs (see how we solve the problems)Practice solving problems on your ownPrerequisites and RequirementsLesson 1 does not have technical prerequisites and is a good overview of Hadoop and MapReduce for managers.To get the most out of the class you however need basic programming skills in Python, on a level provided by introductory courses, like our Introduction to Computer Science.To learn more about Hadoop, you can also check out the book&nbsp;Hadoop: The Definitive Guide.See the&nbsp;Technology Requirements&nbsp;for using UdacityWhat Will I Learn?ProjectsUse MapReduce to reveal surprising trends in Udacity forum data.SyllabusLesson 1What is 'big data'? The dimensions of Big Data. Scaling problems. HDFS and Hadoop ecosystem.Lesson 2The Basics of HDFS, MapReduce and Hadoop cluster.Lesson 3Writing a MapReduce program to answer questions about data.Lesson 4MapReduce design patterns.Final ProjectAnswering questions about big sales data and analyzing large website logs.",
        "desc_html": "The Apache\u2122 Hadoop\u00ae project develops open-source software for reliable,\nscalable, distributed computing. Learn the fundamental principles behind it,\nand how you can use its power to make sense of your Big Data.\n\n**Why Take This Course?**\n\n  * How Hadoop fits into the world (recognize the problems it solves)\n  * Understand the concepts of HDFS and MapReduce (find out how it solves the problems)\n  * Write MapReduce programs (see how we solve the problems)\n  * Practice solving problems on your own\n\n**Prerequisites and Requirements**\n\nLesson 1 does not have technical prerequisites and is a good overview of\nHadoop and MapReduce for managers.\n\nTo get the most out of the class you however need basic programming skills in\nPython, on a level provided by introductory courses, like our Introduction to\nComputer Science.\n\nTo learn more about Hadoop, you can also check out the book [Hadoop: The\nDefinitive Guide](http://www.amazon.com/gp/product/1449311520/ref=as_li_ss_tl?\nie=UTF8&camp=1789&creative=390957&creativeASIN=1449311520&linkCode=as2&tag=uda\ncity-20).\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n**What Will I Learn?** **Projects**\n\nUse MapReduce to reveal surprising trends in Udacity forum data.\n\n## Syllabus\n\n**Lesson 1**\n\nWhat is 'big data'? The dimensions of Big Data. Scaling problems. HDFS and\nHadoop ecosystem.\n\n**Lesson 2**\n\nThe Basics of HDFS, MapReduce and Hadoop cluster.\n\n**Lesson 3**\n\nWriting a MapReduce program to answer questions about data.\n\n**Lesson 4**\n\nMapReduce design patterns.\n\n**Final Project**\n\nAnswering questions about big sales data and analyzing large website logs.\n\n",
        "name": "Introduction to Hadoop and MapReduce",
        "provider": "Udacity",
        "rating": "5",
        "reviews": "1",
        "university": [
            "Cloudera"
        ],
        "url": "https://www.udacity.com/course/ud617",
        "video_url": "https://www.youtube.com/embed/44K_bzTL_SM?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-11-11",
        "desc": "Firefox OS, el nuevo sistema operativo libre para tel\u00e9fonos m\u00f3viles y tabletas de la Fundaci\u00f3n Mozilla, utiliza software libre y se programa en HTML5, utilizando HTML, CSS y Javascript, como las aplicaciones Web de los grandes portales de Internet, Google, Twitter, Facebook, Amazon. etc. Su calidad y car\u00e1cter abierto ha conseguido el apoyo de Telef\u00f3nica, Qualcomm, LG, Huawei Foxconn, etc.Este curso es para principiantes y capacita para un primer nivel de desarrollo de aplicaciones m\u00f3viles gen\u00e9ricas en HTML5 y para Firefox OS. El curso ilustra los conceptos con ejemplos sencillos y multidisciplinares, tanto de programaci\u00f3n, como de dise\u00f1o gr\u00e1fico o de dise\u00f1o de la interacci\u00f3n. Los participantes aprender\u00e1n a dise\u00f1ar interfaces con HTML y CSS, as\u00ed como a programar en JavaScript nuevas funcionalidades y aplicaciones. Se ense\u00f1ar\u00e1 a crear aplicaciones Web gen\u00e9ricas independientes de dispositivo, as\u00ed como a empaquetarlas para FirefoxOS. Empaquetarlas para Android o iPhone es sencillo, pero no se cubre en este curso.",
        "desc_html": "Firefox OS, el nuevo sistema operativo libre para tel\u00e9fonos m\u00f3viles y tabletas\nde la Fundaci\u00f3n Mozilla, utiliza software libre y se programa en HTML5,\nutilizando HTML, CSS y Javascript, como las aplicaciones Web de los grandes\nportales de Internet, Google, Twitter, Facebook, Amazon. etc. Su calidad y\ncar\u00e1cter abierto ha conseguido el apoyo de Telef\u00f3nica, Qualcomm, LG, Huawei\nFoxconn, etc.  \n  \nEste curso es para principiantes y capacita para un primer nivel de desarrollo\nde aplicaciones m\u00f3viles gen\u00e9ricas en HTML5 y para Firefox OS. El curso ilustra\nlos conceptos con ejemplos sencillos y multidisciplinares, tanto de\nprogramaci\u00f3n, como de dise\u00f1o gr\u00e1fico o de dise\u00f1o de la interacci\u00f3n. Los\nparticipantes aprender\u00e1n a dise\u00f1ar interfaces con HTML y CSS, as\u00ed como a\nprogramar en JavaScript nuevas funcionalidades y aplicaciones. Se ense\u00f1ar\u00e1 a\ncrear aplicaciones Web gen\u00e9ricas independientes de dispositivo, as\u00ed como a\nempaquetarlas para FirefoxOS. Empaquetarlas para Android o iPhone es sencillo,\npero no se cubre en este curso.\n\n",
        "name": "Desarrollo de Aplicaciones en HTML5 y para Dispositivos M\u00f3viles Firefox O.S.",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.miriadax.net/web/firefox-os",
        "video_url": "https://www.youtube.com/embed/p1mNhmAPExQ?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-11-04",
        "desc": "R is a software environment for statistical computing and graphics generation. R works in a wide range of operating systems such as UNIX, Windows or MacOS. Despite its potential, versatility and flexibility arid R may appear when the user is interacting with the components. It is said that \"the learning curve is slow\". However, the results it produces are highly satisfactory. This course is intended to \"lubricate\" those first encounters with this statistical environment.",
        "desc_html": "R is a software environment for statistical computing and graphics generation.\nR works in a wide range of operating systems such as UNIX, Windows or MacOS.\nDespite its potential, versatility and flexibility arid R may appear when the\nuser is interacting with the components. It is said that \"the learning curve\nis slow\". However, the results it produces are highly satisfactory. This\ncourse is intended to \"lubricate\" those first encounters with this statistical\nenvironment.\n\n",
        "name": "Aprende An\u00e1lisis Estad\u00edstico de Datos con R",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.miriadax.net/web/aprende-analisis-estadistico-datos-r",
        "video_url": "https://www.youtube.com/embed/Ai5BuFKOero?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-11-04",
        "desc": "R es un entorno inform\u00e1tico de computaci\u00f3n estad\u00edstica y de generaci\u00f3n de gr\u00e1ficos. R funciona en un amplio rango de sistemas operativos como UNIX, Windows o MacOS. Pese a su potencialidad, versatilidad y flexibilidad; R puede parecer \u00e1rido en el momento en que el usuario trata de interaccionar con sus componentes. Se suele decir que \u201cla curva de aprendizaje es lenta\u201d. Sin embargo, los resultados que produce son ampliamente satisfactorios. Este curso est\u00e1 destinado a \u201clubricar\u201d esos primeros encuentros con \u00e9ste entorno estad\u00edstico.",
        "desc_html": "R es un entorno inform\u00e1tico de computaci\u00f3n estad\u00edstica y de generaci\u00f3n de\ngr\u00e1ficos. R funciona en un amplio rango de sistemas operativos como UNIX,\nWindows o MacOS. Pese a su potencialidad, versatilidad y flexibilidad; R puede\nparecer \u00e1rido en el momento en que el usuario trata de interaccionar con sus\ncomponentes. Se suele decir que \u201cla curva de aprendizaje es lenta\u201d. Sin\nembargo, los resultados que produce son ampliamente satisfactorios. Este curso\nest\u00e1 destinado a \u201clubricar\u201d esos primeros encuentros con \u00e9ste entorno\nestad\u00edstico.\n\n",
        "name": "Aprende An\u00e1lisis Estad\u00edstico de Datos con R",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.miriadax.net/web/aprende-analisis-estadistico-datos-r",
        "video_url": "https://www.youtube.com/embed/Ai5BuFKOero?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-11-04",
        "desc": "\"Desarrollo de Aplicaciones para Android\" ser&aacute; un curso altamente pr&aacute;ctico con demos y tareas de c&oacute;digo semanales. Requiere que el estudiante conozca el paradigma de programaci&oacute;n orientada a objetos y de preferencia el lenguaje de programaci&oacute;n Java.&nbsp;Syllabus&nbsp;Introducci&oacute;n a AndroidLayouts y elementos de interfaz gr&aacute;ficaBloques b&aacute;sicos de aplicaci&oacute;nLayouts y elementos de interfaz gr&aacute;ficaAlmacenamiento y datosAcceso a hardwarePublicaci&oacute;n de apps&nbsp;&nbsp;",
        "desc_html": "\"Desarrollo de Aplicaciones para Android\" sera un curso altamente practico con\ndemos y tareas de codigo semanales. Requiere que el estudiante conozca el\nparadigma de programacion orientada a objetos y de preferencia el lenguaje de\nprogramacion Java.\n\n## Syllabus\n\n\n\n  * Introduccion a Android\n  * Layouts y elementos de interfaz grafica\n  * Bloques basicos de aplicacion\n  * Layouts y elementos de interfaz grafica\n  * Almacenamiento y datos\n  * Acceso a hardware\n  * Publicacion de apps\n\n\n\n\n\n",
        "name": "Desarrollo de Aplicaciones para Android",
        "provider": "Telescopio",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Galileo University"
        ],
        "url": "http://telescopio.galileo.edu/curso/desarrollo-de-aplicaciones-para-android/",
        "video_url": "https://www.youtube.com/embed/OH3OWonOCu8?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-11-04",
        "desc": "This is a follow-on for the Coursera class \u201cPrinciples of Functional Programming in Scala\u201d, which so far had more than 100\u2019000 inscriptions over two iterations of the course, with some of the highest completion rates of any massive open online course worldwide.The aim of the second course is to teach the principles of reactive programming. Reactive programming is an emerging discipline which combines concurrency and event-based and asynchronous systems. It is essential for writing any kind of web-service or distributed system and is also at the core of many high-performance concurrent systems. Reactive programming can be seen as a natural extension of higher-order functional programming to concurrent systems that deal with distributed state&nbsp;by coordinating and orchestrating asynchronous data streams exchanged by actors.In this course you will discover key elements for writing reactive programs in a composable way. You will find out how to apply these building blocks in the construction of event-driven systems that are scalable and resilient.The course is hands on; most units introduce short programs that serve as illustrations of important concepts and invite you to play with them, modifying and improving them. The course is complemented by a series of assignments, which are also programming projects.Personalized Tutoring by Typesafe: Typesafe offers supervised tutorial sessions accompanying select Coursera classes. In weekly, one-hour tutorial sessions experts from Typesafe provide in-depth answers to questions about the course material, and discuss solutions to homework assignments past the deadline. Tutorial groups are small (10 participants max) in order to meet individual mentoring needs as much as possible. Tutorial session slots are offered in both European and American time zones.Registration for tutoring by Typesafe is open.SyllabusWeek 1: Review of Principles of Functional Programming: substitution model, for-expressions and how they relate to monads. Introduces a new implementation of for-expressions: random value generators. Shows how this can be used in randomized testing and gives an overview of ScalaCheck, a tool which implements this idea.Week 2: Functional programming and mutable state. What makes an object mutable? How this impacts the substitution model. Extended example: Digital circuit simulation.Week 3: Futures. Introduces futures as another monad, with for-expressions as concrete syntax. Shows how futures can be composed to avoid thread blocking. Discusses cross-thread error handling.Week 4: Reactive stream processing. \u00a0Generalizing futures to reactive computations over streams. Stream operators.Week 5: Actors. Introduces the Actor Model, actors as encapsulated units of consistency, asynchronous message passing, discusses different message delivery semantics (at most once, at least once, exactly once) and eventual consistency.Week 6: Supervision. Introduces reification of failure, hierarchical failure handling, the Error Kernel pattern, lifecycle monitoring, discusses transient and persistent state.Week 7: Conversation Patterns. Discusses the management of conversational state between actors and patterns for flow control, routing of messages to pools of actors for resilience or load balancing, acknowledgement of reception to achieve reliable delivery.",
        "desc_html": "This is a follow-on for the Coursera class \u201cPrinciples of Functional\nProgramming in Scala\u201d, which so far had more than 100\u2019000 inscriptions over\ntwo iterations of the course, with some of the highest completion rates of any\nmassive open online course worldwide.\n\nThe aim of the second course is to teach the principles of reactive\nprogramming. Reactive programming is an emerging discipline which combines\nconcurrency and event-based and asynchronous systems. It is essential for\nwriting any kind of web-service or distributed system and is also at the core\nof many high-performance concurrent systems. Reactive programming can be seen\nas a natural extension of higher-order functional programming to concurrent\nsystems that deal with distributed state by coordinating and orchestrating\nasynchronous data streams exchanged by actors.\n\nIn this course you will discover key elements for writing reactive programs in\na composable way. You will find out how to apply these building blocks in the\nconstruction of event-driven systems that are scalable and resilient.\n\nThe course is hands on; most units introduce short programs that serve as\nillustrations of important concepts and invite you to play with them,\nmodifying and improving them. The course is complemented by a series of\nassignments, which are also programming projects.  \n  \n\n**Personalized Tutoring by Typesafe**: Typesafe offers supervised tutorial sessions accompanying select Coursera classes. In weekly, one-hour tutorial sessions experts from Typesafe provide in-depth answers to questions about the course material, and discuss solutions to homework assignments past the deadline. Tutorial groups are small (10 participants max) in order to meet individual mentoring needs as much as possible. Tutorial session slots are offered in both European and American time zones. [Registration for tutoring by Typesafe is open](https://attendee.gototraining.com/4q80l/catalog/4020625203792931584).\n\n## Syllabus\n\n**Week 1**: Review of Principles of Functional Programming: substitution model, for-expressions and how they relate to monads. Introduces a new implementation of for-expressions: random value generators. Shows how this can be used in randomized testing and gives an overview of ScalaCheck, a tool which implements this idea.\n\n**Week 2**: Functional programming and mutable state. What makes an object mutable? How this impacts the substitution model. Extended example: Digital circuit simulation.\n\n**Week 3**: Futures. Introduces futures as another monad, with for-expressions as concrete syntax. Shows how futures can be composed to avoid thread blocking. Discusses cross-thread error handling.\n\n**Week 4**: Reactive stream processing. \u00a0Generalizing futures to reactive computations over streams. Stream operators.\n\n**Week 5**: Actors. Introduces the Actor Model, actors as encapsulated units of consistency, asynchronous message passing, discusses different message delivery semantics (at most once, at least once, exactly once) and eventual consistency.\n\n**Week 6**: Supervision. Introduces reification of failure, hierarchical failure handling, the Error Kernel pattern, lifecycle monitoring, discusses transient and persistent state.\n\n**Week 7**: Conversation Patterns. Discusses the management of conversational state between actors and patterns for flow control, routing of messages to pools of actors for resilience or load balancing, acknowledgement of reception to achieve reliable delivery. \n\n",
        "name": "Principles of Reactive Programming",
        "provider": "Coursera",
        "rating": "4.7692307692308",
        "reviews": "13",
        "university": [
            "\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne"
        ],
        "url": "https://www.coursera.org/course/reactive",
        "video_url": ""
    },
    {
        "date": "2013-10-30",
        "desc": "En este curso vamos a aprender a escribir nuestros propios programas, usando software libre. Vamos a usar el lenguaje M, disponible en los paquetes MATLAB y Octave UPM, que son ampliamente usados en ciencias e ingenier\u00eda. No es necesario tener ning\u00fan conocimiento previo para seguir el curso, y al finalizar, habr\u00e1s sido capaz de tomar las riendas de tu ordenador y escribir tus propios programas, incluso con gr\u00e1ficos sencillos.",
        "desc_html": "En este curso vamos a aprender a escribir nuestros propios programas, usando\nsoftware libre. Vamos a usar el lenguaje M, disponible en los paquetes MATLAB\ny Octave UPM, que son ampliamente usados en ciencias e ingenier\u00eda. No es\nnecesario tener ning\u00fan conocimiento previo para seguir el curso, y al\nfinalizar, habr\u00e1s sido capaz de tomar las riendas de tu ordenador y escribir\ntus propios programas, incluso con gr\u00e1ficos sencillos.\n\n",
        "name": "Introducci\u00f3n a la Programaci\u00f3n para Ciencias e Ingenier\u00eda",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.miriadax.net/web/introduccion-programacion-ciencias-ingenieria",
        "video_url": "https://www.youtube.com/embed/hpeyceDy8eo?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-10-30",
        "desc": "En este curso vamos a aprender a escribir nuestros propios programas, usando software libre. Vamos a usar el lenguaje M, disponible en los paquetes MATLAB y Octave UPM, que son ampliamente usados en ciencias e ingenier\u00eda. No es necesario tener ning\u00fan conocimiento previo para seguir el curso, y al finalizar, habr\u00e1s sido capaz de tomar las riendas de tu ordenador y escribir tus propios programas, incluso con gr\u00e1ficos sencillos.",
        "desc_html": "En este curso vamos a aprender a escribir nuestros propios programas, usando\nsoftware libre. Vamos a usar el lenguaje M, disponible en los paquetes MATLAB\ny Octave UPM, que son ampliamente usados en ciencias e ingenier\u00eda. No es\nnecesario tener ning\u00fan conocimiento previo para seguir el curso, y al\nfinalizar, habr\u00e1s sido capaz de tomar las riendas de tu ordenador y escribir\ntus propios programas, incluso con gr\u00e1ficos sencillos.\n\n",
        "name": "Introducci\u00f3n a la Programaci\u00f3n para Ciencias e Ingenier\u00eda",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Universidad Polit\u00e9cnica de Madrid"
        ],
        "url": "https://www.miriadax.net/web/introduccion-programacion-ciencias-ingenieria",
        "video_url": "https://www.youtube.com/embed/hpeyceDy8eo?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-10-29",
        "desc": "Mobile technology has become an integral component in our lives and is driving the expectations of how we interact with our business systems.Like SAP, top businesses today recognize the value of enabling their employees to work anytime, anywhere through the use of mobile technologies. However, providing this ability in an enterprise context can become quite tricky.We certainly want to be able to do business on our phones and tablets, but we\u2019re not necessarily aware of what needs to go on behind the scenes to enable this.In this course, we\u2019ll learn what it takes to make an enterprise-ready app with SAP mobile solutions.",
        "desc_html": "Mobile technology has become an integral component in our lives and is driving\nthe expectations of how we interact with our business systems.  \nLike SAP, top businesses today recognize the value of enabling their employees\nto work anytime, anywhere through the use of mobile technologies. However,\nproviding this ability in an enterprise context can become quite tricky.  \nWe certainly want to be able to do business on our phones and tablets, but\nwe\u2019re not necessarily aware of what needs to go on behind the scenes to enable\nthis.  \n  \nIn this course, we\u2019ll learn what it takes to make an enterprise-ready app with\nSAP mobile solutions.\n\n",
        "name": "Introduction to Mobile Solution Development",
        "provider": "openSAP",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.sap.com/course/mobile1",
        "video_url": ""
    },
    {
        "date": "2013-10-28",
        "desc": "As the world's data grow exponentially, organizations across all sectors, including government and not-for-profit, need to understand, manage and use big, complex data sets&mdash;known as big data.",
        "desc_html": "As the world's data grow exponentially, organizations across all sectors,\nincluding government and not-for-profit, need to understand, manage and use\nbig, complex data sets--known as big data.\n\n",
        "name": "Applied Data Science: An Introduction",
        "provider": "CourseSites",
        "rating": "4",
        "reviews": "3",
        "university": [
            "Syracuse University"
        ],
        "url": "https://www.coursesites.com/webapps/Bb-sites-course-creation-BBLEARN/courseHomepage.htmlx?course_id=_276927_1",
        "video_url": ""
    },
    {
        "date": "2013-10-28",
        "desc": "You have probably heard that this is the era of \u201cBig Data\u201d. Stories about\n    companies or scientists using data to recommend movies, discover who is\n    pregnant based on credit card receipts, or confirm the existence of the\n    Higgs Boson regularly appear in Forbes, the Economist, the Wall Street\n    Journal, and The New York Times. But how does one turn data into this type\n    of insight? The answer is data analysis and applied statistics. Data analysis\n    is the process of finding the right data to answer your question, understanding\n    the processes underlying the data, discovering the important patterns in\n    the data, and then communicating your results to have the biggest possible\n    impact. There is a critical shortage of people with these skills in the\n    workforce, which is why Hal Varian (Chief Economist at Google) says that\n    being a statistician will be the sexy job for the next 10 years.This course is an applied statistics course focusing on data analysis.\n    The course will begin with an overview of how to organize, perform, and\n    write-up data analyses. Then we will cover some of the most popular and\n    widely used statistical methods like linear regression, principal components\n    analysis, cross-validation, and p-values. Instead of focusing on mathematical\n    details, the lectures will be designed to help you apply these techniques\n    to real data using the R statistical programming language, interpret the\n    results, and diagnose potential problems in your analysis. You will also\n    have the opportunity to critique and assist your fellow classmates with\n    their data analyses.",
        "desc_html": "You have probably heard that this is the era of \u201cBig Data\u201d. Stories about\ncompanies or scientists using data to recommend movies, discover who is\npregnant based on credit card receipts, or confirm the existence of the Higgs\nBoson regularly appear in Forbes, the Economist, the Wall Street Journal, and\nThe New York Times. But how does one turn data into this type of insight? The\nanswer is data analysis and applied statistics. Data analysis is the process\nof finding the right data to answer your question, understanding the processes\nunderlying the data, discovering the important patterns in the data, and then\ncommunicating your results to have the biggest possible impact. There is a\ncritical shortage of people with these skills in the workforce, which is why\nHal Varian (Chief Economist at Google) says that being a statistician will be\nthe sexy job for the next 10 years.  \n  \nThis course is an applied statistics course focusing on data analysis. The\ncourse will begin with an overview of how to organize, perform, and write-up\ndata analyses. Then we will cover some of the most popular and widely used\nstatistical methods like linear regression, principal components analysis,\ncross-validation, and p-values. Instead of focusing on mathematical details,\nthe lectures will be designed to help you apply these techniques to real data\nusing the R statistical programming language, interpret the results, and\ndiagnose potential problems in your analysis. You will also have the\nopportunity to critique and assist your fellow classmates with their data\nanalyses.\n\n",
        "name": "Data Analysis",
        "provider": "Coursera",
        "rating": "4.1538461538462",
        "reviews": "13",
        "university": [
            "Johns Hopkins University"
        ],
        "url": "https://www.coursera.org/course/dataanalysis",
        "video_url": ""
    },
    {
        "date": "2013-10-20",
        "desc": "\u4ecb\u7ecd\u89c6\u9891\u82e5\u65e0\u6cd5\u6b63\u5e38\u64ad\u653e\uff0c\u8bf7\u770b\u8fd9\u91cc\u3002&nbsp;\u8ba1\u7b97\u673a\u662f\u73b0\u4ee3\u793e\u4f1a\u4e2d\u7528\u4e8e\u89e3\u51b3\u95ee\u9898\u7684\u91cd\u8981\u5de5\u5177\u3002\u5229\u7528\u8ba1\u7b97\u673a\u89e3\u51b3\u5b9e\u9645\u95ee\u9898\u9700\u8981\u5c06\u95ee\u9898\u62bd\u8c61\uff0c\u5e76\u5bf9\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff0c\u6700\u540e\u901a\u8fc7\u8ba1\u7b97\u673a\u7a0b\u5e8f\u6c42\u89e3\u95ee\u9898\u3002\u800c\u672c\u95e8\u8bfe\u7a0b\u4e3b\u8981\u5185\u5bb9\u5c31\u662f\u5bf9\u4ee5\u4e0a\u5185\u5bb9\u8fdb\u884c\u7814\u7a76\u3002\u56fe\u7075\u5956\u83b7\u5f97\u8005N.Wirth\u5199\u4e86\u4e00\u672c\u7ecf\u5178\u8457\u4f5c\u201c\u7a0b\u5e8f=\u7b97\u6cd5+\u6570\u636e\u7ed3\u6784\u201d\u3002\u6570\u636e\u7ed3\u6784\uff0c\u662f\u62bd\u8c61\u7684\u8868\u793a\u6570\u636e\u7684\u65b9\u5f0f\uff1b\u7b97\u6cd5\uff0c\u5219\u662f\u8ba1\u7b97\u7684\u4e00\u7cfb\u5217\u6709\u6548\u3001\u901a\u7528\u7684\u6b65\u9aa4\u3002\u7b97\u6cd5\u4e0e\u6570\u636e\u7ed3\u6784\u662f\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u76f8\u8f85\u76f8\u6210\u7684\u4e24\u4e2a\u65b9\u9762\u3002\u6211\u4eec\u4f1a\u56f4\u7ed5\u7740\u201c\u7b97\u6cd5+\u6570\u636e\u7ed3\u6784=\u7a0b\u5e8f\u201d\u7684\u601d\u8def\uff0c\u4ee5\u95ee\u9898\u6c42\u89e3\u4e3a\u5bfc\u5411\u8fdb\u884c\u5b66\u4e60\u3002\u5e0c\u671b\u80fd\u591f\u5e2e\u52a9\u5927\u5bb6\u63d0\u9ad8\u7406\u8bba\u3001\u62bd\u8c61\u3001\u8bbe\u8ba1\u7684\u80fd\u529b\u3002\u5728\u624e\u5b9e\u7684\u7ecf\u5178\u7406\u8bba\u57fa\u7840\u4e0a\uff0c\u8fd0\u7528\u95ee\u9898\u62bd\u8c61\u3001\u6570\u636e\u62bd\u8c61\u3001\u7b97\u6cd5\u62bd\u8c61\u6765\u5206\u6790\u95ee\u9898\uff0c\u5e94\u7528\u9002\u5f53\u7684\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u6765\u8bbe\u8ba1\u548c\u5b9e\u73b0\u76f8\u5e94\u7684\u7a0b\u5e8f\u3002\u901a\u8fc7\u8bfe\u7a0b\u5b66\u4e60\uff0c\u5927\u5bb6\u7684\u62bd\u8c61\u601d\u7ef4\u80fd\u529b\u3001\u95ee\u9898\u6c42\u89e3\u80fd\u529b\u5c06\u5f97\u5230\u8f83\u5927\u63d0\u5347\uff0c\u7f16\u7a0b\u80fd\u529b\u548c\u4ee3\u7801\u8d28\u91cf\u4f1a\u6709\u8d28\u7684\u98de\u8dc3\uff01\u5728\u6c42\u89e3\u5b9e\u9645\u95ee\u9898\u65b9\u9762\uff0c\u6211\u4eec\u4f1a\u5b66\u4e60\u5230\u901a\u8fc7\u6743\u8861\u65f6\u7a7a\u548c\u5176\u4ed6\u8d44\u6e90\u5f00\u9500\uff0c\u5229\u7528\u6570\u636e\u7ed3\u6784\u6765\u7ec4\u7ec7\u6570\u636e\u3001\u8bbe\u8ba1\u9ad8\u6548\u7684\u7b97\u6cd5\u3001\u5b8c\u6210\u9ad8\u8d28\u91cf\u7684\u7a0b\u5e8f\u4ee5\u6ee1\u8db3\u9519\u7efc\u590d\u6742\u7684\u5b9e\u9645\u5e94\u7528\u9700\u8981\u3002\u6b64\u5916\uff0c\u8bfe\u7a0b\u6240\u5b66\u5230\u7684\u5185\u5bb9\u4f1a\u88ab\u5229\u7528\u5230\u8ba1\u7b97\u673a\u79d1\u5b66\u540e\u7eed\u7684\u5404\u4e2a\u8bfe\u7a0b\u4e2d\uff0c\u5982\u64cd\u4f5c\u7cfb\u7edf\u3001\u8f6f\u4ef6\u5de5\u7a0b\u3001\u6570\u636e\u5e93\u6982\u8bba\u3001\u7f16\u8bd1\u6280\u672f\u3001\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u3001\u4eba\u673a\u4ea4\u4e92\u7b49\u3002\u5e0c\u671b\u53ef\u4ee5\u4e3a\u5927\u5bb6\u5c06\u6765\u4ece\u4e8b\u8ba1\u7b97\u673a\u76f8\u5173\u7684\u5b66\u4e60\u3001\u7814\u7a76\u548c\u5f00\u53d1\u5de5\u4f5c\u6253\u4e0b\u624e\u5b9e\u7684\u57fa\u7840\u3002\u672c\u8bfe\u7a0b\u91c7\u7528\u5f20\u94ed\u4e3b\u7f16\u7684\u56fd\u5bb6\u201c\u5341\u4e00\u4e94\u201d\u89c4\u5212\u6559\u6750\u300a\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u300b\uff08\u9ad8\u7b49\u6559\u80b2\u51fa\u7248\u793e\uff09\u3002\u9002\u5408\u8ba1\u7b97\u673a\u4ee5\u53ca\u76f8\u5173\u7406\u5de5\u4e13\u4e1a\u7684\u5927\u4e8c\u672c\u79d1\u751f\u5b66\u4e60\uff0c\u9700\u8981\u5148\u4fee\u8fc7\u8ba1\u7b97\u6982\u8bba\u7b49\u8bfe\u7a0b\uff0c\u5177\u6709\u7ed3\u6784\u5316\u548c\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u3002\u8bfe\u7a0b\u4e3b\u8981\u5305\u62ec\u7684\u5185\u5bb9\u6709\uff1a\u7ebf\u6027\u8868\uff0c\u6808\u4e0e\u961f\u5217\uff0c\u5b57\u7b26\u4e32\uff0c\u4e8c\u53c9\u6811\uff0c\u6811\uff0c\u56fe\uff0c\u6392\u5e8f\uff08\u5185\u6392\u5e8f\uff0c\u5916\u6392\u5e8f\uff09\uff0c\u68c0\u7d22\uff0c\u7d22\u5f15\u3001\u4ee5\u53ca\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u3002\u8bfe\u7a0b\u6301\u7eed14\u5468\uff0c\u5b66\u4e60\u8005\u6bcf\u5468\u5728\u672c\u8bfe\u7a0b\u4e0a\u9700\u8981\u6295\u51654\uff0d8\u5c0f\u65f6\u3002\u4f5c\u4e3a\u5b8c\u6210\u8bfe\u7a0b\u5b66\u4e60\u7684\u8981\u6c42\uff0c\u5b66\u751f\u9700\u8981\u719f\u6089\u6559\u6750\u6709\u5173\u7ae0\u8282\u7684\u5185\u5bb9\uff0c\u72ec\u7acb\u6b63\u786e\u5730\u5b8c\u6210\u4f5c\u4e1a\u548c\u8003\u8bd5\uff0c\u8fbe\u523060%\u7684\u6210\u7ee9\u5c31\u80fd\u83b7\u5f97\u5317\u5927\u7684\u8bfe\u7a0b\u7ed3\u4e1a\u8bc1\u4e66\uff08\u83b7\u5f9780%\u4ee5\u4e0a\u7684\u6210\u7ee9\uff0c\u80fd\u5f97\u5230\u4f18\u79c0\u8bc1\u4e66\uff09\u3002\u8be5\u8bfe\u7a0b\u662f\u201c\u5317\u5927-\u5fb7\u7a3b\u7f51\u7edc\u516c\u5f00\u8bfe\u7a0b\u201d\u4e2d\u7684\u4e00\u95e8\uff0c\u7531\u5317\u4eac\u5927\u5b66\u4e0e\u5fb7\u7a3b\u6559\u80b2\u8054\u5408\u63d0\u4f9b\u3002Computer, as an important tool for&nbsp;problem&nbsp;solving, has been deeply involved&nbsp;in every aspect of people\u2019s daily lives.&nbsp;Data are the quantities on which operations are performed on computers. What is the logical relationship among data?\n    How are the data stored in computers? What algorithms should be operated to solve the problems on the data? These are the questions that will be answered in \u201cData Structures and Algorithms\u201d, one of the most important core courses in Computer Science.\n    The course also covers fundamental data structures and classical algorithms which are widely used in the&nbsp;succeeding specialized courses,&nbsp;such as Operating Systems, Software Engineering, Database Systems, Compiler&nbsp;Principles, Computer\n    Graphics and Human Computer Interaction.What is the combination of data structures and algorithms? Niklaus Wirth wrote a book titled \"Algorithms + Data Structures = Programs\", which points out their important roles in computing discipline:&nbsp;algorithm and data structure are two closely linked\n    and indivisible parts of programming.The course will follow the idea of&nbsp; \u201cAlgorithms + Data Structures = Programs\u201d, aimed at improving&nbsp; students\u2019 knowledge and skills of theory, abstraction and design in problem solving.&nbsp;On a solid basis of the fundamental theory, the students&nbsp;will\n    analyze the problems using problem, data and algorithm abstraction. Making a tradeoff between space and time complexity, the&nbsp;students will learn how to organize data reasonably, design efficient and effective algorithms, and implement high quality\n    programs, so that they can solve real-world complex problems.&nbsp;After studying this course, students should be well prepared for further study, engineering and research in computer related areas.The course uses the textbook \u201cData Structures and Algorithms\u201d written by Prof. Ming Zhang and two other&nbsp; coauthors. The course is appropriate for sophomore students majoring in computer science or other science/engineering disciplines. Students should&nbsp;have\n    learned \"introduction to computing\",&nbsp;with the knowledge of structured and object-oriented programming.The course will last for 14 weeks and requires the students to study for 4-8 hours per week.&nbsp;After studying the course, the students\u2019 ability of abstract thinking and problem solving should have improved considerably.&nbsp;Their programming skills\n    and the quality of their codes would have increased as well.To be qualified for graduation in Peking University, the students need to be familiar about the materials in the textbook, do homework and exam independently, and obtain the score of 60% or more&nbsp;(80% for A score).The course is one of the PKU-DeTao MOOCs, which is a joint effort by Peking University and DeTao Masters Academy.Syllabus\u65f6\u95f4\u5b89\u6392\u2022 \u7b2c\u4e00\u5468\uff1a\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u7b80\u4ecb\u4ee5\u53ca\u7ebf\u6027\u8868\u2022 \u7b2c\u4e8c\u5468\uff1a\u6808\u548c\u961f\u5217\u2022 \u7b2c\u4e09\u5468\uff1a\u5b57\u7b26\u4e32\u2022 \u7b2c\u56db\u5468\uff1a\u4e8c\u53c9\u6811\uff081\uff09\u2022 \u7b2c\u4e94\u5468\uff1a\u4e8c\u53c9\u6811\uff082\uff09\u2022 \u7b2c\u516d\u5468\uff1a\u6811\u4e0e\u68ee\u6797\u2022 \u7b2c\u4e03\u5468\uff1a\u56fe\u2022 \u7b2c\u516b\u5468\uff1a\u5185\u6392\u5e8f\uff081\uff09\u2022 \u7b2c\u4e5d\u5468\uff1a\u5185\u6392\u5e8f\uff082\uff09\u2022 \u7b2c\u5341\u5468\uff1a\u6587\u4ef6\u7ba1\u7406\u548c\u5916\u6392\u5e8f\u2022 \u7b2c\u5341\u4e00\u5468\uff1a\u68c0\u7d22\u2022 \u7b2c\u5341\u4e8c\u5468\uff1a\u7d22\u5f15\u6280\u672f\u2022 \u7b2c\u5341\u4e09\u5468\uff1a\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\uff081\uff09\u2022 \u7b2c\u5341\u56db\u5468\uff1a\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\uff082\uff09\u4efb\u52a1\u5b89\u6392\uff08\u4f5c\u4e1a\u53ca\u8003\u8bd5\uff09\u8003\u8bd5\u5206\u4e3a\u671f\u4e2d\u8003\u8bd5\uff0811.25-12.8\uff09\u548c\u671f\u672b\u8003\u8bd5\uff081.13-1.26\u8bfe\u7a0b\u5173\u95ed\u65f6\u95f4\uff09\u8bc4\u5206\u65b9\u6848\u8bc4\u5206\u6309\u7167\u65e5\u5e38\u4f5c\u4e1a\u7684\u5b8c\u6210\u60c5\u51b5\u548c\u671f\u4e2d\u671f\u672b\u8003\u8bd5\u7684\u7b54\u9898\u60c5\u51b5\u8fdb\u884c\u3002\u5e73\u65f6\uff08\u8bfe\u7a0b\u53c2\u4e0e\uff0910 %\uff0c\u4f5c\u4e1a30 % \uff0cPOJ 20 %\uff0c\u671f\u4e2d 15 %\uff0c\u671f\u672b 25\n%\u3002POJ\u4f5c\u4e1a\u5728\u7a0b\u5e8f\u81ea\u52a8\u8bc4\u6d4b\u7f51\u7ad9\u53d1\u5e03\uff1ahttp://dsalgo.openjudge.cn/\u8bfe\u7a0b\u53c2\u4e0e\u5ea6\u8f83\u9ad8\u7684\u540c\u5b66\uff08Meetup\u8ba8\u8bba\u4f1a\u3001\u8bba\u575b\u95ee\u7b54\uff09\uff0c\u53ef\u4ee5\u5f97\u5230\u52a0\u5206\u3002\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u7684\u5185\u5bb9\u4e0d\u4f5c\u8003\u6838\u8981\u6c42\uff0c\u5982\u679c\u5b66\u751f\u4e3b\u52a8\u5b8c\u6210\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u7684\u4f5c\u4e1a\uff0c\u4e5f\u53ef\u4ee5\u5f97\u5230\u4e00\u5b9a\u52a0\u5206\u3002\u8bc1\u4e66\u8bbe\u7f6e\u201c\u5408\u683c\u201d\uff08\u8fbe\u523060%\u6210\u7ee9\uff09\u3001\"\u4f18\u79c0\"\uff08\u8fbe\u523080%\u6210\u7ee9\uff09\u4e24\u6863\u8bfe\u7a0b\u6807\u51c6\uff0c\u7531\u4efb\u8bfe\u6559\u5e08\u7b7e\u53d1\u5317\u5927\u7edf\u4e00\u7684\u8bfe\u7a0b\u7ed3\u4e1a\u8bc1\u4e66\u3002",
        "desc_html": "\u4ecb\u7ecd\u89c6\u9891\u82e5\u65e0\u6cd5\u6b63\u5e38\u64ad\u653e\uff0c\u8bf7\u770b[\u8fd9\u91cc](http://video.study.163.com/edu-\nvideo/nos/mp4/2013/11/20/303416_hd.mp4)\u3002\n\n\u8ba1\u7b97\u673a\u662f\u73b0\u4ee3\u793e\u4f1a\u4e2d\u7528\u4e8e\u89e3\u51b3\u95ee\u9898\u7684\u91cd\u8981\u5de5\u5177\u3002\u5229\u7528\u8ba1\u7b97\u673a\u89e3\u51b3\u5b9e\u9645\u95ee\u9898\u9700\u8981\u5c06\u95ee\u9898\u62bd\u8c61\uff0c\u5e76\u5bf9\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff0c\u6700\u540e\u901a\u8fc7\u8ba1\u7b97\u673a\u7a0b\u5e8f\u6c42\u89e3\u95ee\u9898\u3002\u800c\u672c\u95e8\u8bfe\u7a0b\u4e3b\u8981\u5185\u5bb9\u5c31\u662f\u5bf9\u4ee5\u4e0a\u5185\n\u5bb9\u8fdb\u884c\u7814\u7a76\u3002\n\n\u56fe\u7075\u5956\u83b7\u5f97\u8005N.Wirth\u5199\u4e86\u4e00\u672c\u7ecf\u5178\u8457\u4f5c\u201c\u7a0b\u5e8f=\u7b97\u6cd5+\u6570\u636e\u7ed3\u6784\u201d\u3002\u6570\u636e\u7ed3\u6784\uff0c\u662f\u62bd\u8c61\u7684\u8868\u793a\u6570\u636e\u7684\u65b9\u5f0f\uff1b\u7b97\u6cd5\uff0c\u5219\u662f\u8ba1\u7b97\u7684\u4e00\u7cfb\u5217\u6709\u6548\u3001\u901a\u7528\u7684\u6b65\u9aa4\u3002\u7b97\u6cd5\u4e0e\u6570\u636e\u7ed3\u6784\n\u662f\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u76f8\u8f85\u76f8\u6210\u7684\u4e24\u4e2a\u65b9\u9762\u3002\n\n\u6211\u4eec\u4f1a\u56f4\u7ed5\u7740\u201c\u7b97\u6cd5+\u6570\u636e\u7ed3\u6784=\u7a0b\u5e8f\u201d\u7684\u601d\u8def\uff0c\u4ee5\u95ee\u9898\u6c42\u89e3\u4e3a\u5bfc\u5411\u8fdb\u884c\u5b66\u4e60\u3002\u5e0c\u671b\u80fd\u591f\u5e2e\u52a9\u5927\u5bb6\u63d0\u9ad8\u7406\u8bba\u3001\u62bd\u8c61\u3001\u8bbe\u8ba1\u7684\u80fd\u529b\u3002\u5728\u624e\u5b9e\u7684\u7ecf\u5178\u7406\u8bba\u57fa\u7840\u4e0a\uff0c\u8fd0\u7528\u95ee\u9898\u62bd\u8c61\u3001\u6570\u636e\n\u62bd\u8c61\u3001\u7b97\u6cd5\u62bd\u8c61\u6765\u5206\u6790\u95ee\u9898\uff0c\u5e94\u7528\u9002\u5f53\u7684\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u6765\u8bbe\u8ba1\u548c\u5b9e\u73b0\u76f8\u5e94\u7684\u7a0b\u5e8f\u3002\u901a\u8fc7\u8bfe\u7a0b\u5b66\u4e60\uff0c\u5927\u5bb6\u7684\u62bd\u8c61\u601d\u7ef4\u80fd\u529b\u3001\u95ee\u9898\u6c42\u89e3\u80fd\u529b\u5c06\u5f97\u5230\u8f83\u5927\u63d0\u5347\uff0c\u7f16\u7a0b\u80fd\u529b\u548c\u4ee3\u7801\u8d28\u91cf\u4f1a\n\u6709\u8d28\u7684\u98de\u8dc3\uff01\n\n\u5728\u6c42\u89e3\u5b9e\u9645\u95ee\u9898\u65b9\u9762\uff0c\u6211\u4eec\u4f1a\u5b66\u4e60\u5230\u901a\u8fc7\u6743\u8861\u65f6\u7a7a\u548c\u5176\u4ed6\u8d44\u6e90\u5f00\u9500\uff0c\u5229\u7528\u6570\u636e\u7ed3\u6784\u6765\u7ec4\u7ec7\u6570\u636e\u3001\u8bbe\u8ba1\u9ad8\u6548\u7684\u7b97\u6cd5\u3001\u5b8c\u6210\u9ad8\u8d28\u91cf\u7684\u7a0b\u5e8f\u4ee5\u6ee1\u8db3\u9519\u7efc\u590d\u6742\u7684\u5b9e\u9645\u5e94\u7528\u9700\u8981\u3002\n\n\u6b64\u5916\uff0c\u8bfe\u7a0b\u6240\u5b66\u5230\u7684\u5185\u5bb9\u4f1a\u88ab\u5229\u7528\u5230\u8ba1\u7b97\u673a\u79d1\u5b66\u540e\u7eed\u7684\u5404\u4e2a\u8bfe\u7a0b\u4e2d\uff0c\u5982\u64cd\u4f5c\u7cfb\u7edf\u3001\u8f6f\u4ef6\u5de5\u7a0b\u3001\u6570\u636e\u5e93\u6982\u8bba\u3001\u7f16\u8bd1\u6280\u672f\u3001\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u3001\u4eba\u673a\u4ea4\u4e92\u7b49\u3002\u5e0c\u671b\u53ef\u4ee5\u4e3a\u5927\u5bb6\u5c06\u6765\u4ece\u4e8b\u8ba1\u7b97\n\u673a\u76f8\u5173\u7684\u5b66\u4e60\u3001\u7814\u7a76\u548c\u5f00\u53d1\u5de5\u4f5c\u6253\u4e0b\u624e\u5b9e\u7684\u57fa\u7840\u3002\n\n\u672c\u8bfe\u7a0b\u91c7\u7528\u5f20\u94ed\u4e3b\u7f16\u7684\u56fd\u5bb6\u201c\u5341\u4e00\u4e94\u201d\u89c4\u5212\u6559\u6750\u300a\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u300b\uff08\u9ad8\u7b49\u6559\u80b2\u51fa\u7248\u793e\uff09\u3002\u9002\u5408\u8ba1\u7b97\u673a\u4ee5\u53ca\u76f8\u5173\u7406\u5de5\u4e13\u4e1a\u7684\u5927\u4e8c\u672c\u79d1\u751f\u5b66\u4e60\uff0c\u9700\u8981\u5148\u4fee\u8fc7\u8ba1\u7b97\u6982\u8bba\u7b49\u8bfe\u7a0b\uff0c\u5177\u6709\u7ed3\n\u6784\u5316\u548c\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u3002\n\n\u8bfe\u7a0b\u4e3b\u8981\u5305\u62ec\u7684\u5185\u5bb9\u6709\uff1a\u7ebf\u6027\u8868\uff0c\u6808\u4e0e\u961f\u5217\uff0c\u5b57\u7b26\u4e32\uff0c\u4e8c\u53c9\u6811\uff0c\u6811\uff0c\u56fe\uff0c\u6392\u5e8f\uff08\u5185\u6392\u5e8f\uff0c\u5916\u6392\u5e8f\uff09\uff0c\u68c0\u7d22\uff0c\u7d22\u5f15\u3001\u4ee5\u53ca\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u3002\u8bfe\u7a0b\u6301\u7eed14\u5468\uff0c\u5b66\u4e60\u8005\u6bcf\u5468\u5728\u672c\u8bfe\u7a0b\u4e0a\u9700\n\u8981\u6295\u51654\uff0d8\u5c0f\u65f6\u3002\u4f5c\u4e3a\u5b8c\u6210\u8bfe\u7a0b\u5b66\u4e60\u7684\u8981\u6c42\uff0c\u5b66\u751f\u9700\u8981\u719f\u6089\u6559\u6750\u6709\u5173\u7ae0\u8282\u7684\u5185\u5bb9\uff0c\u72ec\u7acb\u6b63\u786e\u5730\u5b8c\u6210\u4f5c\u4e1a\u548c\u8003\u8bd5\uff0c\u8fbe\u523060%\u7684\u6210\u7ee9\u5c31\u80fd\u83b7\u5f97\u5317\u5927\u7684\u8bfe\u7a0b\u7ed3\u4e1a\u8bc1\u4e66\uff08\u83b7\u5f9780%\u4ee5\n\u4e0a\u7684\u6210\u7ee9\uff0c\u80fd\u5f97\u5230\u4f18\u79c0\u8bc1\u4e66\uff09\u3002\n\n\u8be5\u8bfe\u7a0b\u662f\u201c\u5317\u5927-\u5fb7\u7a3b\u7f51\u7edc\u516c\u5f00\u8bfe\u7a0b\u201d\u4e2d\u7684\u4e00\u95e8\uff0c\u7531\u5317\u4eac\u5927\u5b66\u4e0e\u5fb7\u7a3b\u6559\u80b2\u8054\u5408\u63d0\u4f9b\u3002  \n\nComputer, as an important tool for problem solving, has been deeply involved\nin every aspect of people\u2019s daily lives. Data are the quantities on which\noperations are performed on computers. What is the logical relationship among\ndata? How are the data stored in computers? What algorithms should be operated\nto solve the problems on the data? These are the questions that will be\nanswered in \u201cData Structures and Algorithms\u201d, one of the most important core\ncourses in Computer Science. The course also covers fundamental data\nstructures and classical algorithms which are widely used in the succeeding\nspecialized courses, such as Operating Systems, Software Engineering, Database\nSystems, Compiler Principles, Computer Graphics and Human Computer\nInteraction.\n\nWhat is the combination of data structures and algorithms? Niklaus Wirth wrote\na book titled \"Algorithms + Data Structures = Programs\", which points out\ntheir important roles in computing discipline: algorithm and data structure\nare two closely linked and indivisible parts of programming.\n\nThe course will follow the idea of  \u201cAlgorithms + Data Structures = Programs\u201d,\naimed at improving  students\u2019 knowledge and skills of theory, abstraction and\ndesign in problem solving. On a solid basis of the fundamental theory, the\nstudents will analyze the problems using problem, data and algorithm\nabstraction. Making a tradeoff between space and time complexity, the students\nwill learn how to organize data reasonably, design efficient and effective\nalgorithms, and implement high quality programs, so that they can solve real-\nworld complex problems. After studying this course, students should be well\nprepared for further study, engineering and research in computer related\nareas.\n\nThe course uses the textbook \u201cData Structures and Algorithms\u201d written by Prof.\nMing Zhang and two other  coauthors. The course is appropriate for sophomore\nstudents majoring in computer science or other science/engineering\ndisciplines. Students should have learned \"introduction to computing\", with\nthe knowledge of structured and object-oriented programming.\n\nThe course will last for 14 weeks and requires the students to study for 4-8\nhours per week. After studying the course, the students\u2019 ability of abstract\nthinking and problem solving should have improved considerably. Their\nprogramming skills and the quality of their codes would have increased as\nwell.\n\nTo be qualified for graduation in Peking University, the students need to be\nfamiliar about the materials in the textbook, do homework and exam\nindependently, and obtain the score of 60% or more (80% for A score).\n\nThe course is one of the PKU-DeTao MOOCs, which is a joint effort by Peking\nUniversity and DeTao Masters Academy.\n\n## Syllabus\n\n**\u65f6\u95f4\u5b89\u6392**\n\n**\u2022 \u7b2c\u4e00\u5468\uff1a\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u7b80\u4ecb\u4ee5\u53ca\u7ebf\u6027\u8868  \n\u2022 \u7b2c\u4e8c\u5468\uff1a\u6808\u548c\u961f\u5217  \n****\u2022 \u7b2c\u4e09\u5468\uff1a\u5b57\u7b26\u4e32  \n****\u2022 \u7b2c\u56db\u5468\uff1a\u4e8c\u53c9\u6811\uff081\uff09  \n****\u2022 \u7b2c\u4e94\u5468\uff1a\u4e8c\u53c9\u6811\uff082\uff09  \n****\u2022 \u7b2c\u516d\u5468\uff1a\u6811\u4e0e\u68ee\u6797  \n****\u2022 \u7b2c\u4e03\u5468\uff1a\u56fe  \n****\u2022 \u7b2c\u516b\u5468\uff1a\u5185\u6392\u5e8f\uff081\uff09  \n****\u2022 \u7b2c\u4e5d\u5468\uff1a\u5185\u6392\u5e8f\uff082\uff09  \n****\u2022 \u7b2c\u5341\u5468\uff1a\u6587\u4ef6\u7ba1\u7406\u548c\u5916\u6392\u5e8f  \n****\u2022 \u7b2c\u5341\u4e00\u5468\uff1a\u68c0\u7d22  \n****\u2022 \u7b2c\u5341\u4e8c\u5468\uff1a\u7d22\u5f15\u6280\u672f  \n****\u2022 \u7b2c\u5341\u4e09\u5468\uff1a\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\uff081\uff09  \n****\u2022 \u7b2c\u5341\u56db\u5468\uff1a\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\uff082\uff09**\n\n**  \n****\u4efb\u52a1\u5b89\u6392\uff08\u4f5c\u4e1a\u53ca\u8003\u8bd5\uff09**\n\n\u8003\u8bd5\u5206\u4e3a\u671f\u4e2d\u8003\u8bd5\uff0811.25-12.8\uff09\u548c\u671f\u672b\u8003\u8bd5\uff081.13-1.26\u8bfe\u7a0b\u5173\u95ed\u65f6\u95f4\uff09\n\n**\u8bc4\u5206\u65b9\u6848**\n\n\u8bc4\u5206\u6309\u7167\u65e5\u5e38\u4f5c\u4e1a\u7684\u5b8c\u6210\u60c5\u51b5\u548c\u671f\u4e2d\u671f\u672b\u8003\u8bd5\u7684\u7b54\u9898\u60c5\u51b5\u8fdb\u884c\u3002\u5e73\u65f6\uff08\u8bfe\u7a0b\u53c2\u4e0e\uff0910 %\uff0c\u4f5c\u4e1a30 % \uff0cPOJ 20 %\uff0c\u671f\u4e2d 15 %\uff0c\u671f\u672b 25 %\u3002\n\nPOJ\u4f5c\u4e1a\u5728\u7a0b\u5e8f\u81ea\u52a8\u8bc4\u6d4b\u7f51\u7ad9\u53d1\u5e03\uff1a<http://dsalgo.openjudge.cn/>\n\n\u8bfe\u7a0b\u53c2\u4e0e\u5ea6\u8f83\u9ad8\u7684\u540c\u5b66\uff08Meetup\u8ba8\u8bba\u4f1a\u3001\u8bba\u575b\u95ee\u7b54\uff09\uff0c\u53ef\u4ee5\u5f97\u5230\u52a0\u5206\u3002\n\n\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u7684\u5185\u5bb9\u4e0d\u4f5c\u8003\u6838\u8981\u6c42\uff0c\u5982\u679c\u5b66\u751f\u4e3b\u52a8\u5b8c\u6210\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u7684\u4f5c\u4e1a\uff0c\u4e5f\u53ef\u4ee5\u5f97\u5230\u4e00\u5b9a\u52a0\u5206\u3002\n\n\n\n**\u8bc1\u4e66**\n\n\u8bbe\u7f6e\u201c\u5408\u683c\u201d\uff08\u8fbe\u523060%\u6210\u7ee9\uff09\u3001\"\u4f18\u79c0\"\uff08\u8fbe\u523080%\u6210\u7ee9\uff09\u4e24\u6863\u8bfe\u7a0b\u6807\u51c6\uff0c\u7531\u4efb\u8bfe\u6559\u5e08\u7b7e\u53d1\u5317\u5927\u7edf\u4e00\u7684\u8bfe\u7a0b\u7ed3\u4e1a\u8bc1\u4e66\u3002  \n\n",
        "name": "\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5  Data Structures and Algorithms",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Peking University"
        ],
        "url": "https://www.coursera.org/course/dsalgo",
        "video_url": ""
    },
    {
        "date": "2013-10-15",
        "desc": "Lernen Sie die Herausforderungen bei Planung, Entwicklung, Test und Wartung von Websites kennen. Sie erwerben die Kompetenz, W3C-konforme, sichere und performante Webpr&auml;senzen zu entwickeln. &bdquo;Web-Engineering&ldquo; bietet Konzepte, Methoden, Techniken und Werkzeuge f&uuml;r die systematische Entwicklung von Websites und Web-Applikationen.Sie &uuml;ben online den Umgang mit der Infrastruktur und den Werkzeugen, die f&uuml;r die Entwicklung und Wartung einer mit Twitter Bootstrap aufgebauten Website ben&ouml;tigt werden. Sie lernen insbesondere die daf&uuml;r notwendigen technischen und architektonischen Grundlagen. Der Kurs f&uuml;hrt auch in die Sicherheitsproblematik von Websystemen ein. Sie analysieren Angriffsmethoden und entwickeln Gegenma&szlig;nahmen.KursstrukturDer Kurs ist in zwei aufeinanderfolgenden Teilen organisiert: Dieser Kursteil, Web-Engineering I, beginnt am 15. Oktober 2013. Jeder Kursteil umfasst 10 Kapitel mit jeweils 6 bis 8 Lerneinheiten. Der w&ouml;chentliche Zeitaufwand betr&auml;gt ca. 6 Stunden. F&uuml;r Studierende an Hochschulen entspricht der Arbeitsaufwand f&uuml;r den gesamten Kurs 6 ECTS-Leistungspunkten. Im&nbsp;zweiten Teil des Kurses&nbsp;geht es ab dem 17. Januar 2014 zur eigenen HTML5-App.Bei ausreichenden Vorkenntnissen k&ouml;nnen Sie den Kurs auch mit dem zweiten Teil beginnen.LernzielAm Ende des ersten Kursteils \"Web-Engineering I: Grundlagen der Web-Entwicklung\" sollen Sie die folgende Kompetenz erworben haben: Wie entwickle ich im Kundenauftrag eine standardkonforme, barrierefreie, performante und sichere Website?An wen richtet sich dieser Kurs?Der MOOC &bdquo;Web-Engineering&ldquo; richtet sich an Studierende der Informatik, auch Medien- und Wirtschaftsinformatik, an Auszubildende der Fachinformatik mit der Fachrichtung Anwendungsentwicklung und an berufst&auml;tige Web-Designer/innen. F&uuml;r Studierende der TH Mittelhessen im Fachbereich MNI ist der MOOC &bdquo;Web-Engineering&ldquo; &auml;quivalent zum Bachelor-Modul &bdquo;Internetbasierte Systeme&ldquo; (CS 1024).KurszertifikateSie erhalten f&uuml;r jeden Kursteil ein Zertifikat, wenn Sie die folgenden Leistungen erbracht haben:Web-Engineering I: Bestehen der Online-Abschlusspr&uuml;fung des ersten Kursteils und Erstellen einer WebsiteWeb-Engineering II: Bestehen der Online-Abschlusspr&uuml;fung des zweiten Kursteils und Erstellen einer HTML5-AppVoraussetzung f&uuml;r die KursteilnahmeSie sollten grundlegende Kenntnisse in der Programmierung mitbringen. F&uuml;r die Entwicklungswerkzeuge ist ein leistungsf&auml;higer Laptop- oder Desktop-Rechner erforderlich, auf dem Sie Administratorrechte haben.Die im Kurs eingesetzten Lernressourcen (Websites, YouTube-Videos) sind vorwiegend in Englisch, deshalb sollten Sie gute Englischkenntnisse mitbringen.Unsere KompetenzenWer einen Online-Kurs wie &bdquo;Web-Engineering&ldquo; anbietet, sollte entsprechende Referenzen aufweisen k&ouml;nnen. In den letzten Jahren haben wir in den Bereichen E-Learning und Suchmaschinen mehrere webbasierte Systeme, wie z. B. die universit&auml;re Suchmaschine Pharus, die Lern- und Kollaborations-Plattform eCollab oder das mobile Abstimmungssystem ARSnova, als Open-Source-Projekte entwickelt, stets als studentische Projekte beginnend und in Bachelor- und Masterprojekten zur Marktreife gebracht.R&uuml;ckblickend war es der Kurs &bdquo;Web-Engineering&ldquo;, der die Studierenden f&uuml;r diese Projekte ausreichend vorbereitet hat. Wenn Sie die beiden Kursteile Web-Engineering I und II absolvieren, werden Sie Gleiches leisten k&ouml;nnen.SyllabusKursinhaltSie erlernen die folgenden Inhalte anhand von Lehrvideos, Screencasts und interaktiven Online-&Uuml;bungen und erproben die technischen Aspekte an Beispielen aus der Praxis.Kapitel 1: Einf&uuml;hrung in den MOOC \"Web-Engineering\"Kapitel 2: Starter Kit: Tools f&uuml;r die Website in der CloudKapitel 3: Chronik des Internets: vom ARPANET &uuml;ber HTTP in die CloudKapitel 4: HTTP: Hypertext Transfer ProtocolKapitel 5: Interaktives Praktikum: HTML/CSSKapitel 6: Semantische Textauszeichnung, Unicode &amp; UTF-8, (X)HTML-StandardsKapitel 7: Digitale BarrierefreiheitKapitel 8: Webdesign | Web-UsabilityKapitel 9: Website-Analyse und -OptimierungKapitel 10: Sicherheitsrisiken einer Website",
        "desc_html": "Lernen Sie die Herausforderungen bei Planung, Entwicklung, Test und Wartung\nvon Websites kennen. Sie erwerben die Kompetenz, W3C-konforme, sichere und\nperformante Webprasenzen zu entwickeln. \u201eWeb-Engineering\" bietet Konzepte,\nMethoden, Techniken und Werkzeuge fur die systematische Entwicklung von\nWebsites und Web-Applikationen.\n\nSie uben online den Umgang mit der Infrastruktur und den Werkzeugen, die fur\ndie Entwicklung und Wartung einer mit Twitter Bootstrap aufgebauten Website\nbenotigt werden. Sie lernen insbesondere die dafur notwendigen technischen und\narchitektonischen Grundlagen. Der Kurs fuhrt auch in die\nSicherheitsproblematik von Websystemen ein. Sie analysieren Angriffsmethoden\nund entwickeln Gegenma\u00dfnahmen.\n\n**Kursstruktur**\n\nDer Kurs ist in zwei aufeinanderfolgenden Teilen organisiert: Dieser Kursteil,\nWeb-Engineering I, beginnt am 15. Oktober 2013. Jeder Kursteil umfasst 10\nKapitel mit jeweils 6 bis 8 Lerneinheiten. Der wochentliche Zeitaufwand\nbetragt ca. 6 Stunden. Fur Studierende an Hochschulen entspricht der\nArbeitsaufwand fur den gesamten Kurs 6 ECTS-Leistungspunkten. Im [zweiten Teil\ndes Kurses](https://www.iversity.org/courses/web-engineering-ii-entwicklung-\nmobiler-html5-apps) geht es ab dem 17. Januar 2014 zur eigenen HTML5-App.\n\nBei ausreichenden Vorkenntnissen konnen Sie den Kurs auch mit dem zweiten Teil\nbeginnen.\n\n**Lernziel**\n\nAm Ende des ersten Kursteils \"Web-Engineering I: Grundlagen der Web-\nEntwicklung\" sollen Sie die folgende Kompetenz erworben haben: Wie entwickle\nich im Kundenauftrag eine standardkonforme, barrierefreie, performante und\nsichere Website?\n\n**An wen richtet sich dieser Kurs?**\n\nDer MOOC \u201eWeb-Engineering\" richtet sich an Studierende der Informatik, auch\nMedien- und Wirtschaftsinformatik, an Auszubildende der Fachinformatik mit der\nFachrichtung Anwendungsentwicklung und an berufstatige Web-Designer/innen. Fur\nStudierende der TH Mittelhessen im Fachbereich MNI ist der MOOC \u201eWeb-\nEngineering\" aquivalent zum Bachelor-Modul \u201eInternetbasierte Systeme\" (CS\n1024).\n\n**Kurszertifikate**\n\nSie erhalten fur jeden Kursteil ein Zertifikat, wenn Sie die folgenden\nLeistungen erbracht haben:\n\n  * Web-Engineering I: Bestehen der Online-Abschlussprufung des ersten Kursteils und Erstellen einer Website\n  * Web-Engineering II: Bestehen der Online-Abschlussprufung des zweiten Kursteils und Erstellen einer HTML5-App\n**Voraussetzung fur die Kursteilnahme**\n\nSie sollten grundlegende Kenntnisse in der Programmierung mitbringen. Fur die\nEntwicklungswerkzeuge ist ein leistungsfahiger Laptop- oder Desktop-Rechner\nerforderlich, auf dem Sie Administratorrechte haben.\n\nDie im Kurs eingesetzten Lernressourcen (Websites, YouTube-Videos) sind\nvorwiegend in Englisch, deshalb sollten Sie gute Englischkenntnisse\nmitbringen.\n\n**Unsere Kompetenzen**\n\nWer einen Online-Kurs wie \u201eWeb-Engineering\" anbietet, sollte entsprechende\nReferenzen aufweisen konnen. In den letzten Jahren haben wir in den Bereichen\nE-Learning und Suchmaschinen mehrere webbasierte Systeme, wie z. B. die\nuniversitare Suchmaschine Pharus, die Lern- und Kollaborations-Plattform\neCollab oder das mobile Abstimmungssystem ARSnova, als Open-Source-Projekte\nentwickelt, stets als studentische Projekte beginnend und in Bachelor- und\nMasterprojekten zur Marktreife gebracht.\n\nRuckblickend war es der Kurs \u201eWeb-Engineering\", der die Studierenden fur diese\nProjekte ausreichend vorbereitet hat. Wenn Sie die beiden Kursteile Web-\nEngineering I und II absolvieren, werden Sie Gleiches leisten konnen.\n\n## Syllabus\n\n**Kursinhalt**\n\nSie erlernen die folgenden Inhalte anhand von Lehrvideos, Screencasts und\ninteraktiven Online-\u00dcbungen und erproben die technischen Aspekte an Beispielen\naus der Praxis.\n\n  * Kapitel 1: Einfuhrung in den MOOC \"Web-Engineering\"\n  * Kapitel 2: Starter Kit: Tools fur die Website in der Cloud\n  * Kapitel 3: Chronik des Internets: vom ARPANET uber HTTP in die Cloud\n  * Kapitel 4: HTTP: Hypertext Transfer Protocol\n  * Kapitel 5: Interaktives Praktikum: HTML/CSS\n  * Kapitel 6: Semantische Textauszeichnung, Unicode & UTF-8, (X)HTML-Standards\n  * Kapitel 7: Digitale Barrierefreiheit\n  * Kapitel 8: Webdesign | Web-Usability\n  * Kapitel 9: Website-Analyse und -Optimierung\n  * Kapitel 10: Sicherheitsrisiken einer Website\n\n",
        "name": "Web-Engineering I: Grundlagen der Web-Entwicklung",
        "provider": "iversity",
        "rating": "1",
        "reviews": "3",
        "university": [],
        "url": "https://iversity.org/courses/web-engineering-i-grundlagen-der-web-entwicklung",
        "video_url": "https://www.youtube.com/embed/ogdV3O5C6ZY?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-10-14",
        "desc": "The course will focus on database design, executing structured query language (SQL) scripts in MySQL workbench, and data analysis in healthcare. Statistical analysis and data mining techniques will also be discussed along with methods for deploying these techniques using open-access analytical software, R.The program has been approved for 12 continuing education units for use in fulfilling the continuing education requirements of the American Health Information Management Association (AHIMA).",
        "desc_html": "The course will focus on database design, executing structured query language\n(SQL) scripts in MySQL workbench, and data analysis in healthcare. Statistical\nanalysis and data mining techniques will also be discussed along with methods\nfor deploying these techniques using open-access analytical software, R.  \n  \nThe program has been approved for 12 continuing education units for use in\nfulfilling the continuing education requirements of the American Health\nInformation Management Association (AHIMA).\n\n",
        "name": "Health Data Analytics",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [
            "The College of St. Scholastica"
        ],
        "url": "http://www.css.edu/Graduate/Non-Degree/Massive-Open-Online-Courses/Health-Data-Analytics-MOOC.html",
        "video_url": ""
    },
    {
        "date": "2013-10-14",
        "desc": "The course provides an overview of C++ for the experienced C programmer. You will learn how C++ is more powerful than C. The C++ STL library will be featured. This library allows C++ programmers to code generically, efficiently and at a high level. You will learn how to write basic graph algorithms such as the shortest path algorithm. You'll then put this skill to use in a programming assignment aimed at producing an intelligent hex player.",
        "desc_html": "The course provides an overview of C++ for the experienced C programmer. You\nwill learn how C++ is more powerful than C. The C++ STL library will be\nfeatured. This library allows C++ programmers to code generically, efficiently\nand at a high level. You will learn how to write basic graph algorithms such\nas the shortest path algorithm. You'll then put this skill to use in a\nprogramming assignment aimed at producing an intelligent hex player.  \n\n",
        "name": "C++ For C Programmers",
        "provider": "Coursera",
        "rating": "3",
        "reviews": "2",
        "university": [
            "University of California, Santa Cruz"
        ],
        "url": "https://www.coursera.org/course/cplusplus4c",
        "video_url": ""
    },
    {
        "date": "2013-10-07",
        "desc": "Vous voulez comprendre l'arithm\u00e9tique ? Vous souhaitez d\u00e9couvrir une application des math\u00e9matiques \u00e0 la vie quotidienne ? Ce cours est fait pour vous ! De niveau premi\u00e8re ann\u00e9e d'universit\u00e9, vous apprendrez les bases de l'arithm\u00e9tique (division euclidienne, th\u00e9or\u00e8me de B\u00e9zout, nombres premiers, congruence).Vous vous \u00eates d\u00e9j\u00e0 demand\u00e9 comment sont s\u00e9curis\u00e9es les transactions sur Internet ? Vous d\u00e9couvrirez les bases de la cryptographie, en commen\u00e7ant par les codes les plus simples pour aboutir au code RSA. Le code RSA est le code utilis\u00e9 pour crypter les communications sur internet. Il est bas\u00e9 sur de l'arithm\u00e9tique assez simple que l'on comprendra en d\u00e9tail. Vous pourrez en plus mettre en pratique vos connaissances par l'apprentissage de notions sur le langage de programmation Python.Vous travaillerez \u00e0 l'aide de cours \u00e9crits et de vid\u00e9os, d'exercices corrig\u00e9s en vid\u00e9os, des quiz, des travaux pratiques. Le cours est enti\u00e8rement gratuit !",
        "desc_html": "Vous voulez comprendre l'arithm\u00e9tique ? Vous souhaitez d\u00e9couvrir une\napplication des math\u00e9matiques \u00e0 la vie quotidienne ? Ce cours est fait pour\nvous ! De niveau premi\u00e8re ann\u00e9e d'universit\u00e9, vous apprendrez les bases de\nl'arithm\u00e9tique (division euclidienne, th\u00e9or\u00e8me de B\u00e9zout, nombres premiers,\ncongruence).  \n  \nVous vous \u00eates d\u00e9j\u00e0 demand\u00e9 comment sont s\u00e9curis\u00e9es les transactions sur\nInternet ? Vous d\u00e9couvrirez les bases de la cryptographie, en commen\u00e7ant par\nles codes les plus simples pour aboutir au code RSA. Le code RSA est le code\nutilis\u00e9 pour crypter les communications sur internet. Il est bas\u00e9 sur de\nl'arithm\u00e9tique assez simple que l'on comprendra en d\u00e9tail. Vous pourrez en\nplus mettre en pratique vos connaissances par l'apprentissage de notions sur\nle langage de programmation Python.  \n  \nVous travaillerez \u00e0 l'aide de cours \u00e9crits et de vid\u00e9os, d'exercices corrig\u00e9s\nen vid\u00e9os, des quiz, des travaux pratiques. Le cours est enti\u00e8rement gratuit !\n\n",
        "name": "Arithm\u00e9tique: en route pour la cryptographie",
        "provider": "Canvas.net",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Universit\u00e9 Lille 1"
        ],
        "url": "https://www.canvas.net/courses/arithm-tique-en-route-pour-la-cryptographie",
        "video_url": ""
    },
    {
        "date": "2013-10-06",
        "desc": "How to    and critique infographics and visualizations in newspapers, books, TV, etc., and how to propose alternatives that would improve them.How to plan for data-based storytelling through charts, maps, and diagrams.How to design infographics and visualizations that are not just attractive but, above all, informative, deep, and accurate.The rules of graphic design and of interaction design, applied to infographics and visualizations.Optional: How to use Adobe Illustrator to create infographics. Graphicthe University of Texas at Austin Knight Center for Journalism in the Americas",
        "desc_html": "How to and critique infographics and visualizations in newspapers, books, TV,\netc., and how to propose alternatives that would improve them.  \n  \nHow to plan for data-based storytelling through charts, maps, and diagrams.  \n  \nHow to design infographics and visualizations that are not just attractive\nbut, above all, informative, deep, and accurate.  \n  \nThe rules of graphic design and of interaction design, applied to infographics\nand visualizations.  \n  \nOptional: How to use Adobe Illustrator to create infographics. Graphic  \nthe University of Texas at Austin Knight Center for Journalism in the Americas\n\n",
        "name": "Introduction to Infographics and Data Visualization",
        "provider": "Independent",
        "rating": "3.25",
        "reviews": "4",
        "university": [
            "Knight Center for Journalism in the Americas"
        ],
        "url": "http://open.journalismcourses.org/",
        "video_url": "https://www.youtube.com/embed/oYHuoj8CnBM?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-10-02",
        "desc": "Mobile devices, phones as well as Tablet computers, have been spreading fast across the globe. Spread of mobile phones in developing countries has been spectacular. More people have access to cell phones today than to clean water.Mobile communication and computing technologies have much potential to contribute to human development. This is already felt in some measure in learning. There are reports of new advantages and benefits in key other sectors such as agriculture and food production and rural credit and finance. This course is about important concepts and practices in mobile technologies that are relevant to learning and education, agricultural extension and rural credit and finance.",
        "desc_html": "Mobile devices, phones as well as Tablet computers, have been spreading fast\nacross the globe. Spread of mobile phones in developing countries has been\nspectacular. More people have access to cell phones today than to clean water.  \n  \nMobile communication and computing technologies have much potential to\ncontribute to human development. This is already felt in some measure in\nlearning. There are reports of new advantages and benefits in key other\nsectors such as agriculture and food production and rural credit and finance.\nThis course is about important concepts and practices in mobile technologies\nthat are relevant to learning and education, agricultural extension and rural\ncredit and finance.\n\n",
        "name": "Mobiles for Development",
        "provider": "Commonwealth of Learning",
        "rating": "0",
        "reviews": "0",
        "university": [
            "IIT (Indian Institute of Technology, Kanpur)"
        ],
        "url": "http://m4d.colfinder.org/",
        "video_url": "https://www.youtube.com/embed/p_xjBT8zVdA?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-09-16",
        "desc": "The course \"Learning in the Cloud\" will give you the opportunity to join the camp of \"Cloud Computing\" giving you direct application knowledge to create innovative experiences in your learning environment or job training.The tools you will learn in this course are customizable, innovative and provide free services.Optimizing cost and time in training processes.&nbsp;Syllabus&nbsp;What is the cloud?Cloud ComputingLearning in the CloudBenefits and learning achievement in the cloudLearning Tools in the CloudPresentation tools: Prezi, Cacoo, GlogsterA Toolkit Documentation: Dropbox, Dipity and bloggerCollaboration Tools: Google Drive, Padlet and WikispacesCommunication Tools: Skype, Podomatic and social networksMultimedia Tools: GoAnimate and XtranormalInteractive Tools: Educaplay and Quizrevolution&nbsp;&nbsp;",
        "desc_html": "The course \"Learning in the Cloud\" will give you the opportunity to join the\ncamp of \"Cloud Computing\" giving you direct application knowledge to create\ninnovative experiences in your learning environment or job training. The tools\nyou will learn in this course are customizable, innovative and provide free\nservices. Optimizing cost and time in training processes.\n\n## Syllabus\n\n\n\n  * What is the cloud?\n  * Cloud Computing\n  * Learning in the Cloud\n  * Benefits and learning achievement in the cloud\n  * Learning Tools in the Cloud\n  * Presentation tools: Prezi, Cacoo, Glogster\n  * A Toolkit Documentation: Dropbox, Dipity and blogger\n  * Collaboration Tools: Google Drive, Padlet and Wikispaces\n  * Communication Tools: Skype, Podomatic and social networks\n  * Multimedia Tools: GoAnimate and Xtranormal\n  * Interactive Tools: Educaplay and Quizrevolution\n\n\n\n\n\n",
        "name": "Aprendizaje en la Nube, Herramientas web en el Aula",
        "provider": "Telescopio",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Galileo University"
        ],
        "url": "http://telescopio.galileo.edu/curso/aprendizaje-en-la-nube/",
        "video_url": "https://www.youtube.com/embed/SB5VgaBuJZk?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-09-04",
        "desc": "Phones, diesel engines, animated newspapers, medical devices, games, political\n    campaigns, medical research, mining, transportation systems, ... and so\n    on, and on, and on... every day more of the world around us is at least\n    partly run by computer programs. This means that being able to design programs\n    - or at least be able to work with people who design programs - is becoming\n    a more and more valuable skill.To build your own programs you need to know two things: how to use the\n    specific programming language and libraries needed, and the more general\n    skill of how to design a program.This course presents adesign methodthat will enable you to approach\n    the design of complex programs systematically. The method will work for\n    programs in this course as well as hard to design programs you develop\n    in the future.Using this method you will learn how to model the information in a problem\n    domain, how to structure program data to mirror that information and how\n    to further structure the data to lead to a well organized program. You\n    will also learn to distinguish those parts of a program that are naturally\n    data driven, from those that should use an alternative algorithmic approach.\n    The method uses unit-tests to both produce a better developed design, and\n    to test your program as you develop it.In the first course -- Part 1 -- we use a simple\n    teaching language to cover the core of the design method. In Part 1 we cover various forms of data; simple interactive programs like games and animations; storing information in and rendering trees; and finally exploring search programs: programs that solve puzzles like Sudoku boards.&nbsp;A second phase of the course, to be offered later, &nbsp;will consist of parallel tracks, with each track using a different popular\n    programming language and focusing on a different kind of problem. This\n    will help you bring the design method to whatever language and problem\n    domain interests you.SyllabusWeek One: Introduction and the structure of the course. The Beginning\nStudent Language; expressions and evaluation rules; primitive\noperations on numbers, strings and images. The How to Design Functions\n(HtDF) Recipe.Week Two: Representing information as data. The How to Design Data\n(HtDD) recipe. Atomic forms of data including intervals, enumerations,\nand itemizations.Week Three: The design of simple interactive programs. The big-bang\nuser interface framework. The How to Design Worlds (HtDW)\nrecipe. Representing information where two or more values naturally\nform a whole using compound data.Week Four: Representing arbitrary sized information using\nlists. Decomposition of information into multiple types.Week Five: Functions operating on natural numbers. A parlor\ntrick. Rules for decomposing functions.Week Six: List abbreviations. Mutual reference allows more complex\narbitrary-sized data. Using binary trees to enable fast lookup of\ninformation. Using arbitrary arity trees to represent inherently\nhierarchical information.Week Seven: Functions that consume two arguments that have 'one-of' in\ntheir types. Using local definitions to improve the structure of\nprograms.Week Eight: Using abstraction to control reduce repetition and\ncomplexity in programs.Week Nine: Generative recursion, fractals and search problems.",
        "desc_html": "Phones, diesel engines, animated newspapers, medical devices, games, political\ncampaigns, medical research, mining, transportation systems, ... and so on,\nand on, and on... every day more of the world around us is at least partly run\nby computer programs. This means that being able to design programs \\- or at\nleast be able to work with people who design programs - is becoming a more and\nmore valuable skill.\n\nTo build your own programs you need to know two things: how to use the\nspecific programming language and libraries needed, and the more general skill\nof how to design a program.\n\nThis course presents a **design method** that will enable you to approach the\ndesign of complex programs systematically. The method will work for programs\nin this course as well as hard to design programs you develop in the future.\n\nUsing this method you will learn how to model the information in a problem\ndomain, how to structure program data to mirror that information and how to\nfurther structure the data to lead to a well organized program. You will also\nlearn to distinguish those parts of a program that are naturally data driven,\nfrom those that should use an alternative algorithmic approach. The method\nuses unit-tests to both produce a better developed design, and to test your\nprogram as you develop it.\n\nIn the first course -- Part 1 -- we use a simple teaching language to cover\nthe core of the design method. In Part 1 we cover various forms of data;\nsimple interactive programs like games and animations; storing information in\nand rendering trees; and finally exploring search programs: programs that\nsolve puzzles like Sudoku boards.\n\nA second phase of the course, to be offered later,  will consist of parallel\ntracks, with each track using a different popular programming language and\nfocusing on a different kind of problem. This will help you bring the design\nmethod to whatever language and problem domain interests you.  \n\n## Syllabus\n\nWeek One: Introduction and the structure of the course. The Beginning Student\nLanguage; expressions and evaluation rules; primitive operations on numbers,\nstrings and images. The How to Design Functions (HtDF) Recipe.\n\nWeek Two: Representing information as data. The How to Design Data (HtDD)\nrecipe. Atomic forms of data including intervals, enumerations, and\nitemizations.\n\nWeek Three: The design of simple interactive programs. The big-bang user\ninterface framework. The How to Design Worlds (HtDW) recipe. Representing\ninformation where two or more values naturally form a whole using compound\ndata.\n\nWeek Four: Representing arbitrary sized information using lists. Decomposition\nof information into multiple types.\n\nWeek Five: Functions operating on natural numbers. A parlor trick. Rules for\ndecomposing functions.\n\nWeek Six: List abbreviations. Mutual reference allows more complex arbitrary-\nsized data. Using binary trees to enable fast lookup of information. Using\narbitrary arity trees to represent inherently hierarchical information.\n\nWeek Seven: Functions that consume two arguments that have 'one-of' in their\ntypes. Using local definitions to improve the structure of programs.\n\nWeek Eight: Using abstraction to control reduce repetition and complexity in\nprograms.\n\nWeek Nine: Generative recursion, fractals and search problems.\n\n",
        "name": "Introduction to Systematic Program Design - Part 1",
        "provider": "Coursera",
        "rating": "4.6666666666667",
        "reviews": "3",
        "university": [
            "The University of British Columbia"
        ],
        "url": "https://www.coursera.org/course/programdesign",
        "video_url": ""
    },
    {
        "date": "2013-09-03",
        "desc": "Recommender\n systems have changed the way people find products, information, and even \nother people. They study patterns of behavior to know what someone will \nprefer from among a collection of things he has never experienced. The \ntechnology behind recommender systems has evolved over the past 20 years\n into a rich collection of tools that enable the practitioner or \nresearcher to develop effective recommenders. We will study the most \nimportant of those tools, including how they work, how to use them, how \nto evaluate them, and their strengths and weaknesses in practice.The\n algorithms we will study include content-based filtering, user-user \ncollaborative filtering, item-item collaborative filtering, dimensionality \nreduction, and interactive critique-based recommenders. The approach \nwill be hands-on, with six two week projects, each of which will involve\n implementation and evaluation of some type of recommender.In addition to topical lectures, this course includes interviews and \nguest lectures with experts from both academia and industry.Two Ways to Take this Course:This course is designed to support two different types of students and educational goals:Programming Track: \u00a0Designed\n for students with significant programming and mathematics experience \n(see below), the programming track combines a conceptual and \nmathematical understanding of recommender systems with experience \nprogramming six different recommender systems projects. \u00a0Students \ncompleting this travel will gain the skills needed to implement basic \nrecommenders from scratch, and to use software libraries and tools to \nimplement more advanced recommenders.Concepts Track:Students who are not experienced programmers, or who are primarily \ninterested in understanding the concepts and techniques of recommender \nsystems, without learning to program them, can choose to focus on the \nconceptual and mathematical content, skipping the programming projects \nand associated lecture content.\u00a0 Students in the concepts track are \nstill expected to have significant familiarity with computing systems \nand college-level mathematics, but need not be accomplished programmers.\n \u00a0We expect this track to be useful for tech-savvy marketing and \nbusiness leaders, as well as engineering managers who may oversee but \nnot directly develop recommender systems. \u00a0We also hope it will be \nuseful to those looking to understand recommender systems concepts \nwithout the workload associated with programming those systems.SyllabusTopics covered:Week 1:Introduction to Course and to Recommender SystemsWeeks 2 and 3:Non-Personalized RecommendersUnderstanding Ratings, Predictions, and RecommendationsScales and NormalizationInterview with Anthony Jameson (DFKI AI Labs)Weeks 4 and 5:Content-Based RecommendersInferring PreferencesUnary RatingsKnowledge-Based RecommendersIntroduction to LensKit ToolkitInterviews with Robin Burke (DePaul University) and Barry Smyth (University College Dublin)Weeks 6 and 7:Collaborative FilteringUser-User k-Nearest Neighbor ApproachTuning CF AlgorithmsInterviews with Paul Resnick (University of Michigan), Jen Golbeck (University of Maryland) and Dan Cosley(Cornell University)Weeks 8 and 9:Evaluation and Metrics;Error Metrics;Decision-Support MetricsComparative Evaluation: Dead Data vs. Laboratory vs. Field StudyUser-Centered Metrics and EvaluationData SetsInterview with Neal Lathia (University of Cambridge)Weeks 10 and 11:Collaborative Filtering IIItem-Item k-Nearest NeighborBusiness RulesAdjustments for Serendipity and DiversityPerformance ComparisonsHybrid AlgorithmsInterviews with Brad Miller (Luther College) and Robin Burke (DePaul University)Weeks 12 and 13:Dimensionality Reduction RecommendersConcepts behind Latent Semantic Analysis and Singular Value DecompositionWeek 14:Alternative Recommender ApproachesInteractive RecommendersCritique and Dialog-based ApproachesAdvanced TopicsResourcesInterview with Anthony Jameson (DFKI AI Labs), Francesco Ricci (Free University of Bozen-Bolzano), Xavier Amatriain (NetFlix) and Anmol Bhasin (LinkedIn)Conclusion",
        "desc_html": "Recommender systems have changed the way people find products, information,\nand even other people. They study patterns of behavior to know what someone\nwill prefer from among a collection of things he has never experienced. The\ntechnology behind recommender systems has evolved over the past 20 years into\na rich collection of tools that enable the practitioner or researcher to\ndevelop effective recommenders. We will study the most important of those\ntools, including how they work, how to use them, how to evaluate them, and\ntheir strengths and weaknesses in practice.\n\nThe algorithms we will study include content-based filtering, user-user\ncollaborative filtering, item-item collaborative filtering, dimensionality\nreduction, and interactive critique-based recommenders. The approach will be\nhands-on, with six two week projects, each of which will involve\nimplementation and evaluation of some type of recommender.\n\nIn addition to topical lectures, this course includes interviews and guest\nlectures with experts from both academia and industry.  \n\n**Two Ways to Take this Course**:\n\nThis course is designed to support two different types of students and\neducational goals:\n\n_Programming Track_: \u00a0Designed for students with significant programming and\nmathematics experience (see below), the programming track combines a\nconceptual and mathematical understanding of recommender systems with\nexperience programming six different recommender systems projects. \u00a0Students\ncompleting this travel will gain the skills needed to implement basic\nrecommenders from scratch, and to use software libraries and tools to\nimplement more advanced recommenders.\n\n_Concepts Track_: \u00a0Students who are not experienced programmers, or who are\nprimarily interested in understanding the concepts and techniques of\nrecommender systems, without learning to program them, can choose to focus on\nthe conceptual and mathematical content, skipping the programming projects and\nassociated lecture content.\u00a0 Students in the concepts track are still expected\nto have significant familiarity with computing systems and college-level\nmathematics, but need not be accomplished programmers. \u00a0We expect this track\nto be useful for tech-savvy marketing and business leaders, as well as\nengineering managers who may oversee but not directly develop recommender\nsystems. \u00a0We also hope it will be useful to those looking to understand\nrecommender systems concepts without the workload associated with programming\nthose systems.  \n\n## Syllabus\n\n**_Topics covered_**:   \nWeek 1:  \n\n> Introduction to Course and to Recommender Systems  \n\nWeeks 2 and 3:  \n\n> Non-Personalized Recommenders  \nUnderstanding Ratings, Predictions, and Recommendations  \nScales and Normalization  \nInterview with Anthony Jameson (DFKI AI Labs)\n\nWeeks 4 and 5:  \n\n> Content-Based Recommenders  \nInferring Preferences  \nUnary Ratings  \nKnowledge-Based Recommenders  \nIntroduction to LensKit Toolkit  \nInterviews with Robin Burke (DePaul University) and Barry Smyth (University\nCollege Dublin)\n\nWeeks 6 and 7:  \n\n> Collaborative Filtering  \nUser-User k-Nearest Neighbor Approach  \nTuning CF Algorithms  \nInterviews with Paul Resnick (University of Michigan), Jen Golbeck (University\nof Maryland) and Dan Cosley(Cornell University)\n\nWeeks 8 and 9:  \n\n> Evaluation and Metrics;  \nError Metrics;  \nDecision-Support Metrics  \nComparative Evaluation: Dead Data vs. Laboratory vs. Field Study  \nUser-Centered Metrics and Evaluation  \nData Sets  \nInterview with Neal Lathia (University of Cambridge)\n\nWeeks 10 and 11:  \n\n> Collaborative Filtering II  \nItem-Item k-Nearest Neighbor  \nBusiness Rules  \nAdjustments for Serendipity and Diversity  \nPerformance Comparisons  \nHybrid Algorithms  \nInterviews with Brad Miller (Luther College) and Robin Burke (DePaul\nUniversity)\n\nWeeks 12 and 13:  \n\n> Dimensionality Reduction Recommenders  \nConcepts behind Latent Semantic Analysis and Singular Value Decomposition  \n\nWeek 14:  \n\n> Alternative Recommender Approaches  \nInteractive Recommenders  \nCritique and Dialog-based Approaches  \nAdvanced Topics  \nResources  \nInterview with Anthony Jameson (DFKI AI Labs), Francesco Ricci (Free\nUniversity of Bozen-Bolzano), Xavier Amatriain (NetFlix) and Anmol Bhasin\n(LinkedIn)  \nConclusion  \n\n  \n\n",
        "name": "Introduction to Recommender Systems",
        "provider": "Coursera",
        "rating": "5",
        "reviews": "2",
        "university": [
            "University of Minnesota"
        ],
        "url": "https://www.coursera.org/course/recsys",
        "video_url": ""
    },
    {
        "date": "2013-08-19",
        "desc": "A computer program is a set of instructions for a computer to follow, just as a recipe is a set of instructions for a chef. Laptops, kitchen appliances, MP3 players, and many other electronic devices all run computer programs. Programs have been written to manipulate sound and video, write poetry, run banking systems, predict the weather, and analyze athletic performance. This course is intended for people who have never seen a computer program. It will give you a better understanding of how computer applications work and teach you how to write your own applications. More importantly, you\u2019ll start to learn computational thinking, which is a fundamental approach to solving real-world problems. Computer programming languages share common fundamental concepts, and this course will introduce you to those concepts using the Python programming language. By the end of this course, you will be able to write your own programs to process data from the web and create interactive text-based games.",
        "desc_html": "A computer program is a set of instructions for a computer to follow, just as\na recipe is a set of instructions for a chef. Laptops, kitchen appliances, MP3\nplayers, and many other electronic devices all run computer programs. Programs\nhave been written to manipulate sound and video, write poetry, run banking\nsystems, predict the weather, and analyze athletic performance. This course is\nintended for people who have never seen a computer program. It will give you a\nbetter understanding of how computer applications work and teach you how to\nwrite your own applications. More importantly, you\u2019ll start to learn\ncomputational thinking, which is a fundamental approach to solving real-world\nproblems. Computer programming languages share common fundamental concepts,\nand this course will introduce you to those concepts using the Python\nprogramming language. By the end of this course, you will be able to write\nyour own programs to process data from the web and create interactive text-\nbased games.\n\n",
        "name": "Learn to Program: The Fundamentals",
        "provider": "Coursera",
        "rating": "4.8714285714286",
        "reviews": "70",
        "university": [
            "University of Toronto"
        ],
        "url": "https://www.coursera.org/course/programming1",
        "video_url": ""
    },
    {
        "date": "2013-08-11",
        "desc": "Quantum computation is a remarkable subject based on one of the great computational discoveries that computers based on quantum mechanics are exponentially powerful. This course aims to make this cutting-edge material broadly accessible to undergraduate students, including computer science majors who do not have any prior exposure to quantum mechanics. The course starts with a simple introduction to the fundamental principles of quantum mechanics using the concepts of qubits (or quantum bits) and quantum gates. This treatment emphasizes the paradoxical nature of the subject, including entanglement, non-local correlations, the no-cloning theorem and quantum teleportation. The course covers the fundamentals of quantum algorithms, including the quantum fourier transform, period finding, Shor's quantum algorithm for factoring integers, as well as the prospects for quantum algorithms for NP-complete problems.",
        "desc_html": "Quantum computation is a remarkable subject based on one of the great\ncomputational discoveries that computers based on quantum mechanics are\nexponentially powerful. This course aims to make this cutting-edge material\nbroadly accessible to undergraduate students, including computer science\nmajors who do not have any prior exposure to quantum mechanics. The course\nstarts with a simple introduction to the fundamental principles of quantum\nmechanics using the concepts of qubits (or quantum bits) and quantum gates.\nThis treatment emphasizes the paradoxical nature of the subject, including\nentanglement, non-local correlations, the no-cloning theorem and quantum\nteleportation. The course covers the fundamentals of quantum algorithms,\nincluding the quantum fourier transform, period finding, Shor's quantum\nalgorithm for factoring integers, as well as the prospects for quantum\nalgorithms for NP-complete problems.\n\n",
        "name": "CS191x: Quantum Mechanics and Quantum Computation",
        "provider": "edX",
        "rating": "3.8333333333333",
        "reviews": "6",
        "university": [
            "University of California, Berkeley"
        ],
        "url": "https://www.edx.org/course/quantum-mechanics-quantum-computation-uc-berkeleyx-cs-191x",
        "video_url": ""
    },
    {
        "date": "2013-07-31",
        "desc": "This course covers database design and the use of database management systems for applications. It includes extensive coverage of the relational model, relational algebra, and SQL. It also covers XML data including DTDs and XML Schema for validation, and the query and transformation languages XPath, XQuery, and XSLT. The course includes database design in UML, and relational design principles based on dependencies and normal forms. Many additional key database topics from the design and application-building perspective are also covered: indexes, views, transactions, authorization, integrity constraints, triggers, on-line analytical processing (OLAP), JSON, and emerging NoSQL systems. Working through the entire course provides comprehensive coverage of the field, but most of the topics are also well-suited for \"a la carte\" learning.",
        "desc_html": "This course covers database design and the use of database management systems\nfor applications. It includes extensive coverage of the relational model,\nrelational algebra, and SQL. It also covers XML data including DTDs and XML\nSchema for validation, and the query and transformation languages XPath,\nXQuery, and XSLT. The course includes database design in UML, and relational\ndesign principles based on dependencies and normal forms. Many additional key\ndatabase topics from the design and application-building perspective are also\ncovered: indexes, views, transactions, authorization, integrity constraints,\ntriggers, on-line analytical processing (OLAP), JSON, and emerging NoSQL\nsystems. Working through the entire course provides comprehensive coverage of\nthe field, but most of the topics are also well-suited for \"a la carte\"\nlearning.\n\n",
        "name": "Introduction to Databases",
        "provider": "UWA Class2GO",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Stanford University"
        ],
        "url": "https://www.class2go.uwa.edu.au/IntroDB/Semester22013/preview/",
        "video_url": ""
    },
    {
        "date": "2013-07-17",
        "desc": "Das Web &ndash; eigentlich nichts anderes als ein einfacher Informationsdienst im Internet &ndash; hat eine ganz neue digitale Welt entstehen lassen, die eng verwoben mit unserer realen Welt fr&uuml;her Unvorstellbares m&ouml;glich macht: sekundenschnelle Kommunikation &uuml;ber Kontinente, Filme auf dem Smartphone anschauen, mit Partnern in entfernten L&auml;ndern spielen oder Fotos anschauen oder vom Sofa aus einkaufen und Bankgesch&auml;fte t&auml;tigen&hellip; In unserem Onlinekurs zu den Web-Technologien lernen Sie, wie das alles funktioniert. Zun&auml;chst besprechen wir die dem Web zugrundeliegenden Basistechnologien URI, HTTP, HTML, CSS und XML. Auch wenn das zun&auml;chst sehr kryptisch klingt, werden Sie schnell verstehen, worum es geht. Wir sehen uns dann Webservices und die Techniken der Webprogrammierung an und &uuml;ben diese ein. Dann werden wir uns mit der Frage besch&auml;ftigen, wie Suchmaschinen, die uns als Webweiser in der digitalen Welt so schnell und zuverl&auml;ssig helfen, Inhalte und Dienstangebote im Web zu finden, eigentlich funktionieren. Der Kurs schlie&szlig;t mit einem Ausblick auf das Cloud Computing, das die Art und Weise, wie wir in Zukunft auf Rechenleistungen zugreifen werden, grundlegend ver&auml;ndert.SyllabusWoche 1:Einf&uuml;hrung in das WWWWoche 2:Woche 2Woche 3:Woche 3Woche 4:Woche 4Exkurs:ExkursWoche 5:Woche 5Woche 6:Woche 6Klausur:Klausur",
        "desc_html": "Das Web - eigentlich nichts anderes als ein einfacher Informationsdienst im\nInternet - hat eine ganz neue digitale Welt entstehen lassen, die eng verwoben\nmit unserer realen Welt fruher Unvorstellbares moglich macht: sekundenschnelle\nKommunikation uber Kontinente, Filme auf dem Smartphone anschauen, mit\nPartnern in entfernten Landern spielen oder Fotos anschauen oder vom Sofa aus\neinkaufen und Bankgeschafte tatigen\u2026 In unserem Onlinekurs zu den Web-\nTechnologien lernen Sie, wie das alles funktioniert. Zunachst besprechen wir\ndie dem Web zugrundeliegenden Basistechnologien URI, HTTP, HTML, CSS und XML.\nAuch wenn das zunachst sehr kryptisch klingt, werden Sie schnell verstehen,\nworum es geht. Wir sehen uns dann Webservices und die Techniken der\nWebprogrammierung an und uben diese ein. Dann werden wir uns mit der Frage\nbeschaftigen, wie Suchmaschinen, die uns als Webweiser in der digitalen Welt\nso schnell und zuverlassig helfen, Inhalte und Dienstangebote im Web zu\nfinden, eigentlich funktionieren. Der Kurs schlie\u00dft mit einem Ausblick auf das\nCloud Computing, das die Art und Weise, wie wir in Zukunft auf\nRechenleistungen zugreifen werden, grundlegend verandert.\n\n## Syllabus\n\n  * **Woche 1:** Einfuhrung in das WWW\n  * **Woche 2:** Woche 2\n  * **Woche 3:** Woche 3\n  * **Woche 4:** Woche 4\n  * **Exkurs:** Exkurs\n  * **Woche 5:** Woche 5\n  * **Woche 6:** Woche 6\n  * **Klausur:** Klausur\n\n",
        "name": "Web-Technologien",
        "provider": "openHPI",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.hpi.de/courses/www",
        "video_url": ""
    },
    {
        "date": "2013-07-15",
        "desc": "The discipline of user experience examines how we interact with the products and systems that surround us; everything from our kitchen appliances to smart phones. This course provides an overview of the general principles of user experience for the online world. You will learn about tools and techniques you can use to begin to create great user experiences. It will address the design of websites and customer interactions for the online world.User experience also involves balancing the needs of users with the business objectives, and resolving any conflicts between the two. Learn why it is so important to learn about your users, and be introduced to some useful tools to help do this, such as user profiling and personas. Students will also learn about the design process itself, and how user-centred design fits with traditional software development cycles.What will I learn?The characteristics of user experience design, usability, and user centred designThe factors that influence interface design, and how to balance these requirementsThe design streams that impact interface design, and design techniques from each stream:Information DesignInteraction DesignVisual DesignHow branding is an important part of user experienceThe importance of accessibility onlineThe importance of knowing your users and:What you need to knowHow to learn about themHow to communicate your findingsKey usability evaluation techniques, including:WalkthroughsUsability testingExpert reviewCompetitor analysisThis course requires approximately 2 - 4 hours of study per week, but can vary depending on the student. This includes watching videos, and taking quizzes and assessments.If you pass this course you'll receive a Certificate of Achievement. While this certificate isn't a formal qualification or credit, you can use it to demonstrate your interest in learning about this area to potential employers or educational institutions.Where could this lead me?If you're wondering what your future could look like in this area, here are some potential careers you could head towards.Social media managerWeb designerWeb developerWeb publisherWebmasterAssistant web designerAssistant web designerTechnical writerWebsite coordinatorWebmaster assistantSyllabusMODULE&nbsp;1:&nbsp;OVERVIEW OF USER EXPERIENCE&nbsp;MODULE&nbsp;2:&nbsp;THE ELEMENTS OF UX&nbsp;MODULE&nbsp;3:&nbsp;KNOWING YOUR USERS&nbsp;",
        "desc_html": "The discipline of user experience examines how we interact with the products\nand systems that surround us; everything from our kitchen appliances to smart\nphones. This course provides an overview of the general principles of user\nexperience for the online world. You will learn about tools and techniques you\ncan use to begin to create great user experiences. It will address the design\nof websites and customer interactions for the online world.\n\nUser experience also involves balancing the needs of users with the business\nobjectives, and resolving any conflicts between the two. Learn why it is so\nimportant to learn about your users, and be introduced to some useful tools to\nhelp do this, such as user profiling and personas. Students will also learn\nabout the design process itself, and how user-centred design fits with\ntraditional software development cycles.\n\n**What will I learn?**\n\n  * The characteristics of user experience design, usability, and user centred design\n  * The factors that influence interface design, and how to balance these requirements\n  * The design streams that impact interface design, and design techniques from each stream: \n    * Information Design\n    * Interaction Design\n    * Visual Design\n  * How branding is an important part of user experience\n  * The importance of accessibility online\n  * The importance of knowing your users and: \n    * What you need to know\n    * How to learn about them\n    * How to communicate your findings\n  * Key usability evaluation techniques, including: \n    * Walkthroughs\n    * Usability testing\n    * Expert review\n    * Competitor analysis\n\nThis course requires approximately 2 - 4 hours of study per week, but can vary\ndepending on the student. This includes watching videos, and taking quizzes\nand assessments.\n\nIf you pass this course you'll receive a Certificate of Achievement. While\nthis certificate isn't a formal qualification or credit, you can use it to\ndemonstrate your interest in learning about this area to potential employers\nor educational institutions.\n\n**Where could this lead me?**\n\nIf you're wondering what your future could look like in this area, here are\nsome potential careers you could head towards.\n\n  * Social media manager\n  * Web designer\n  * Web developer\n  * Web publisher\n  * Webmaster\n  * Assistant web designer\n  * Assistant web designer\n  * Technical writer\n  * Website coordinator\n  * Webmaster assistant\n\n## Syllabus\n\nMODULE 1: OVERVIEW OF USER EXPERIENCE\n\n|  \n---|---  \n  \nMODULE 2: THE ELEMENTS OF UX\n\n|  \n  \nMODULE 3: KNOWING YOUR USERS\n\n|  \n\n",
        "name": "User Experience for the Web",
        "provider": "Open2Study",
        "rating": "4",
        "reviews": "2",
        "university": [],
        "url": "https://www.open2study.com/courses/user-experience-for-the-web",
        "video_url": "https://www.youtube.com/embed/jRNQ3UQQKQw?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-07-02",
        "desc": "This is a course to teach basic Python programming skills through data analysis. The book and course materials are all free and licensed as Creative Commons. There is no complex math in the course, the programs are generally quite short, and the workload is no more than a few hours per week. By the time you complete the course, you will understand be able to read, parse, and manipulate data using Python. Hopefully at the end of the course you will like programming well enough to take another course in programming or web development. The free, reusable, and remixable course materials will be made available for you to download, use and reuse.",
        "desc_html": "This is a course to teach basic Python programming skills through data\nanalysis. The book and course materials are all free and licensed as Creative\nCommons. There is no complex math in the course, the programs are generally\nquite short, and the workload is no more than a few hours per week. By the\ntime you complete the course, you will understand be able to read, parse, and\nmanipulate data using Python. Hopefully at the end of the course you will like\nprogramming well enough to take another course in programming or web\ndevelopment. The free, reusable, and remixable course materials will be made\navailable for you to download, use and reuse.\n\n",
        "name": "Python for Informatics: Exploring Information",
        "provider": "CourseSites",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.coursesites.com/webapps/Bb-sites-course-creation-BBLEARN/courseHomepage.htmlx?course_id=_250824_1",
        "video_url": ""
    },
    {
        "date": "2013-06-18",
        "desc": "This is an introductory course in machine learning (ML) that covers the basic&nbsp;theory, algorithms, and applications. ML is a key technology in Big Data, and in many financial, medical, commercial, and scientific applications. It enables computational systems to adaptively improve their performance with experience accumulated from the observed data. ML has become one of the hottest fields of study today, taken up by undergraduate and graduate students from 15 different majors at Caltech. This course balances theory and practice, and covers the mathematical as well as the heuristic aspects. The lectures&nbsp;below&nbsp;follow each other in a story-like fashion:What is learning?Can a machine learn?How to do it?How to do it well?Take-home lessons.Syllabus&nbsp;Lecture 1:&nbsp;The Learning ProblemLecture 2:&nbsp;Is Learning Feasible?Lecture 3:&nbsp;The Linear Model ILecture 4:&nbsp;Error and NoiseLecture 5:&nbsp;Training versus TestingLecture 6:&nbsp;Theory of GeneralizationLecture 7:&nbsp;The VC DimensionLecture 8:&nbsp;Bias-Variance TradeoffLecture 9:&nbsp;The Linear Model IILecture 10:&nbsp;Neural NetworksLecture 11:&nbsp;OverfittingLecture 12:&nbsp;RegularizationLecture 13:&nbsp;ValidationLecture 14:&nbsp;Support Vector MachinesLecture 15:&nbsp;Kernel&nbsp;MethodsLecture 16:&nbsp;Radial Basis FunctionsLecture 17:&nbsp;Three Learning PrinciplesLecture 18:&nbsp;Epilogue&nbsp;",
        "desc_html": "This is an introductory course in machine learning (ML) that covers the basic\n**theory, algorithms, and applications**. ML is a key technology in Big Data,\nand in many financial, medical, commercial, and scientific applications. It\nenables computational systems to adaptively improve their performance with\nexperience accumulated from the observed data. ML has become one of the\nhottest fields of study today, taken up by undergraduate and graduate students\nfrom 15 different majors at Caltech. This course balances theory and practice,\nand covers the mathematical as well as the heuristic aspects. The lectures\nbelow follow each other in a story-like fashion:\n\n  * What is learning?\n  * Can a machine learn?\n  * How to do it?\n  * How to do it well?\n  * Take-home lessons.\n\n## Syllabus\n\n\n\n  *   \nLecture 1: **[The Learning\nProblem**](http://www.youtube.com/watch?v=mbyG85GZ0PI&hd=1)\n\n  * Lecture 2: **[Is Learning Feasible?**](http://www.youtube.com/watch?v=MEG35RDD7RA&hd=1)\n  * Lecture 3: **[The Linear Model I**](http://www.youtube.com/watch?v=FIbVs5GbBlQ&hd=1)\n  * Lecture 4: **[Error and Noise**](http://www.youtube.com/watch?v=L_0efNkdGMc&hd=1)\n  * Lecture 5: **[Training versus Testing**](http://www.youtube.com/watch?v=SEYAnnLazMU&hd=1)\n  * Lecture 6: **[Theory of Generalization**](http://www.youtube.com/watch?v=6FWRijsmLtE&hd=1)\n  * Lecture 7: **[The VC Dimension**](http://www.youtube.com/watch?v=Dc0sr0kdBVI&hd=1)\n  * Lecture 8: **[Bias-Variance Tradeoff**](http://www.youtube.com/watch?v=zrEyxfl2-a8&hd=1)\n  * Lecture 9: **[The Linear Model II**](http://www.youtube.com/watch?v=qSTHZvN8hzs&hd=1)\n  * Lecture 10: **[Neural Networks**](http://www.youtube.com/watch?v=IstrongMr93E-2c&hd=1)\n  * Lecture 11: **[Overfitting**](http://www.youtube.com/watch?v=EQWr3GGCdzw&hd=1)\n  * Lecture 12: **[Regularization**](http://www.youtube.com/watch?v=I-VfYXzC5ro&hd=1)\n  * Lecture 13: **[Validation**](http://www.youtube.com/watch?v=o7zzaKd0Lkk&hd=1)\n  * Lecture 14: **[Support Vector Machines**](http://www.youtube.com/watch?v=eHsErlPJWUU&hd=1)\n  * Lecture 15: **[Kernel Methods**](http://www.youtube.com/watch?v=XUj5JbQihlU&hd=1)\n  * Lecture 16: **[Radial Basis Functions**](http://www.youtube.com/watch?v=O8CfrnOPtLc&hd=1)\n  * Lecture 17: **[Three Learning Principles**](http://www.youtube.com/watch?v=EZBUDG12Nr0&hd=1)\n  * Lecture 18: **[Epilogue**](http://www.youtube.com/watch?v=ihLwJPHkMRY&hd=1)\n\n\n\n",
        "name": "Learning from Data (Introductory Machine Learning course)",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [
            "California Institute of Technology"
        ],
        "url": "http://work.caltech.edu/telecourse.html",
        "video_url": "https://www.youtube.com/embed/gPY-dL2EoD4?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-06-17",
        "desc": "Spiritual sequel to Peter Thiel'sCS183course\n    on startups. Bridges the gap between academic computer science and production\n    software engineering. Fast-paced introduction to key tools and techniques\n    (command line, dotfiles, text editor, distributed version control, debugging,\n    testing, documentation, reading code, deployments), featuring guest appearances\n    by senior engineers from successful startups and large-scale academic projects.\n    Over the course of the class, students will build a command line application,\n    expose it as a web service, and then link other students' applications\n    and services together to build an HTML5 mobile app. General principles\n    are illustrated through modern Javascript and the latest web technologies,\n    including Node, Backbone, Coffeescript, Bootstrap, Git, and Github.&nbsp;SyllabusThe syllabus is optimized to enable students to&nbsp;iterate on their final projects as soon as possible, with technical material in the first half of the class and entrepreneurial considerations&nbsp;in the second half.Introduction and QuickstartTools: VMs, IAAS/PAAS, Unix Command Line, Text Editors, DCVSFrontend: HTML/CSS/JS, Wireframing, Market ResearchBackend: SSJS, Databases, Frameworks, Data PipelinesAPIs: Client-side templating, HTTP, SOA/REST/JSON, API as BizDevDevops: Testing, Deployment, CI, Monitoring, PerformanceDev Scaling: DRY, Reading/Reviewing/Documenting Code, ParallelizingFounding: Conception, Composition, CapitalizationBusiness Scaling: Promotion, CAC/LTV/Funnel, Regulation, AccountingSummary and Demo Week",
        "desc_html": "****\n\n****Spiritual sequel to Peter Thiel's [CS183](http://blakemasters.tumblr.com/peter-thiels-cs183-startup) course on startups. Bridges the gap between academic computer science and production softwar****e engineering. Fast-paced introduction to key tools and techniques (command line, dotfiles, text editor, distributed version control, debugging, testing, documentation, reading code, deployments), featuring guest appearances by senior engineers from successful startups and large-scale academic projects. Over the course of the class, students will build a command line application, expose it as a web service, and then link other students' applications and services together to build an HTML5 mobile app. General principles are illustrated through modern Javascript and the latest web technologies, including Node, Backbone, Coffeescript, Bootstrap, Git, and Github. ************\n\n## Syllabus\n\nThe syllabus is optimized to enable students to iterate on their final\nprojects as soon as possible, with technical material in the first half of the\nclass and entrepreneurial considerations in the second half.  \n  \n\n  * Introduction and Quickstart\n  * Tools: VMs, IAAS/PAAS, Unix Command Line, Text Editors, DCVS  \n\n  * Frontend: HTML/CSS/JS, Wireframing, Market Research  \n\n  * Backend: SSJS, Databases, Frameworks, Data Pipelines  \n\n  * APIs: Client-side templating, HTTP, SOA/REST/JSON, API as BizDev  \n\n  * Devops: Testing, Deployment, CI, Monitoring, Performance  \n\n  * Dev Scaling: DRY, Reading/Reviewing/Documenting Code, Parallelizing  \n\n  * Founding: Conception, Composition, Capitalization  \n\n  * Business Scaling: Promotion, CAC/LTV/Funnel, Regulation, Accounting  \n\n  * Summary and Demo Week  \n\n",
        "name": "Startup Engineering",
        "provider": "Coursera",
        "rating": "4.6",
        "reviews": "5",
        "university": [
            "Stanford University"
        ],
        "url": "https://www.coursera.org/course/startup",
        "video_url": ""
    },
    {
        "date": "2013-06-03",
        "desc": "In this class, you will learn basic skills and concepts of computer programming in an object-oriented approach using Java.You will learn concepts like classes, methods and argument passing, loops, and general problem solving ability that will become building blocks to your programming skills.Why Take This Course?How to analyze and explain the behavior of programs involving the fundamental program constructs.How to write short programs that use the fundamental program constructs including standard conditional and iterative control structures.How to design and implement your own classes of Objects given desired attributes and behaviors.How to reason about class hierarchies.How to write good documentation so your code can be re-used.How to use a real-world programming environment and a debugger.Prerequisites and RequirementsNo prior programming experience and knowledge is assumed or needed.See the&nbsp;Technology Requirements&nbsp;for using UdacitySyllabusLesson 1: Introduction to Computers, Programming Languages, Algorithms, and the Java Programming EnvironmentLesson 2: Introduction to Classes and ObjectsLesson 3: GraphicsLesson 4: Fundamental Data TypesLesson 5: DecisionsLesson 6: IterationsLesson 7: Arrays, ArrayLists and Simple Array AlgorithmsLesson 8: Methods (Parameter Passing, Instance vs. Static Methods)Lesson 9: Inheritance",
        "desc_html": "In this class, you will learn basic skills and concepts of computer\nprogramming in an object-oriented approach using Java.\n\nYou will learn concepts like classes, methods and argument passing, loops, and\ngeneral problem solving ability that will become building blocks to your\nprogramming skills.\n\n**Why Take This Course?**\n\n  1. How to analyze and explain the behavior of programs involving the fundamental program constructs.\n  2. How to write short programs that use the fundamental program constructs including standard conditional and iterative control structures.\n  3. How to design and implement your own classes of Objects given desired attributes and behaviors.\n  4. How to reason about class hierarchies.\n  5. How to write good documentation so your code can be re-used.\n  6. How to use a real-world programming environment and a debugger.\n\n**Prerequisites and Requirements**\n\nNo prior programming experience and knowledge is assumed or needed.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n## Syllabus\n\n**Lesson 1: Introduction to Computers, Programming Languages, Algorithms, and the Java Programming Environment** **Lesson 2: Introduction to Classes and Objects** **Lesson 3: Graphics** **Lesson 4: Fundamental Data Types** **Lesson 5: Decisions** **Lesson 6: Iterations** **Lesson 7: Arrays, ArrayLists and Simple Array Algorithms** **Lesson 8: Methods (Parameter Passing, Instance vs. Static Methods)** **Lesson 9: Inheritance**\n\n",
        "name": "Introduction to Programming in Java",
        "provider": "Udacity",
        "rating": "3.8",
        "reviews": "5",
        "university": [
            "San Jose State University"
        ],
        "url": "https://www.udacity.com/course/cs046",
        "video_url": "https://www.youtube.com/embed/Wsp5Rrenoq4?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-05-20",
        "desc": "",
        "desc_html": "\n\n",
        "name": "Building a Basic Website",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of Massachusetts Amherst"
        ],
        "url": "http://www.umass.edu/journalism/mooc/",
        "video_url": ""
    },
    {
        "date": "2013-05-18",
        "desc": "Datenbanken bilden die Basis fast aller gro&szlig;en Software-Anwendungen. In Unternehmen, in der Forschung, im Web &ndash; &uuml;berall entstehen riesige Datenmengen, die es gilt sicher zu speichern und die effizient abfragbar sein m&uuml;ssen. In dem openHPI Kurs \"Datenmanagement mit SQL\" lernen wir die Grundlagen von modernen Datenbanksystemen kennen. Wir untersuchen ihren Aufbau, wir planen den Entwurf von Datenbanken und schlie&szlig;lich lernen wir die weltweit dominierende Anfragesprache SQL kennen. Mittels SQL kann man einfach formulierte aber sehr m&auml;chtige Anfragen an eine Datenbank senden. Diese Anfragen k&ouml;nnen Daten suchen, Daten filtern und sortieren, und schlie&szlig;lich Daten auf vielf&auml;ltige Weise analysieren. Hin und wieder verlassen wir diese Anwendersicht und erfahren wie ein Datenbanksystem die Nutzeranweisungen umsetzt, zum Beispiel um komplexe Operationen besonders effizient umzusetzen.SyllabusBegr&uuml;&szlig;ung:Begr&uuml;&szlig;ungWoche 1:Woche 1Woche 2:Woche 2Woche 3:Woche 3Woche 4:Woche 4Woche 5:Woche 5Bonus:BonusWoche 6:Woche 6Exkurs 1:Exkurs 1Exkurs 2:Exkurs 2Klausur:Klausur",
        "desc_html": "Datenbanken bilden die Basis fast aller gro\u00dfen Software-Anwendungen. In\nUnternehmen, in der Forschung, im Web - uberall entstehen riesige Datenmengen,\ndie es gilt sicher zu speichern und die effizient abfragbar sein mussen. In\ndem openHPI Kurs \"Datenmanagement mit SQL\" lernen wir die Grundlagen von\nmodernen Datenbanksystemen kennen. Wir untersuchen ihren Aufbau, wir planen\nden Entwurf von Datenbanken und schlie\u00dflich lernen wir die weltweit\ndominierende Anfragesprache SQL kennen. Mittels SQL kann man einfach\nformulierte aber sehr machtige Anfragen an eine Datenbank senden. Diese\nAnfragen konnen Daten suchen, Daten filtern und sortieren, und schlie\u00dflich\nDaten auf vielfaltige Weise analysieren. Hin und wieder verlassen wir diese\nAnwendersicht und erfahren wie ein Datenbanksystem die Nutzeranweisungen\numsetzt, zum Beispiel um komplexe Operationen besonders effizient umzusetzen.\n\n## Syllabus\n\n  * **Begru\u00dfung:** Begru\u00dfung\n  * **Woche 1:** Woche 1\n  * **Woche 2:** Woche 2\n  * **Woche 3:** Woche 3\n  * **Woche 4:** Woche 4\n  * **Woche 5:** Woche 5\n  * **Bonus:** Bonus\n  * **Woche 6:** Woche 6\n  * **Exkurs 1:** Exkurs 1\n  * **Exkurs 2:** Exkurs 2\n  * **Klausur:** Klausur\n\n",
        "name": "Datenmanagement mit SQL",
        "provider": "openHPI",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.hpi.de/courses/sql",
        "video_url": ""
    },
    {
        "date": "2013-04-23",
        "desc": "In this research-oriented graduate course, we will study algorithms for graph partitioning and clustering, constructions of expander graphs, and analysis of random walks. These are three topics that build on the same mathematical background and that have several important connections: for example it is possible to find graph clusters via random walks, and it is possible to use the linear programming approach to graph partitioning as a way to study random walks.We will study spectral graph theory, which explains how certain combinatorial properties of graphs are related to the eigenvalues and eigenvectors of the adjacency matrix, and we will use it describe and analyze spectral algorithms for graph partitioning and clustering. Spectral graph theory will recur as an important tool in the rest of the course. We we will also discuss other approaches to graph partitioning via linear programming and semidefinite programming. Then we will study constructions of expander graphs, which are graphs with very strong pseudorandomness properties, which are useful in many applications, including in cryptography, in complexity theory, in algorithms and data structures, and in coding theory. Finally, we will study the mixing time of random walks, a problem that comes up in several applications, including the analysis of the convergence time of certain randomized algorithms, such as the Metropolis algorithm.Prerequisites&nbsp;Linear algebra, discrete probability, and algorithms",
        "desc_html": "In this research-oriented graduate course, we will study algorithms for graph\npartitioning and clustering, constructions of expander graphs, and analysis of\nrandom walks. These are three topics that build on the same mathematical\nbackground and that have several important connections: for example it is\npossible to find graph clusters via random walks, and it is possible to use\nthe linear programming approach to graph partitioning as a way to study random\nwalks.\n\nWe will study spectral graph theory, which explains how certain combinatorial\nproperties of graphs are related to the eigenvalues and eigenvectors of the\nadjacency matrix, and we will use it describe and analyze spectral algorithms\nfor graph partitioning and clustering. Spectral graph theory will recur as an\nimportant tool in the rest of the course. We we will also discuss other\napproaches to graph partitioning via linear programming and semidefinite\nprogramming. Then we will study constructions of expander graphs, which are\ngraphs with very strong pseudorandomness properties, which are useful in many\napplications, including in cryptography, in complexity theory, in algorithms\nand data structures, and in coding theory. Finally, we will study the mixing\ntime of random walks, a problem that comes up in several applications,\nincluding the analysis of the convergence time of certain randomized\nalgorithms, such as the Metropolis algorithm.\n\n**Prerequisites**   \nLinear algebra, discrete probability, and algorithms\n\n",
        "name": "Graph Partitioning and Expanders",
        "provider": "NovoED",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Stanford University"
        ],
        "url": "http://venture-lab.org/expanders",
        "video_url": "https://www.youtube.com/embed/Kr9olRsABR8?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-04-08",
        "desc": "What are Probabilistic Graphical Models?Uncertainty is unavoidable in real-world applications: we can almost never predict with certainty what will happen in the future, and even in the present and the past, many important aspects of the world are not observed with certainty. Probability theory gives us the basic foundation to model our beliefs about the different possible states of the world, and to update these beliefs as new evidence is obtained. These beliefs can be combined with individual preferences to help guide our actions, and even in selecting which observations to make. While probability theory has existed since the 17th century, our ability to use it effectively on large problems involving many inter-related variables is fairly recent, and is due largely to the development of a framework known as Probabilistic Graphical Models (PGMs). This framework, which spans methods such as Bayesian networks and Markov random fields, uses ideas from discrete data structures in computer science to efficiently encode and manipulate probability distributions over high-dimensional spaces, often involving hundreds or even many thousands of variables. These methods have been used in an enormous range of application domains, which include: web search, medical and fault diagnosis, image understanding, reconstruction of biological networks, speech recognition, natural language processing, decoding of messages sent over a noisy communication channel, robot navigation, and many more. The PGM framework provides an essential tool for anyone who wants to learn how to reason coherently from limited and noisy observations.In this class, you will learn the basics of the PGM representation and how to construct them, using both human knowledge and machine learning techniques; you will also learn algorithms for using a PGM to reach conclusions about the world from limited and noisy evidence, and for making good decisions under uncertainty. The class covers both the theoretical underpinnings of the PGM framework and practical skills needed to apply these techniques to new problems.SyllabusTopics covered include:The Bayesian network and Markov network representation, including extensions for reasoning over domains that change over time and over domains with a variable number of entitiesReasoning and inference methods, including exact inference (variable elimination, clique trees) and approximate inference (belief propagation message passing, Markov chain Monte Carlo methods)Learning parameters and structure in PGMsUsing a PGM for decision making under uncertainty.There will be short weekly review quizzes and programming assignments (Octave/Matlab) focusing on case studies and applications of PGMs to real-world problems:Credit Scoring and FactorsModeling Genetic Inheritance and DiseaseMarkov Networks and Optical Character Recognition (OCR)Inference: Belief PropagationMarkov Chain Monte Carlo and Image SegmentationDecision Theory:&nbsp;Arrhythmogenic Right Ventricular DysplasiaConditional Random Field Learning for OCRStructure Learning for Identifying Skeleton StructureHuman Action Recognition with KinectTo prepare for the class in advance, you may consider reading through the following sections of the&nbsp;textbook (discount code DKPGM12)&nbsp;by Daphne and Nir Friedman:Introduction and Overview.&nbsp;Chapters 1, 2.1.1 - 2.1.4, 4.2.1.Bayesian Network Fundamentals.&nbsp;Chapters 3.1 - 3.3.Markov Network Fundamentals.&nbsp;Chapters 4.1, 4.2.2, 4.3.1, 4.4, 4.6.1.Structured CPDs.&nbsp;Chapters 5.1 - 5.5.Template Models.&nbsp;Chapters 6.1 - 6.4.1.These will be covered in the first two weeks of the online class.The slides for the whole class can be found&nbsp;here.",
        "desc_html": "**What are Probabilistic Graphical Models?**\n\nUncertainty is unavoidable in real-world applications: we can almost never\npredict with certainty what will happen in the future, and even in the present\nand the past, many important aspects of the world are not observed with\ncertainty. Probability theory gives us the basic foundation to model our\nbeliefs about the different possible states of the world, and to update these\nbeliefs as new evidence is obtained. These beliefs can be combined with\nindividual preferences to help guide our actions, and even in selecting which\nobservations to make. While probability theory has existed since the 17th\ncentury, our ability to use it effectively on large problems involving many\ninter-related variables is fairly recent, and is due largely to the\ndevelopment of a framework known as Probabilistic Graphical Models (PGMs).\nThis framework, which spans methods such as Bayesian networks and Markov\nrandom fields, uses ideas from discrete data structures in computer science to\nefficiently encode and manipulate probability distributions over high-\ndimensional spaces, often involving hundreds or even many thousands of\nvariables. These methods have been used in an enormous range of application\ndomains, which include: web search, medical and fault diagnosis, image\nunderstanding, reconstruction of biological networks, speech recognition,\nnatural language processing, decoding of messages sent over a noisy\ncommunication channel, robot navigation, and many more. The PGM framework\nprovides an essential tool for anyone who wants to learn how to reason\ncoherently from limited and noisy observations.\n\nIn this class, you will learn the basics of the PGM representation and how to\nconstruct them, using both human knowledge and machine learning techniques;\nyou will also learn algorithms for using a PGM to reach conclusions about the\nworld from limited and noisy evidence, and for making good decisions under\nuncertainty. The class covers both the theoretical underpinnings of the PGM\nframework and practical skills needed to apply these techniques to new\nproblems.\n\n## Syllabus\n\n**Topics covered include:**\n\n  1. The Bayesian network and Markov network representation, including extensions for reasoning over domains that change over time and over domains with a variable number of entities\n  2. Reasoning and inference methods, including exact inference (variable elimination, clique trees) and approximate inference (belief propagation message passing, Markov chain Monte Carlo methods)\n  3. Learning parameters and structure in PGMs\n  4. Using a PGM for decision making under uncertainty.\n\nThere will be short weekly review quizzes and programming assignments\n(Octave/Matlab) focusing on case studies and applications of PGMs to real-\nworld problems:\n\n  1. Credit Scoring and Factors\n  2. Modeling Genetic Inheritance and Disease\n  3. Markov Networks and Optical Character Recognition (OCR)\n  4. Inference: Belief Propagation\n  5. Markov Chain Monte Carlo and Image Segmentation\n  6. Decision Theory: Arrhythmogenic Right Ventricular Dysplasia\n  7. Conditional Random Field Learning for OCR\n  8. Structure Learning for Identifying Skeleton Structure\n  9. Human Action Recognition with Kinect\n\nTo prepare for the class in advance, you may consider reading through the\nfollowing sections of the [textbook (discount code\nDKPGM12)](http://mitpress.mit.edu/9780262013192) by Daphne and Nir Friedman:\n\n  1. **Introduction and Overview. **Chapters 1, 2.1.1 - 2.1.4, 4.2.1.\n  2. **Bayesian Network Fundamentals. **Chapters 3.1 - 3.3.\n  3. **Markov Network Fundamentals. **Chapters 4.1, 4.2.2, 4.3.1, 4.4, 4.6.1.\n  4. **Structured CPDs. **Chapters 5.1 - 5.5.\n  5. **Template Models. **Chapters 6.1 - 6.4.1.\n\nThese will be covered in the first two weeks of the online class.\n\nThe slides for the whole class can be found [here](http://spark-\nuniversity.s3.amazonaws.com/stanford-pgm/PGM_slides.zip).\n\n",
        "name": "Probabilistic Graphical Models",
        "provider": "Coursera",
        "rating": "4.25",
        "reviews": "4",
        "university": [
            "Stanford University"
        ],
        "url": "https://www.coursera.org/course/pgm",
        "video_url": ""
    },
    {
        "date": "2013-04-02",
        "desc": "",
        "desc_html": "\n\n",
        "name": "Introduction aux r\u00e9seaux cellulaires",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Institut Mines-T\u00e9l\u00e9com"
        ],
        "url": "https://courses.mooc.telecom-bretagne.eu/course/introductions-aux-reseaux-cellulaires/",
        "video_url": "https://www.youtube.com/embed/pDl7VMdO8xw?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-03-25",
        "desc": "The goal of this course is to introduce you to the basics of how computation\nhas impacted the entire workflow of photography (i.e., from how images\nare captured, manipulated and collaborated on, and shared). &nbsp;The course begins with a conceptualization of&nbsp;photography as drawing\nwith light and the capturing of light to form images/videos. &nbsp;You\nwill learn about and understand how the optics and the sensor within a\ncamera are generalized, as well as learn about and understand how the lighting\nand other aspects of the environment are also generalized through computation\nto capture novel images.&nbsp;Pre- and post-processing techniques used to manipulate and improve images\nwill be discussed. &nbsp;Activities in this course are selected to give\nyou first hand experience with the power of the web and the Internet for\nboth analyzing and sharing images. &nbsp;This course is interdisciplinary and draws upon concepts and principles\nfrom computer vision, computer graphics, image processing, mathematics\nand optics.We look forward to your engagement and participation with both the course\nand its discussion forums.About the TADenis Lantsman is the TA for the class. Denis is a graduate of Harvey\nMudd College, and is currently finishing his MS in Machine Learning at\nGeorgia Tech. He is responsible for managing the coursera site, monitoring\nthe forums for student feedback, creating the homework assignments and\nquizzes, as well as recording weekly tutorials to help students with their\nprogramming.SyllabusWeek 0 (Module 0): &nbsp;Introductions with an overview of the course\n    structure and content.&nbsp; Topics covered in this module include a description\n    of what is Computational Photography (i.e., whereby examples of dual photography\n    and panoramas are described) and reasons for studying this emerging interdisciplinary\n    field .Week 1 (Module 1): &nbsp;Overview of what is a digital image.&nbsp; Topics\n    covered in this module are image processing and filtering, with emphases\n    placed upon point processes, smoothing, convolution, cross-correlation,\n    gradients and edges.Week 2 (Module 2): &nbsp;Overview of cameras with emphases placed upon\n    the pinhole camera and optics (e. g., lenses, focal length), exposure time\n    and sensors.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Week 3 (Module 3): &nbsp;Feature detection, matching and correspondence.\n    The panorama pipeline and some examples. HDR and tone mapping.Week 4 (Module 4):&nbsp;Overview of light fields, texture synthesis, image\n    retargeting, video, advanced topics.",
        "desc_html": "The goal of this course is to introduce you to the basics of how computation\nhas impacted the entire workflow of photography (i.e., from how images are\ncaptured, manipulated and collaborated on, and shared).  \n  \nThe course begins with a conceptualization of photography as drawing with\nlight and the capturing of light to form images/videos.  You will learn about\nand understand how the optics and the sensor within a camera are generalized,\nas well as learn about and understand how the lighting and other aspects of\nthe environment are also generalized through computation to capture novel\nimages.  \n  \nPre- and post-processing techniques used to manipulate and improve images will\nbe discussed.  Activities in this course are selected to give you first hand\nexperience with the power of the web and the Internet for both analyzing and\nsharing images.  \n  \nThis course is interdisciplinary and draws upon concepts and principles from\ncomputer vision, computer graphics, image processing, mathematics and optics.  \n  \nWe look forward to your engagement and participation with both the course and\nits discussion forums.  \n  \n**About the TA**   \nDenis Lantsman is the TA for the class. Denis is a graduate of Harvey Mudd\nCollege, and is currently finishing his MS in Machine Learning at Georgia\nTech. He is responsible for managing the coursera site, monitoring the forums\nfor student feedback, creating the homework assignments and quizzes, as well\nas recording weekly tutorials to help students with their programming.\n\n## Syllabus\n\nWeek 0 (Module 0):  Introductions with an overview of the course structure and\ncontent.  Topics covered in this module include a description of what is\nComputational Photography (i.e., whereby examples of dual photography and\npanoramas are described) and reasons for studying this emerging\ninterdisciplinary field .\n\nWeek 1 (Module 1):  Overview of what is a digital image.  Topics covered in\nthis module are image processing and filtering, with emphases placed upon\npoint processes, smoothing, convolution, cross-correlation, gradients and\nedges.\n\nWeek 2 (Module 2):  Overview of cameras with emphases placed upon the pinhole\ncamera and optics (e. g., lenses, focal length), exposure time and sensors.  \n\nWeek 3 (Module 3):  Feature detection, matching and correspondence. The\npanorama pipeline and some examples. HDR and tone mapping.\n\nWeek 4 (Module 4): Overview of light fields, texture synthesis, image\nretargeting, video, advanced topics.\n\n",
        "name": "Computational Photography",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Georgia Institute of Technology"
        ],
        "url": "https://www.coursera.org/course/compphoto",
        "video_url": ""
    },
    {
        "date": "2013-03-25",
        "desc": "Most programs are used for years and are worked on by many people. Having programs that are easy to understand is essential, in the same way that a well-organized essay is far easier to follow than a disorganized one. We\u2019ll show you an approach that helps to break down problems into smaller tasks that are easier to both solve and read.&nbsp;This design approach also makes it more straightforward to find and fix flaws. You'll be introduced to the tools that professional programmers use; they're called \"testing\" and \"debugging\".&nbsp;For most complex problems, there are many programs that solve them. Some are inherently slower than others. You'll learn how to read two programs and compare them for efficiency.",
        "desc_html": "Most programs are used for years and are worked on by many people. Having\nprograms that are easy to understand is essential, in the same way that a\nwell-organized essay is far easier to follow than a disorganized one. We\u2019ll\nshow you an approach that helps to break down problems into smaller tasks that\nare easier to both solve and read.\n\n\n\nThis design approach also makes it more straightforward to find and fix flaws.\nYou'll be introduced to the tools that professional programmers use; they're\ncalled \"testing\" and \"debugging\".\n\n\n\nFor most complex problems, there are many programs that solve them. Some are\ninherently slower than others. You'll learn how to read two programs and\ncompare them for efficiency.\n\n",
        "name": "Learn to Program: Crafting Quality Code",
        "provider": "Coursera",
        "rating": "4.5",
        "reviews": "4",
        "university": [
            "University of Toronto"
        ],
        "url": "https://www.coursera.org/course/programming2",
        "video_url": ""
    },
    {
        "date": "2013-03-21",
        "desc": "The Web has become an object of our daily life and the amount of information in the web is ever growing. Besides plain texts, especially multimedia information such as graphics, audio or video have become a predominant part of the web's information traffic. But, how can we find useful information within this huge information space? Traditional search engines will reach the limits of their power, when it comes to understanding information content. The Semantic Web is an extension of the traditional web in the sense that information in the form of natural language text in the web will be complemented by its explicit semantics based on a formal knowledge representation. Thus, the meaning of information expressed in natural language can be accessed in an automated way and interpreted correctly, i.e. it can be understood by machines.Semantic Web technologies enable the explicit representation of knowledge and its further processing to deduce new knowledge from implicitly hidden knowledge. Thus, information access and information search will be more precise and more complete compared to today's traditional information retrieval technology. Previously heterogeneous data can be mapped and combined based on common knowledge representation and schemata easily extended in a dynamic way.In this course, you will learn the fundamentals of Semantic Web technologies. You will learn how to represent knowledge and how to access and benefit from semantic data on the Web.SyllabusWeek 1:Introduction to the Semantic WebWeek 2:Identifying Things with URI and RDFWeek 3:Querying RDF(S) with SPARQLExcursus:Semantic (Meta) Data and the WebWeek 4:Knowledge Representation IWeek 5:Knowledge Representation IIWeek 6:Applications in the Web of DataFinal Exams:Final Exams",
        "desc_html": "The Web has become an object of our daily life and the amount of information\nin the web is ever growing. Besides plain texts, especially multimedia\ninformation such as graphics, audio or video have become a predominant part of\nthe web's information traffic. But, how can we find useful information within\nthis huge information space? Traditional search engines will reach the limits\nof their power, when it comes to understanding information content. The\nSemantic Web is an extension of the traditional web in the sense that\ninformation in the form of natural language text in the web will be\ncomplemented by its explicit semantics based on a formal knowledge\nrepresentation. Thus, the meaning of information expressed in natural language\ncan be accessed in an automated way and interpreted correctly, i.e. it can be\nunderstood by machines.\n\nSemantic Web technologies enable the explicit representation of knowledge and\nits further processing to deduce new knowledge from implicitly hidden\nknowledge. Thus, information access and information search will be more\nprecise and more complete compared to today's traditional information\nretrieval technology. Previously heterogeneous data can be mapped and combined\nbased on common knowledge representation and schemata easily extended in a\ndynamic way.\n\nIn this course, you will learn the fundamentals of Semantic Web technologies.\nYou will learn how to represent knowledge and how to access and benefit from\nsemantic data on the Web.\n\n## Syllabus\n\n  * **Week 1:** Introduction to the Semantic Web\n  * **Week 2:** Identifying Things with URI and RDF\n  * **Week 3:** Querying RDF(S) with SPARQL\n  * **Excursus:** Semantic (Meta) Data and the Web\n  * **Week 4:** Knowledge Representation I\n  * **Week 5:** Knowledge Representation II\n  * **Week 6:** Applications in the Web of Data\n  * **Final Exams:** Final Exams\n\n",
        "name": "Semantic Web Technologies",
        "provider": "openHPI",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.hpi.de/courses/semanticweb",
        "video_url": "https://www.youtube.com/embed/nI372ilNunE?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-03-12",
        "desc": "When developing chips it is essential that they get verified thoroughly because it is very hard or impossible to fix them once they have been manufactured. In this class, you will learn how to program verification environments that verify chip functionality efficiently, as well as understand and leverage automation such as constrained random test generation and improve code reuse leveraging a standardized methodology.Why Take This Course?This course will teach you how to think like a verification engineer. It will show the software development aspects you need to know to ensure chips are working as expected. You will learn how to implement verification environments.Prerequisites and RequirementsProgramming experience including object-oriented programming. Data &amp; Control structure.&nbsp;This course is developed by Cadence Design Systems, a global leader in electronic design automation.Cadence&reg; software, hardware, IP, and services help customers around the world to overcome a range of technical and economic hurdles.See the&nbsp;Technology Requirements&nbsp;for using UdacitySyllabusLesson 1:&nbsp;Introduction to Hardware VerificationLesson 2:&nbsp;Basic stimulus modeling and generationLesson 3:&nbsp;Interfacing to the Hardware ModelLesson 4:&nbsp;Monitoring and Functional CoverageLesson 5:&nbsp;CheckingLesson 6:&nbsp;Aspect Oriented ProgrammingLesson 7:&nbsp;Reuse MethodologyLesson 8:&nbsp;DebuggingLesson 9:&nbsp;Conclusion and Exam",
        "desc_html": "When developing chips it is essential that they get verified thoroughly\nbecause it is very hard or impossible to fix them once they have been\nmanufactured. In this class, you will learn how to program verification\nenvironments that verify chip functionality efficiently, as well as understand\nand leverage automation such as constrained random test generation and improve\ncode reuse leveraging a standardized methodology.\n\n**Why Take This Course?**\n\nThis course will teach you how to think like a verification engineer. It will\nshow the software development aspects you need to know to ensure chips are\nworking as expected. You will learn how to implement verification\nenvironments.\n\n**Prerequisites and Requirements**\n\nProgramming experience including object-oriented programming. Data & Control\nstructure.  \n  \n  \nThis course is developed by Cadence Design Systems, a global leader in\nelectronic design automation.[Cadence\u00ae\nsoftware](http://www.cadence.com/solutions/ev/Pages/default.aspx), hardware,\nIP, and services help customers around the world to overcome a range of\ntechnical and economic hurdles.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n## Syllabus\n\nLesson 1: Introduction to Hardware Verification\n\nLesson 2: Basic stimulus modeling and generation\n\nLesson 3: Interfacing to the Hardware Model\n\nLesson 4: Monitoring and Functional Coverage\n\nLesson 5: Checking\n\nLesson 6: Aspect Oriented Programming\n\nLesson 7: Reuse Methodology\n\nLesson 8: Debugging\n\nLesson 9: Conclusion and Exam\n\n",
        "name": "Functional Hardware Verification",
        "provider": "Udacity",
        "rating": "5",
        "reviews": "1",
        "university": [
            "Cadence"
        ],
        "url": "http://www.udacity.com/overview/Course/cs348/CourseRev/1",
        "video_url": "https://www.youtube.com/embed/PZHh2O6iqj8?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-03-12",
        "desc": "Estamos inmersos en una \u00e9poca de cambio que afectan a toda la sociedad (personas, organizaciones, productos y servicios); uno de los cambios m\u00e1s fascinantes, que m\u00e1s moldes est\u00e1n rompiendo y que est\u00e1 cambiando enfoques que hasta hace poco eran inamovibles, es lo que se conoce como el movimiento libre. En este curso de introducci\u00f3n analizaremos dos de sus principales impulsores: el software libre y el conocimiento en abierto; as\u00ed mismo participaremos en este movimiento utilizando software libre (blog y wikis) para construir conocimiento en abierto tanto de forma individual como corporativa.",
        "desc_html": "Estamos inmersos en una \u00e9poca de cambio que afectan a toda la sociedad\n(personas, organizaciones, productos y servicios); uno de los cambios m\u00e1s\nfascinantes, que m\u00e1s moldes est\u00e1n rompiendo y que est\u00e1 cambiando enfoques que\nhasta hace poco eran inamovibles, es lo que se conoce como el movimiento\nlibre. En este curso de introducci\u00f3n analizaremos dos de sus principales\nimpulsores: el software libre y el conocimiento en abierto; as\u00ed mismo\nparticiparemos en este movimiento utilizando software libre (blog y wikis)\npara construir conocimiento en abierto tanto de forma individual como\ncorporativa.\n\n",
        "name": "Software libre y conocimiento en abierto",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.miriadax.net/web/soft_libre_y_conocimiento",
        "video_url": "https://www.youtube.com/embed/7q637mFa-pg?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-03-11",
        "desc": "This class will teach you about the basic principles of 3D computer graphics: meshes, transforms, cameras, materials, lighting, and animation.Why Take This Course?By the end of this class you will know enough to make an animated 3D demo program that runs in a web browser, while also understanding the basic principles of how realistic computer images are generated.You will also have a portfolio of small interactive programs that run in any web browser that supports WebGL.Prerequisites and RequirementsKnowing how to program in some language is all you&rsquo;ll need to get started. Some knowledge of JavaScript is useful later on if you wish to make your projects more interactive and engaging. Familiarity with vectors and matrices will ease your way but is not critical.To be able to see the interactive demos and do programming assignments you need a browser that supportsWebGL&nbsp;technology. An up to date version of Chrome or Firefox will work (see our&nbsp;FAQ&nbsp;for more information). You can test if your browser supports this technology by visiting the&nbsp;WebGL project homepage.Almost all programming will be done in JavaScript using&nbsp;three.js library/API.About AutodeskThis course is developed in conjunction with Autodesk, a worldwide leader in 3D design, engineering, and entertainment software.&nbsp;http://www.autodesk.comSee the&nbsp;Technology Requirements&nbsp;for using UdacitySyllabusLesson 1: IntroductionMotivation and a trip down the graphics pipeline, laying out the fundamental processesLesson 2: Points, Vectors, and MeshesThe basics of 3D geometry definitionLesson 3: Colors and MaterialsColor representation, material computations, transparencyLesson 4: TransformsTranslation, scale, rotate and how to properly combine all theseLesson 5: MatricesTransform representation and how to fully control theseLesson 6: LightsDirectional and point light sourcesLesson 7: CamerasHow the camera is definedLesson 8: Textures and ReflectionsColor and opacity textures, along with reflection and normal mappingLesson 9: Shader ProgrammingAn introduction to programming vertex and pixel shadersLesson 10: Interaction and AnimationHow to select and make objects move",
        "desc_html": "This class will teach you about the basic principles of 3D computer graphics:\nmeshes, transforms, cameras, materials, lighting, and animation.\n\n**Why Take This Course?**\n\nBy the end of this class you will know enough to make an animated 3D demo\nprogram that runs in a web browser, while also understanding the basic\nprinciples of how realistic computer images are generated.\n\nYou will also have a portfolio of small interactive programs that run in any\nweb browser that supports WebGL.\n\n**Prerequisites and Requirements**\n\nKnowing how to program in some language is all you'll need to get started.\nSome knowledge of JavaScript is useful later on if you wish to make your\nprojects more interactive and engaging. Familiarity with vectors and matrices\nwill ease your way but is not critical.\n\nTo be able to see the interactive demos and do programming assignments you\nneed a browser that supportsWebGL technology. An up to date version of Chrome\nor Firefox will work (see our [FAQ](https://www.udacity.com/tech-requirements)\nfor more information). You can test if your browser supports this technology\nby visiting the [WebGL project homepage](http://get.webgl.org/).\n\nAlmost all programming will be done in JavaScript using [three.js\nlibrary/API](http://en.wikipedia.org/wiki/Threejs).\n\n  \nAbout Autodesk\n\nThis course is developed in conjunction with Autodesk, a worldwide leader in\n3D design, engineering, and entertainment software.\n[http://www.autodesk.com](http://www.autodesk.com/)\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n## Syllabus\n\n**Lesson 1: Introduction**\n\nMotivation and a trip down the graphics pipeline, laying out the fundamental\nprocesses\n\n**Lesson 2: Points, Vectors, and Meshes**\n\nThe basics of 3D geometry definition\n\n**Lesson 3: Colors and Materials**\n\nColor representation, material computations, transparency\n\n**Lesson 4: Transforms**\n\nTranslation, scale, rotate and how to properly combine all these\n\n**Lesson 5: Matrices**\n\nTransform representation and how to fully control these\n\n**Lesson 6: Lights**\n\nDirectional and point light sources\n\n**Lesson 7: Cameras**\n\nHow the camera is defined\n\n**Lesson 8: Textures and Reflections**\n\nColor and opacity textures, along with reflection and normal mapping\n\n**Lesson 9: Shader Programming**\n\nAn introduction to programming vertex and pixel shaders\n\n**Lesson 10: Interaction and Animation**\n\nHow to select and make objects move\n\n",
        "name": "Interactive 3D Graphics",
        "provider": "Udacity",
        "rating": "5",
        "reviews": "2",
        "university": [
            "Autodesk"
        ],
        "url": "http://www.udacity.com/overview/Course/cs291/CourseRev/1",
        "video_url": "https://www.youtube.com/embed/Vl0hmKg1pVw?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-03-04",
        "desc": "This course focuses on&nbsp;pattern-oriented software architecture&nbsp;for concurrent and networked software.&nbsp;Concurrent&nbsp;software can simultaneously run multiple computations that potentially interact with each other.&nbsp;Networked&nbsp;defines protocols that enables computing devices to exchange messages and perform services remotely. The topics in this course are timely since the advent of multi-core and distributed-core processors--coupled with ubiquitous wireless and wireline connectivity--is increasing the demand for researchers and practitioners who understand how to successfully develop and deploy concurrent and networked software.Despite continuous improvements in processors and networks during the past four decades, however, developing quality concurrent and networked software remains hard; developing quality&nbsp;reusable&nbsp;concurrent and networked software is even harder. The principles, methods, and skills required to develop such software can be greatly enhanced by understanding how to create and apply patterns and frameworks. A&nbsp;pattern&nbsp;describes a reusable solution to a commonly occurring problem within a particular context. When related patterns are woven together they form a&nbsp;pattern language&nbsp;that provides a vocabulary and a process for the orderly resolution of software development problems. A&nbsp;framework&nbsp;is an integrated set of software components that collaborate to provide a reusable architecture for a family of related applications. Frameworks can also be viewed as concrete realizations of pattern languages that facilitate direct reuse of design and code.This course describes how to apply patterns and frameworks to alleviate many accidental and inherent complexities associated with developing and deploying concurrent and networked software. These patterns and frameworks have been used successfully in many domains, including telecom/datacom, mobile devices, electronic medical imaging, network management, aerospace, avionics, automation, online gaming, and financial systems. Over the coming weeks and months I'll illustrate by example how patterns and frameworks simplify and enhance the development of concurrent and networked software via the use of:Object-oriented design concepts and notations -- such as encapsulation, abstraction, polymorphism, extensibility, and the Unified Modeling Language (UML).Object-oriented programming language features -- such as classes, inheritance, dynamic binding, and parameterized types available in languages like Java, C++, and C#.Middleware -- which is infrastructure software residing between applications and the underlying operating systems, networks, and hardware that encapsulates heterogeneity and enables control over key end-to-end quality-of-service properties, such as dependability and security.Operating system mechanisms -- such as event demultiplexing, multi-threading, multi-processing, and dynamic linking.We'll explore several case studies from the domains of mobile apps, web servers, object request brokers, avionic control systems, and expression tree processing to showcase a time-tested pattern-oriented software design and programming method for concurrent and networked software.SyllabusThe course is organized as follows:Section 0: Overview of all the topics covered in the course.&nbsp;This material is designed to help you visualize the motivations for--and challenges of--of concurrent and networked software. We also summarize how patterns and frameworks help address key challenges of concurrent and networked software.Section 1: Introduction to concurrency and networking, which provides background info pertaining largely to the OS and middleware layers. We discuss key design dimensions of concurrent and networked software, as well as review common operating system programming mechanisms and Android programming mechanisms. This part focuses on concepts and is generally independent of programming language.Section 2: Overview of patterns and frameworks, which focuses on pattern-oriented software architecture, with an emphasis on concurrent and networked software. We explore key pattern and framework concepts, relationships, and examples, as well as evaluate the pros and cons of patterns and frameworks. Small code examples are shown throughout using C++ and Java, though this section concentrates more on design rather than programming.Section 3: Applying patterns and frameworks to develop concurrent and networked software, which examines lots of code. An open-source web server is used as a running example to illustrate patterns and frameworks pertaining to service access, communication, synchronous event handling, connection establishment, service initialization, service configuration and activation, concurrency and synchronization, and asynchronous event handling. These examples are in C++ using&nbsp;ACE.Appendix: Presents a case study that applies many \"Gang of Four\" patterns&nbsp;that aren't directly related to concurrent and networked software. Evaluates the limitations with algorithm design and shows how pattern-oriented design alleviates these limtations. The examples are largely in C++, again with some Java examples to show how pattern-oriented design simplifies portability across programming languages.",
        "desc_html": "This course focuses on [pattern-oriented software\narchitecture](http://www.dre.vanderbilt.edu/~schmidt/POSA/) for concurrent and\nnetworked software.\n[Concurrent](http://en.wikipedia.org/wiki/Concurrency_\\(computer_science\\))\nsoftware can simultaneously run multiple computations that potentially\ninteract with each other.\n[Networked](http://en.wikipedia.org/wiki/Computer_network) defines protocols\nthat enables computing devices to exchange messages and perform services\nremotely. The topics in this course are timely since the advent of multi-core\nand distributed-core processors--coupled with ubiquitous wireless and wireline\nconnectivity--is increasing the demand for researchers and practitioners who\nunderstand how to successfully develop and deploy concurrent and networked\nsoftware.  \n\nDespite continuous improvements in processors and networks during the past\nfour decades, however, developing quality concurrent and networked software\nremains hard; developing quality reusable concurrent and networked software is\neven harder. The principles, methods, and skills required to develop such\nsoftware can be greatly enhanced by understanding how to create and apply\npatterns and frameworks. A\n[pattern](http://en.wikipedia.org/wiki/Software_design_pattern) describes a\nreusable solution to a commonly occurring problem within a particular context.\nWhen related patterns are woven together they form a [pattern\nlanguage](http://en.wikipedia.org/wiki/Pattern_language) that provides a\nvocabulary and a process for the orderly resolution of software development\nproblems. A [framework](http://en.wikipedia.org/wiki/Software_framework) is an\nintegrated set of software components that collaborate to provide a reusable\narchitecture for a family of related applications. Frameworks can also be\nviewed as concrete realizations of pattern languages that facilitate direct\nreuse of design and code.\n\nThis course describes how to apply patterns and frameworks to alleviate many\naccidental and inherent complexities associated with developing and deploying\nconcurrent and networked software. These patterns and frameworks have been\nused successfully in many domains, including telecom/datacom, mobile devices,\nelectronic medical imaging, network management, aerospace, avionics,\nautomation, online gaming, and financial systems. Over the coming weeks and\nmonths I'll illustrate by example how patterns and frameworks simplify and\nenhance the development of concurrent and networked software via the use of:\n\n  * Object-oriented design concepts and notations -- such as encapsulation, abstraction, polymorphism, extensibility, and the Unified Modeling Language (UML).\n\n  * Object-oriented programming language features -- such as classes, inheritance, dynamic binding, and parameterized types available in languages like Java, C++, and C#.\n\n  * Middleware -- which is infrastructure software residing between applications and the underlying operating systems, networks, and hardware that encapsulates heterogeneity and enables control over key end-to-end quality-of-service properties, such as dependability and security.\n\n  * Operating system mechanisms -- such as event demultiplexing, multi-threading, multi-processing, and dynamic linking.\n\nWe'll explore several case studies from the domains of mobile apps, web\nservers, object request brokers, avionic control systems, and expression tree\nprocessing to showcase a time-tested pattern-oriented software design and\nprogramming method for concurrent and networked software.\n\n## Syllabus\n\nThe course is organized as follows:\n\n  * **Section 0: Overview of all the topics covered in the course.** This material is designed to help you visualize the motivations for--and challenges of--of concurrent and networked software. We also summarize how patterns and frameworks help address key challenges of concurrent and networked software.\n\n  * **Section 1: Introduction to concurrency and networking**, which provides background info pertaining largely to the OS and middleware layers. We discuss key design dimensions of concurrent and networked software, as well as review common operating system programming mechanisms and Android programming mechanisms. This part focuses on concepts and is generally independent of programming language.\n\n  * **Section 2: Overview of patterns and frameworks**, which focuses on pattern-oriented software architecture, with an emphasis on concurrent and networked software. We explore key pattern and framework concepts, relationships, and examples, as well as evaluate the pros and cons of patterns and frameworks. Small code examples are shown throughout using C++ and Java, though this section concentrates more on design rather than programming.\n\n  * **Section 3: Applying patterns and frameworks to develop concurrent and networked software, which examines lots of code**. An open-source web server is used as a running example to illustrate patterns and frameworks pertaining to service access, communication, synchronous event handling, connection establishment, service initialization, service configuration and activation, concurrency and synchronization, and asynchronous event handling. These examples are in C++ using [ACE](http://www.dre.vanderbilt.edu/~schmidt/ACE.html).\n\n  * **Appendix: Presents a case study that applies many \"Gang of Four\" patterns** that aren't directly related to concurrent and networked software. Evaluates the limitations with algorithm design and shows how pattern-oriented design alleviates these limtations. The examples are largely in C++, again with some Java examples to show how pattern-oriented design simplifies portability across programming languages.\n\n",
        "name": "Pattern-Oriented Software Architectures for Concurrent and Networked Software",
        "provider": "Coursera",
        "rating": "5",
        "reviews": "2",
        "university": [
            "Vanderbilt University"
        ],
        "url": "https://www.coursera.org/course/posasoftware",
        "video_url": ""
    },
    {
        "date": "2013-02-25",
        "desc": "El curso que est\u00e1 planteado para ser eminentemente pr\u00e1ctico, introduce al alumno, cuyo perfil esperado es un profesor de cualquier nivel educativo (Educaci\u00f3n Infantil,\u00a0 Primaria, Secundaria, Universidad o M\u00e1ster) en las herramientas y metodolog\u00edas que las nuevas tecnolog\u00edas de la Inform\u00e1tica Educativa le pueden aportar para mejorar su docencia. En particular, se espera que cualquier alumno aprenda de este curso qu\u00e9 es la Inform\u00e1tica Educativa, c\u00f3mo las nuevas tecnolog\u00edas les pueden ayudar en su docencia como otra herramienta m\u00e1s para un profesor que en el siglo XXI sabe combinar todos los recursos que el mundo digital le ofrece, tanto para crear nuevos contenidos multimedia interactivos como para evaluar de forma autom\u00e1tica o semiautom\u00e1tica contenidos / competencias en varios dispositivos.",
        "desc_html": "El curso que est\u00e1 planteado para ser eminentemente pr\u00e1ctico, introduce al\nalumno, cuyo perfil esperado es un profesor de cualquier nivel educativo\n(Educaci\u00f3n Infantil,\u00a0 Primaria, Secundaria, Universidad o M\u00e1ster) en las\nherramientas y metodolog\u00edas que las nuevas tecnolog\u00edas de la Inform\u00e1tica\nEducativa le pueden aportar para mejorar su docencia. En particular, se espera\nque cualquier alumno aprenda de este curso qu\u00e9 es la Inform\u00e1tica Educativa,\nc\u00f3mo las nuevas tecnolog\u00edas les pueden ayudar en su docencia como otra\nherramienta m\u00e1s para un profesor que en el siglo XXI sabe combinar todos los\nrecursos que el mundo digital le ofrece, tanto para crear nuevos contenidos\nmultimedia interactivos como para evaluar de forma autom\u00e1tica o semiautom\u00e1tica\ncontenidos / competencias en varios dispositivos.\n\n",
        "name": "Introducci\u00f3n a la inform\u00e1tica educativa",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.miriadax.net/web/introduccion_informatica_educativa",
        "video_url": "https://www.youtube.com/embed/K1z6XyObLtQ?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-02-25",
        "desc": "En el curso aprender\u00e1s a planificar una b\u00fasqueda desde el comienzo y a utilizar las diversas\u00a0herramientas que Internet pone a tu alcance para que encuentres aquello que necesitas. Veremos herramientas para buscar v\u00eddeos, im\u00e1genes, contenido libre de derechos e\u00a0informaci\u00f3n institucional, entre otras muchas cosas.",
        "desc_html": "En el curso aprender\u00e1s a planificar una b\u00fasqueda desde el comienzo y a\nutilizar las diversas\u00a0herramientas que Internet pone a tu alcance para que\nencuentres aquello que necesitas. Veremos herramientas para buscar v\u00eddeos,\nim\u00e1genes, contenido libre de derechos e\u00a0informaci\u00f3n institucional, entre otras\nmuchas cosas.\n\n",
        "name": "Buscar en internet",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.miriadax.net/web/buscar_internet",
        "video_url": "https://www.youtube.com/embed/tMUn2zERL-4?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-02-24",
        "desc": "Natural language processing (NLP) deals with the application of computational models to text or speech data. Application areas within NLP include automatic (machine) translation between languages; dialogue systems, which allow a human to interact with a machine using natural language; and information extraction, where the goal is to transform unstructured text into structured (database) representations that can be searched and browsed in flexible ways. NLP technologies are having a dramatic impact on the way people interact with computers, on the way people interact with each other through the use of language, and on the way people access the vast amount of linguistic data now in electronic form. From a scientific viewpoint, NLP involves fundamental questions of how to structure formal models (for example statistical models) of natural language phenomena, and of how to design algorithms that implement these models.In this course you will study mathematical and computational models of language, and the application of these models to key problems in natural language processing. The course has a focus on machine learning methods, which are widely used in modern NLP systems: we will cover formalisms such as hidden Markov models, probabilistic context-free grammars, log-linear models, and statistical models for machine translation. The curriculum closely follows a course currently taught by Professor Collins at Columbia University, and previously taught at MIT.SyllabusTopics covered include:1. Language modeling.2. Hidden Markov models, and tagging problems.3. Probabilistic context-free grammars, and the parsing problem.4. Statistical approaches to machine translation.5. Log-linear models, and their application to NLP problems.6. Unsupervised and semi-supervised learning in NLP.",
        "desc_html": "Natural language processing (NLP) deals with the application of computational\nmodels to text or speech data. Application areas within NLP include automatic\n(machine) translation between languages; dialogue systems, which allow a human\nto interact with a machine using natural language; and information extraction,\nwhere the goal is to transform unstructured text into structured (database)\nrepresentations that can be searched and browsed in flexible ways. NLP\ntechnologies are having a dramatic impact on the way people interact with\ncomputers, on the way people interact with each other through the use of\nlanguage, and on the way people access the vast amount of linguistic data now\nin electronic form. From a scientific viewpoint, NLP involves fundamental\nquestions of how to structure formal models (for example statistical models)\nof natural language phenomena, and of how to design algorithms that implement\nthese models.\n\nIn this course you will study mathematical and computational models of\nlanguage, and the application of these models to key problems in natural\nlanguage processing. The course has a focus on machine learning methods, which\nare widely used in modern NLP systems: we will cover formalisms such as hidden\nMarkov models, probabilistic context-free grammars, log-linear models, and\nstatistical models for machine translation. The curriculum closely follows a\ncourse currently taught by Professor Collins at Columbia University, and\npreviously taught at MIT.\n\n## Syllabus\n\nTopics covered include:\n\n1\\. Language modeling.  \n2\\. Hidden Markov models, and tagging problems.  \n3\\. Probabilistic context-free grammars, and the parsing problem.  \n4\\. Statistical approaches to machine translation.  \n5\\. Log-linear models, and their application to NLP problems.  \n6\\. Unsupervised and semi-supervised learning in NLP.\n\n",
        "name": "Natural Language Processing",
        "provider": "Coursera",
        "rating": "4",
        "reviews": "2",
        "university": [
            "Columbia University"
        ],
        "url": "https://www.coursera.org/course/nlangp",
        "video_url": ""
    },
    {
        "date": "2013-02-07",
        "desc": "",
        "desc_html": "\n\n",
        "name": "Program Arcade Games - Learn Computer Science",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "http://programarcadegames.com/",
        "video_url": ""
    },
    {
        "date": "2013-02-04",
        "desc": "This course will walk you through the major components of building GRITS, an HTML5 game. We'll talk about how to take standard game development techniques, and use them to create high performance HTML5 applications.Why Take This Course?At the end of this course, you'll understand how to develop an HTML5 game. You will gain familiarity with HTML5 features such as 2D canvas and techniques for improving performance.Prerequisites and RequirementsKnowledge of HTML, Javascript, and how the web works is necessary for this course. There is an optional lesson on the specific parts of Javascript and the DOM that you'll need for this class as a refresher, but this is not an introductory course on Javascript.See the&nbsp;Technology Requirements&nbsp;for using UdacitySyllabusLesson 0Optional HTML/Javascript crash courseLesson 1Introduction to Canvas renderingLesson 2AtlasesLesson 3Map renderingLesson 4Basic Input, handling eventsLesson 5The entity hierarchyLesson 6Box2D, and using external librariesLesson 7Adding soundLesson 8Asynchronous Loading",
        "desc_html": "This course will walk you through the major components of building GRITS, an\nHTML5 game. We'll talk about how to take standard game development techniques,\nand use them to create high performance HTML5 applications.\n\n**Why Take This Course?**\n\nAt the end of this course, you'll understand how to develop an HTML5 game. You\nwill gain familiarity with HTML5 features such as 2D canvas and techniques for\nimproving performance.\n\n**Prerequisites and Requirements**\n\nKnowledge of HTML, Javascript, and how the web works is necessary for this\ncourse. There is an optional lesson on the specific parts of Javascript and\nthe DOM that you'll need for this class as a refresher, but this is not an\nintroductory course on Javascript.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n## Syllabus\n\n**Lesson 0**\n\nOptional HTML/Javascript crash course\n\n**Lesson 1**\n\nIntroduction to Canvas rendering\n\n**Lesson 2**\n\nAtlases\n\n**Lesson 3**\n\nMap rendering\n\n**Lesson 4**\n\nBasic Input, handling events\n\n**Lesson 5**\n\nThe entity hierarchy\n\n**Lesson 6**\n\nBox2D, and using external libraries\n\n**Lesson 7**\n\nAdding sound\n\n**Lesson 8**\n\nAsynchronous Loading\n\n",
        "name": "HTML5 Game Development",
        "provider": "Udacity",
        "rating": "4",
        "reviews": "2",
        "university": [
            "Google"
        ],
        "url": "http://www.udacity.com/overview/Course/cs255/CourseRev/1",
        "video_url": "https://www.youtube.com/embed/F3JeV756B7w?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-02-04",
        "desc": "Learn the fundamentals of parallel computing with the GPU and the CUDA programming environment! In this class, you'll learn about parallel programming by coding a series of image processing algorithms, such as you might find in Photoshop or Instagram. You'll be able to program and run your assignments on high-end GPUs, even if you don't own one yourself.Why It&rsquo;s Important to Think ParallelThird Pillar of Science&nbsp;Learn how scientific discovery can be accelerated by combining theory and experimentation with computing to fight cancer, prevent heart attacks, and spur new advances in robotic surgery.Why Take This Course?You'll master the fundamentals of massively parallel computing by using CUDA C/C++ to program modern GPUs. You'll learn the GPU programming model and architecture, key algorithms and parallel programming patterns, and optimization techniques. Your assignments will illustrate these concepts through image processing applications, but this is a parallel computing course and what you learn will translate to any application domain. Most of all we hope you'll learn how to think in parallel.Prerequisites and RequirementsWe expect students to have a solid experience with the C programming language and basic knowledge of data structures and algorithms.See the&nbsp;Technology Requirements&nbsp;for using UdacitySyllabusLesson 1: GPU Programming ModelProject 1: Greyscale Conversion (for that classy touch!)Lesson 2: GPU Hardware and Parallel CommunicationProject 2: Smart Blurring (miracle product for removing wrinkles!)Lesson 3: Fundamental Parallel AlgorithmsProject 3: HDR Tonemapping (when 1000:1 contrast is not enough!)Lesson 4: Using Sort and ScanProject 4: Red Eye Removal (soothing relief for bright red eyes)Lesson 5: Optimizing GPU ProgramsProject 5: Accelerating Histograms (when fast isn't fast enough)Lesson 6: Parallel Computing PatternsProject 6: Seamless Image Compositing (polar bear in the swimming pool)Lesson 7: The Frontiers and Future of GPU Computing",
        "desc_html": "Learn the fundamentals of parallel computing with the GPU and the CUDA\nprogramming environment! In this class, you'll learn about parallel\nprogramming by coding a series of image processing algorithms, such as you\nmight find in Photoshop or Instagram. You'll be able to program and run your\nassignments on high-end GPUs, even if you don't own one yourself.\n\nWhy It's Important to Think Parallel\n\n[Third Pillar of Science](http://www.youtube.com/watch?v=3DbAB2ChDBw)  \nLearn how scientific discovery can be accelerated by combining theory and\nexperimentation with computing to fight cancer, prevent heart attacks, and\nspur new advances in robotic surgery.\n\n**Why Take This Course?**\n\nYou'll master the fundamentals of massively parallel computing by using CUDA\nC/C++ to program modern GPUs. You'll learn the GPU programming model and\narchitecture, key algorithms and parallel programming patterns, and\noptimization techniques. Your assignments will illustrate these concepts\nthrough image processing applications, but this is a parallel computing course\nand what you learn will translate to any application domain. Most of all we\nhope you'll learn how to think in parallel.\n\n**Prerequisites and Requirements**\n\nWe expect students to have a solid experience with the C programming language\nand basic knowledge of data structures and algorithms.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n## Syllabus\n\n**Lesson 1: GPU Programming Model**\n\nProject 1: Greyscale Conversion (for that classy touch!)\n\n**Lesson 2: GPU Hardware and Parallel Communication**\n\nProject 2: Smart Blurring (miracle product for removing wrinkles!)\n\n**Lesson 3: Fundamental Parallel Algorithms**\n\nProject 3: HDR Tonemapping (when 1000:1 contrast is not enough!)\n\n**Lesson 4: Using Sort and Scan**\n\nProject 4: Red Eye Removal (soothing relief for bright red eyes)\n\n**Lesson 5: Optimizing GPU Programs**\n\nProject 5: Accelerating Histograms (when fast isn't fast enough)\n\n**Lesson 6: Parallel Computing Patterns**\n\nProject 6: Seamless Image Compositing (polar bear in the swimming pool)\n\n**Lesson 7: The Frontiers and Future of GPU Computing**\n\n",
        "name": "Intro to Parallel Programming",
        "provider": "Udacity",
        "rating": "3",
        "reviews": "1",
        "university": [
            "Nvidia",
            "University of California, Davis"
        ],
        "url": "http://www.udacity.com/overview/Course/cs344/CourseRev/1",
        "video_url": "https://www.youtube.com/embed/zb49vDrOxgA?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-02-04",
        "desc": "6.00x is an introduction to using computation to solve real problems. The course is aimed at students with little or no prior programming experience who have a desire (or at least a need) to understand computational approaches to problem solving. Some of the people taking the course will use it as a stepping stone to more advanced computer science courses, but for many, it will be their first and last computer science course. Since the course will be the only formal computer science course many of the students take, we have chosen to focus on breadth rather than depth. The goal is to provide students with a brief introduction to many topics so they will have an idea of what is possible when they need to think about how to use computation to accomplish some goal later in their career. That said, it is not a \"computation appreciation\" course. It is a challenging and rigorous course in which the students spend a lot of time and effort learning to bend the computer to their will.Since the course will be the only formal computer science course many of the students take, we have chosen to focus on breadth rather than depth. The goal is to provide students with a brief introduction to many topics so they will have an idea of what is possible when they need to think about how to use computation to accomplish some goal later in their career. That said, it is not a \"computation appreciation\" course. It is a challenging and rigorous course in which the students spend a lot of time and effort learning to bend the computer to their will.",
        "desc_html": "6.00x is an introduction to using computation to solve real problems. The\ncourse is aimed at students with little or no prior programming experience who\nhave a desire (or at least a need) to understand computational approaches to\nproblem solving. Some of the people taking the course will use it as a\nstepping stone to more advanced computer science courses, but for many, it\nwill be their first and last computer science course. Since the course will be\nthe only formal computer science course many of the students take, we have\nchosen to focus on breadth rather than depth. The goal is to provide students\nwith a brief introduction to many topics so they will have an idea of what is\npossible when they need to think about how to use computation to accomplish\nsome goal later in their career. That said, it is not a \"computation\nappreciation\" course. It is a challenging and rigorous course in which the\nstudents spend a lot of time and effort learning to bend the computer to their\nwill.  \nSince the course will be the only formal computer science course many of the\nstudents take, we have chosen to focus on breadth rather than depth. The goal\nis to provide students with a brief introduction to many topics so they will\nhave an idea of what is possible when they need to think about how to use\ncomputation to accomplish some goal later in their career. That said, it is\nnot a \"computation appreciation\" course. It is a challenging and rigorous\ncourse in which the students spend a lot of time and effort learning to bend\nthe computer to their will.\n\n",
        "name": "6.00x: Introduction to Computer Science and Programming",
        "provider": "edX",
        "rating": "4",
        "reviews": "3",
        "university": [
            "Massachusetts Institute of Technology"
        ],
        "url": "https://www.edx.org/course/mitx/mitx-6-00x-introduction-computer-science-586",
        "video_url": "https://www.youtube.com/embed/3cH_qnEx9P0?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-01-31",
        "desc": "El curso est\u00e1 compuesto por una serie de temas que hemos considerado que son el m\u00ednimo que debe conocer cualquier persona que quiera tener una visi\u00f3n introductoria del desarrollo web actual. Al finalizar el curso, si el alumno ha asimilado correctamente todos los contenidos y ha completado todas las actividades de forma satisfactoria, ser\u00e1 capaz de desarrollar aplicaciones web. El curso comienza con las tecnolog\u00edas que en la actualidad son consideradas el est\u00e1ndar de la programaci\u00f3n de la parte cliente de las aplicaciones web: HTML, CSS, JavaScript y DOM. Adem\u00e1s, se proporcionan conocimientos sobre dise\u00f1o, usabilidad y accesibilidad en general y en particular sobre su aplicaci\u00f3n al desarrollo web. La \u00faltima parte se dedica a la programaci\u00f3n de la parte servidor con la tecnolog\u00eda PHP.",
        "desc_html": "El curso est\u00e1 compuesto por una serie de temas que hemos considerado que son\nel m\u00ednimo que debe conocer cualquier persona que quiera tener una visi\u00f3n\nintroductoria del desarrollo web actual. Al finalizar el curso, si el alumno\nha asimilado correctamente todos los contenidos y ha completado todas las\nactividades de forma satisfactoria, ser\u00e1 capaz de desarrollar aplicaciones\nweb. El curso comienza con las tecnolog\u00edas que en la actualidad son\nconsideradas el est\u00e1ndar de la programaci\u00f3n de la parte cliente de las\naplicaciones web: HTML, CSS, JavaScript y DOM. Adem\u00e1s, se proporcionan\nconocimientos sobre dise\u00f1o, usabilidad y accesibilidad en general y en\nparticular sobre su aplicaci\u00f3n al desarrollo web. La \u00faltima parte se dedica a\nla programaci\u00f3n de la parte servidor con la tecnolog\u00eda PHP.\n\n",
        "name": "iDESWEB, Introducci\u00f3n al desarrollo web",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.miriadax.net/web/introduccion_desarrollo_web",
        "video_url": "https://www.youtube.com/embed/00ABGMuEv1k?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-01-31",
        "desc": "Los dispositivos m\u00f3viles est\u00e1n transformando la forma en que las personas se\u00a0comunican. Se han convirtiendo en el nuevo ordenador personal del siglo XXI.\u00a0Android es la plataforma libre para el desarrollo de aplicaciones m\u00f3viles desarrollada por\u00a0Google. Esta plataforma est\u00e1 ampliando su rango de influencia a sistemas empotrados,\u00a0tabletas o Smart TV. Este curso pretende ser una gu\u00eda para introducirse en la\u00a0programaci\u00f3n en Android. Todos los conceptos son descritos por medio de ejemplos,\u00a0aumentando su nivel de complejidad a medida que avanzan los m\u00f3dulos. A lo largo del\u00a0curso se desarrolla una aplicaci\u00f3n de ejemplo, el m\u00edtico videojuego Asteroides.\u00a0Comienza con una versi\u00f3n sencilla, que se ir\u00e1 completando para que incluya, gr\u00e1ficos,\u00a0pantalla t\u00e1ctil y sensores, geo-localizaci\u00f3n, multimedia, XML, SQL, Internet, servicios\u00a0Web\u2026",
        "desc_html": "Los dispositivos m\u00f3viles est\u00e1n transformando la forma en que las personas se\ncomunican. Se han convirtiendo en el nuevo ordenador personal del siglo XXI.\nAndroid es la plataforma libre para el desarrollo de aplicaciones m\u00f3viles\ndesarrollada por\u00a0Google. Esta plataforma est\u00e1 ampliando su rango de influencia\na sistemas empotrados,\u00a0tabletas o Smart TV. Este curso pretende ser una gu\u00eda\npara introducirse en la\u00a0programaci\u00f3n en Android. Todos los conceptos son\ndescritos por medio de ejemplos,\u00a0aumentando su nivel de complejidad a medida\nque avanzan los m\u00f3dulos. A lo largo del\u00a0curso se desarrolla una aplicaci\u00f3n de\nejemplo, el m\u00edtico videojuego Asteroides.\u00a0Comienza con una versi\u00f3n sencilla,\nque se ir\u00e1 completando para que incluya, gr\u00e1ficos,\u00a0pantalla t\u00e1ctil y sensores,\ngeo-localizaci\u00f3n, multimedia, XML, SQL, Internet, servicios\u00a0Web\u2026\n\n",
        "name": "Android. Programaci\u00f3n de Aplicaciones",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.miriadax.net/web/android_programacion",
        "video_url": "https://www.youtube.com/embed/PPsVy0nDOR8?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-01-17",
        "desc": "",
        "desc_html": "\n\n",
        "name": "Introduction to Computer Architecture",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Carnegie Mellon University"
        ],
        "url": "http://www.ece.cmu.edu/~ece447/s13/doku.php?id=schedule",
        "video_url": "https://www.youtube.com/embed/BJ87rZCGWU0?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-01-15",
        "desc": "",
        "desc_html": "\n\n",
        "name": "Introduction to Databases",
        "provider": "Class2Go",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Stanford University"
        ],
        "url": "https://class.stanford.edu/db/Winter2013/preview/",
        "video_url": "https://www.youtube.com/embed/VJyduDiQ_xM?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-11-04",
        "desc": "R es un entorno inform\u00e1tico de computaci\u00f3n estad\u00edstica y de generaci\u00f3n de gr\u00e1ficos. R funciona en un amplio rango de sistemas operativos como UNIX, Windows o MacOS. Pese a su potencialidad, versatilidad y flexibilidad; R puede parecer \u00e1rido en el momento en que el usuario trata de interaccionar con sus componentes. Se suele decir que \u201cla curva de aprendizaje es lenta\u201d. Sin embargo, los resultados que produce son ampliamente satisfactorios. Este curso est\u00e1 destinado a \u201clubricar\u201d esos primeros encuentros con \u00e9ste entorno estad\u00edstico.",
        "desc_html": "R es un entorno inform\u00e1tico de computaci\u00f3n estad\u00edstica y de generaci\u00f3n de\ngr\u00e1ficos. R funciona en un amplio rango de sistemas operativos como UNIX,\nWindows o MacOS. Pese a su potencialidad, versatilidad y flexibilidad; R puede\nparecer \u00e1rido en el momento en que el usuario trata de interaccionar con sus\ncomponentes. Se suele decir que \u201cla curva de aprendizaje es lenta\u201d. Sin\nembargo, los resultados que produce son ampliamente satisfactorios. Este curso\nest\u00e1 destinado a \u201clubricar\u201d esos primeros encuentros con \u00e9ste entorno\nestad\u00edstico.\n\n",
        "name": "Aprende An\u00e1lisis Estad\u00edstico de Datos con R",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.miriadax.net/web/aprende-analisis-estadistico-datos-r",
        "video_url": "https://www.youtube.com/embed/Ai5BuFKOero?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-11-04",
        "desc": "\"Desarrollo de Aplicaciones para Android\" ser&aacute; un curso altamente pr&aacute;ctico con demos y tareas de c&oacute;digo semanales. Requiere que el estudiante conozca el paradigma de programaci&oacute;n orientada a objetos y de preferencia el lenguaje de programaci&oacute;n Java.&nbsp;Syllabus&nbsp;Introducci&oacute;n a AndroidLayouts y elementos de interfaz gr&aacute;ficaBloques b&aacute;sicos de aplicaci&oacute;nLayouts y elementos de interfaz gr&aacute;ficaAlmacenamiento y datosAcceso a hardwarePublicaci&oacute;n de apps&nbsp;&nbsp;",
        "desc_html": "\"Desarrollo de Aplicaciones para Android\" sera un curso altamente practico con\ndemos y tareas de codigo semanales. Requiere que el estudiante conozca el\nparadigma de programacion orientada a objetos y de preferencia el lenguaje de\nprogramacion Java.\n\n## Syllabus\n\n\n\n  * Introduccion a Android\n  * Layouts y elementos de interfaz grafica\n  * Bloques basicos de aplicacion\n  * Layouts y elementos de interfaz grafica\n  * Almacenamiento y datos\n  * Acceso a hardware\n  * Publicacion de apps\n\n\n\n\n\n",
        "name": "Desarrollo de Aplicaciones para Android",
        "provider": "Telescopio",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Galileo University"
        ],
        "url": "http://telescopio.galileo.edu/curso/desarrollo-de-aplicaciones-para-android/",
        "video_url": "https://www.youtube.com/embed/OH3OWonOCu8?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-11-04",
        "desc": "This is a follow-on for the Coursera class \u201cPrinciples of Functional Programming in Scala\u201d, which so far had more than 100\u2019000 inscriptions over two iterations of the course, with some of the highest completion rates of any massive open online course worldwide.The aim of the second course is to teach the principles of reactive programming. Reactive programming is an emerging discipline which combines concurrency and event-based and asynchronous systems. It is essential for writing any kind of web-service or distributed system and is also at the core of many high-performance concurrent systems. Reactive programming can be seen as a natural extension of higher-order functional programming to concurrent systems that deal with distributed state&nbsp;by coordinating and orchestrating asynchronous data streams exchanged by actors.In this course you will discover key elements for writing reactive programs in a composable way. You will find out how to apply these building blocks in the construction of event-driven systems that are scalable and resilient.The course is hands on; most units introduce short programs that serve as illustrations of important concepts and invite you to play with them, modifying and improving them. The course is complemented by a series of assignments, which are also programming projects.Personalized Tutoring by Typesafe: Typesafe offers supervised tutorial sessions accompanying select Coursera classes. In weekly, one-hour tutorial sessions experts from Typesafe provide in-depth answers to questions about the course material, and discuss solutions to homework assignments past the deadline. Tutorial groups are small (10 participants max) in order to meet individual mentoring needs as much as possible. Tutorial session slots are offered in both European and American time zones.Registration for tutoring by Typesafe is open.SyllabusWeek 1: Review of Principles of Functional Programming: substitution model, for-expressions and how they relate to monads. Introduces a new implementation of for-expressions: random value generators. Shows how this can be used in randomized testing and gives an overview of ScalaCheck, a tool which implements this idea.Week 2: Functional programming and mutable state. What makes an object mutable? How this impacts the substitution model. Extended example: Digital circuit simulation.Week 3: Futures. Introduces futures as another monad, with for-expressions as concrete syntax. Shows how futures can be composed to avoid thread blocking. Discusses cross-thread error handling.Week 4: Reactive stream processing. \u00a0Generalizing futures to reactive computations over streams. Stream operators.Week 5: Actors. Introduces the Actor Model, actors as encapsulated units of consistency, asynchronous message passing, discusses different message delivery semantics (at most once, at least once, exactly once) and eventual consistency.Week 6: Supervision. Introduces reification of failure, hierarchical failure handling, the Error Kernel pattern, lifecycle monitoring, discusses transient and persistent state.Week 7: Conversation Patterns. Discusses the management of conversational state between actors and patterns for flow control, routing of messages to pools of actors for resilience or load balancing, acknowledgement of reception to achieve reliable delivery.",
        "desc_html": "This is a follow-on for the Coursera class \u201cPrinciples of Functional\nProgramming in Scala\u201d, which so far had more than 100\u2019000 inscriptions over\ntwo iterations of the course, with some of the highest completion rates of any\nmassive open online course worldwide.\n\nThe aim of the second course is to teach the principles of reactive\nprogramming. Reactive programming is an emerging discipline which combines\nconcurrency and event-based and asynchronous systems. It is essential for\nwriting any kind of web-service or distributed system and is also at the core\nof many high-performance concurrent systems. Reactive programming can be seen\nas a natural extension of higher-order functional programming to concurrent\nsystems that deal with distributed state by coordinating and orchestrating\nasynchronous data streams exchanged by actors.\n\nIn this course you will discover key elements for writing reactive programs in\na composable way. You will find out how to apply these building blocks in the\nconstruction of event-driven systems that are scalable and resilient.\n\nThe course is hands on; most units introduce short programs that serve as\nillustrations of important concepts and invite you to play with them,\nmodifying and improving them. The course is complemented by a series of\nassignments, which are also programming projects.  \n  \n\n**Personalized Tutoring by Typesafe**: Typesafe offers supervised tutorial sessions accompanying select Coursera classes. In weekly, one-hour tutorial sessions experts from Typesafe provide in-depth answers to questions about the course material, and discuss solutions to homework assignments past the deadline. Tutorial groups are small (10 participants max) in order to meet individual mentoring needs as much as possible. Tutorial session slots are offered in both European and American time zones. [Registration for tutoring by Typesafe is open](https://attendee.gototraining.com/4q80l/catalog/4020625203792931584).\n\n## Syllabus\n\n**Week 1**: Review of Principles of Functional Programming: substitution model, for-expressions and how they relate to monads. Introduces a new implementation of for-expressions: random value generators. Shows how this can be used in randomized testing and gives an overview of ScalaCheck, a tool which implements this idea.\n\n**Week 2**: Functional programming and mutable state. What makes an object mutable? How this impacts the substitution model. Extended example: Digital circuit simulation.\n\n**Week 3**: Futures. Introduces futures as another monad, with for-expressions as concrete syntax. Shows how futures can be composed to avoid thread blocking. Discusses cross-thread error handling.\n\n**Week 4**: Reactive stream processing. \u00a0Generalizing futures to reactive computations over streams. Stream operators.\n\n**Week 5**: Actors. Introduces the Actor Model, actors as encapsulated units of consistency, asynchronous message passing, discusses different message delivery semantics (at most once, at least once, exactly once) and eventual consistency.\n\n**Week 6**: Supervision. Introduces reification of failure, hierarchical failure handling, the Error Kernel pattern, lifecycle monitoring, discusses transient and persistent state.\n\n**Week 7**: Conversation Patterns. Discusses the management of conversational state between actors and patterns for flow control, routing of messages to pools of actors for resilience or load balancing, acknowledgement of reception to achieve reliable delivery. \n\n",
        "name": "Principles of Reactive Programming",
        "provider": "Coursera",
        "rating": "4.7692307692308",
        "reviews": "13",
        "university": [
            "\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne"
        ],
        "url": "https://www.coursera.org/course/reactive",
        "video_url": ""
    },
    {
        "date": "2013-10-30",
        "desc": "En este curso vamos a aprender a escribir nuestros propios programas, usando software libre. Vamos a usar el lenguaje M, disponible en los paquetes MATLAB y Octave UPM, que son ampliamente usados en ciencias e ingenier\u00eda. No es necesario tener ning\u00fan conocimiento previo para seguir el curso, y al finalizar, habr\u00e1s sido capaz de tomar las riendas de tu ordenador y escribir tus propios programas, incluso con gr\u00e1ficos sencillos.",
        "desc_html": "En este curso vamos a aprender a escribir nuestros propios programas, usando\nsoftware libre. Vamos a usar el lenguaje M, disponible en los paquetes MATLAB\ny Octave UPM, que son ampliamente usados en ciencias e ingenier\u00eda. No es\nnecesario tener ning\u00fan conocimiento previo para seguir el curso, y al\nfinalizar, habr\u00e1s sido capaz de tomar las riendas de tu ordenador y escribir\ntus propios programas, incluso con gr\u00e1ficos sencillos.\n\n",
        "name": "Introducci\u00f3n a la Programaci\u00f3n para Ciencias e Ingenier\u00eda",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.miriadax.net/web/introduccion-programacion-ciencias-ingenieria",
        "video_url": "https://www.youtube.com/embed/hpeyceDy8eo?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-10-30",
        "desc": "En este curso vamos a aprender a escribir nuestros propios programas, usando software libre. Vamos a usar el lenguaje M, disponible en los paquetes MATLAB y Octave UPM, que son ampliamente usados en ciencias e ingenier\u00eda. No es necesario tener ning\u00fan conocimiento previo para seguir el curso, y al finalizar, habr\u00e1s sido capaz de tomar las riendas de tu ordenador y escribir tus propios programas, incluso con gr\u00e1ficos sencillos.",
        "desc_html": "En este curso vamos a aprender a escribir nuestros propios programas, usando\nsoftware libre. Vamos a usar el lenguaje M, disponible en los paquetes MATLAB\ny Octave UPM, que son ampliamente usados en ciencias e ingenier\u00eda. No es\nnecesario tener ning\u00fan conocimiento previo para seguir el curso, y al\nfinalizar, habr\u00e1s sido capaz de tomar las riendas de tu ordenador y escribir\ntus propios programas, incluso con gr\u00e1ficos sencillos.\n\n",
        "name": "Introducci\u00f3n a la Programaci\u00f3n para Ciencias e Ingenier\u00eda",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Universidad Polit\u00e9cnica de Madrid"
        ],
        "url": "https://www.miriadax.net/web/introduccion-programacion-ciencias-ingenieria",
        "video_url": "https://www.youtube.com/embed/hpeyceDy8eo?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-10-29",
        "desc": "Mobile technology has become an integral component in our lives and is driving the expectations of how we interact with our business systems.Like SAP, top businesses today recognize the value of enabling their employees to work anytime, anywhere through the use of mobile technologies. However, providing this ability in an enterprise context can become quite tricky.We certainly want to be able to do business on our phones and tablets, but we\u2019re not necessarily aware of what needs to go on behind the scenes to enable this.In this course, we\u2019ll learn what it takes to make an enterprise-ready app with SAP mobile solutions.",
        "desc_html": "Mobile technology has become an integral component in our lives and is driving\nthe expectations of how we interact with our business systems.  \nLike SAP, top businesses today recognize the value of enabling their employees\nto work anytime, anywhere through the use of mobile technologies. However,\nproviding this ability in an enterprise context can become quite tricky.  \nWe certainly want to be able to do business on our phones and tablets, but\nwe\u2019re not necessarily aware of what needs to go on behind the scenes to enable\nthis.  \n  \nIn this course, we\u2019ll learn what it takes to make an enterprise-ready app with\nSAP mobile solutions.\n\n",
        "name": "Introduction to Mobile Solution Development",
        "provider": "openSAP",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.sap.com/course/mobile1",
        "video_url": ""
    },
    {
        "date": "2013-10-28",
        "desc": "As the world's data grow exponentially, organizations across all sectors, including government and not-for-profit, need to understand, manage and use big, complex data sets&mdash;known as big data.",
        "desc_html": "As the world's data grow exponentially, organizations across all sectors,\nincluding government and not-for-profit, need to understand, manage and use\nbig, complex data sets--known as big data.\n\n",
        "name": "Applied Data Science: An Introduction",
        "provider": "CourseSites",
        "rating": "4",
        "reviews": "3",
        "university": [
            "Syracuse University"
        ],
        "url": "https://www.coursesites.com/webapps/Bb-sites-course-creation-BBLEARN/courseHomepage.htmlx?course_id=_276927_1",
        "video_url": ""
    },
    {
        "date": "2013-10-28",
        "desc": "You have probably heard that this is the era of \u201cBig Data\u201d. Stories about\n    companies or scientists using data to recommend movies, discover who is\n    pregnant based on credit card receipts, or confirm the existence of the\n    Higgs Boson regularly appear in Forbes, the Economist, the Wall Street\n    Journal, and The New York Times. But how does one turn data into this type\n    of insight? The answer is data analysis and applied statistics. Data analysis\n    is the process of finding the right data to answer your question, understanding\n    the processes underlying the data, discovering the important patterns in\n    the data, and then communicating your results to have the biggest possible\n    impact. There is a critical shortage of people with these skills in the\n    workforce, which is why Hal Varian (Chief Economist at Google) says that\n    being a statistician will be the sexy job for the next 10 years.This course is an applied statistics course focusing on data analysis.\n    The course will begin with an overview of how to organize, perform, and\n    write-up data analyses. Then we will cover some of the most popular and\n    widely used statistical methods like linear regression, principal components\n    analysis, cross-validation, and p-values. Instead of focusing on mathematical\n    details, the lectures will be designed to help you apply these techniques\n    to real data using the R statistical programming language, interpret the\n    results, and diagnose potential problems in your analysis. You will also\n    have the opportunity to critique and assist your fellow classmates with\n    their data analyses.",
        "desc_html": "You have probably heard that this is the era of \u201cBig Data\u201d. Stories about\ncompanies or scientists using data to recommend movies, discover who is\npregnant based on credit card receipts, or confirm the existence of the Higgs\nBoson regularly appear in Forbes, the Economist, the Wall Street Journal, and\nThe New York Times. But how does one turn data into this type of insight? The\nanswer is data analysis and applied statistics. Data analysis is the process\nof finding the right data to answer your question, understanding the processes\nunderlying the data, discovering the important patterns in the data, and then\ncommunicating your results to have the biggest possible impact. There is a\ncritical shortage of people with these skills in the workforce, which is why\nHal Varian (Chief Economist at Google) says that being a statistician will be\nthe sexy job for the next 10 years.  \n  \nThis course is an applied statistics course focusing on data analysis. The\ncourse will begin with an overview of how to organize, perform, and write-up\ndata analyses. Then we will cover some of the most popular and widely used\nstatistical methods like linear regression, principal components analysis,\ncross-validation, and p-values. Instead of focusing on mathematical details,\nthe lectures will be designed to help you apply these techniques to real data\nusing the R statistical programming language, interpret the results, and\ndiagnose potential problems in your analysis. You will also have the\nopportunity to critique and assist your fellow classmates with their data\nanalyses.\n\n",
        "name": "Data Analysis",
        "provider": "Coursera",
        "rating": "4.1538461538462",
        "reviews": "13",
        "university": [
            "Johns Hopkins University"
        ],
        "url": "https://www.coursera.org/course/dataanalysis",
        "video_url": ""
    },
    {
        "date": "2013-10-20",
        "desc": "\u4ecb\u7ecd\u89c6\u9891\u82e5\u65e0\u6cd5\u6b63\u5e38\u64ad\u653e\uff0c\u8bf7\u770b\u8fd9\u91cc\u3002&nbsp;\u8ba1\u7b97\u673a\u662f\u73b0\u4ee3\u793e\u4f1a\u4e2d\u7528\u4e8e\u89e3\u51b3\u95ee\u9898\u7684\u91cd\u8981\u5de5\u5177\u3002\u5229\u7528\u8ba1\u7b97\u673a\u89e3\u51b3\u5b9e\u9645\u95ee\u9898\u9700\u8981\u5c06\u95ee\u9898\u62bd\u8c61\uff0c\u5e76\u5bf9\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff0c\u6700\u540e\u901a\u8fc7\u8ba1\u7b97\u673a\u7a0b\u5e8f\u6c42\u89e3\u95ee\u9898\u3002\u800c\u672c\u95e8\u8bfe\u7a0b\u4e3b\u8981\u5185\u5bb9\u5c31\u662f\u5bf9\u4ee5\u4e0a\u5185\u5bb9\u8fdb\u884c\u7814\u7a76\u3002\u56fe\u7075\u5956\u83b7\u5f97\u8005N.Wirth\u5199\u4e86\u4e00\u672c\u7ecf\u5178\u8457\u4f5c\u201c\u7a0b\u5e8f=\u7b97\u6cd5+\u6570\u636e\u7ed3\u6784\u201d\u3002\u6570\u636e\u7ed3\u6784\uff0c\u662f\u62bd\u8c61\u7684\u8868\u793a\u6570\u636e\u7684\u65b9\u5f0f\uff1b\u7b97\u6cd5\uff0c\u5219\u662f\u8ba1\u7b97\u7684\u4e00\u7cfb\u5217\u6709\u6548\u3001\u901a\u7528\u7684\u6b65\u9aa4\u3002\u7b97\u6cd5\u4e0e\u6570\u636e\u7ed3\u6784\u662f\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u76f8\u8f85\u76f8\u6210\u7684\u4e24\u4e2a\u65b9\u9762\u3002\u6211\u4eec\u4f1a\u56f4\u7ed5\u7740\u201c\u7b97\u6cd5+\u6570\u636e\u7ed3\u6784=\u7a0b\u5e8f\u201d\u7684\u601d\u8def\uff0c\u4ee5\u95ee\u9898\u6c42\u89e3\u4e3a\u5bfc\u5411\u8fdb\u884c\u5b66\u4e60\u3002\u5e0c\u671b\u80fd\u591f\u5e2e\u52a9\u5927\u5bb6\u63d0\u9ad8\u7406\u8bba\u3001\u62bd\u8c61\u3001\u8bbe\u8ba1\u7684\u80fd\u529b\u3002\u5728\u624e\u5b9e\u7684\u7ecf\u5178\u7406\u8bba\u57fa\u7840\u4e0a\uff0c\u8fd0\u7528\u95ee\u9898\u62bd\u8c61\u3001\u6570\u636e\u62bd\u8c61\u3001\u7b97\u6cd5\u62bd\u8c61\u6765\u5206\u6790\u95ee\u9898\uff0c\u5e94\u7528\u9002\u5f53\u7684\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u6765\u8bbe\u8ba1\u548c\u5b9e\u73b0\u76f8\u5e94\u7684\u7a0b\u5e8f\u3002\u901a\u8fc7\u8bfe\u7a0b\u5b66\u4e60\uff0c\u5927\u5bb6\u7684\u62bd\u8c61\u601d\u7ef4\u80fd\u529b\u3001\u95ee\u9898\u6c42\u89e3\u80fd\u529b\u5c06\u5f97\u5230\u8f83\u5927\u63d0\u5347\uff0c\u7f16\u7a0b\u80fd\u529b\u548c\u4ee3\u7801\u8d28\u91cf\u4f1a\u6709\u8d28\u7684\u98de\u8dc3\uff01\u5728\u6c42\u89e3\u5b9e\u9645\u95ee\u9898\u65b9\u9762\uff0c\u6211\u4eec\u4f1a\u5b66\u4e60\u5230\u901a\u8fc7\u6743\u8861\u65f6\u7a7a\u548c\u5176\u4ed6\u8d44\u6e90\u5f00\u9500\uff0c\u5229\u7528\u6570\u636e\u7ed3\u6784\u6765\u7ec4\u7ec7\u6570\u636e\u3001\u8bbe\u8ba1\u9ad8\u6548\u7684\u7b97\u6cd5\u3001\u5b8c\u6210\u9ad8\u8d28\u91cf\u7684\u7a0b\u5e8f\u4ee5\u6ee1\u8db3\u9519\u7efc\u590d\u6742\u7684\u5b9e\u9645\u5e94\u7528\u9700\u8981\u3002\u6b64\u5916\uff0c\u8bfe\u7a0b\u6240\u5b66\u5230\u7684\u5185\u5bb9\u4f1a\u88ab\u5229\u7528\u5230\u8ba1\u7b97\u673a\u79d1\u5b66\u540e\u7eed\u7684\u5404\u4e2a\u8bfe\u7a0b\u4e2d\uff0c\u5982\u64cd\u4f5c\u7cfb\u7edf\u3001\u8f6f\u4ef6\u5de5\u7a0b\u3001\u6570\u636e\u5e93\u6982\u8bba\u3001\u7f16\u8bd1\u6280\u672f\u3001\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u3001\u4eba\u673a\u4ea4\u4e92\u7b49\u3002\u5e0c\u671b\u53ef\u4ee5\u4e3a\u5927\u5bb6\u5c06\u6765\u4ece\u4e8b\u8ba1\u7b97\u673a\u76f8\u5173\u7684\u5b66\u4e60\u3001\u7814\u7a76\u548c\u5f00\u53d1\u5de5\u4f5c\u6253\u4e0b\u624e\u5b9e\u7684\u57fa\u7840\u3002\u672c\u8bfe\u7a0b\u91c7\u7528\u5f20\u94ed\u4e3b\u7f16\u7684\u56fd\u5bb6\u201c\u5341\u4e00\u4e94\u201d\u89c4\u5212\u6559\u6750\u300a\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u300b\uff08\u9ad8\u7b49\u6559\u80b2\u51fa\u7248\u793e\uff09\u3002\u9002\u5408\u8ba1\u7b97\u673a\u4ee5\u53ca\u76f8\u5173\u7406\u5de5\u4e13\u4e1a\u7684\u5927\u4e8c\u672c\u79d1\u751f\u5b66\u4e60\uff0c\u9700\u8981\u5148\u4fee\u8fc7\u8ba1\u7b97\u6982\u8bba\u7b49\u8bfe\u7a0b\uff0c\u5177\u6709\u7ed3\u6784\u5316\u548c\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u3002\u8bfe\u7a0b\u4e3b\u8981\u5305\u62ec\u7684\u5185\u5bb9\u6709\uff1a\u7ebf\u6027\u8868\uff0c\u6808\u4e0e\u961f\u5217\uff0c\u5b57\u7b26\u4e32\uff0c\u4e8c\u53c9\u6811\uff0c\u6811\uff0c\u56fe\uff0c\u6392\u5e8f\uff08\u5185\u6392\u5e8f\uff0c\u5916\u6392\u5e8f\uff09\uff0c\u68c0\u7d22\uff0c\u7d22\u5f15\u3001\u4ee5\u53ca\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u3002\u8bfe\u7a0b\u6301\u7eed14\u5468\uff0c\u5b66\u4e60\u8005\u6bcf\u5468\u5728\u672c\u8bfe\u7a0b\u4e0a\u9700\u8981\u6295\u51654\uff0d8\u5c0f\u65f6\u3002\u4f5c\u4e3a\u5b8c\u6210\u8bfe\u7a0b\u5b66\u4e60\u7684\u8981\u6c42\uff0c\u5b66\u751f\u9700\u8981\u719f\u6089\u6559\u6750\u6709\u5173\u7ae0\u8282\u7684\u5185\u5bb9\uff0c\u72ec\u7acb\u6b63\u786e\u5730\u5b8c\u6210\u4f5c\u4e1a\u548c\u8003\u8bd5\uff0c\u8fbe\u523060%\u7684\u6210\u7ee9\u5c31\u80fd\u83b7\u5f97\u5317\u5927\u7684\u8bfe\u7a0b\u7ed3\u4e1a\u8bc1\u4e66\uff08\u83b7\u5f9780%\u4ee5\u4e0a\u7684\u6210\u7ee9\uff0c\u80fd\u5f97\u5230\u4f18\u79c0\u8bc1\u4e66\uff09\u3002\u8be5\u8bfe\u7a0b\u662f\u201c\u5317\u5927-\u5fb7\u7a3b\u7f51\u7edc\u516c\u5f00\u8bfe\u7a0b\u201d\u4e2d\u7684\u4e00\u95e8\uff0c\u7531\u5317\u4eac\u5927\u5b66\u4e0e\u5fb7\u7a3b\u6559\u80b2\u8054\u5408\u63d0\u4f9b\u3002Computer, as an important tool for&nbsp;problem&nbsp;solving, has been deeply involved&nbsp;in every aspect of people\u2019s daily lives.&nbsp;Data are the quantities on which operations are performed on computers. What is the logical relationship among data?\n    How are the data stored in computers? What algorithms should be operated to solve the problems on the data? These are the questions that will be answered in \u201cData Structures and Algorithms\u201d, one of the most important core courses in Computer Science.\n    The course also covers fundamental data structures and classical algorithms which are widely used in the&nbsp;succeeding specialized courses,&nbsp;such as Operating Systems, Software Engineering, Database Systems, Compiler&nbsp;Principles, Computer\n    Graphics and Human Computer Interaction.What is the combination of data structures and algorithms? Niklaus Wirth wrote a book titled \"Algorithms + Data Structures = Programs\", which points out their important roles in computing discipline:&nbsp;algorithm and data structure are two closely linked\n    and indivisible parts of programming.The course will follow the idea of&nbsp; \u201cAlgorithms + Data Structures = Programs\u201d, aimed at improving&nbsp; students\u2019 knowledge and skills of theory, abstraction and design in problem solving.&nbsp;On a solid basis of the fundamental theory, the students&nbsp;will\n    analyze the problems using problem, data and algorithm abstraction. Making a tradeoff between space and time complexity, the&nbsp;students will learn how to organize data reasonably, design efficient and effective algorithms, and implement high quality\n    programs, so that they can solve real-world complex problems.&nbsp;After studying this course, students should be well prepared for further study, engineering and research in computer related areas.The course uses the textbook \u201cData Structures and Algorithms\u201d written by Prof. Ming Zhang and two other&nbsp; coauthors. The course is appropriate for sophomore students majoring in computer science or other science/engineering disciplines. Students should&nbsp;have\n    learned \"introduction to computing\",&nbsp;with the knowledge of structured and object-oriented programming.The course will last for 14 weeks and requires the students to study for 4-8 hours per week.&nbsp;After studying the course, the students\u2019 ability of abstract thinking and problem solving should have improved considerably.&nbsp;Their programming skills\n    and the quality of their codes would have increased as well.To be qualified for graduation in Peking University, the students need to be familiar about the materials in the textbook, do homework and exam independently, and obtain the score of 60% or more&nbsp;(80% for A score).The course is one of the PKU-DeTao MOOCs, which is a joint effort by Peking University and DeTao Masters Academy.Syllabus\u65f6\u95f4\u5b89\u6392\u2022 \u7b2c\u4e00\u5468\uff1a\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u7b80\u4ecb\u4ee5\u53ca\u7ebf\u6027\u8868\u2022 \u7b2c\u4e8c\u5468\uff1a\u6808\u548c\u961f\u5217\u2022 \u7b2c\u4e09\u5468\uff1a\u5b57\u7b26\u4e32\u2022 \u7b2c\u56db\u5468\uff1a\u4e8c\u53c9\u6811\uff081\uff09\u2022 \u7b2c\u4e94\u5468\uff1a\u4e8c\u53c9\u6811\uff082\uff09\u2022 \u7b2c\u516d\u5468\uff1a\u6811\u4e0e\u68ee\u6797\u2022 \u7b2c\u4e03\u5468\uff1a\u56fe\u2022 \u7b2c\u516b\u5468\uff1a\u5185\u6392\u5e8f\uff081\uff09\u2022 \u7b2c\u4e5d\u5468\uff1a\u5185\u6392\u5e8f\uff082\uff09\u2022 \u7b2c\u5341\u5468\uff1a\u6587\u4ef6\u7ba1\u7406\u548c\u5916\u6392\u5e8f\u2022 \u7b2c\u5341\u4e00\u5468\uff1a\u68c0\u7d22\u2022 \u7b2c\u5341\u4e8c\u5468\uff1a\u7d22\u5f15\u6280\u672f\u2022 \u7b2c\u5341\u4e09\u5468\uff1a\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\uff081\uff09\u2022 \u7b2c\u5341\u56db\u5468\uff1a\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\uff082\uff09\u4efb\u52a1\u5b89\u6392\uff08\u4f5c\u4e1a\u53ca\u8003\u8bd5\uff09\u8003\u8bd5\u5206\u4e3a\u671f\u4e2d\u8003\u8bd5\uff0811.25-12.8\uff09\u548c\u671f\u672b\u8003\u8bd5\uff081.13-1.26\u8bfe\u7a0b\u5173\u95ed\u65f6\u95f4\uff09\u8bc4\u5206\u65b9\u6848\u8bc4\u5206\u6309\u7167\u65e5\u5e38\u4f5c\u4e1a\u7684\u5b8c\u6210\u60c5\u51b5\u548c\u671f\u4e2d\u671f\u672b\u8003\u8bd5\u7684\u7b54\u9898\u60c5\u51b5\u8fdb\u884c\u3002\u5e73\u65f6\uff08\u8bfe\u7a0b\u53c2\u4e0e\uff0910 %\uff0c\u4f5c\u4e1a30 % \uff0cPOJ 20 %\uff0c\u671f\u4e2d 15 %\uff0c\u671f\u672b 25\n%\u3002POJ\u4f5c\u4e1a\u5728\u7a0b\u5e8f\u81ea\u52a8\u8bc4\u6d4b\u7f51\u7ad9\u53d1\u5e03\uff1ahttp://dsalgo.openjudge.cn/\u8bfe\u7a0b\u53c2\u4e0e\u5ea6\u8f83\u9ad8\u7684\u540c\u5b66\uff08Meetup\u8ba8\u8bba\u4f1a\u3001\u8bba\u575b\u95ee\u7b54\uff09\uff0c\u53ef\u4ee5\u5f97\u5230\u52a0\u5206\u3002\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u7684\u5185\u5bb9\u4e0d\u4f5c\u8003\u6838\u8981\u6c42\uff0c\u5982\u679c\u5b66\u751f\u4e3b\u52a8\u5b8c\u6210\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u7684\u4f5c\u4e1a\uff0c\u4e5f\u53ef\u4ee5\u5f97\u5230\u4e00\u5b9a\u52a0\u5206\u3002\u8bc1\u4e66\u8bbe\u7f6e\u201c\u5408\u683c\u201d\uff08\u8fbe\u523060%\u6210\u7ee9\uff09\u3001\"\u4f18\u79c0\"\uff08\u8fbe\u523080%\u6210\u7ee9\uff09\u4e24\u6863\u8bfe\u7a0b\u6807\u51c6\uff0c\u7531\u4efb\u8bfe\u6559\u5e08\u7b7e\u53d1\u5317\u5927\u7edf\u4e00\u7684\u8bfe\u7a0b\u7ed3\u4e1a\u8bc1\u4e66\u3002",
        "desc_html": "\u4ecb\u7ecd\u89c6\u9891\u82e5\u65e0\u6cd5\u6b63\u5e38\u64ad\u653e\uff0c\u8bf7\u770b[\u8fd9\u91cc](http://video.study.163.com/edu-\nvideo/nos/mp4/2013/11/20/303416_hd.mp4)\u3002\n\n\u8ba1\u7b97\u673a\u662f\u73b0\u4ee3\u793e\u4f1a\u4e2d\u7528\u4e8e\u89e3\u51b3\u95ee\u9898\u7684\u91cd\u8981\u5de5\u5177\u3002\u5229\u7528\u8ba1\u7b97\u673a\u89e3\u51b3\u5b9e\u9645\u95ee\u9898\u9700\u8981\u5c06\u95ee\u9898\u62bd\u8c61\uff0c\u5e76\u5bf9\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff0c\u6700\u540e\u901a\u8fc7\u8ba1\u7b97\u673a\u7a0b\u5e8f\u6c42\u89e3\u95ee\u9898\u3002\u800c\u672c\u95e8\u8bfe\u7a0b\u4e3b\u8981\u5185\u5bb9\u5c31\u662f\u5bf9\u4ee5\u4e0a\u5185\n\u5bb9\u8fdb\u884c\u7814\u7a76\u3002\n\n\u56fe\u7075\u5956\u83b7\u5f97\u8005N.Wirth\u5199\u4e86\u4e00\u672c\u7ecf\u5178\u8457\u4f5c\u201c\u7a0b\u5e8f=\u7b97\u6cd5+\u6570\u636e\u7ed3\u6784\u201d\u3002\u6570\u636e\u7ed3\u6784\uff0c\u662f\u62bd\u8c61\u7684\u8868\u793a\u6570\u636e\u7684\u65b9\u5f0f\uff1b\u7b97\u6cd5\uff0c\u5219\u662f\u8ba1\u7b97\u7684\u4e00\u7cfb\u5217\u6709\u6548\u3001\u901a\u7528\u7684\u6b65\u9aa4\u3002\u7b97\u6cd5\u4e0e\u6570\u636e\u7ed3\u6784\n\u662f\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u76f8\u8f85\u76f8\u6210\u7684\u4e24\u4e2a\u65b9\u9762\u3002\n\n\u6211\u4eec\u4f1a\u56f4\u7ed5\u7740\u201c\u7b97\u6cd5+\u6570\u636e\u7ed3\u6784=\u7a0b\u5e8f\u201d\u7684\u601d\u8def\uff0c\u4ee5\u95ee\u9898\u6c42\u89e3\u4e3a\u5bfc\u5411\u8fdb\u884c\u5b66\u4e60\u3002\u5e0c\u671b\u80fd\u591f\u5e2e\u52a9\u5927\u5bb6\u63d0\u9ad8\u7406\u8bba\u3001\u62bd\u8c61\u3001\u8bbe\u8ba1\u7684\u80fd\u529b\u3002\u5728\u624e\u5b9e\u7684\u7ecf\u5178\u7406\u8bba\u57fa\u7840\u4e0a\uff0c\u8fd0\u7528\u95ee\u9898\u62bd\u8c61\u3001\u6570\u636e\n\u62bd\u8c61\u3001\u7b97\u6cd5\u62bd\u8c61\u6765\u5206\u6790\u95ee\u9898\uff0c\u5e94\u7528\u9002\u5f53\u7684\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u6765\u8bbe\u8ba1\u548c\u5b9e\u73b0\u76f8\u5e94\u7684\u7a0b\u5e8f\u3002\u901a\u8fc7\u8bfe\u7a0b\u5b66\u4e60\uff0c\u5927\u5bb6\u7684\u62bd\u8c61\u601d\u7ef4\u80fd\u529b\u3001\u95ee\u9898\u6c42\u89e3\u80fd\u529b\u5c06\u5f97\u5230\u8f83\u5927\u63d0\u5347\uff0c\u7f16\u7a0b\u80fd\u529b\u548c\u4ee3\u7801\u8d28\u91cf\u4f1a\n\u6709\u8d28\u7684\u98de\u8dc3\uff01\n\n\u5728\u6c42\u89e3\u5b9e\u9645\u95ee\u9898\u65b9\u9762\uff0c\u6211\u4eec\u4f1a\u5b66\u4e60\u5230\u901a\u8fc7\u6743\u8861\u65f6\u7a7a\u548c\u5176\u4ed6\u8d44\u6e90\u5f00\u9500\uff0c\u5229\u7528\u6570\u636e\u7ed3\u6784\u6765\u7ec4\u7ec7\u6570\u636e\u3001\u8bbe\u8ba1\u9ad8\u6548\u7684\u7b97\u6cd5\u3001\u5b8c\u6210\u9ad8\u8d28\u91cf\u7684\u7a0b\u5e8f\u4ee5\u6ee1\u8db3\u9519\u7efc\u590d\u6742\u7684\u5b9e\u9645\u5e94\u7528\u9700\u8981\u3002\n\n\u6b64\u5916\uff0c\u8bfe\u7a0b\u6240\u5b66\u5230\u7684\u5185\u5bb9\u4f1a\u88ab\u5229\u7528\u5230\u8ba1\u7b97\u673a\u79d1\u5b66\u540e\u7eed\u7684\u5404\u4e2a\u8bfe\u7a0b\u4e2d\uff0c\u5982\u64cd\u4f5c\u7cfb\u7edf\u3001\u8f6f\u4ef6\u5de5\u7a0b\u3001\u6570\u636e\u5e93\u6982\u8bba\u3001\u7f16\u8bd1\u6280\u672f\u3001\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u3001\u4eba\u673a\u4ea4\u4e92\u7b49\u3002\u5e0c\u671b\u53ef\u4ee5\u4e3a\u5927\u5bb6\u5c06\u6765\u4ece\u4e8b\u8ba1\u7b97\n\u673a\u76f8\u5173\u7684\u5b66\u4e60\u3001\u7814\u7a76\u548c\u5f00\u53d1\u5de5\u4f5c\u6253\u4e0b\u624e\u5b9e\u7684\u57fa\u7840\u3002\n\n\u672c\u8bfe\u7a0b\u91c7\u7528\u5f20\u94ed\u4e3b\u7f16\u7684\u56fd\u5bb6\u201c\u5341\u4e00\u4e94\u201d\u89c4\u5212\u6559\u6750\u300a\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u300b\uff08\u9ad8\u7b49\u6559\u80b2\u51fa\u7248\u793e\uff09\u3002\u9002\u5408\u8ba1\u7b97\u673a\u4ee5\u53ca\u76f8\u5173\u7406\u5de5\u4e13\u4e1a\u7684\u5927\u4e8c\u672c\u79d1\u751f\u5b66\u4e60\uff0c\u9700\u8981\u5148\u4fee\u8fc7\u8ba1\u7b97\u6982\u8bba\u7b49\u8bfe\u7a0b\uff0c\u5177\u6709\u7ed3\n\u6784\u5316\u548c\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u3002\n\n\u8bfe\u7a0b\u4e3b\u8981\u5305\u62ec\u7684\u5185\u5bb9\u6709\uff1a\u7ebf\u6027\u8868\uff0c\u6808\u4e0e\u961f\u5217\uff0c\u5b57\u7b26\u4e32\uff0c\u4e8c\u53c9\u6811\uff0c\u6811\uff0c\u56fe\uff0c\u6392\u5e8f\uff08\u5185\u6392\u5e8f\uff0c\u5916\u6392\u5e8f\uff09\uff0c\u68c0\u7d22\uff0c\u7d22\u5f15\u3001\u4ee5\u53ca\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u3002\u8bfe\u7a0b\u6301\u7eed14\u5468\uff0c\u5b66\u4e60\u8005\u6bcf\u5468\u5728\u672c\u8bfe\u7a0b\u4e0a\u9700\n\u8981\u6295\u51654\uff0d8\u5c0f\u65f6\u3002\u4f5c\u4e3a\u5b8c\u6210\u8bfe\u7a0b\u5b66\u4e60\u7684\u8981\u6c42\uff0c\u5b66\u751f\u9700\u8981\u719f\u6089\u6559\u6750\u6709\u5173\u7ae0\u8282\u7684\u5185\u5bb9\uff0c\u72ec\u7acb\u6b63\u786e\u5730\u5b8c\u6210\u4f5c\u4e1a\u548c\u8003\u8bd5\uff0c\u8fbe\u523060%\u7684\u6210\u7ee9\u5c31\u80fd\u83b7\u5f97\u5317\u5927\u7684\u8bfe\u7a0b\u7ed3\u4e1a\u8bc1\u4e66\uff08\u83b7\u5f9780%\u4ee5\n\u4e0a\u7684\u6210\u7ee9\uff0c\u80fd\u5f97\u5230\u4f18\u79c0\u8bc1\u4e66\uff09\u3002\n\n\u8be5\u8bfe\u7a0b\u662f\u201c\u5317\u5927-\u5fb7\u7a3b\u7f51\u7edc\u516c\u5f00\u8bfe\u7a0b\u201d\u4e2d\u7684\u4e00\u95e8\uff0c\u7531\u5317\u4eac\u5927\u5b66\u4e0e\u5fb7\u7a3b\u6559\u80b2\u8054\u5408\u63d0\u4f9b\u3002  \n\nComputer, as an important tool for problem solving, has been deeply involved\nin every aspect of people\u2019s daily lives. Data are the quantities on which\noperations are performed on computers. What is the logical relationship among\ndata? How are the data stored in computers? What algorithms should be operated\nto solve the problems on the data? These are the questions that will be\nanswered in \u201cData Structures and Algorithms\u201d, one of the most important core\ncourses in Computer Science. The course also covers fundamental data\nstructures and classical algorithms which are widely used in the succeeding\nspecialized courses, such as Operating Systems, Software Engineering, Database\nSystems, Compiler Principles, Computer Graphics and Human Computer\nInteraction.\n\nWhat is the combination of data structures and algorithms? Niklaus Wirth wrote\na book titled \"Algorithms + Data Structures = Programs\", which points out\ntheir important roles in computing discipline: algorithm and data structure\nare two closely linked and indivisible parts of programming.\n\nThe course will follow the idea of  \u201cAlgorithms + Data Structures = Programs\u201d,\naimed at improving  students\u2019 knowledge and skills of theory, abstraction and\ndesign in problem solving. On a solid basis of the fundamental theory, the\nstudents will analyze the problems using problem, data and algorithm\nabstraction. Making a tradeoff between space and time complexity, the students\nwill learn how to organize data reasonably, design efficient and effective\nalgorithms, and implement high quality programs, so that they can solve real-\nworld complex problems. After studying this course, students should be well\nprepared for further study, engineering and research in computer related\nareas.\n\nThe course uses the textbook \u201cData Structures and Algorithms\u201d written by Prof.\nMing Zhang and two other  coauthors. The course is appropriate for sophomore\nstudents majoring in computer science or other science/engineering\ndisciplines. Students should have learned \"introduction to computing\", with\nthe knowledge of structured and object-oriented programming.\n\nThe course will last for 14 weeks and requires the students to study for 4-8\nhours per week. After studying the course, the students\u2019 ability of abstract\nthinking and problem solving should have improved considerably. Their\nprogramming skills and the quality of their codes would have increased as\nwell.\n\nTo be qualified for graduation in Peking University, the students need to be\nfamiliar about the materials in the textbook, do homework and exam\nindependently, and obtain the score of 60% or more (80% for A score).\n\nThe course is one of the PKU-DeTao MOOCs, which is a joint effort by Peking\nUniversity and DeTao Masters Academy.\n\n## Syllabus\n\n**\u65f6\u95f4\u5b89\u6392**\n\n**\u2022 \u7b2c\u4e00\u5468\uff1a\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u7b80\u4ecb\u4ee5\u53ca\u7ebf\u6027\u8868  \n\u2022 \u7b2c\u4e8c\u5468\uff1a\u6808\u548c\u961f\u5217  \n****\u2022 \u7b2c\u4e09\u5468\uff1a\u5b57\u7b26\u4e32  \n****\u2022 \u7b2c\u56db\u5468\uff1a\u4e8c\u53c9\u6811\uff081\uff09  \n****\u2022 \u7b2c\u4e94\u5468\uff1a\u4e8c\u53c9\u6811\uff082\uff09  \n****\u2022 \u7b2c\u516d\u5468\uff1a\u6811\u4e0e\u68ee\u6797  \n****\u2022 \u7b2c\u4e03\u5468\uff1a\u56fe  \n****\u2022 \u7b2c\u516b\u5468\uff1a\u5185\u6392\u5e8f\uff081\uff09  \n****\u2022 \u7b2c\u4e5d\u5468\uff1a\u5185\u6392\u5e8f\uff082\uff09  \n****\u2022 \u7b2c\u5341\u5468\uff1a\u6587\u4ef6\u7ba1\u7406\u548c\u5916\u6392\u5e8f  \n****\u2022 \u7b2c\u5341\u4e00\u5468\uff1a\u68c0\u7d22  \n****\u2022 \u7b2c\u5341\u4e8c\u5468\uff1a\u7d22\u5f15\u6280\u672f  \n****\u2022 \u7b2c\u5341\u4e09\u5468\uff1a\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\uff081\uff09  \n****\u2022 \u7b2c\u5341\u56db\u5468\uff1a\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\uff082\uff09**\n\n**  \n****\u4efb\u52a1\u5b89\u6392\uff08\u4f5c\u4e1a\u53ca\u8003\u8bd5\uff09**\n\n\u8003\u8bd5\u5206\u4e3a\u671f\u4e2d\u8003\u8bd5\uff0811.25-12.8\uff09\u548c\u671f\u672b\u8003\u8bd5\uff081.13-1.26\u8bfe\u7a0b\u5173\u95ed\u65f6\u95f4\uff09\n\n**\u8bc4\u5206\u65b9\u6848**\n\n\u8bc4\u5206\u6309\u7167\u65e5\u5e38\u4f5c\u4e1a\u7684\u5b8c\u6210\u60c5\u51b5\u548c\u671f\u4e2d\u671f\u672b\u8003\u8bd5\u7684\u7b54\u9898\u60c5\u51b5\u8fdb\u884c\u3002\u5e73\u65f6\uff08\u8bfe\u7a0b\u53c2\u4e0e\uff0910 %\uff0c\u4f5c\u4e1a30 % \uff0cPOJ 20 %\uff0c\u671f\u4e2d 15 %\uff0c\u671f\u672b 25 %\u3002\n\nPOJ\u4f5c\u4e1a\u5728\u7a0b\u5e8f\u81ea\u52a8\u8bc4\u6d4b\u7f51\u7ad9\u53d1\u5e03\uff1a<http://dsalgo.openjudge.cn/>\n\n\u8bfe\u7a0b\u53c2\u4e0e\u5ea6\u8f83\u9ad8\u7684\u540c\u5b66\uff08Meetup\u8ba8\u8bba\u4f1a\u3001\u8bba\u575b\u95ee\u7b54\uff09\uff0c\u53ef\u4ee5\u5f97\u5230\u52a0\u5206\u3002\n\n\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u7684\u5185\u5bb9\u4e0d\u4f5c\u8003\u6838\u8981\u6c42\uff0c\u5982\u679c\u5b66\u751f\u4e3b\u52a8\u5b8c\u6210\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u7684\u4f5c\u4e1a\uff0c\u4e5f\u53ef\u4ee5\u5f97\u5230\u4e00\u5b9a\u52a0\u5206\u3002\n\n\n\n**\u8bc1\u4e66**\n\n\u8bbe\u7f6e\u201c\u5408\u683c\u201d\uff08\u8fbe\u523060%\u6210\u7ee9\uff09\u3001\"\u4f18\u79c0\"\uff08\u8fbe\u523080%\u6210\u7ee9\uff09\u4e24\u6863\u8bfe\u7a0b\u6807\u51c6\uff0c\u7531\u4efb\u8bfe\u6559\u5e08\u7b7e\u53d1\u5317\u5927\u7edf\u4e00\u7684\u8bfe\u7a0b\u7ed3\u4e1a\u8bc1\u4e66\u3002  \n\n",
        "name": "\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5  Data Structures and Algorithms",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Peking University"
        ],
        "url": "https://www.coursera.org/course/dsalgo",
        "video_url": ""
    },
    {
        "date": "2013-10-15",
        "desc": "Lernen Sie die Herausforderungen bei Planung, Entwicklung, Test und Wartung von Websites kennen. Sie erwerben die Kompetenz, W3C-konforme, sichere und performante Webpr&auml;senzen zu entwickeln. &bdquo;Web-Engineering&ldquo; bietet Konzepte, Methoden, Techniken und Werkzeuge f&uuml;r die systematische Entwicklung von Websites und Web-Applikationen.Sie &uuml;ben online den Umgang mit der Infrastruktur und den Werkzeugen, die f&uuml;r die Entwicklung und Wartung einer mit Twitter Bootstrap aufgebauten Website ben&ouml;tigt werden. Sie lernen insbesondere die daf&uuml;r notwendigen technischen und architektonischen Grundlagen. Der Kurs f&uuml;hrt auch in die Sicherheitsproblematik von Websystemen ein. Sie analysieren Angriffsmethoden und entwickeln Gegenma&szlig;nahmen.KursstrukturDer Kurs ist in zwei aufeinanderfolgenden Teilen organisiert: Dieser Kursteil, Web-Engineering I, beginnt am 15. Oktober 2013. Jeder Kursteil umfasst 10 Kapitel mit jeweils 6 bis 8 Lerneinheiten. Der w&ouml;chentliche Zeitaufwand betr&auml;gt ca. 6 Stunden. F&uuml;r Studierende an Hochschulen entspricht der Arbeitsaufwand f&uuml;r den gesamten Kurs 6 ECTS-Leistungspunkten. Im&nbsp;zweiten Teil des Kurses&nbsp;geht es ab dem 17. Januar 2014 zur eigenen HTML5-App.Bei ausreichenden Vorkenntnissen k&ouml;nnen Sie den Kurs auch mit dem zweiten Teil beginnen.LernzielAm Ende des ersten Kursteils \"Web-Engineering I: Grundlagen der Web-Entwicklung\" sollen Sie die folgende Kompetenz erworben haben: Wie entwickle ich im Kundenauftrag eine standardkonforme, barrierefreie, performante und sichere Website?An wen richtet sich dieser Kurs?Der MOOC &bdquo;Web-Engineering&ldquo; richtet sich an Studierende der Informatik, auch Medien- und Wirtschaftsinformatik, an Auszubildende der Fachinformatik mit der Fachrichtung Anwendungsentwicklung und an berufst&auml;tige Web-Designer/innen. F&uuml;r Studierende der TH Mittelhessen im Fachbereich MNI ist der MOOC &bdquo;Web-Engineering&ldquo; &auml;quivalent zum Bachelor-Modul &bdquo;Internetbasierte Systeme&ldquo; (CS 1024).KurszertifikateSie erhalten f&uuml;r jeden Kursteil ein Zertifikat, wenn Sie die folgenden Leistungen erbracht haben:Web-Engineering I: Bestehen der Online-Abschlusspr&uuml;fung des ersten Kursteils und Erstellen einer WebsiteWeb-Engineering II: Bestehen der Online-Abschlusspr&uuml;fung des zweiten Kursteils und Erstellen einer HTML5-AppVoraussetzung f&uuml;r die KursteilnahmeSie sollten grundlegende Kenntnisse in der Programmierung mitbringen. F&uuml;r die Entwicklungswerkzeuge ist ein leistungsf&auml;higer Laptop- oder Desktop-Rechner erforderlich, auf dem Sie Administratorrechte haben.Die im Kurs eingesetzten Lernressourcen (Websites, YouTube-Videos) sind vorwiegend in Englisch, deshalb sollten Sie gute Englischkenntnisse mitbringen.Unsere KompetenzenWer einen Online-Kurs wie &bdquo;Web-Engineering&ldquo; anbietet, sollte entsprechende Referenzen aufweisen k&ouml;nnen. In den letzten Jahren haben wir in den Bereichen E-Learning und Suchmaschinen mehrere webbasierte Systeme, wie z. B. die universit&auml;re Suchmaschine Pharus, die Lern- und Kollaborations-Plattform eCollab oder das mobile Abstimmungssystem ARSnova, als Open-Source-Projekte entwickelt, stets als studentische Projekte beginnend und in Bachelor- und Masterprojekten zur Marktreife gebracht.R&uuml;ckblickend war es der Kurs &bdquo;Web-Engineering&ldquo;, der die Studierenden f&uuml;r diese Projekte ausreichend vorbereitet hat. Wenn Sie die beiden Kursteile Web-Engineering I und II absolvieren, werden Sie Gleiches leisten k&ouml;nnen.SyllabusKursinhaltSie erlernen die folgenden Inhalte anhand von Lehrvideos, Screencasts und interaktiven Online-&Uuml;bungen und erproben die technischen Aspekte an Beispielen aus der Praxis.Kapitel 1: Einf&uuml;hrung in den MOOC \"Web-Engineering\"Kapitel 2: Starter Kit: Tools f&uuml;r die Website in der CloudKapitel 3: Chronik des Internets: vom ARPANET &uuml;ber HTTP in die CloudKapitel 4: HTTP: Hypertext Transfer ProtocolKapitel 5: Interaktives Praktikum: HTML/CSSKapitel 6: Semantische Textauszeichnung, Unicode &amp; UTF-8, (X)HTML-StandardsKapitel 7: Digitale BarrierefreiheitKapitel 8: Webdesign | Web-UsabilityKapitel 9: Website-Analyse und -OptimierungKapitel 10: Sicherheitsrisiken einer Website",
        "desc_html": "Lernen Sie die Herausforderungen bei Planung, Entwicklung, Test und Wartung\nvon Websites kennen. Sie erwerben die Kompetenz, W3C-konforme, sichere und\nperformante Webprasenzen zu entwickeln. \u201eWeb-Engineering\" bietet Konzepte,\nMethoden, Techniken und Werkzeuge fur die systematische Entwicklung von\nWebsites und Web-Applikationen.\n\nSie uben online den Umgang mit der Infrastruktur und den Werkzeugen, die fur\ndie Entwicklung und Wartung einer mit Twitter Bootstrap aufgebauten Website\nbenotigt werden. Sie lernen insbesondere die dafur notwendigen technischen und\narchitektonischen Grundlagen. Der Kurs fuhrt auch in die\nSicherheitsproblematik von Websystemen ein. Sie analysieren Angriffsmethoden\nund entwickeln Gegenma\u00dfnahmen.\n\n**Kursstruktur**\n\nDer Kurs ist in zwei aufeinanderfolgenden Teilen organisiert: Dieser Kursteil,\nWeb-Engineering I, beginnt am 15. Oktober 2013. Jeder Kursteil umfasst 10\nKapitel mit jeweils 6 bis 8 Lerneinheiten. Der wochentliche Zeitaufwand\nbetragt ca. 6 Stunden. Fur Studierende an Hochschulen entspricht der\nArbeitsaufwand fur den gesamten Kurs 6 ECTS-Leistungspunkten. Im [zweiten Teil\ndes Kurses](https://www.iversity.org/courses/web-engineering-ii-entwicklung-\nmobiler-html5-apps) geht es ab dem 17. Januar 2014 zur eigenen HTML5-App.\n\nBei ausreichenden Vorkenntnissen konnen Sie den Kurs auch mit dem zweiten Teil\nbeginnen.\n\n**Lernziel**\n\nAm Ende des ersten Kursteils \"Web-Engineering I: Grundlagen der Web-\nEntwicklung\" sollen Sie die folgende Kompetenz erworben haben: Wie entwickle\nich im Kundenauftrag eine standardkonforme, barrierefreie, performante und\nsichere Website?\n\n**An wen richtet sich dieser Kurs?**\n\nDer MOOC \u201eWeb-Engineering\" richtet sich an Studierende der Informatik, auch\nMedien- und Wirtschaftsinformatik, an Auszubildende der Fachinformatik mit der\nFachrichtung Anwendungsentwicklung und an berufstatige Web-Designer/innen. Fur\nStudierende der TH Mittelhessen im Fachbereich MNI ist der MOOC \u201eWeb-\nEngineering\" aquivalent zum Bachelor-Modul \u201eInternetbasierte Systeme\" (CS\n1024).\n\n**Kurszertifikate**\n\nSie erhalten fur jeden Kursteil ein Zertifikat, wenn Sie die folgenden\nLeistungen erbracht haben:\n\n  * Web-Engineering I: Bestehen der Online-Abschlussprufung des ersten Kursteils und Erstellen einer Website\n  * Web-Engineering II: Bestehen der Online-Abschlussprufung des zweiten Kursteils und Erstellen einer HTML5-App\n**Voraussetzung fur die Kursteilnahme**\n\nSie sollten grundlegende Kenntnisse in der Programmierung mitbringen. Fur die\nEntwicklungswerkzeuge ist ein leistungsfahiger Laptop- oder Desktop-Rechner\nerforderlich, auf dem Sie Administratorrechte haben.\n\nDie im Kurs eingesetzten Lernressourcen (Websites, YouTube-Videos) sind\nvorwiegend in Englisch, deshalb sollten Sie gute Englischkenntnisse\nmitbringen.\n\n**Unsere Kompetenzen**\n\nWer einen Online-Kurs wie \u201eWeb-Engineering\" anbietet, sollte entsprechende\nReferenzen aufweisen konnen. In den letzten Jahren haben wir in den Bereichen\nE-Learning und Suchmaschinen mehrere webbasierte Systeme, wie z. B. die\nuniversitare Suchmaschine Pharus, die Lern- und Kollaborations-Plattform\neCollab oder das mobile Abstimmungssystem ARSnova, als Open-Source-Projekte\nentwickelt, stets als studentische Projekte beginnend und in Bachelor- und\nMasterprojekten zur Marktreife gebracht.\n\nRuckblickend war es der Kurs \u201eWeb-Engineering\", der die Studierenden fur diese\nProjekte ausreichend vorbereitet hat. Wenn Sie die beiden Kursteile Web-\nEngineering I und II absolvieren, werden Sie Gleiches leisten konnen.\n\n## Syllabus\n\n**Kursinhalt**\n\nSie erlernen die folgenden Inhalte anhand von Lehrvideos, Screencasts und\ninteraktiven Online-\u00dcbungen und erproben die technischen Aspekte an Beispielen\naus der Praxis.\n\n  * Kapitel 1: Einfuhrung in den MOOC \"Web-Engineering\"\n  * Kapitel 2: Starter Kit: Tools fur die Website in der Cloud\n  * Kapitel 3: Chronik des Internets: vom ARPANET uber HTTP in die Cloud\n  * Kapitel 4: HTTP: Hypertext Transfer Protocol\n  * Kapitel 5: Interaktives Praktikum: HTML/CSS\n  * Kapitel 6: Semantische Textauszeichnung, Unicode & UTF-8, (X)HTML-Standards\n  * Kapitel 7: Digitale Barrierefreiheit\n  * Kapitel 8: Webdesign | Web-Usability\n  * Kapitel 9: Website-Analyse und -Optimierung\n  * Kapitel 10: Sicherheitsrisiken einer Website\n\n",
        "name": "Web-Engineering I: Grundlagen der Web-Entwicklung",
        "provider": "iversity",
        "rating": "1",
        "reviews": "3",
        "university": [],
        "url": "https://iversity.org/courses/web-engineering-i-grundlagen-der-web-entwicklung",
        "video_url": "https://www.youtube.com/embed/ogdV3O5C6ZY?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-10-14",
        "desc": "The course will focus on database design, executing structured query language (SQL) scripts in MySQL workbench, and data analysis in healthcare. Statistical analysis and data mining techniques will also be discussed along with methods for deploying these techniques using open-access analytical software, R.The program has been approved for 12 continuing education units for use in fulfilling the continuing education requirements of the American Health Information Management Association (AHIMA).",
        "desc_html": "The course will focus on database design, executing structured query language\n(SQL) scripts in MySQL workbench, and data analysis in healthcare. Statistical\nanalysis and data mining techniques will also be discussed along with methods\nfor deploying these techniques using open-access analytical software, R.  \n  \nThe program has been approved for 12 continuing education units for use in\nfulfilling the continuing education requirements of the American Health\nInformation Management Association (AHIMA).\n\n",
        "name": "Health Data Analytics",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [
            "The College of St. Scholastica"
        ],
        "url": "http://www.css.edu/Graduate/Non-Degree/Massive-Open-Online-Courses/Health-Data-Analytics-MOOC.html",
        "video_url": ""
    },
    {
        "date": "2013-10-14",
        "desc": "The course provides an overview of C++ for the experienced C programmer. You will learn how C++ is more powerful than C. The C++ STL library will be featured. This library allows C++ programmers to code generically, efficiently and at a high level. You will learn how to write basic graph algorithms such as the shortest path algorithm. You'll then put this skill to use in a programming assignment aimed at producing an intelligent hex player.",
        "desc_html": "The course provides an overview of C++ for the experienced C programmer. You\nwill learn how C++ is more powerful than C. The C++ STL library will be\nfeatured. This library allows C++ programmers to code generically, efficiently\nand at a high level. You will learn how to write basic graph algorithms such\nas the shortest path algorithm. You'll then put this skill to use in a\nprogramming assignment aimed at producing an intelligent hex player.  \n\n",
        "name": "C++ For C Programmers",
        "provider": "Coursera",
        "rating": "3",
        "reviews": "2",
        "university": [
            "University of California, Santa Cruz"
        ],
        "url": "https://www.coursera.org/course/cplusplus4c",
        "video_url": ""
    },
    {
        "date": "2013-10-07",
        "desc": "Vous voulez comprendre l'arithm\u00e9tique ? Vous souhaitez d\u00e9couvrir une application des math\u00e9matiques \u00e0 la vie quotidienne ? Ce cours est fait pour vous ! De niveau premi\u00e8re ann\u00e9e d'universit\u00e9, vous apprendrez les bases de l'arithm\u00e9tique (division euclidienne, th\u00e9or\u00e8me de B\u00e9zout, nombres premiers, congruence).Vous vous \u00eates d\u00e9j\u00e0 demand\u00e9 comment sont s\u00e9curis\u00e9es les transactions sur Internet ? Vous d\u00e9couvrirez les bases de la cryptographie, en commen\u00e7ant par les codes les plus simples pour aboutir au code RSA. Le code RSA est le code utilis\u00e9 pour crypter les communications sur internet. Il est bas\u00e9 sur de l'arithm\u00e9tique assez simple que l'on comprendra en d\u00e9tail. Vous pourrez en plus mettre en pratique vos connaissances par l'apprentissage de notions sur le langage de programmation Python.Vous travaillerez \u00e0 l'aide de cours \u00e9crits et de vid\u00e9os, d'exercices corrig\u00e9s en vid\u00e9os, des quiz, des travaux pratiques. Le cours est enti\u00e8rement gratuit !",
        "desc_html": "Vous voulez comprendre l'arithm\u00e9tique ? Vous souhaitez d\u00e9couvrir une\napplication des math\u00e9matiques \u00e0 la vie quotidienne ? Ce cours est fait pour\nvous ! De niveau premi\u00e8re ann\u00e9e d'universit\u00e9, vous apprendrez les bases de\nl'arithm\u00e9tique (division euclidienne, th\u00e9or\u00e8me de B\u00e9zout, nombres premiers,\ncongruence).  \n  \nVous vous \u00eates d\u00e9j\u00e0 demand\u00e9 comment sont s\u00e9curis\u00e9es les transactions sur\nInternet ? Vous d\u00e9couvrirez les bases de la cryptographie, en commen\u00e7ant par\nles codes les plus simples pour aboutir au code RSA. Le code RSA est le code\nutilis\u00e9 pour crypter les communications sur internet. Il est bas\u00e9 sur de\nl'arithm\u00e9tique assez simple que l'on comprendra en d\u00e9tail. Vous pourrez en\nplus mettre en pratique vos connaissances par l'apprentissage de notions sur\nle langage de programmation Python.  \n  \nVous travaillerez \u00e0 l'aide de cours \u00e9crits et de vid\u00e9os, d'exercices corrig\u00e9s\nen vid\u00e9os, des quiz, des travaux pratiques. Le cours est enti\u00e8rement gratuit !\n\n",
        "name": "Arithm\u00e9tique: en route pour la cryptographie",
        "provider": "Canvas.net",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Universit\u00e9 Lille 1"
        ],
        "url": "https://www.canvas.net/courses/arithm-tique-en-route-pour-la-cryptographie",
        "video_url": ""
    },
    {
        "date": "2013-10-06",
        "desc": "How to    and critique infographics and visualizations in newspapers, books, TV, etc., and how to propose alternatives that would improve them.How to plan for data-based storytelling through charts, maps, and diagrams.How to design infographics and visualizations that are not just attractive but, above all, informative, deep, and accurate.The rules of graphic design and of interaction design, applied to infographics and visualizations.Optional: How to use Adobe Illustrator to create infographics. Graphicthe University of Texas at Austin Knight Center for Journalism in the Americas",
        "desc_html": "How to and critique infographics and visualizations in newspapers, books, TV,\netc., and how to propose alternatives that would improve them.  \n  \nHow to plan for data-based storytelling through charts, maps, and diagrams.  \n  \nHow to design infographics and visualizations that are not just attractive\nbut, above all, informative, deep, and accurate.  \n  \nThe rules of graphic design and of interaction design, applied to infographics\nand visualizations.  \n  \nOptional: How to use Adobe Illustrator to create infographics. Graphic  \nthe University of Texas at Austin Knight Center for Journalism in the Americas\n\n",
        "name": "Introduction to Infographics and Data Visualization",
        "provider": "Independent",
        "rating": "3.25",
        "reviews": "4",
        "university": [
            "Knight Center for Journalism in the Americas"
        ],
        "url": "http://open.journalismcourses.org/",
        "video_url": "https://www.youtube.com/embed/oYHuoj8CnBM?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-10-02",
        "desc": "Mobile devices, phones as well as Tablet computers, have been spreading fast across the globe. Spread of mobile phones in developing countries has been spectacular. More people have access to cell phones today than to clean water.Mobile communication and computing technologies have much potential to contribute to human development. This is already felt in some measure in learning. There are reports of new advantages and benefits in key other sectors such as agriculture and food production and rural credit and finance. This course is about important concepts and practices in mobile technologies that are relevant to learning and education, agricultural extension and rural credit and finance.",
        "desc_html": "Mobile devices, phones as well as Tablet computers, have been spreading fast\nacross the globe. Spread of mobile phones in developing countries has been\nspectacular. More people have access to cell phones today than to clean water.  \n  \nMobile communication and computing technologies have much potential to\ncontribute to human development. This is already felt in some measure in\nlearning. There are reports of new advantages and benefits in key other\nsectors such as agriculture and food production and rural credit and finance.\nThis course is about important concepts and practices in mobile technologies\nthat are relevant to learning and education, agricultural extension and rural\ncredit and finance.\n\n",
        "name": "Mobiles for Development",
        "provider": "Commonwealth of Learning",
        "rating": "0",
        "reviews": "0",
        "university": [
            "IIT (Indian Institute of Technology, Kanpur)"
        ],
        "url": "http://m4d.colfinder.org/",
        "video_url": "https://www.youtube.com/embed/p_xjBT8zVdA?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-09-16",
        "desc": "The course \"Learning in the Cloud\" will give you the opportunity to join the camp of \"Cloud Computing\" giving you direct application knowledge to create innovative experiences in your learning environment or job training.The tools you will learn in this course are customizable, innovative and provide free services.Optimizing cost and time in training processes.&nbsp;Syllabus&nbsp;What is the cloud?Cloud ComputingLearning in the CloudBenefits and learning achievement in the cloudLearning Tools in the CloudPresentation tools: Prezi, Cacoo, GlogsterA Toolkit Documentation: Dropbox, Dipity and bloggerCollaboration Tools: Google Drive, Padlet and WikispacesCommunication Tools: Skype, Podomatic and social networksMultimedia Tools: GoAnimate and XtranormalInteractive Tools: Educaplay and Quizrevolution&nbsp;&nbsp;",
        "desc_html": "The course \"Learning in the Cloud\" will give you the opportunity to join the\ncamp of \"Cloud Computing\" giving you direct application knowledge to create\ninnovative experiences in your learning environment or job training. The tools\nyou will learn in this course are customizable, innovative and provide free\nservices. Optimizing cost and time in training processes.\n\n## Syllabus\n\n\n\n  * What is the cloud?\n  * Cloud Computing\n  * Learning in the Cloud\n  * Benefits and learning achievement in the cloud\n  * Learning Tools in the Cloud\n  * Presentation tools: Prezi, Cacoo, Glogster\n  * A Toolkit Documentation: Dropbox, Dipity and blogger\n  * Collaboration Tools: Google Drive, Padlet and Wikispaces\n  * Communication Tools: Skype, Podomatic and social networks\n  * Multimedia Tools: GoAnimate and Xtranormal\n  * Interactive Tools: Educaplay and Quizrevolution\n\n\n\n\n\n",
        "name": "Aprendizaje en la Nube, Herramientas web en el Aula",
        "provider": "Telescopio",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Galileo University"
        ],
        "url": "http://telescopio.galileo.edu/curso/aprendizaje-en-la-nube/",
        "video_url": "https://www.youtube.com/embed/SB5VgaBuJZk?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-09-04",
        "desc": "Phones, diesel engines, animated newspapers, medical devices, games, political\n    campaigns, medical research, mining, transportation systems, ... and so\n    on, and on, and on... every day more of the world around us is at least\n    partly run by computer programs. This means that being able to design programs\n    - or at least be able to work with people who design programs - is becoming\n    a more and more valuable skill.To build your own programs you need to know two things: how to use the\n    specific programming language and libraries needed, and the more general\n    skill of how to design a program.This course presents adesign methodthat will enable you to approach\n    the design of complex programs systematically. The method will work for\n    programs in this course as well as hard to design programs you develop\n    in the future.Using this method you will learn how to model the information in a problem\n    domain, how to structure program data to mirror that information and how\n    to further structure the data to lead to a well organized program. You\n    will also learn to distinguish those parts of a program that are naturally\n    data driven, from those that should use an alternative algorithmic approach.\n    The method uses unit-tests to both produce a better developed design, and\n    to test your program as you develop it.In the first course -- Part 1 -- we use a simple\n    teaching language to cover the core of the design method. In Part 1 we cover various forms of data; simple interactive programs like games and animations; storing information in and rendering trees; and finally exploring search programs: programs that solve puzzles like Sudoku boards.&nbsp;A second phase of the course, to be offered later, &nbsp;will consist of parallel tracks, with each track using a different popular\n    programming language and focusing on a different kind of problem. This\n    will help you bring the design method to whatever language and problem\n    domain interests you.SyllabusWeek One: Introduction and the structure of the course. The Beginning\nStudent Language; expressions and evaluation rules; primitive\noperations on numbers, strings and images. The How to Design Functions\n(HtDF) Recipe.Week Two: Representing information as data. The How to Design Data\n(HtDD) recipe. Atomic forms of data including intervals, enumerations,\nand itemizations.Week Three: The design of simple interactive programs. The big-bang\nuser interface framework. The How to Design Worlds (HtDW)\nrecipe. Representing information where two or more values naturally\nform a whole using compound data.Week Four: Representing arbitrary sized information using\nlists. Decomposition of information into multiple types.Week Five: Functions operating on natural numbers. A parlor\ntrick. Rules for decomposing functions.Week Six: List abbreviations. Mutual reference allows more complex\narbitrary-sized data. Using binary trees to enable fast lookup of\ninformation. Using arbitrary arity trees to represent inherently\nhierarchical information.Week Seven: Functions that consume two arguments that have 'one-of' in\ntheir types. Using local definitions to improve the structure of\nprograms.Week Eight: Using abstraction to control reduce repetition and\ncomplexity in programs.Week Nine: Generative recursion, fractals and search problems.",
        "desc_html": "Phones, diesel engines, animated newspapers, medical devices, games, political\ncampaigns, medical research, mining, transportation systems, ... and so on,\nand on, and on... every day more of the world around us is at least partly run\nby computer programs. This means that being able to design programs \\- or at\nleast be able to work with people who design programs - is becoming a more and\nmore valuable skill.\n\nTo build your own programs you need to know two things: how to use the\nspecific programming language and libraries needed, and the more general skill\nof how to design a program.\n\nThis course presents a **design method** that will enable you to approach the\ndesign of complex programs systematically. The method will work for programs\nin this course as well as hard to design programs you develop in the future.\n\nUsing this method you will learn how to model the information in a problem\ndomain, how to structure program data to mirror that information and how to\nfurther structure the data to lead to a well organized program. You will also\nlearn to distinguish those parts of a program that are naturally data driven,\nfrom those that should use an alternative algorithmic approach. The method\nuses unit-tests to both produce a better developed design, and to test your\nprogram as you develop it.\n\nIn the first course -- Part 1 -- we use a simple teaching language to cover\nthe core of the design method. In Part 1 we cover various forms of data;\nsimple interactive programs like games and animations; storing information in\nand rendering trees; and finally exploring search programs: programs that\nsolve puzzles like Sudoku boards.\n\nA second phase of the course, to be offered later,  will consist of parallel\ntracks, with each track using a different popular programming language and\nfocusing on a different kind of problem. This will help you bring the design\nmethod to whatever language and problem domain interests you.  \n\n## Syllabus\n\nWeek One: Introduction and the structure of the course. The Beginning Student\nLanguage; expressions and evaluation rules; primitive operations on numbers,\nstrings and images. The How to Design Functions (HtDF) Recipe.\n\nWeek Two: Representing information as data. The How to Design Data (HtDD)\nrecipe. Atomic forms of data including intervals, enumerations, and\nitemizations.\n\nWeek Three: The design of simple interactive programs. The big-bang user\ninterface framework. The How to Design Worlds (HtDW) recipe. Representing\ninformation where two or more values naturally form a whole using compound\ndata.\n\nWeek Four: Representing arbitrary sized information using lists. Decomposition\nof information into multiple types.\n\nWeek Five: Functions operating on natural numbers. A parlor trick. Rules for\ndecomposing functions.\n\nWeek Six: List abbreviations. Mutual reference allows more complex arbitrary-\nsized data. Using binary trees to enable fast lookup of information. Using\narbitrary arity trees to represent inherently hierarchical information.\n\nWeek Seven: Functions that consume two arguments that have 'one-of' in their\ntypes. Using local definitions to improve the structure of programs.\n\nWeek Eight: Using abstraction to control reduce repetition and complexity in\nprograms.\n\nWeek Nine: Generative recursion, fractals and search problems.\n\n",
        "name": "Introduction to Systematic Program Design - Part 1",
        "provider": "Coursera",
        "rating": "4.6666666666667",
        "reviews": "3",
        "university": [
            "The University of British Columbia"
        ],
        "url": "https://www.coursera.org/course/programdesign",
        "video_url": ""
    },
    {
        "date": "2013-09-03",
        "desc": "Recommender\n systems have changed the way people find products, information, and even \nother people. They study patterns of behavior to know what someone will \nprefer from among a collection of things he has never experienced. The \ntechnology behind recommender systems has evolved over the past 20 years\n into a rich collection of tools that enable the practitioner or \nresearcher to develop effective recommenders. We will study the most \nimportant of those tools, including how they work, how to use them, how \nto evaluate them, and their strengths and weaknesses in practice.The\n algorithms we will study include content-based filtering, user-user \ncollaborative filtering, item-item collaborative filtering, dimensionality \nreduction, and interactive critique-based recommenders. The approach \nwill be hands-on, with six two week projects, each of which will involve\n implementation and evaluation of some type of recommender.In addition to topical lectures, this course includes interviews and \nguest lectures with experts from both academia and industry.Two Ways to Take this Course:This course is designed to support two different types of students and educational goals:Programming Track: \u00a0Designed\n for students with significant programming and mathematics experience \n(see below), the programming track combines a conceptual and \nmathematical understanding of recommender systems with experience \nprogramming six different recommender systems projects. \u00a0Students \ncompleting this travel will gain the skills needed to implement basic \nrecommenders from scratch, and to use software libraries and tools to \nimplement more advanced recommenders.Concepts Track:Students who are not experienced programmers, or who are primarily \ninterested in understanding the concepts and techniques of recommender \nsystems, without learning to program them, can choose to focus on the \nconceptual and mathematical content, skipping the programming projects \nand associated lecture content.\u00a0 Students in the concepts track are \nstill expected to have significant familiarity with computing systems \nand college-level mathematics, but need not be accomplished programmers.\n \u00a0We expect this track to be useful for tech-savvy marketing and \nbusiness leaders, as well as engineering managers who may oversee but \nnot directly develop recommender systems. \u00a0We also hope it will be \nuseful to those looking to understand recommender systems concepts \nwithout the workload associated with programming those systems.SyllabusTopics covered:Week 1:Introduction to Course and to Recommender SystemsWeeks 2 and 3:Non-Personalized RecommendersUnderstanding Ratings, Predictions, and RecommendationsScales and NormalizationInterview with Anthony Jameson (DFKI AI Labs)Weeks 4 and 5:Content-Based RecommendersInferring PreferencesUnary RatingsKnowledge-Based RecommendersIntroduction to LensKit ToolkitInterviews with Robin Burke (DePaul University) and Barry Smyth (University College Dublin)Weeks 6 and 7:Collaborative FilteringUser-User k-Nearest Neighbor ApproachTuning CF AlgorithmsInterviews with Paul Resnick (University of Michigan), Jen Golbeck (University of Maryland) and Dan Cosley(Cornell University)Weeks 8 and 9:Evaluation and Metrics;Error Metrics;Decision-Support MetricsComparative Evaluation: Dead Data vs. Laboratory vs. Field StudyUser-Centered Metrics and EvaluationData SetsInterview with Neal Lathia (University of Cambridge)Weeks 10 and 11:Collaborative Filtering IIItem-Item k-Nearest NeighborBusiness RulesAdjustments for Serendipity and DiversityPerformance ComparisonsHybrid AlgorithmsInterviews with Brad Miller (Luther College) and Robin Burke (DePaul University)Weeks 12 and 13:Dimensionality Reduction RecommendersConcepts behind Latent Semantic Analysis and Singular Value DecompositionWeek 14:Alternative Recommender ApproachesInteractive RecommendersCritique and Dialog-based ApproachesAdvanced TopicsResourcesInterview with Anthony Jameson (DFKI AI Labs), Francesco Ricci (Free University of Bozen-Bolzano), Xavier Amatriain (NetFlix) and Anmol Bhasin (LinkedIn)Conclusion",
        "desc_html": "Recommender systems have changed the way people find products, information,\nand even other people. They study patterns of behavior to know what someone\nwill prefer from among a collection of things he has never experienced. The\ntechnology behind recommender systems has evolved over the past 20 years into\na rich collection of tools that enable the practitioner or researcher to\ndevelop effective recommenders. We will study the most important of those\ntools, including how they work, how to use them, how to evaluate them, and\ntheir strengths and weaknesses in practice.\n\nThe algorithms we will study include content-based filtering, user-user\ncollaborative filtering, item-item collaborative filtering, dimensionality\nreduction, and interactive critique-based recommenders. The approach will be\nhands-on, with six two week projects, each of which will involve\nimplementation and evaluation of some type of recommender.\n\nIn addition to topical lectures, this course includes interviews and guest\nlectures with experts from both academia and industry.  \n\n**Two Ways to Take this Course**:\n\nThis course is designed to support two different types of students and\neducational goals:\n\n_Programming Track_: \u00a0Designed for students with significant programming and\nmathematics experience (see below), the programming track combines a\nconceptual and mathematical understanding of recommender systems with\nexperience programming six different recommender systems projects. \u00a0Students\ncompleting this travel will gain the skills needed to implement basic\nrecommenders from scratch, and to use software libraries and tools to\nimplement more advanced recommenders.\n\n_Concepts Track_: \u00a0Students who are not experienced programmers, or who are\nprimarily interested in understanding the concepts and techniques of\nrecommender systems, without learning to program them, can choose to focus on\nthe conceptual and mathematical content, skipping the programming projects and\nassociated lecture content.\u00a0 Students in the concepts track are still expected\nto have significant familiarity with computing systems and college-level\nmathematics, but need not be accomplished programmers. \u00a0We expect this track\nto be useful for tech-savvy marketing and business leaders, as well as\nengineering managers who may oversee but not directly develop recommender\nsystems. \u00a0We also hope it will be useful to those looking to understand\nrecommender systems concepts without the workload associated with programming\nthose systems.  \n\n## Syllabus\n\n**_Topics covered_**:   \nWeek 1:  \n\n> Introduction to Course and to Recommender Systems  \n\nWeeks 2 and 3:  \n\n> Non-Personalized Recommenders  \nUnderstanding Ratings, Predictions, and Recommendations  \nScales and Normalization  \nInterview with Anthony Jameson (DFKI AI Labs)\n\nWeeks 4 and 5:  \n\n> Content-Based Recommenders  \nInferring Preferences  \nUnary Ratings  \nKnowledge-Based Recommenders  \nIntroduction to LensKit Toolkit  \nInterviews with Robin Burke (DePaul University) and Barry Smyth (University\nCollege Dublin)\n\nWeeks 6 and 7:  \n\n> Collaborative Filtering  \nUser-User k-Nearest Neighbor Approach  \nTuning CF Algorithms  \nInterviews with Paul Resnick (University of Michigan), Jen Golbeck (University\nof Maryland) and Dan Cosley(Cornell University)\n\nWeeks 8 and 9:  \n\n> Evaluation and Metrics;  \nError Metrics;  \nDecision-Support Metrics  \nComparative Evaluation: Dead Data vs. Laboratory vs. Field Study  \nUser-Centered Metrics and Evaluation  \nData Sets  \nInterview with Neal Lathia (University of Cambridge)\n\nWeeks 10 and 11:  \n\n> Collaborative Filtering II  \nItem-Item k-Nearest Neighbor  \nBusiness Rules  \nAdjustments for Serendipity and Diversity  \nPerformance Comparisons  \nHybrid Algorithms  \nInterviews with Brad Miller (Luther College) and Robin Burke (DePaul\nUniversity)\n\nWeeks 12 and 13:  \n\n> Dimensionality Reduction Recommenders  \nConcepts behind Latent Semantic Analysis and Singular Value Decomposition  \n\nWeek 14:  \n\n> Alternative Recommender Approaches  \nInteractive Recommenders  \nCritique and Dialog-based Approaches  \nAdvanced Topics  \nResources  \nInterview with Anthony Jameson (DFKI AI Labs), Francesco Ricci (Free\nUniversity of Bozen-Bolzano), Xavier Amatriain (NetFlix) and Anmol Bhasin\n(LinkedIn)  \nConclusion  \n\n  \n\n",
        "name": "Introduction to Recommender Systems",
        "provider": "Coursera",
        "rating": "5",
        "reviews": "2",
        "university": [
            "University of Minnesota"
        ],
        "url": "https://www.coursera.org/course/recsys",
        "video_url": ""
    },
    {
        "date": "2013-08-19",
        "desc": "A computer program is a set of instructions for a computer to follow, just as a recipe is a set of instructions for a chef. Laptops, kitchen appliances, MP3 players, and many other electronic devices all run computer programs. Programs have been written to manipulate sound and video, write poetry, run banking systems, predict the weather, and analyze athletic performance. This course is intended for people who have never seen a computer program. It will give you a better understanding of how computer applications work and teach you how to write your own applications. More importantly, you\u2019ll start to learn computational thinking, which is a fundamental approach to solving real-world problems. Computer programming languages share common fundamental concepts, and this course will introduce you to those concepts using the Python programming language. By the end of this course, you will be able to write your own programs to process data from the web and create interactive text-based games.",
        "desc_html": "A computer program is a set of instructions for a computer to follow, just as\na recipe is a set of instructions for a chef. Laptops, kitchen appliances, MP3\nplayers, and many other electronic devices all run computer programs. Programs\nhave been written to manipulate sound and video, write poetry, run banking\nsystems, predict the weather, and analyze athletic performance. This course is\nintended for people who have never seen a computer program. It will give you a\nbetter understanding of how computer applications work and teach you how to\nwrite your own applications. More importantly, you\u2019ll start to learn\ncomputational thinking, which is a fundamental approach to solving real-world\nproblems. Computer programming languages share common fundamental concepts,\nand this course will introduce you to those concepts using the Python\nprogramming language. By the end of this course, you will be able to write\nyour own programs to process data from the web and create interactive text-\nbased games.\n\n",
        "name": "Learn to Program: The Fundamentals",
        "provider": "Coursera",
        "rating": "4.8714285714286",
        "reviews": "70",
        "university": [
            "University of Toronto"
        ],
        "url": "https://www.coursera.org/course/programming1",
        "video_url": ""
    },
    {
        "date": "2013-08-11",
        "desc": "Quantum computation is a remarkable subject based on one of the great computational discoveries that computers based on quantum mechanics are exponentially powerful. This course aims to make this cutting-edge material broadly accessible to undergraduate students, including computer science majors who do not have any prior exposure to quantum mechanics. The course starts with a simple introduction to the fundamental principles of quantum mechanics using the concepts of qubits (or quantum bits) and quantum gates. This treatment emphasizes the paradoxical nature of the subject, including entanglement, non-local correlations, the no-cloning theorem and quantum teleportation. The course covers the fundamentals of quantum algorithms, including the quantum fourier transform, period finding, Shor's quantum algorithm for factoring integers, as well as the prospects for quantum algorithms for NP-complete problems.",
        "desc_html": "Quantum computation is a remarkable subject based on one of the great\ncomputational discoveries that computers based on quantum mechanics are\nexponentially powerful. This course aims to make this cutting-edge material\nbroadly accessible to undergraduate students, including computer science\nmajors who do not have any prior exposure to quantum mechanics. The course\nstarts with a simple introduction to the fundamental principles of quantum\nmechanics using the concepts of qubits (or quantum bits) and quantum gates.\nThis treatment emphasizes the paradoxical nature of the subject, including\nentanglement, non-local correlations, the no-cloning theorem and quantum\nteleportation. The course covers the fundamentals of quantum algorithms,\nincluding the quantum fourier transform, period finding, Shor's quantum\nalgorithm for factoring integers, as well as the prospects for quantum\nalgorithms for NP-complete problems.\n\n",
        "name": "CS191x: Quantum Mechanics and Quantum Computation",
        "provider": "edX",
        "rating": "3.8333333333333",
        "reviews": "6",
        "university": [
            "University of California, Berkeley"
        ],
        "url": "https://www.edx.org/course/quantum-mechanics-quantum-computation-uc-berkeleyx-cs-191x",
        "video_url": ""
    },
    {
        "date": "2013-07-31",
        "desc": "This course covers database design and the use of database management systems for applications. It includes extensive coverage of the relational model, relational algebra, and SQL. It also covers XML data including DTDs and XML Schema for validation, and the query and transformation languages XPath, XQuery, and XSLT. The course includes database design in UML, and relational design principles based on dependencies and normal forms. Many additional key database topics from the design and application-building perspective are also covered: indexes, views, transactions, authorization, integrity constraints, triggers, on-line analytical processing (OLAP), JSON, and emerging NoSQL systems. Working through the entire course provides comprehensive coverage of the field, but most of the topics are also well-suited for \"a la carte\" learning.",
        "desc_html": "This course covers database design and the use of database management systems\nfor applications. It includes extensive coverage of the relational model,\nrelational algebra, and SQL. It also covers XML data including DTDs and XML\nSchema for validation, and the query and transformation languages XPath,\nXQuery, and XSLT. The course includes database design in UML, and relational\ndesign principles based on dependencies and normal forms. Many additional key\ndatabase topics from the design and application-building perspective are also\ncovered: indexes, views, transactions, authorization, integrity constraints,\ntriggers, on-line analytical processing (OLAP), JSON, and emerging NoSQL\nsystems. Working through the entire course provides comprehensive coverage of\nthe field, but most of the topics are also well-suited for \"a la carte\"\nlearning.\n\n",
        "name": "Introduction to Databases",
        "provider": "UWA Class2GO",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Stanford University"
        ],
        "url": "https://www.class2go.uwa.edu.au/IntroDB/Semester22013/preview/",
        "video_url": ""
    },
    {
        "date": "2013-07-17",
        "desc": "Das Web &ndash; eigentlich nichts anderes als ein einfacher Informationsdienst im Internet &ndash; hat eine ganz neue digitale Welt entstehen lassen, die eng verwoben mit unserer realen Welt fr&uuml;her Unvorstellbares m&ouml;glich macht: sekundenschnelle Kommunikation &uuml;ber Kontinente, Filme auf dem Smartphone anschauen, mit Partnern in entfernten L&auml;ndern spielen oder Fotos anschauen oder vom Sofa aus einkaufen und Bankgesch&auml;fte t&auml;tigen&hellip; In unserem Onlinekurs zu den Web-Technologien lernen Sie, wie das alles funktioniert. Zun&auml;chst besprechen wir die dem Web zugrundeliegenden Basistechnologien URI, HTTP, HTML, CSS und XML. Auch wenn das zun&auml;chst sehr kryptisch klingt, werden Sie schnell verstehen, worum es geht. Wir sehen uns dann Webservices und die Techniken der Webprogrammierung an und &uuml;ben diese ein. Dann werden wir uns mit der Frage besch&auml;ftigen, wie Suchmaschinen, die uns als Webweiser in der digitalen Welt so schnell und zuverl&auml;ssig helfen, Inhalte und Dienstangebote im Web zu finden, eigentlich funktionieren. Der Kurs schlie&szlig;t mit einem Ausblick auf das Cloud Computing, das die Art und Weise, wie wir in Zukunft auf Rechenleistungen zugreifen werden, grundlegend ver&auml;ndert.SyllabusWoche 1:Einf&uuml;hrung in das WWWWoche 2:Woche 2Woche 3:Woche 3Woche 4:Woche 4Exkurs:ExkursWoche 5:Woche 5Woche 6:Woche 6Klausur:Klausur",
        "desc_html": "Das Web - eigentlich nichts anderes als ein einfacher Informationsdienst im\nInternet - hat eine ganz neue digitale Welt entstehen lassen, die eng verwoben\nmit unserer realen Welt fruher Unvorstellbares moglich macht: sekundenschnelle\nKommunikation uber Kontinente, Filme auf dem Smartphone anschauen, mit\nPartnern in entfernten Landern spielen oder Fotos anschauen oder vom Sofa aus\neinkaufen und Bankgeschafte tatigen\u2026 In unserem Onlinekurs zu den Web-\nTechnologien lernen Sie, wie das alles funktioniert. Zunachst besprechen wir\ndie dem Web zugrundeliegenden Basistechnologien URI, HTTP, HTML, CSS und XML.\nAuch wenn das zunachst sehr kryptisch klingt, werden Sie schnell verstehen,\nworum es geht. Wir sehen uns dann Webservices und die Techniken der\nWebprogrammierung an und uben diese ein. Dann werden wir uns mit der Frage\nbeschaftigen, wie Suchmaschinen, die uns als Webweiser in der digitalen Welt\nso schnell und zuverlassig helfen, Inhalte und Dienstangebote im Web zu\nfinden, eigentlich funktionieren. Der Kurs schlie\u00dft mit einem Ausblick auf das\nCloud Computing, das die Art und Weise, wie wir in Zukunft auf\nRechenleistungen zugreifen werden, grundlegend verandert.\n\n## Syllabus\n\n  * **Woche 1:** Einfuhrung in das WWW\n  * **Woche 2:** Woche 2\n  * **Woche 3:** Woche 3\n  * **Woche 4:** Woche 4\n  * **Exkurs:** Exkurs\n  * **Woche 5:** Woche 5\n  * **Woche 6:** Woche 6\n  * **Klausur:** Klausur\n\n",
        "name": "Web-Technologien",
        "provider": "openHPI",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.hpi.de/courses/www",
        "video_url": ""
    },
    {
        "date": "2013-07-15",
        "desc": "The discipline of user experience examines how we interact with the products and systems that surround us; everything from our kitchen appliances to smart phones. This course provides an overview of the general principles of user experience for the online world. You will learn about tools and techniques you can use to begin to create great user experiences. It will address the design of websites and customer interactions for the online world.User experience also involves balancing the needs of users with the business objectives, and resolving any conflicts between the two. Learn why it is so important to learn about your users, and be introduced to some useful tools to help do this, such as user profiling and personas. Students will also learn about the design process itself, and how user-centred design fits with traditional software development cycles.What will I learn?The characteristics of user experience design, usability, and user centred designThe factors that influence interface design, and how to balance these requirementsThe design streams that impact interface design, and design techniques from each stream:Information DesignInteraction DesignVisual DesignHow branding is an important part of user experienceThe importance of accessibility onlineThe importance of knowing your users and:What you need to knowHow to learn about themHow to communicate your findingsKey usability evaluation techniques, including:WalkthroughsUsability testingExpert reviewCompetitor analysisThis course requires approximately 2 - 4 hours of study per week, but can vary depending on the student. This includes watching videos, and taking quizzes and assessments.If you pass this course you'll receive a Certificate of Achievement. While this certificate isn't a formal qualification or credit, you can use it to demonstrate your interest in learning about this area to potential employers or educational institutions.Where could this lead me?If you're wondering what your future could look like in this area, here are some potential careers you could head towards.Social media managerWeb designerWeb developerWeb publisherWebmasterAssistant web designerAssistant web designerTechnical writerWebsite coordinatorWebmaster assistantSyllabusMODULE&nbsp;1:&nbsp;OVERVIEW OF USER EXPERIENCE&nbsp;MODULE&nbsp;2:&nbsp;THE ELEMENTS OF UX&nbsp;MODULE&nbsp;3:&nbsp;KNOWING YOUR USERS&nbsp;",
        "desc_html": "The discipline of user experience examines how we interact with the products\nand systems that surround us; everything from our kitchen appliances to smart\nphones. This course provides an overview of the general principles of user\nexperience for the online world. You will learn about tools and techniques you\ncan use to begin to create great user experiences. It will address the design\nof websites and customer interactions for the online world.\n\nUser experience also involves balancing the needs of users with the business\nobjectives, and resolving any conflicts between the two. Learn why it is so\nimportant to learn about your users, and be introduced to some useful tools to\nhelp do this, such as user profiling and personas. Students will also learn\nabout the design process itself, and how user-centred design fits with\ntraditional software development cycles.\n\n**What will I learn?**\n\n  * The characteristics of user experience design, usability, and user centred design\n  * The factors that influence interface design, and how to balance these requirements\n  * The design streams that impact interface design, and design techniques from each stream: \n    * Information Design\n    * Interaction Design\n    * Visual Design\n  * How branding is an important part of user experience\n  * The importance of accessibility online\n  * The importance of knowing your users and: \n    * What you need to know\n    * How to learn about them\n    * How to communicate your findings\n  * Key usability evaluation techniques, including: \n    * Walkthroughs\n    * Usability testing\n    * Expert review\n    * Competitor analysis\n\nThis course requires approximately 2 - 4 hours of study per week, but can vary\ndepending on the student. This includes watching videos, and taking quizzes\nand assessments.\n\nIf you pass this course you'll receive a Certificate of Achievement. While\nthis certificate isn't a formal qualification or credit, you can use it to\ndemonstrate your interest in learning about this area to potential employers\nor educational institutions.\n\n**Where could this lead me?**\n\nIf you're wondering what your future could look like in this area, here are\nsome potential careers you could head towards.\n\n  * Social media manager\n  * Web designer\n  * Web developer\n  * Web publisher\n  * Webmaster\n  * Assistant web designer\n  * Assistant web designer\n  * Technical writer\n  * Website coordinator\n  * Webmaster assistant\n\n## Syllabus\n\nMODULE 1: OVERVIEW OF USER EXPERIENCE\n\n|  \n---|---  \n  \nMODULE 2: THE ELEMENTS OF UX\n\n|  \n  \nMODULE 3: KNOWING YOUR USERS\n\n|  \n\n",
        "name": "User Experience for the Web",
        "provider": "Open2Study",
        "rating": "4",
        "reviews": "2",
        "university": [],
        "url": "https://www.open2study.com/courses/user-experience-for-the-web",
        "video_url": "https://www.youtube.com/embed/jRNQ3UQQKQw?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-07-02",
        "desc": "This is a course to teach basic Python programming skills through data analysis. The book and course materials are all free and licensed as Creative Commons. There is no complex math in the course, the programs are generally quite short, and the workload is no more than a few hours per week. By the time you complete the course, you will understand be able to read, parse, and manipulate data using Python. Hopefully at the end of the course you will like programming well enough to take another course in programming or web development. The free, reusable, and remixable course materials will be made available for you to download, use and reuse.",
        "desc_html": "This is a course to teach basic Python programming skills through data\nanalysis. The book and course materials are all free and licensed as Creative\nCommons. There is no complex math in the course, the programs are generally\nquite short, and the workload is no more than a few hours per week. By the\ntime you complete the course, you will understand be able to read, parse, and\nmanipulate data using Python. Hopefully at the end of the course you will like\nprogramming well enough to take another course in programming or web\ndevelopment. The free, reusable, and remixable course materials will be made\navailable for you to download, use and reuse.\n\n",
        "name": "Python for Informatics: Exploring Information",
        "provider": "CourseSites",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.coursesites.com/webapps/Bb-sites-course-creation-BBLEARN/courseHomepage.htmlx?course_id=_250824_1",
        "video_url": ""
    },
    {
        "date": "2013-06-18",
        "desc": "This is an introductory course in machine learning (ML) that covers the basic&nbsp;theory, algorithms, and applications. ML is a key technology in Big Data, and in many financial, medical, commercial, and scientific applications. It enables computational systems to adaptively improve their performance with experience accumulated from the observed data. ML has become one of the hottest fields of study today, taken up by undergraduate and graduate students from 15 different majors at Caltech. This course balances theory and practice, and covers the mathematical as well as the heuristic aspects. The lectures&nbsp;below&nbsp;follow each other in a story-like fashion:What is learning?Can a machine learn?How to do it?How to do it well?Take-home lessons.Syllabus&nbsp;Lecture 1:&nbsp;The Learning ProblemLecture 2:&nbsp;Is Learning Feasible?Lecture 3:&nbsp;The Linear Model ILecture 4:&nbsp;Error and NoiseLecture 5:&nbsp;Training versus TestingLecture 6:&nbsp;Theory of GeneralizationLecture 7:&nbsp;The VC DimensionLecture 8:&nbsp;Bias-Variance TradeoffLecture 9:&nbsp;The Linear Model IILecture 10:&nbsp;Neural NetworksLecture 11:&nbsp;OverfittingLecture 12:&nbsp;RegularizationLecture 13:&nbsp;ValidationLecture 14:&nbsp;Support Vector MachinesLecture 15:&nbsp;Kernel&nbsp;MethodsLecture 16:&nbsp;Radial Basis FunctionsLecture 17:&nbsp;Three Learning PrinciplesLecture 18:&nbsp;Epilogue&nbsp;",
        "desc_html": "This is an introductory course in machine learning (ML) that covers the basic\n**theory, algorithms, and applications**. ML is a key technology in Big Data,\nand in many financial, medical, commercial, and scientific applications. It\nenables computational systems to adaptively improve their performance with\nexperience accumulated from the observed data. ML has become one of the\nhottest fields of study today, taken up by undergraduate and graduate students\nfrom 15 different majors at Caltech. This course balances theory and practice,\nand covers the mathematical as well as the heuristic aspects. The lectures\nbelow follow each other in a story-like fashion:\n\n  * What is learning?\n  * Can a machine learn?\n  * How to do it?\n  * How to do it well?\n  * Take-home lessons.\n\n## Syllabus\n\n\n\n  *   \nLecture 1: **[The Learning\nProblem**](http://www.youtube.com/watch?v=mbyG85GZ0PI&hd=1)\n\n  * Lecture 2: **[Is Learning Feasible?**](http://www.youtube.com/watch?v=MEG35RDD7RA&hd=1)\n  * Lecture 3: **[The Linear Model I**](http://www.youtube.com/watch?v=FIbVs5GbBlQ&hd=1)\n  * Lecture 4: **[Error and Noise**](http://www.youtube.com/watch?v=L_0efNkdGMc&hd=1)\n  * Lecture 5: **[Training versus Testing**](http://www.youtube.com/watch?v=SEYAnnLazMU&hd=1)\n  * Lecture 6: **[Theory of Generalization**](http://www.youtube.com/watch?v=6FWRijsmLtE&hd=1)\n  * Lecture 7: **[The VC Dimension**](http://www.youtube.com/watch?v=Dc0sr0kdBVI&hd=1)\n  * Lecture 8: **[Bias-Variance Tradeoff**](http://www.youtube.com/watch?v=zrEyxfl2-a8&hd=1)\n  * Lecture 9: **[The Linear Model II**](http://www.youtube.com/watch?v=qSTHZvN8hzs&hd=1)\n  * Lecture 10: **[Neural Networks**](http://www.youtube.com/watch?v=IstrongMr93E-2c&hd=1)\n  * Lecture 11: **[Overfitting**](http://www.youtube.com/watch?v=EQWr3GGCdzw&hd=1)\n  * Lecture 12: **[Regularization**](http://www.youtube.com/watch?v=I-VfYXzC5ro&hd=1)\n  * Lecture 13: **[Validation**](http://www.youtube.com/watch?v=o7zzaKd0Lkk&hd=1)\n  * Lecture 14: **[Support Vector Machines**](http://www.youtube.com/watch?v=eHsErlPJWUU&hd=1)\n  * Lecture 15: **[Kernel Methods**](http://www.youtube.com/watch?v=XUj5JbQihlU&hd=1)\n  * Lecture 16: **[Radial Basis Functions**](http://www.youtube.com/watch?v=O8CfrnOPtLc&hd=1)\n  * Lecture 17: **[Three Learning Principles**](http://www.youtube.com/watch?v=EZBUDG12Nr0&hd=1)\n  * Lecture 18: **[Epilogue**](http://www.youtube.com/watch?v=ihLwJPHkMRY&hd=1)\n\n\n\n",
        "name": "Learning from Data (Introductory Machine Learning course)",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [
            "California Institute of Technology"
        ],
        "url": "http://work.caltech.edu/telecourse.html",
        "video_url": "https://www.youtube.com/embed/gPY-dL2EoD4?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-06-17",
        "desc": "Spiritual sequel to Peter Thiel'sCS183course\n    on startups. Bridges the gap between academic computer science and production\n    software engineering. Fast-paced introduction to key tools and techniques\n    (command line, dotfiles, text editor, distributed version control, debugging,\n    testing, documentation, reading code, deployments), featuring guest appearances\n    by senior engineers from successful startups and large-scale academic projects.\n    Over the course of the class, students will build a command line application,\n    expose it as a web service, and then link other students' applications\n    and services together to build an HTML5 mobile app. General principles\n    are illustrated through modern Javascript and the latest web technologies,\n    including Node, Backbone, Coffeescript, Bootstrap, Git, and Github.&nbsp;SyllabusThe syllabus is optimized to enable students to&nbsp;iterate on their final projects as soon as possible, with technical material in the first half of the class and entrepreneurial considerations&nbsp;in the second half.Introduction and QuickstartTools: VMs, IAAS/PAAS, Unix Command Line, Text Editors, DCVSFrontend: HTML/CSS/JS, Wireframing, Market ResearchBackend: SSJS, Databases, Frameworks, Data PipelinesAPIs: Client-side templating, HTTP, SOA/REST/JSON, API as BizDevDevops: Testing, Deployment, CI, Monitoring, PerformanceDev Scaling: DRY, Reading/Reviewing/Documenting Code, ParallelizingFounding: Conception, Composition, CapitalizationBusiness Scaling: Promotion, CAC/LTV/Funnel, Regulation, AccountingSummary and Demo Week",
        "desc_html": "****\n\n****Spiritual sequel to Peter Thiel's [CS183](http://blakemasters.tumblr.com/peter-thiels-cs183-startup) course on startups. Bridges the gap between academic computer science and production softwar****e engineering. Fast-paced introduction to key tools and techniques (command line, dotfiles, text editor, distributed version control, debugging, testing, documentation, reading code, deployments), featuring guest appearances by senior engineers from successful startups and large-scale academic projects. Over the course of the class, students will build a command line application, expose it as a web service, and then link other students' applications and services together to build an HTML5 mobile app. General principles are illustrated through modern Javascript and the latest web technologies, including Node, Backbone, Coffeescript, Bootstrap, Git, and Github. ************\n\n## Syllabus\n\nThe syllabus is optimized to enable students to iterate on their final\nprojects as soon as possible, with technical material in the first half of the\nclass and entrepreneurial considerations in the second half.  \n  \n\n  * Introduction and Quickstart\n  * Tools: VMs, IAAS/PAAS, Unix Command Line, Text Editors, DCVS  \n\n  * Frontend: HTML/CSS/JS, Wireframing, Market Research  \n\n  * Backend: SSJS, Databases, Frameworks, Data Pipelines  \n\n  * APIs: Client-side templating, HTTP, SOA/REST/JSON, API as BizDev  \n\n  * Devops: Testing, Deployment, CI, Monitoring, Performance  \n\n  * Dev Scaling: DRY, Reading/Reviewing/Documenting Code, Parallelizing  \n\n  * Founding: Conception, Composition, Capitalization  \n\n  * Business Scaling: Promotion, CAC/LTV/Funnel, Regulation, Accounting  \n\n  * Summary and Demo Week  \n\n",
        "name": "Startup Engineering",
        "provider": "Coursera",
        "rating": "4.6",
        "reviews": "5",
        "university": [
            "Stanford University"
        ],
        "url": "https://www.coursera.org/course/startup",
        "video_url": ""
    },
    {
        "date": "2013-06-03",
        "desc": "In this class, you will learn basic skills and concepts of computer programming in an object-oriented approach using Java.You will learn concepts like classes, methods and argument passing, loops, and general problem solving ability that will become building blocks to your programming skills.Why Take This Course?How to analyze and explain the behavior of programs involving the fundamental program constructs.How to write short programs that use the fundamental program constructs including standard conditional and iterative control structures.How to design and implement your own classes of Objects given desired attributes and behaviors.How to reason about class hierarchies.How to write good documentation so your code can be re-used.How to use a real-world programming environment and a debugger.Prerequisites and RequirementsNo prior programming experience and knowledge is assumed or needed.See the&nbsp;Technology Requirements&nbsp;for using UdacitySyllabusLesson 1: Introduction to Computers, Programming Languages, Algorithms, and the Java Programming EnvironmentLesson 2: Introduction to Classes and ObjectsLesson 3: GraphicsLesson 4: Fundamental Data TypesLesson 5: DecisionsLesson 6: IterationsLesson 7: Arrays, ArrayLists and Simple Array AlgorithmsLesson 8: Methods (Parameter Passing, Instance vs. Static Methods)Lesson 9: Inheritance",
        "desc_html": "In this class, you will learn basic skills and concepts of computer\nprogramming in an object-oriented approach using Java.\n\nYou will learn concepts like classes, methods and argument passing, loops, and\ngeneral problem solving ability that will become building blocks to your\nprogramming skills.\n\n**Why Take This Course?**\n\n  1. How to analyze and explain the behavior of programs involving the fundamental program constructs.\n  2. How to write short programs that use the fundamental program constructs including standard conditional and iterative control structures.\n  3. How to design and implement your own classes of Objects given desired attributes and behaviors.\n  4. How to reason about class hierarchies.\n  5. How to write good documentation so your code can be re-used.\n  6. How to use a real-world programming environment and a debugger.\n\n**Prerequisites and Requirements**\n\nNo prior programming experience and knowledge is assumed or needed.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n## Syllabus\n\n**Lesson 1: Introduction to Computers, Programming Languages, Algorithms, and the Java Programming Environment** **Lesson 2: Introduction to Classes and Objects** **Lesson 3: Graphics** **Lesson 4: Fundamental Data Types** **Lesson 5: Decisions** **Lesson 6: Iterations** **Lesson 7: Arrays, ArrayLists and Simple Array Algorithms** **Lesson 8: Methods (Parameter Passing, Instance vs. Static Methods)** **Lesson 9: Inheritance**\n\n",
        "name": "Introduction to Programming in Java",
        "provider": "Udacity",
        "rating": "3.8",
        "reviews": "5",
        "university": [
            "San Jose State University"
        ],
        "url": "https://www.udacity.com/course/cs046",
        "video_url": "https://www.youtube.com/embed/Wsp5Rrenoq4?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-05-20",
        "desc": "",
        "desc_html": "\n\n",
        "name": "Building a Basic Website",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of Massachusetts Amherst"
        ],
        "url": "http://www.umass.edu/journalism/mooc/",
        "video_url": ""
    },
    {
        "date": "2013-05-18",
        "desc": "Datenbanken bilden die Basis fast aller gro&szlig;en Software-Anwendungen. In Unternehmen, in der Forschung, im Web &ndash; &uuml;berall entstehen riesige Datenmengen, die es gilt sicher zu speichern und die effizient abfragbar sein m&uuml;ssen. In dem openHPI Kurs \"Datenmanagement mit SQL\" lernen wir die Grundlagen von modernen Datenbanksystemen kennen. Wir untersuchen ihren Aufbau, wir planen den Entwurf von Datenbanken und schlie&szlig;lich lernen wir die weltweit dominierende Anfragesprache SQL kennen. Mittels SQL kann man einfach formulierte aber sehr m&auml;chtige Anfragen an eine Datenbank senden. Diese Anfragen k&ouml;nnen Daten suchen, Daten filtern und sortieren, und schlie&szlig;lich Daten auf vielf&auml;ltige Weise analysieren. Hin und wieder verlassen wir diese Anwendersicht und erfahren wie ein Datenbanksystem die Nutzeranweisungen umsetzt, zum Beispiel um komplexe Operationen besonders effizient umzusetzen.SyllabusBegr&uuml;&szlig;ung:Begr&uuml;&szlig;ungWoche 1:Woche 1Woche 2:Woche 2Woche 3:Woche 3Woche 4:Woche 4Woche 5:Woche 5Bonus:BonusWoche 6:Woche 6Exkurs 1:Exkurs 1Exkurs 2:Exkurs 2Klausur:Klausur",
        "desc_html": "Datenbanken bilden die Basis fast aller gro\u00dfen Software-Anwendungen. In\nUnternehmen, in der Forschung, im Web - uberall entstehen riesige Datenmengen,\ndie es gilt sicher zu speichern und die effizient abfragbar sein mussen. In\ndem openHPI Kurs \"Datenmanagement mit SQL\" lernen wir die Grundlagen von\nmodernen Datenbanksystemen kennen. Wir untersuchen ihren Aufbau, wir planen\nden Entwurf von Datenbanken und schlie\u00dflich lernen wir die weltweit\ndominierende Anfragesprache SQL kennen. Mittels SQL kann man einfach\nformulierte aber sehr machtige Anfragen an eine Datenbank senden. Diese\nAnfragen konnen Daten suchen, Daten filtern und sortieren, und schlie\u00dflich\nDaten auf vielfaltige Weise analysieren. Hin und wieder verlassen wir diese\nAnwendersicht und erfahren wie ein Datenbanksystem die Nutzeranweisungen\numsetzt, zum Beispiel um komplexe Operationen besonders effizient umzusetzen.\n\n## Syllabus\n\n  * **Begru\u00dfung:** Begru\u00dfung\n  * **Woche 1:** Woche 1\n  * **Woche 2:** Woche 2\n  * **Woche 3:** Woche 3\n  * **Woche 4:** Woche 4\n  * **Woche 5:** Woche 5\n  * **Bonus:** Bonus\n  * **Woche 6:** Woche 6\n  * **Exkurs 1:** Exkurs 1\n  * **Exkurs 2:** Exkurs 2\n  * **Klausur:** Klausur\n\n",
        "name": "Datenmanagement mit SQL",
        "provider": "openHPI",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.hpi.de/courses/sql",
        "video_url": ""
    },
    {
        "date": "2013-04-23",
        "desc": "In this research-oriented graduate course, we will study algorithms for graph partitioning and clustering, constructions of expander graphs, and analysis of random walks. These are three topics that build on the same mathematical background and that have several important connections: for example it is possible to find graph clusters via random walks, and it is possible to use the linear programming approach to graph partitioning as a way to study random walks.We will study spectral graph theory, which explains how certain combinatorial properties of graphs are related to the eigenvalues and eigenvectors of the adjacency matrix, and we will use it describe and analyze spectral algorithms for graph partitioning and clustering. Spectral graph theory will recur as an important tool in the rest of the course. We we will also discuss other approaches to graph partitioning via linear programming and semidefinite programming. Then we will study constructions of expander graphs, which are graphs with very strong pseudorandomness properties, which are useful in many applications, including in cryptography, in complexity theory, in algorithms and data structures, and in coding theory. Finally, we will study the mixing time of random walks, a problem that comes up in several applications, including the analysis of the convergence time of certain randomized algorithms, such as the Metropolis algorithm.Prerequisites&nbsp;Linear algebra, discrete probability, and algorithms",
        "desc_html": "In this research-oriented graduate course, we will study algorithms for graph\npartitioning and clustering, constructions of expander graphs, and analysis of\nrandom walks. These are three topics that build on the same mathematical\nbackground and that have several important connections: for example it is\npossible to find graph clusters via random walks, and it is possible to use\nthe linear programming approach to graph partitioning as a way to study random\nwalks.\n\nWe will study spectral graph theory, which explains how certain combinatorial\nproperties of graphs are related to the eigenvalues and eigenvectors of the\nadjacency matrix, and we will use it describe and analyze spectral algorithms\nfor graph partitioning and clustering. Spectral graph theory will recur as an\nimportant tool in the rest of the course. We we will also discuss other\napproaches to graph partitioning via linear programming and semidefinite\nprogramming. Then we will study constructions of expander graphs, which are\ngraphs with very strong pseudorandomness properties, which are useful in many\napplications, including in cryptography, in complexity theory, in algorithms\nand data structures, and in coding theory. Finally, we will study the mixing\ntime of random walks, a problem that comes up in several applications,\nincluding the analysis of the convergence time of certain randomized\nalgorithms, such as the Metropolis algorithm.\n\n**Prerequisites**   \nLinear algebra, discrete probability, and algorithms\n\n",
        "name": "Graph Partitioning and Expanders",
        "provider": "NovoED",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Stanford University"
        ],
        "url": "http://venture-lab.org/expanders",
        "video_url": "https://www.youtube.com/embed/Kr9olRsABR8?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-04-08",
        "desc": "What are Probabilistic Graphical Models?Uncertainty is unavoidable in real-world applications: we can almost never predict with certainty what will happen in the future, and even in the present and the past, many important aspects of the world are not observed with certainty. Probability theory gives us the basic foundation to model our beliefs about the different possible states of the world, and to update these beliefs as new evidence is obtained. These beliefs can be combined with individual preferences to help guide our actions, and even in selecting which observations to make. While probability theory has existed since the 17th century, our ability to use it effectively on large problems involving many inter-related variables is fairly recent, and is due largely to the development of a framework known as Probabilistic Graphical Models (PGMs). This framework, which spans methods such as Bayesian networks and Markov random fields, uses ideas from discrete data structures in computer science to efficiently encode and manipulate probability distributions over high-dimensional spaces, often involving hundreds or even many thousands of variables. These methods have been used in an enormous range of application domains, which include: web search, medical and fault diagnosis, image understanding, reconstruction of biological networks, speech recognition, natural language processing, decoding of messages sent over a noisy communication channel, robot navigation, and many more. The PGM framework provides an essential tool for anyone who wants to learn how to reason coherently from limited and noisy observations.In this class, you will learn the basics of the PGM representation and how to construct them, using both human knowledge and machine learning techniques; you will also learn algorithms for using a PGM to reach conclusions about the world from limited and noisy evidence, and for making good decisions under uncertainty. The class covers both the theoretical underpinnings of the PGM framework and practical skills needed to apply these techniques to new problems.SyllabusTopics covered include:The Bayesian network and Markov network representation, including extensions for reasoning over domains that change over time and over domains with a variable number of entitiesReasoning and inference methods, including exact inference (variable elimination, clique trees) and approximate inference (belief propagation message passing, Markov chain Monte Carlo methods)Learning parameters and structure in PGMsUsing a PGM for decision making under uncertainty.There will be short weekly review quizzes and programming assignments (Octave/Matlab) focusing on case studies and applications of PGMs to real-world problems:Credit Scoring and FactorsModeling Genetic Inheritance and DiseaseMarkov Networks and Optical Character Recognition (OCR)Inference: Belief PropagationMarkov Chain Monte Carlo and Image SegmentationDecision Theory:&nbsp;Arrhythmogenic Right Ventricular DysplasiaConditional Random Field Learning for OCRStructure Learning for Identifying Skeleton StructureHuman Action Recognition with KinectTo prepare for the class in advance, you may consider reading through the following sections of the&nbsp;textbook (discount code DKPGM12)&nbsp;by Daphne and Nir Friedman:Introduction and Overview.&nbsp;Chapters 1, 2.1.1 - 2.1.4, 4.2.1.Bayesian Network Fundamentals.&nbsp;Chapters 3.1 - 3.3.Markov Network Fundamentals.&nbsp;Chapters 4.1, 4.2.2, 4.3.1, 4.4, 4.6.1.Structured CPDs.&nbsp;Chapters 5.1 - 5.5.Template Models.&nbsp;Chapters 6.1 - 6.4.1.These will be covered in the first two weeks of the online class.The slides for the whole class can be found&nbsp;here.",
        "desc_html": "**What are Probabilistic Graphical Models?**\n\nUncertainty is unavoidable in real-world applications: we can almost never\npredict with certainty what will happen in the future, and even in the present\nand the past, many important aspects of the world are not observed with\ncertainty. Probability theory gives us the basic foundation to model our\nbeliefs about the different possible states of the world, and to update these\nbeliefs as new evidence is obtained. These beliefs can be combined with\nindividual preferences to help guide our actions, and even in selecting which\nobservations to make. While probability theory has existed since the 17th\ncentury, our ability to use it effectively on large problems involving many\ninter-related variables is fairly recent, and is due largely to the\ndevelopment of a framework known as Probabilistic Graphical Models (PGMs).\nThis framework, which spans methods such as Bayesian networks and Markov\nrandom fields, uses ideas from discrete data structures in computer science to\nefficiently encode and manipulate probability distributions over high-\ndimensional spaces, often involving hundreds or even many thousands of\nvariables. These methods have been used in an enormous range of application\ndomains, which include: web search, medical and fault diagnosis, image\nunderstanding, reconstruction of biological networks, speech recognition,\nnatural language processing, decoding of messages sent over a noisy\ncommunication channel, robot navigation, and many more. The PGM framework\nprovides an essential tool for anyone who wants to learn how to reason\ncoherently from limited and noisy observations.\n\nIn this class, you will learn the basics of the PGM representation and how to\nconstruct them, using both human knowledge and machine learning techniques;\nyou will also learn algorithms for using a PGM to reach conclusions about the\nworld from limited and noisy evidence, and for making good decisions under\nuncertainty. The class covers both the theoretical underpinnings of the PGM\nframework and practical skills needed to apply these techniques to new\nproblems.\n\n## Syllabus\n\n**Topics covered include:**\n\n  1. The Bayesian network and Markov network representation, including extensions for reasoning over domains that change over time and over domains with a variable number of entities\n  2. Reasoning and inference methods, including exact inference (variable elimination, clique trees) and approximate inference (belief propagation message passing, Markov chain Monte Carlo methods)\n  3. Learning parameters and structure in PGMs\n  4. Using a PGM for decision making under uncertainty.\n\nThere will be short weekly review quizzes and programming assignments\n(Octave/Matlab) focusing on case studies and applications of PGMs to real-\nworld problems:\n\n  1. Credit Scoring and Factors\n  2. Modeling Genetic Inheritance and Disease\n  3. Markov Networks and Optical Character Recognition (OCR)\n  4. Inference: Belief Propagation\n  5. Markov Chain Monte Carlo and Image Segmentation\n  6. Decision Theory: Arrhythmogenic Right Ventricular Dysplasia\n  7. Conditional Random Field Learning for OCR\n  8. Structure Learning for Identifying Skeleton Structure\n  9. Human Action Recognition with Kinect\n\nTo prepare for the class in advance, you may consider reading through the\nfollowing sections of the [textbook (discount code\nDKPGM12)](http://mitpress.mit.edu/9780262013192) by Daphne and Nir Friedman:\n\n  1. **Introduction and Overview. **Chapters 1, 2.1.1 - 2.1.4, 4.2.1.\n  2. **Bayesian Network Fundamentals. **Chapters 3.1 - 3.3.\n  3. **Markov Network Fundamentals. **Chapters 4.1, 4.2.2, 4.3.1, 4.4, 4.6.1.\n  4. **Structured CPDs. **Chapters 5.1 - 5.5.\n  5. **Template Models. **Chapters 6.1 - 6.4.1.\n\nThese will be covered in the first two weeks of the online class.\n\nThe slides for the whole class can be found [here](http://spark-\nuniversity.s3.amazonaws.com/stanford-pgm/PGM_slides.zip).\n\n",
        "name": "Probabilistic Graphical Models",
        "provider": "Coursera",
        "rating": "4.25",
        "reviews": "4",
        "university": [
            "Stanford University"
        ],
        "url": "https://www.coursera.org/course/pgm",
        "video_url": ""
    },
    {
        "date": "2013-04-02",
        "desc": "",
        "desc_html": "\n\n",
        "name": "Introduction aux r\u00e9seaux cellulaires",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Institut Mines-T\u00e9l\u00e9com"
        ],
        "url": "https://courses.mooc.telecom-bretagne.eu/course/introductions-aux-reseaux-cellulaires/",
        "video_url": "https://www.youtube.com/embed/pDl7VMdO8xw?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-03-25",
        "desc": "The goal of this course is to introduce you to the basics of how computation\nhas impacted the entire workflow of photography (i.e., from how images\nare captured, manipulated and collaborated on, and shared). &nbsp;The course begins with a conceptualization of&nbsp;photography as drawing\nwith light and the capturing of light to form images/videos. &nbsp;You\nwill learn about and understand how the optics and the sensor within a\ncamera are generalized, as well as learn about and understand how the lighting\nand other aspects of the environment are also generalized through computation\nto capture novel images.&nbsp;Pre- and post-processing techniques used to manipulate and improve images\nwill be discussed. &nbsp;Activities in this course are selected to give\nyou first hand experience with the power of the web and the Internet for\nboth analyzing and sharing images. &nbsp;This course is interdisciplinary and draws upon concepts and principles\nfrom computer vision, computer graphics, image processing, mathematics\nand optics.We look forward to your engagement and participation with both the course\nand its discussion forums.About the TADenis Lantsman is the TA for the class. Denis is a graduate of Harvey\nMudd College, and is currently finishing his MS in Machine Learning at\nGeorgia Tech. He is responsible for managing the coursera site, monitoring\nthe forums for student feedback, creating the homework assignments and\nquizzes, as well as recording weekly tutorials to help students with their\nprogramming.SyllabusWeek 0 (Module 0): &nbsp;Introductions with an overview of the course\n    structure and content.&nbsp; Topics covered in this module include a description\n    of what is Computational Photography (i.e., whereby examples of dual photography\n    and panoramas are described) and reasons for studying this emerging interdisciplinary\n    field .Week 1 (Module 1): &nbsp;Overview of what is a digital image.&nbsp; Topics\n    covered in this module are image processing and filtering, with emphases\n    placed upon point processes, smoothing, convolution, cross-correlation,\n    gradients and edges.Week 2 (Module 2): &nbsp;Overview of cameras with emphases placed upon\n    the pinhole camera and optics (e. g., lenses, focal length), exposure time\n    and sensors.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Week 3 (Module 3): &nbsp;Feature detection, matching and correspondence.\n    The panorama pipeline and some examples. HDR and tone mapping.Week 4 (Module 4):&nbsp;Overview of light fields, texture synthesis, image\n    retargeting, video, advanced topics.",
        "desc_html": "The goal of this course is to introduce you to the basics of how computation\nhas impacted the entire workflow of photography (i.e., from how images are\ncaptured, manipulated and collaborated on, and shared).  \n  \nThe course begins with a conceptualization of photography as drawing with\nlight and the capturing of light to form images/videos.  You will learn about\nand understand how the optics and the sensor within a camera are generalized,\nas well as learn about and understand how the lighting and other aspects of\nthe environment are also generalized through computation to capture novel\nimages.  \n  \nPre- and post-processing techniques used to manipulate and improve images will\nbe discussed.  Activities in this course are selected to give you first hand\nexperience with the power of the web and the Internet for both analyzing and\nsharing images.  \n  \nThis course is interdisciplinary and draws upon concepts and principles from\ncomputer vision, computer graphics, image processing, mathematics and optics.  \n  \nWe look forward to your engagement and participation with both the course and\nits discussion forums.  \n  \n**About the TA**   \nDenis Lantsman is the TA for the class. Denis is a graduate of Harvey Mudd\nCollege, and is currently finishing his MS in Machine Learning at Georgia\nTech. He is responsible for managing the coursera site, monitoring the forums\nfor student feedback, creating the homework assignments and quizzes, as well\nas recording weekly tutorials to help students with their programming.\n\n## Syllabus\n\nWeek 0 (Module 0):  Introductions with an overview of the course structure and\ncontent.  Topics covered in this module include a description of what is\nComputational Photography (i.e., whereby examples of dual photography and\npanoramas are described) and reasons for studying this emerging\ninterdisciplinary field .\n\nWeek 1 (Module 1):  Overview of what is a digital image.  Topics covered in\nthis module are image processing and filtering, with emphases placed upon\npoint processes, smoothing, convolution, cross-correlation, gradients and\nedges.\n\nWeek 2 (Module 2):  Overview of cameras with emphases placed upon the pinhole\ncamera and optics (e. g., lenses, focal length), exposure time and sensors.  \n\nWeek 3 (Module 3):  Feature detection, matching and correspondence. The\npanorama pipeline and some examples. HDR and tone mapping.\n\nWeek 4 (Module 4): Overview of light fields, texture synthesis, image\nretargeting, video, advanced topics.\n\n",
        "name": "Computational Photography",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Georgia Institute of Technology"
        ],
        "url": "https://www.coursera.org/course/compphoto",
        "video_url": ""
    },
    {
        "date": "2013-03-25",
        "desc": "Most programs are used for years and are worked on by many people. Having programs that are easy to understand is essential, in the same way that a well-organized essay is far easier to follow than a disorganized one. We\u2019ll show you an approach that helps to break down problems into smaller tasks that are easier to both solve and read.&nbsp;This design approach also makes it more straightforward to find and fix flaws. You'll be introduced to the tools that professional programmers use; they're called \"testing\" and \"debugging\".&nbsp;For most complex problems, there are many programs that solve them. Some are inherently slower than others. You'll learn how to read two programs and compare them for efficiency.",
        "desc_html": "Most programs are used for years and are worked on by many people. Having\nprograms that are easy to understand is essential, in the same way that a\nwell-organized essay is far easier to follow than a disorganized one. We\u2019ll\nshow you an approach that helps to break down problems into smaller tasks that\nare easier to both solve and read.\n\n\n\nThis design approach also makes it more straightforward to find and fix flaws.\nYou'll be introduced to the tools that professional programmers use; they're\ncalled \"testing\" and \"debugging\".\n\n\n\nFor most complex problems, there are many programs that solve them. Some are\ninherently slower than others. You'll learn how to read two programs and\ncompare them for efficiency.\n\n",
        "name": "Learn to Program: Crafting Quality Code",
        "provider": "Coursera",
        "rating": "4.5",
        "reviews": "4",
        "university": [
            "University of Toronto"
        ],
        "url": "https://www.coursera.org/course/programming2",
        "video_url": ""
    },
    {
        "date": "2013-03-21",
        "desc": "The Web has become an object of our daily life and the amount of information in the web is ever growing. Besides plain texts, especially multimedia information such as graphics, audio or video have become a predominant part of the web's information traffic. But, how can we find useful information within this huge information space? Traditional search engines will reach the limits of their power, when it comes to understanding information content. The Semantic Web is an extension of the traditional web in the sense that information in the form of natural language text in the web will be complemented by its explicit semantics based on a formal knowledge representation. Thus, the meaning of information expressed in natural language can be accessed in an automated way and interpreted correctly, i.e. it can be understood by machines.Semantic Web technologies enable the explicit representation of knowledge and its further processing to deduce new knowledge from implicitly hidden knowledge. Thus, information access and information search will be more precise and more complete compared to today's traditional information retrieval technology. Previously heterogeneous data can be mapped and combined based on common knowledge representation and schemata easily extended in a dynamic way.In this course, you will learn the fundamentals of Semantic Web technologies. You will learn how to represent knowledge and how to access and benefit from semantic data on the Web.SyllabusWeek 1:Introduction to the Semantic WebWeek 2:Identifying Things with URI and RDFWeek 3:Querying RDF(S) with SPARQLExcursus:Semantic (Meta) Data and the WebWeek 4:Knowledge Representation IWeek 5:Knowledge Representation IIWeek 6:Applications in the Web of DataFinal Exams:Final Exams",
        "desc_html": "The Web has become an object of our daily life and the amount of information\nin the web is ever growing. Besides plain texts, especially multimedia\ninformation such as graphics, audio or video have become a predominant part of\nthe web's information traffic. But, how can we find useful information within\nthis huge information space? Traditional search engines will reach the limits\nof their power, when it comes to understanding information content. The\nSemantic Web is an extension of the traditional web in the sense that\ninformation in the form of natural language text in the web will be\ncomplemented by its explicit semantics based on a formal knowledge\nrepresentation. Thus, the meaning of information expressed in natural language\ncan be accessed in an automated way and interpreted correctly, i.e. it can be\nunderstood by machines.\n\nSemantic Web technologies enable the explicit representation of knowledge and\nits further processing to deduce new knowledge from implicitly hidden\nknowledge. Thus, information access and information search will be more\nprecise and more complete compared to today's traditional information\nretrieval technology. Previously heterogeneous data can be mapped and combined\nbased on common knowledge representation and schemata easily extended in a\ndynamic way.\n\nIn this course, you will learn the fundamentals of Semantic Web technologies.\nYou will learn how to represent knowledge and how to access and benefit from\nsemantic data on the Web.\n\n## Syllabus\n\n  * **Week 1:** Introduction to the Semantic Web\n  * **Week 2:** Identifying Things with URI and RDF\n  * **Week 3:** Querying RDF(S) with SPARQL\n  * **Excursus:** Semantic (Meta) Data and the Web\n  * **Week 4:** Knowledge Representation I\n  * **Week 5:** Knowledge Representation II\n  * **Week 6:** Applications in the Web of Data\n  * **Final Exams:** Final Exams\n\n",
        "name": "Semantic Web Technologies",
        "provider": "openHPI",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.hpi.de/courses/semanticweb",
        "video_url": "https://www.youtube.com/embed/nI372ilNunE?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-03-12",
        "desc": "When developing chips it is essential that they get verified thoroughly because it is very hard or impossible to fix them once they have been manufactured. In this class, you will learn how to program verification environments that verify chip functionality efficiently, as well as understand and leverage automation such as constrained random test generation and improve code reuse leveraging a standardized methodology.Why Take This Course?This course will teach you how to think like a verification engineer. It will show the software development aspects you need to know to ensure chips are working as expected. You will learn how to implement verification environments.Prerequisites and RequirementsProgramming experience including object-oriented programming. Data &amp; Control structure.&nbsp;This course is developed by Cadence Design Systems, a global leader in electronic design automation.Cadence&reg; software, hardware, IP, and services help customers around the world to overcome a range of technical and economic hurdles.See the&nbsp;Technology Requirements&nbsp;for using UdacitySyllabusLesson 1:&nbsp;Introduction to Hardware VerificationLesson 2:&nbsp;Basic stimulus modeling and generationLesson 3:&nbsp;Interfacing to the Hardware ModelLesson 4:&nbsp;Monitoring and Functional CoverageLesson 5:&nbsp;CheckingLesson 6:&nbsp;Aspect Oriented ProgrammingLesson 7:&nbsp;Reuse MethodologyLesson 8:&nbsp;DebuggingLesson 9:&nbsp;Conclusion and Exam",
        "desc_html": "When developing chips it is essential that they get verified thoroughly\nbecause it is very hard or impossible to fix them once they have been\nmanufactured. In this class, you will learn how to program verification\nenvironments that verify chip functionality efficiently, as well as understand\nand leverage automation such as constrained random test generation and improve\ncode reuse leveraging a standardized methodology.\n\n**Why Take This Course?**\n\nThis course will teach you how to think like a verification engineer. It will\nshow the software development aspects you need to know to ensure chips are\nworking as expected. You will learn how to implement verification\nenvironments.\n\n**Prerequisites and Requirements**\n\nProgramming experience including object-oriented programming. Data & Control\nstructure.  \n  \n  \nThis course is developed by Cadence Design Systems, a global leader in\nelectronic design automation.[Cadence\u00ae\nsoftware](http://www.cadence.com/solutions/ev/Pages/default.aspx), hardware,\nIP, and services help customers around the world to overcome a range of\ntechnical and economic hurdles.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n## Syllabus\n\nLesson 1: Introduction to Hardware Verification\n\nLesson 2: Basic stimulus modeling and generation\n\nLesson 3: Interfacing to the Hardware Model\n\nLesson 4: Monitoring and Functional Coverage\n\nLesson 5: Checking\n\nLesson 6: Aspect Oriented Programming\n\nLesson 7: Reuse Methodology\n\nLesson 8: Debugging\n\nLesson 9: Conclusion and Exam\n\n",
        "name": "Functional Hardware Verification",
        "provider": "Udacity",
        "rating": "5",
        "reviews": "1",
        "university": [
            "Cadence"
        ],
        "url": "http://www.udacity.com/overview/Course/cs348/CourseRev/1",
        "video_url": "https://www.youtube.com/embed/PZHh2O6iqj8?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-03-12",
        "desc": "Estamos inmersos en una \u00e9poca de cambio que afectan a toda la sociedad (personas, organizaciones, productos y servicios); uno de los cambios m\u00e1s fascinantes, que m\u00e1s moldes est\u00e1n rompiendo y que est\u00e1 cambiando enfoques que hasta hace poco eran inamovibles, es lo que se conoce como el movimiento libre. En este curso de introducci\u00f3n analizaremos dos de sus principales impulsores: el software libre y el conocimiento en abierto; as\u00ed mismo participaremos en este movimiento utilizando software libre (blog y wikis) para construir conocimiento en abierto tanto de forma individual como corporativa.",
        "desc_html": "Estamos inmersos en una \u00e9poca de cambio que afectan a toda la sociedad\n(personas, organizaciones, productos y servicios); uno de los cambios m\u00e1s\nfascinantes, que m\u00e1s moldes est\u00e1n rompiendo y que est\u00e1 cambiando enfoques que\nhasta hace poco eran inamovibles, es lo que se conoce como el movimiento\nlibre. En este curso de introducci\u00f3n analizaremos dos de sus principales\nimpulsores: el software libre y el conocimiento en abierto; as\u00ed mismo\nparticiparemos en este movimiento utilizando software libre (blog y wikis)\npara construir conocimiento en abierto tanto de forma individual como\ncorporativa.\n\n",
        "name": "Software libre y conocimiento en abierto",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.miriadax.net/web/soft_libre_y_conocimiento",
        "video_url": "https://www.youtube.com/embed/7q637mFa-pg?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-03-11",
        "desc": "This class will teach you about the basic principles of 3D computer graphics: meshes, transforms, cameras, materials, lighting, and animation.Why Take This Course?By the end of this class you will know enough to make an animated 3D demo program that runs in a web browser, while also understanding the basic principles of how realistic computer images are generated.You will also have a portfolio of small interactive programs that run in any web browser that supports WebGL.Prerequisites and RequirementsKnowing how to program in some language is all you&rsquo;ll need to get started. Some knowledge of JavaScript is useful later on if you wish to make your projects more interactive and engaging. Familiarity with vectors and matrices will ease your way but is not critical.To be able to see the interactive demos and do programming assignments you need a browser that supportsWebGL&nbsp;technology. An up to date version of Chrome or Firefox will work (see our&nbsp;FAQ&nbsp;for more information). You can test if your browser supports this technology by visiting the&nbsp;WebGL project homepage.Almost all programming will be done in JavaScript using&nbsp;three.js library/API.About AutodeskThis course is developed in conjunction with Autodesk, a worldwide leader in 3D design, engineering, and entertainment software.&nbsp;http://www.autodesk.comSee the&nbsp;Technology Requirements&nbsp;for using UdacitySyllabusLesson 1: IntroductionMotivation and a trip down the graphics pipeline, laying out the fundamental processesLesson 2: Points, Vectors, and MeshesThe basics of 3D geometry definitionLesson 3: Colors and MaterialsColor representation, material computations, transparencyLesson 4: TransformsTranslation, scale, rotate and how to properly combine all theseLesson 5: MatricesTransform representation and how to fully control theseLesson 6: LightsDirectional and point light sourcesLesson 7: CamerasHow the camera is definedLesson 8: Textures and ReflectionsColor and opacity textures, along with reflection and normal mappingLesson 9: Shader ProgrammingAn introduction to programming vertex and pixel shadersLesson 10: Interaction and AnimationHow to select and make objects move",
        "desc_html": "This class will teach you about the basic principles of 3D computer graphics:\nmeshes, transforms, cameras, materials, lighting, and animation.\n\n**Why Take This Course?**\n\nBy the end of this class you will know enough to make an animated 3D demo\nprogram that runs in a web browser, while also understanding the basic\nprinciples of how realistic computer images are generated.\n\nYou will also have a portfolio of small interactive programs that run in any\nweb browser that supports WebGL.\n\n**Prerequisites and Requirements**\n\nKnowing how to program in some language is all you'll need to get started.\nSome knowledge of JavaScript is useful later on if you wish to make your\nprojects more interactive and engaging. Familiarity with vectors and matrices\nwill ease your way but is not critical.\n\nTo be able to see the interactive demos and do programming assignments you\nneed a browser that supportsWebGL technology. An up to date version of Chrome\nor Firefox will work (see our [FAQ](https://www.udacity.com/tech-requirements)\nfor more information). You can test if your browser supports this technology\nby visiting the [WebGL project homepage](http://get.webgl.org/).\n\nAlmost all programming will be done in JavaScript using [three.js\nlibrary/API](http://en.wikipedia.org/wiki/Threejs).\n\n  \nAbout Autodesk\n\nThis course is developed in conjunction with Autodesk, a worldwide leader in\n3D design, engineering, and entertainment software.\n[http://www.autodesk.com](http://www.autodesk.com/)\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n## Syllabus\n\n**Lesson 1: Introduction**\n\nMotivation and a trip down the graphics pipeline, laying out the fundamental\nprocesses\n\n**Lesson 2: Points, Vectors, and Meshes**\n\nThe basics of 3D geometry definition\n\n**Lesson 3: Colors and Materials**\n\nColor representation, material computations, transparency\n\n**Lesson 4: Transforms**\n\nTranslation, scale, rotate and how to properly combine all these\n\n**Lesson 5: Matrices**\n\nTransform representation and how to fully control these\n\n**Lesson 6: Lights**\n\nDirectional and point light sources\n\n**Lesson 7: Cameras**\n\nHow the camera is defined\n\n**Lesson 8: Textures and Reflections**\n\nColor and opacity textures, along with reflection and normal mapping\n\n**Lesson 9: Shader Programming**\n\nAn introduction to programming vertex and pixel shaders\n\n**Lesson 10: Interaction and Animation**\n\nHow to select and make objects move\n\n",
        "name": "Interactive 3D Graphics",
        "provider": "Udacity",
        "rating": "5",
        "reviews": "2",
        "university": [
            "Autodesk"
        ],
        "url": "http://www.udacity.com/overview/Course/cs291/CourseRev/1",
        "video_url": "https://www.youtube.com/embed/Vl0hmKg1pVw?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-03-04",
        "desc": "This course focuses on&nbsp;pattern-oriented software architecture&nbsp;for concurrent and networked software.&nbsp;Concurrent&nbsp;software can simultaneously run multiple computations that potentially interact with each other.&nbsp;Networked&nbsp;defines protocols that enables computing devices to exchange messages and perform services remotely. The topics in this course are timely since the advent of multi-core and distributed-core processors--coupled with ubiquitous wireless and wireline connectivity--is increasing the demand for researchers and practitioners who understand how to successfully develop and deploy concurrent and networked software.Despite continuous improvements in processors and networks during the past four decades, however, developing quality concurrent and networked software remains hard; developing quality&nbsp;reusable&nbsp;concurrent and networked software is even harder. The principles, methods, and skills required to develop such software can be greatly enhanced by understanding how to create and apply patterns and frameworks. A&nbsp;pattern&nbsp;describes a reusable solution to a commonly occurring problem within a particular context. When related patterns are woven together they form a&nbsp;pattern language&nbsp;that provides a vocabulary and a process for the orderly resolution of software development problems. A&nbsp;framework&nbsp;is an integrated set of software components that collaborate to provide a reusable architecture for a family of related applications. Frameworks can also be viewed as concrete realizations of pattern languages that facilitate direct reuse of design and code.This course describes how to apply patterns and frameworks to alleviate many accidental and inherent complexities associated with developing and deploying concurrent and networked software. These patterns and frameworks have been used successfully in many domains, including telecom/datacom, mobile devices, electronic medical imaging, network management, aerospace, avionics, automation, online gaming, and financial systems. Over the coming weeks and months I'll illustrate by example how patterns and frameworks simplify and enhance the development of concurrent and networked software via the use of:Object-oriented design concepts and notations -- such as encapsulation, abstraction, polymorphism, extensibility, and the Unified Modeling Language (UML).Object-oriented programming language features -- such as classes, inheritance, dynamic binding, and parameterized types available in languages like Java, C++, and C#.Middleware -- which is infrastructure software residing between applications and the underlying operating systems, networks, and hardware that encapsulates heterogeneity and enables control over key end-to-end quality-of-service properties, such as dependability and security.Operating system mechanisms -- such as event demultiplexing, multi-threading, multi-processing, and dynamic linking.We'll explore several case studies from the domains of mobile apps, web servers, object request brokers, avionic control systems, and expression tree processing to showcase a time-tested pattern-oriented software design and programming method for concurrent and networked software.SyllabusThe course is organized as follows:Section 0: Overview of all the topics covered in the course.&nbsp;This material is designed to help you visualize the motivations for--and challenges of--of concurrent and networked software. We also summarize how patterns and frameworks help address key challenges of concurrent and networked software.Section 1: Introduction to concurrency and networking, which provides background info pertaining largely to the OS and middleware layers. We discuss key design dimensions of concurrent and networked software, as well as review common operating system programming mechanisms and Android programming mechanisms. This part focuses on concepts and is generally independent of programming language.Section 2: Overview of patterns and frameworks, which focuses on pattern-oriented software architecture, with an emphasis on concurrent and networked software. We explore key pattern and framework concepts, relationships, and examples, as well as evaluate the pros and cons of patterns and frameworks. Small code examples are shown throughout using C++ and Java, though this section concentrates more on design rather than programming.Section 3: Applying patterns and frameworks to develop concurrent and networked software, which examines lots of code. An open-source web server is used as a running example to illustrate patterns and frameworks pertaining to service access, communication, synchronous event handling, connection establishment, service initialization, service configuration and activation, concurrency and synchronization, and asynchronous event handling. These examples are in C++ using&nbsp;ACE.Appendix: Presents a case study that applies many \"Gang of Four\" patterns&nbsp;that aren't directly related to concurrent and networked software. Evaluates the limitations with algorithm design and shows how pattern-oriented design alleviates these limtations. The examples are largely in C++, again with some Java examples to show how pattern-oriented design simplifies portability across programming languages.",
        "desc_html": "This course focuses on [pattern-oriented software\narchitecture](http://www.dre.vanderbilt.edu/~schmidt/POSA/) for concurrent and\nnetworked software.\n[Concurrent](http://en.wikipedia.org/wiki/Concurrency_\\(computer_science\\))\nsoftware can simultaneously run multiple computations that potentially\ninteract with each other.\n[Networked](http://en.wikipedia.org/wiki/Computer_network) defines protocols\nthat enables computing devices to exchange messages and perform services\nremotely. The topics in this course are timely since the advent of multi-core\nand distributed-core processors--coupled with ubiquitous wireless and wireline\nconnectivity--is increasing the demand for researchers and practitioners who\nunderstand how to successfully develop and deploy concurrent and networked\nsoftware.  \n\nDespite continuous improvements in processors and networks during the past\nfour decades, however, developing quality concurrent and networked software\nremains hard; developing quality reusable concurrent and networked software is\neven harder. The principles, methods, and skills required to develop such\nsoftware can be greatly enhanced by understanding how to create and apply\npatterns and frameworks. A\n[pattern](http://en.wikipedia.org/wiki/Software_design_pattern) describes a\nreusable solution to a commonly occurring problem within a particular context.\nWhen related patterns are woven together they form a [pattern\nlanguage](http://en.wikipedia.org/wiki/Pattern_language) that provides a\nvocabulary and a process for the orderly resolution of software development\nproblems. A [framework](http://en.wikipedia.org/wiki/Software_framework) is an\nintegrated set of software components that collaborate to provide a reusable\narchitecture for a family of related applications. Frameworks can also be\nviewed as concrete realizations of pattern languages that facilitate direct\nreuse of design and code.\n\nThis course describes how to apply patterns and frameworks to alleviate many\naccidental and inherent complexities associated with developing and deploying\nconcurrent and networked software. These patterns and frameworks have been\nused successfully in many domains, including telecom/datacom, mobile devices,\nelectronic medical imaging, network management, aerospace, avionics,\nautomation, online gaming, and financial systems. Over the coming weeks and\nmonths I'll illustrate by example how patterns and frameworks simplify and\nenhance the development of concurrent and networked software via the use of:\n\n  * Object-oriented design concepts and notations -- such as encapsulation, abstraction, polymorphism, extensibility, and the Unified Modeling Language (UML).\n\n  * Object-oriented programming language features -- such as classes, inheritance, dynamic binding, and parameterized types available in languages like Java, C++, and C#.\n\n  * Middleware -- which is infrastructure software residing between applications and the underlying operating systems, networks, and hardware that encapsulates heterogeneity and enables control over key end-to-end quality-of-service properties, such as dependability and security.\n\n  * Operating system mechanisms -- such as event demultiplexing, multi-threading, multi-processing, and dynamic linking.\n\nWe'll explore several case studies from the domains of mobile apps, web\nservers, object request brokers, avionic control systems, and expression tree\nprocessing to showcase a time-tested pattern-oriented software design and\nprogramming method for concurrent and networked software.\n\n## Syllabus\n\nThe course is organized as follows:\n\n  * **Section 0: Overview of all the topics covered in the course.** This material is designed to help you visualize the motivations for--and challenges of--of concurrent and networked software. We also summarize how patterns and frameworks help address key challenges of concurrent and networked software.\n\n  * **Section 1: Introduction to concurrency and networking**, which provides background info pertaining largely to the OS and middleware layers. We discuss key design dimensions of concurrent and networked software, as well as review common operating system programming mechanisms and Android programming mechanisms. This part focuses on concepts and is generally independent of programming language.\n\n  * **Section 2: Overview of patterns and frameworks**, which focuses on pattern-oriented software architecture, with an emphasis on concurrent and networked software. We explore key pattern and framework concepts, relationships, and examples, as well as evaluate the pros and cons of patterns and frameworks. Small code examples are shown throughout using C++ and Java, though this section concentrates more on design rather than programming.\n\n  * **Section 3: Applying patterns and frameworks to develop concurrent and networked software, which examines lots of code**. An open-source web server is used as a running example to illustrate patterns and frameworks pertaining to service access, communication, synchronous event handling, connection establishment, service initialization, service configuration and activation, concurrency and synchronization, and asynchronous event handling. These examples are in C++ using [ACE](http://www.dre.vanderbilt.edu/~schmidt/ACE.html).\n\n  * **Appendix: Presents a case study that applies many \"Gang of Four\" patterns** that aren't directly related to concurrent and networked software. Evaluates the limitations with algorithm design and shows how pattern-oriented design alleviates these limtations. The examples are largely in C++, again with some Java examples to show how pattern-oriented design simplifies portability across programming languages.\n\n",
        "name": "Pattern-Oriented Software Architectures for Concurrent and Networked Software",
        "provider": "Coursera",
        "rating": "5",
        "reviews": "2",
        "university": [
            "Vanderbilt University"
        ],
        "url": "https://www.coursera.org/course/posasoftware",
        "video_url": ""
    },
    {
        "date": "2013-02-25",
        "desc": "El curso que est\u00e1 planteado para ser eminentemente pr\u00e1ctico, introduce al alumno, cuyo perfil esperado es un profesor de cualquier nivel educativo (Educaci\u00f3n Infantil,\u00a0 Primaria, Secundaria, Universidad o M\u00e1ster) en las herramientas y metodolog\u00edas que las nuevas tecnolog\u00edas de la Inform\u00e1tica Educativa le pueden aportar para mejorar su docencia. En particular, se espera que cualquier alumno aprenda de este curso qu\u00e9 es la Inform\u00e1tica Educativa, c\u00f3mo las nuevas tecnolog\u00edas les pueden ayudar en su docencia como otra herramienta m\u00e1s para un profesor que en el siglo XXI sabe combinar todos los recursos que el mundo digital le ofrece, tanto para crear nuevos contenidos multimedia interactivos como para evaluar de forma autom\u00e1tica o semiautom\u00e1tica contenidos / competencias en varios dispositivos.",
        "desc_html": "El curso que est\u00e1 planteado para ser eminentemente pr\u00e1ctico, introduce al\nalumno, cuyo perfil esperado es un profesor de cualquier nivel educativo\n(Educaci\u00f3n Infantil,\u00a0 Primaria, Secundaria, Universidad o M\u00e1ster) en las\nherramientas y metodolog\u00edas que las nuevas tecnolog\u00edas de la Inform\u00e1tica\nEducativa le pueden aportar para mejorar su docencia. En particular, se espera\nque cualquier alumno aprenda de este curso qu\u00e9 es la Inform\u00e1tica Educativa,\nc\u00f3mo las nuevas tecnolog\u00edas les pueden ayudar en su docencia como otra\nherramienta m\u00e1s para un profesor que en el siglo XXI sabe combinar todos los\nrecursos que el mundo digital le ofrece, tanto para crear nuevos contenidos\nmultimedia interactivos como para evaluar de forma autom\u00e1tica o semiautom\u00e1tica\ncontenidos / competencias en varios dispositivos.\n\n",
        "name": "Introducci\u00f3n a la inform\u00e1tica educativa",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.miriadax.net/web/introduccion_informatica_educativa",
        "video_url": "https://www.youtube.com/embed/K1z6XyObLtQ?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-02-25",
        "desc": "En el curso aprender\u00e1s a planificar una b\u00fasqueda desde el comienzo y a utilizar las diversas\u00a0herramientas que Internet pone a tu alcance para que encuentres aquello que necesitas. Veremos herramientas para buscar v\u00eddeos, im\u00e1genes, contenido libre de derechos e\u00a0informaci\u00f3n institucional, entre otras muchas cosas.",
        "desc_html": "En el curso aprender\u00e1s a planificar una b\u00fasqueda desde el comienzo y a\nutilizar las diversas\u00a0herramientas que Internet pone a tu alcance para que\nencuentres aquello que necesitas. Veremos herramientas para buscar v\u00eddeos,\nim\u00e1genes, contenido libre de derechos e\u00a0informaci\u00f3n institucional, entre otras\nmuchas cosas.\n\n",
        "name": "Buscar en internet",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.miriadax.net/web/buscar_internet",
        "video_url": "https://www.youtube.com/embed/tMUn2zERL-4?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-02-24",
        "desc": "Natural language processing (NLP) deals with the application of computational models to text or speech data. Application areas within NLP include automatic (machine) translation between languages; dialogue systems, which allow a human to interact with a machine using natural language; and information extraction, where the goal is to transform unstructured text into structured (database) representations that can be searched and browsed in flexible ways. NLP technologies are having a dramatic impact on the way people interact with computers, on the way people interact with each other through the use of language, and on the way people access the vast amount of linguistic data now in electronic form. From a scientific viewpoint, NLP involves fundamental questions of how to structure formal models (for example statistical models) of natural language phenomena, and of how to design algorithms that implement these models.In this course you will study mathematical and computational models of language, and the application of these models to key problems in natural language processing. The course has a focus on machine learning methods, which are widely used in modern NLP systems: we will cover formalisms such as hidden Markov models, probabilistic context-free grammars, log-linear models, and statistical models for machine translation. The curriculum closely follows a course currently taught by Professor Collins at Columbia University, and previously taught at MIT.SyllabusTopics covered include:1. Language modeling.2. Hidden Markov models, and tagging problems.3. Probabilistic context-free grammars, and the parsing problem.4. Statistical approaches to machine translation.5. Log-linear models, and their application to NLP problems.6. Unsupervised and semi-supervised learning in NLP.",
        "desc_html": "Natural language processing (NLP) deals with the application of computational\nmodels to text or speech data. Application areas within NLP include automatic\n(machine) translation between languages; dialogue systems, which allow a human\nto interact with a machine using natural language; and information extraction,\nwhere the goal is to transform unstructured text into structured (database)\nrepresentations that can be searched and browsed in flexible ways. NLP\ntechnologies are having a dramatic impact on the way people interact with\ncomputers, on the way people interact with each other through the use of\nlanguage, and on the way people access the vast amount of linguistic data now\nin electronic form. From a scientific viewpoint, NLP involves fundamental\nquestions of how to structure formal models (for example statistical models)\nof natural language phenomena, and of how to design algorithms that implement\nthese models.\n\nIn this course you will study mathematical and computational models of\nlanguage, and the application of these models to key problems in natural\nlanguage processing. The course has a focus on machine learning methods, which\nare widely used in modern NLP systems: we will cover formalisms such as hidden\nMarkov models, probabilistic context-free grammars, log-linear models, and\nstatistical models for machine translation. The curriculum closely follows a\ncourse currently taught by Professor Collins at Columbia University, and\npreviously taught at MIT.\n\n## Syllabus\n\nTopics covered include:\n\n1\\. Language modeling.  \n2\\. Hidden Markov models, and tagging problems.  \n3\\. Probabilistic context-free grammars, and the parsing problem.  \n4\\. Statistical approaches to machine translation.  \n5\\. Log-linear models, and their application to NLP problems.  \n6\\. Unsupervised and semi-supervised learning in NLP.\n\n",
        "name": "Natural Language Processing",
        "provider": "Coursera",
        "rating": "4",
        "reviews": "2",
        "university": [
            "Columbia University"
        ],
        "url": "https://www.coursera.org/course/nlangp",
        "video_url": ""
    },
    {
        "date": "2013-02-07",
        "desc": "",
        "desc_html": "\n\n",
        "name": "Program Arcade Games - Learn Computer Science",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "http://programarcadegames.com/",
        "video_url": ""
    },
    {
        "date": "2013-02-04",
        "desc": "This course will walk you through the major components of building GRITS, an HTML5 game. We'll talk about how to take standard game development techniques, and use them to create high performance HTML5 applications.Why Take This Course?At the end of this course, you'll understand how to develop an HTML5 game. You will gain familiarity with HTML5 features such as 2D canvas and techniques for improving performance.Prerequisites and RequirementsKnowledge of HTML, Javascript, and how the web works is necessary for this course. There is an optional lesson on the specific parts of Javascript and the DOM that you'll need for this class as a refresher, but this is not an introductory course on Javascript.See the&nbsp;Technology Requirements&nbsp;for using UdacitySyllabusLesson 0Optional HTML/Javascript crash courseLesson 1Introduction to Canvas renderingLesson 2AtlasesLesson 3Map renderingLesson 4Basic Input, handling eventsLesson 5The entity hierarchyLesson 6Box2D, and using external librariesLesson 7Adding soundLesson 8Asynchronous Loading",
        "desc_html": "This course will walk you through the major components of building GRITS, an\nHTML5 game. We'll talk about how to take standard game development techniques,\nand use them to create high performance HTML5 applications.\n\n**Why Take This Course?**\n\nAt the end of this course, you'll understand how to develop an HTML5 game. You\nwill gain familiarity with HTML5 features such as 2D canvas and techniques for\nimproving performance.\n\n**Prerequisites and Requirements**\n\nKnowledge of HTML, Javascript, and how the web works is necessary for this\ncourse. There is an optional lesson on the specific parts of Javascript and\nthe DOM that you'll need for this class as a refresher, but this is not an\nintroductory course on Javascript.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n## Syllabus\n\n**Lesson 0**\n\nOptional HTML/Javascript crash course\n\n**Lesson 1**\n\nIntroduction to Canvas rendering\n\n**Lesson 2**\n\nAtlases\n\n**Lesson 3**\n\nMap rendering\n\n**Lesson 4**\n\nBasic Input, handling events\n\n**Lesson 5**\n\nThe entity hierarchy\n\n**Lesson 6**\n\nBox2D, and using external libraries\n\n**Lesson 7**\n\nAdding sound\n\n**Lesson 8**\n\nAsynchronous Loading\n\n",
        "name": "HTML5 Game Development",
        "provider": "Udacity",
        "rating": "4",
        "reviews": "2",
        "university": [
            "Google"
        ],
        "url": "http://www.udacity.com/overview/Course/cs255/CourseRev/1",
        "video_url": "https://www.youtube.com/embed/F3JeV756B7w?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-02-04",
        "desc": "Learn the fundamentals of parallel computing with the GPU and the CUDA programming environment! In this class, you'll learn about parallel programming by coding a series of image processing algorithms, such as you might find in Photoshop or Instagram. You'll be able to program and run your assignments on high-end GPUs, even if you don't own one yourself.Why It&rsquo;s Important to Think ParallelThird Pillar of Science&nbsp;Learn how scientific discovery can be accelerated by combining theory and experimentation with computing to fight cancer, prevent heart attacks, and spur new advances in robotic surgery.Why Take This Course?You'll master the fundamentals of massively parallel computing by using CUDA C/C++ to program modern GPUs. You'll learn the GPU programming model and architecture, key algorithms and parallel programming patterns, and optimization techniques. Your assignments will illustrate these concepts through image processing applications, but this is a parallel computing course and what you learn will translate to any application domain. Most of all we hope you'll learn how to think in parallel.Prerequisites and RequirementsWe expect students to have a solid experience with the C programming language and basic knowledge of data structures and algorithms.See the&nbsp;Technology Requirements&nbsp;for using UdacitySyllabusLesson 1: GPU Programming ModelProject 1: Greyscale Conversion (for that classy touch!)Lesson 2: GPU Hardware and Parallel CommunicationProject 2: Smart Blurring (miracle product for removing wrinkles!)Lesson 3: Fundamental Parallel AlgorithmsProject 3: HDR Tonemapping (when 1000:1 contrast is not enough!)Lesson 4: Using Sort and ScanProject 4: Red Eye Removal (soothing relief for bright red eyes)Lesson 5: Optimizing GPU ProgramsProject 5: Accelerating Histograms (when fast isn't fast enough)Lesson 6: Parallel Computing PatternsProject 6: Seamless Image Compositing (polar bear in the swimming pool)Lesson 7: The Frontiers and Future of GPU Computing",
        "desc_html": "Learn the fundamentals of parallel computing with the GPU and the CUDA\nprogramming environment! In this class, you'll learn about parallel\nprogramming by coding a series of image processing algorithms, such as you\nmight find in Photoshop or Instagram. You'll be able to program and run your\nassignments on high-end GPUs, even if you don't own one yourself.\n\nWhy It's Important to Think Parallel\n\n[Third Pillar of Science](http://www.youtube.com/watch?v=3DbAB2ChDBw)  \nLearn how scientific discovery can be accelerated by combining theory and\nexperimentation with computing to fight cancer, prevent heart attacks, and\nspur new advances in robotic surgery.\n\n**Why Take This Course?**\n\nYou'll master the fundamentals of massively parallel computing by using CUDA\nC/C++ to program modern GPUs. You'll learn the GPU programming model and\narchitecture, key algorithms and parallel programming patterns, and\noptimization techniques. Your assignments will illustrate these concepts\nthrough image processing applications, but this is a parallel computing course\nand what you learn will translate to any application domain. Most of all we\nhope you'll learn how to think in parallel.\n\n**Prerequisites and Requirements**\n\nWe expect students to have a solid experience with the C programming language\nand basic knowledge of data structures and algorithms.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n## Syllabus\n\n**Lesson 1: GPU Programming Model**\n\nProject 1: Greyscale Conversion (for that classy touch!)\n\n**Lesson 2: GPU Hardware and Parallel Communication**\n\nProject 2: Smart Blurring (miracle product for removing wrinkles!)\n\n**Lesson 3: Fundamental Parallel Algorithms**\n\nProject 3: HDR Tonemapping (when 1000:1 contrast is not enough!)\n\n**Lesson 4: Using Sort and Scan**\n\nProject 4: Red Eye Removal (soothing relief for bright red eyes)\n\n**Lesson 5: Optimizing GPU Programs**\n\nProject 5: Accelerating Histograms (when fast isn't fast enough)\n\n**Lesson 6: Parallel Computing Patterns**\n\nProject 6: Seamless Image Compositing (polar bear in the swimming pool)\n\n**Lesson 7: The Frontiers and Future of GPU Computing**\n\n",
        "name": "Intro to Parallel Programming",
        "provider": "Udacity",
        "rating": "3",
        "reviews": "1",
        "university": [
            "Nvidia",
            "University of California, Davis"
        ],
        "url": "http://www.udacity.com/overview/Course/cs344/CourseRev/1",
        "video_url": "https://www.youtube.com/embed/zb49vDrOxgA?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-02-04",
        "desc": "6.00x is an introduction to using computation to solve real problems. The course is aimed at students with little or no prior programming experience who have a desire (or at least a need) to understand computational approaches to problem solving. Some of the people taking the course will use it as a stepping stone to more advanced computer science courses, but for many, it will be their first and last computer science course. Since the course will be the only formal computer science course many of the students take, we have chosen to focus on breadth rather than depth. The goal is to provide students with a brief introduction to many topics so they will have an idea of what is possible when they need to think about how to use computation to accomplish some goal later in their career. That said, it is not a \"computation appreciation\" course. It is a challenging and rigorous course in which the students spend a lot of time and effort learning to bend the computer to their will.Since the course will be the only formal computer science course many of the students take, we have chosen to focus on breadth rather than depth. The goal is to provide students with a brief introduction to many topics so they will have an idea of what is possible when they need to think about how to use computation to accomplish some goal later in their career. That said, it is not a \"computation appreciation\" course. It is a challenging and rigorous course in which the students spend a lot of time and effort learning to bend the computer to their will.",
        "desc_html": "6.00x is an introduction to using computation to solve real problems. The\ncourse is aimed at students with little or no prior programming experience who\nhave a desire (or at least a need) to understand computational approaches to\nproblem solving. Some of the people taking the course will use it as a\nstepping stone to more advanced computer science courses, but for many, it\nwill be their first and last computer science course. Since the course will be\nthe only formal computer science course many of the students take, we have\nchosen to focus on breadth rather than depth. The goal is to provide students\nwith a brief introduction to many topics so they will have an idea of what is\npossible when they need to think about how to use computation to accomplish\nsome goal later in their career. That said, it is not a \"computation\nappreciation\" course. It is a challenging and rigorous course in which the\nstudents spend a lot of time and effort learning to bend the computer to their\nwill.  \nSince the course will be the only formal computer science course many of the\nstudents take, we have chosen to focus on breadth rather than depth. The goal\nis to provide students with a brief introduction to many topics so they will\nhave an idea of what is possible when they need to think about how to use\ncomputation to accomplish some goal later in their career. That said, it is\nnot a \"computation appreciation\" course. It is a challenging and rigorous\ncourse in which the students spend a lot of time and effort learning to bend\nthe computer to their will.\n\n",
        "name": "6.00x: Introduction to Computer Science and Programming",
        "provider": "edX",
        "rating": "4",
        "reviews": "3",
        "university": [
            "Massachusetts Institute of Technology"
        ],
        "url": "https://www.edx.org/course/mitx/mitx-6-00x-introduction-computer-science-586",
        "video_url": "https://www.youtube.com/embed/3cH_qnEx9P0?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-01-31",
        "desc": "El curso est\u00e1 compuesto por una serie de temas que hemos considerado que son el m\u00ednimo que debe conocer cualquier persona que quiera tener una visi\u00f3n introductoria del desarrollo web actual. Al finalizar el curso, si el alumno ha asimilado correctamente todos los contenidos y ha completado todas las actividades de forma satisfactoria, ser\u00e1 capaz de desarrollar aplicaciones web. El curso comienza con las tecnolog\u00edas que en la actualidad son consideradas el est\u00e1ndar de la programaci\u00f3n de la parte cliente de las aplicaciones web: HTML, CSS, JavaScript y DOM. Adem\u00e1s, se proporcionan conocimientos sobre dise\u00f1o, usabilidad y accesibilidad en general y en particular sobre su aplicaci\u00f3n al desarrollo web. La \u00faltima parte se dedica a la programaci\u00f3n de la parte servidor con la tecnolog\u00eda PHP.",
        "desc_html": "El curso est\u00e1 compuesto por una serie de temas que hemos considerado que son\nel m\u00ednimo que debe conocer cualquier persona que quiera tener una visi\u00f3n\nintroductoria del desarrollo web actual. Al finalizar el curso, si el alumno\nha asimilado correctamente todos los contenidos y ha completado todas las\nactividades de forma satisfactoria, ser\u00e1 capaz de desarrollar aplicaciones\nweb. El curso comienza con las tecnolog\u00edas que en la actualidad son\nconsideradas el est\u00e1ndar de la programaci\u00f3n de la parte cliente de las\naplicaciones web: HTML, CSS, JavaScript y DOM. Adem\u00e1s, se proporcionan\nconocimientos sobre dise\u00f1o, usabilidad y accesibilidad en general y en\nparticular sobre su aplicaci\u00f3n al desarrollo web. La \u00faltima parte se dedica a\nla programaci\u00f3n de la parte servidor con la tecnolog\u00eda PHP.\n\n",
        "name": "iDESWEB, Introducci\u00f3n al desarrollo web",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.miriadax.net/web/introduccion_desarrollo_web",
        "video_url": "https://www.youtube.com/embed/00ABGMuEv1k?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-01-31",
        "desc": "Los dispositivos m\u00f3viles est\u00e1n transformando la forma en que las personas se\u00a0comunican. Se han convirtiendo en el nuevo ordenador personal del siglo XXI.\u00a0Android es la plataforma libre para el desarrollo de aplicaciones m\u00f3viles desarrollada por\u00a0Google. Esta plataforma est\u00e1 ampliando su rango de influencia a sistemas empotrados,\u00a0tabletas o Smart TV. Este curso pretende ser una gu\u00eda para introducirse en la\u00a0programaci\u00f3n en Android. Todos los conceptos son descritos por medio de ejemplos,\u00a0aumentando su nivel de complejidad a medida que avanzan los m\u00f3dulos. A lo largo del\u00a0curso se desarrolla una aplicaci\u00f3n de ejemplo, el m\u00edtico videojuego Asteroides.\u00a0Comienza con una versi\u00f3n sencilla, que se ir\u00e1 completando para que incluya, gr\u00e1ficos,\u00a0pantalla t\u00e1ctil y sensores, geo-localizaci\u00f3n, multimedia, XML, SQL, Internet, servicios\u00a0Web\u2026",
        "desc_html": "Los dispositivos m\u00f3viles est\u00e1n transformando la forma en que las personas se\ncomunican. Se han convirtiendo en el nuevo ordenador personal del siglo XXI.\nAndroid es la plataforma libre para el desarrollo de aplicaciones m\u00f3viles\ndesarrollada por\u00a0Google. Esta plataforma est\u00e1 ampliando su rango de influencia\na sistemas empotrados,\u00a0tabletas o Smart TV. Este curso pretende ser una gu\u00eda\npara introducirse en la\u00a0programaci\u00f3n en Android. Todos los conceptos son\ndescritos por medio de ejemplos,\u00a0aumentando su nivel de complejidad a medida\nque avanzan los m\u00f3dulos. A lo largo del\u00a0curso se desarrolla una aplicaci\u00f3n de\nejemplo, el m\u00edtico videojuego Asteroides.\u00a0Comienza con una versi\u00f3n sencilla,\nque se ir\u00e1 completando para que incluya, gr\u00e1ficos,\u00a0pantalla t\u00e1ctil y sensores,\ngeo-localizaci\u00f3n, multimedia, XML, SQL, Internet, servicios\u00a0Web\u2026\n\n",
        "name": "Android. Programaci\u00f3n de Aplicaciones",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.miriadax.net/web/android_programacion",
        "video_url": "https://www.youtube.com/embed/PPsVy0nDOR8?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-01-17",
        "desc": "",
        "desc_html": "\n\n",
        "name": "Introduction to Computer Architecture",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Carnegie Mellon University"
        ],
        "url": "http://www.ece.cmu.edu/~ece447/s13/doku.php?id=schedule",
        "video_url": "https://www.youtube.com/embed/BJ87rZCGWU0?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-01-15",
        "desc": "",
        "desc_html": "\n\n",
        "name": "Introduction to Databases",
        "provider": "Class2Go",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Stanford University"
        ],
        "url": "https://class.stanford.edu/db/Winter2013/preview/",
        "video_url": "https://www.youtube.com/embed/VJyduDiQ_xM?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-11-04",
        "desc": "R es un entorno inform\u00e1tico de computaci\u00f3n estad\u00edstica y de generaci\u00f3n de gr\u00e1ficos. R funciona en un amplio rango de sistemas operativos como UNIX, Windows o MacOS. Pese a su potencialidad, versatilidad y flexibilidad; R puede parecer \u00e1rido en el momento en que el usuario trata de interaccionar con sus componentes. Se suele decir que \u201cla curva de aprendizaje es lenta\u201d. Sin embargo, los resultados que produce son ampliamente satisfactorios. Este curso est\u00e1 destinado a \u201clubricar\u201d esos primeros encuentros con \u00e9ste entorno estad\u00edstico.",
        "desc_html": "R es un entorno inform\u00e1tico de computaci\u00f3n estad\u00edstica y de generaci\u00f3n de\ngr\u00e1ficos. R funciona en un amplio rango de sistemas operativos como UNIX,\nWindows o MacOS. Pese a su potencialidad, versatilidad y flexibilidad; R puede\nparecer \u00e1rido en el momento en que el usuario trata de interaccionar con sus\ncomponentes. Se suele decir que \u201cla curva de aprendizaje es lenta\u201d. Sin\nembargo, los resultados que produce son ampliamente satisfactorios. Este curso\nest\u00e1 destinado a \u201clubricar\u201d esos primeros encuentros con \u00e9ste entorno\nestad\u00edstico.\n\n",
        "name": "Aprende An\u00e1lisis Estad\u00edstico de Datos con R",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.miriadax.net/web/aprende-analisis-estadistico-datos-r",
        "video_url": "https://www.youtube.com/embed/Ai5BuFKOero?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-11-04",
        "desc": "\"Desarrollo de Aplicaciones para Android\" ser&aacute; un curso altamente pr&aacute;ctico con demos y tareas de c&oacute;digo semanales. Requiere que el estudiante conozca el paradigma de programaci&oacute;n orientada a objetos y de preferencia el lenguaje de programaci&oacute;n Java.&nbsp;Syllabus&nbsp;Introducci&oacute;n a AndroidLayouts y elementos de interfaz gr&aacute;ficaBloques b&aacute;sicos de aplicaci&oacute;nLayouts y elementos de interfaz gr&aacute;ficaAlmacenamiento y datosAcceso a hardwarePublicaci&oacute;n de apps&nbsp;&nbsp;",
        "desc_html": "\"Desarrollo de Aplicaciones para Android\" sera un curso altamente practico con\ndemos y tareas de codigo semanales. Requiere que el estudiante conozca el\nparadigma de programacion orientada a objetos y de preferencia el lenguaje de\nprogramacion Java.\n\n## Syllabus\n\n\n\n  * Introduccion a Android\n  * Layouts y elementos de interfaz grafica\n  * Bloques basicos de aplicacion\n  * Layouts y elementos de interfaz grafica\n  * Almacenamiento y datos\n  * Acceso a hardware\n  * Publicacion de apps\n\n\n\n\n\n",
        "name": "Desarrollo de Aplicaciones para Android",
        "provider": "Telescopio",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Galileo University"
        ],
        "url": "http://telescopio.galileo.edu/curso/desarrollo-de-aplicaciones-para-android/",
        "video_url": "https://www.youtube.com/embed/OH3OWonOCu8?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-11-04",
        "desc": "This is a follow-on for the Coursera class \u201cPrinciples of Functional Programming in Scala\u201d, which so far had more than 100\u2019000 inscriptions over two iterations of the course, with some of the highest completion rates of any massive open online course worldwide.The aim of the second course is to teach the principles of reactive programming. Reactive programming is an emerging discipline which combines concurrency and event-based and asynchronous systems. It is essential for writing any kind of web-service or distributed system and is also at the core of many high-performance concurrent systems. Reactive programming can be seen as a natural extension of higher-order functional programming to concurrent systems that deal with distributed state&nbsp;by coordinating and orchestrating asynchronous data streams exchanged by actors.In this course you will discover key elements for writing reactive programs in a composable way. You will find out how to apply these building blocks in the construction of event-driven systems that are scalable and resilient.The course is hands on; most units introduce short programs that serve as illustrations of important concepts and invite you to play with them, modifying and improving them. The course is complemented by a series of assignments, which are also programming projects.Personalized Tutoring by Typesafe: Typesafe offers supervised tutorial sessions accompanying select Coursera classes. In weekly, one-hour tutorial sessions experts from Typesafe provide in-depth answers to questions about the course material, and discuss solutions to homework assignments past the deadline. Tutorial groups are small (10 participants max) in order to meet individual mentoring needs as much as possible. Tutorial session slots are offered in both European and American time zones.Registration for tutoring by Typesafe is open.SyllabusWeek 1: Review of Principles of Functional Programming: substitution model, for-expressions and how they relate to monads. Introduces a new implementation of for-expressions: random value generators. Shows how this can be used in randomized testing and gives an overview of ScalaCheck, a tool which implements this idea.Week 2: Functional programming and mutable state. What makes an object mutable? How this impacts the substitution model. Extended example: Digital circuit simulation.Week 3: Futures. Introduces futures as another monad, with for-expressions as concrete syntax. Shows how futures can be composed to avoid thread blocking. Discusses cross-thread error handling.Week 4: Reactive stream processing. \u00a0Generalizing futures to reactive computations over streams. Stream operators.Week 5: Actors. Introduces the Actor Model, actors as encapsulated units of consistency, asynchronous message passing, discusses different message delivery semantics (at most once, at least once, exactly once) and eventual consistency.Week 6: Supervision. Introduces reification of failure, hierarchical failure handling, the Error Kernel pattern, lifecycle monitoring, discusses transient and persistent state.Week 7: Conversation Patterns. Discusses the management of conversational state between actors and patterns for flow control, routing of messages to pools of actors for resilience or load balancing, acknowledgement of reception to achieve reliable delivery.",
        "desc_html": "This is a follow-on for the Coursera class \u201cPrinciples of Functional\nProgramming in Scala\u201d, which so far had more than 100\u2019000 inscriptions over\ntwo iterations of the course, with some of the highest completion rates of any\nmassive open online course worldwide.\n\nThe aim of the second course is to teach the principles of reactive\nprogramming. Reactive programming is an emerging discipline which combines\nconcurrency and event-based and asynchronous systems. It is essential for\nwriting any kind of web-service or distributed system and is also at the core\nof many high-performance concurrent systems. Reactive programming can be seen\nas a natural extension of higher-order functional programming to concurrent\nsystems that deal with distributed state by coordinating and orchestrating\nasynchronous data streams exchanged by actors.\n\nIn this course you will discover key elements for writing reactive programs in\na composable way. You will find out how to apply these building blocks in the\nconstruction of event-driven systems that are scalable and resilient.\n\nThe course is hands on; most units introduce short programs that serve as\nillustrations of important concepts and invite you to play with them,\nmodifying and improving them. The course is complemented by a series of\nassignments, which are also programming projects.  \n  \n\n**Personalized Tutoring by Typesafe**: Typesafe offers supervised tutorial sessions accompanying select Coursera classes. In weekly, one-hour tutorial sessions experts from Typesafe provide in-depth answers to questions about the course material, and discuss solutions to homework assignments past the deadline. Tutorial groups are small (10 participants max) in order to meet individual mentoring needs as much as possible. Tutorial session slots are offered in both European and American time zones. [Registration for tutoring by Typesafe is open](https://attendee.gototraining.com/4q80l/catalog/4020625203792931584).\n\n## Syllabus\n\n**Week 1**: Review of Principles of Functional Programming: substitution model, for-expressions and how they relate to monads. Introduces a new implementation of for-expressions: random value generators. Shows how this can be used in randomized testing and gives an overview of ScalaCheck, a tool which implements this idea.\n\n**Week 2**: Functional programming and mutable state. What makes an object mutable? How this impacts the substitution model. Extended example: Digital circuit simulation.\n\n**Week 3**: Futures. Introduces futures as another monad, with for-expressions as concrete syntax. Shows how futures can be composed to avoid thread blocking. Discusses cross-thread error handling.\n\n**Week 4**: Reactive stream processing. \u00a0Generalizing futures to reactive computations over streams. Stream operators.\n\n**Week 5**: Actors. Introduces the Actor Model, actors as encapsulated units of consistency, asynchronous message passing, discusses different message delivery semantics (at most once, at least once, exactly once) and eventual consistency.\n\n**Week 6**: Supervision. Introduces reification of failure, hierarchical failure handling, the Error Kernel pattern, lifecycle monitoring, discusses transient and persistent state.\n\n**Week 7**: Conversation Patterns. Discusses the management of conversational state between actors and patterns for flow control, routing of messages to pools of actors for resilience or load balancing, acknowledgement of reception to achieve reliable delivery. \n\n",
        "name": "Principles of Reactive Programming",
        "provider": "Coursera",
        "rating": "4.7692307692308",
        "reviews": "13",
        "university": [
            "\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne"
        ],
        "url": "https://www.coursera.org/course/reactive",
        "video_url": ""
    },
    {
        "date": "2013-10-30",
        "desc": "En este curso vamos a aprender a escribir nuestros propios programas, usando software libre. Vamos a usar el lenguaje M, disponible en los paquetes MATLAB y Octave UPM, que son ampliamente usados en ciencias e ingenier\u00eda. No es necesario tener ning\u00fan conocimiento previo para seguir el curso, y al finalizar, habr\u00e1s sido capaz de tomar las riendas de tu ordenador y escribir tus propios programas, incluso con gr\u00e1ficos sencillos.",
        "desc_html": "En este curso vamos a aprender a escribir nuestros propios programas, usando\nsoftware libre. Vamos a usar el lenguaje M, disponible en los paquetes MATLAB\ny Octave UPM, que son ampliamente usados en ciencias e ingenier\u00eda. No es\nnecesario tener ning\u00fan conocimiento previo para seguir el curso, y al\nfinalizar, habr\u00e1s sido capaz de tomar las riendas de tu ordenador y escribir\ntus propios programas, incluso con gr\u00e1ficos sencillos.\n\n",
        "name": "Introducci\u00f3n a la Programaci\u00f3n para Ciencias e Ingenier\u00eda",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.miriadax.net/web/introduccion-programacion-ciencias-ingenieria",
        "video_url": "https://www.youtube.com/embed/hpeyceDy8eo?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-10-30",
        "desc": "En este curso vamos a aprender a escribir nuestros propios programas, usando software libre. Vamos a usar el lenguaje M, disponible en los paquetes MATLAB y Octave UPM, que son ampliamente usados en ciencias e ingenier\u00eda. No es necesario tener ning\u00fan conocimiento previo para seguir el curso, y al finalizar, habr\u00e1s sido capaz de tomar las riendas de tu ordenador y escribir tus propios programas, incluso con gr\u00e1ficos sencillos.",
        "desc_html": "En este curso vamos a aprender a escribir nuestros propios programas, usando\nsoftware libre. Vamos a usar el lenguaje M, disponible en los paquetes MATLAB\ny Octave UPM, que son ampliamente usados en ciencias e ingenier\u00eda. No es\nnecesario tener ning\u00fan conocimiento previo para seguir el curso, y al\nfinalizar, habr\u00e1s sido capaz de tomar las riendas de tu ordenador y escribir\ntus propios programas, incluso con gr\u00e1ficos sencillos.\n\n",
        "name": "Introducci\u00f3n a la Programaci\u00f3n para Ciencias e Ingenier\u00eda",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Universidad Polit\u00e9cnica de Madrid"
        ],
        "url": "https://www.miriadax.net/web/introduccion-programacion-ciencias-ingenieria",
        "video_url": "https://www.youtube.com/embed/hpeyceDy8eo?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-10-29",
        "desc": "Mobile technology has become an integral component in our lives and is driving the expectations of how we interact with our business systems.Like SAP, top businesses today recognize the value of enabling their employees to work anytime, anywhere through the use of mobile technologies. However, providing this ability in an enterprise context can become quite tricky.We certainly want to be able to do business on our phones and tablets, but we\u2019re not necessarily aware of what needs to go on behind the scenes to enable this.In this course, we\u2019ll learn what it takes to make an enterprise-ready app with SAP mobile solutions.",
        "desc_html": "Mobile technology has become an integral component in our lives and is driving\nthe expectations of how we interact with our business systems.  \nLike SAP, top businesses today recognize the value of enabling their employees\nto work anytime, anywhere through the use of mobile technologies. However,\nproviding this ability in an enterprise context can become quite tricky.  \nWe certainly want to be able to do business on our phones and tablets, but\nwe\u2019re not necessarily aware of what needs to go on behind the scenes to enable\nthis.  \n  \nIn this course, we\u2019ll learn what it takes to make an enterprise-ready app with\nSAP mobile solutions.\n\n",
        "name": "Introduction to Mobile Solution Development",
        "provider": "openSAP",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.sap.com/course/mobile1",
        "video_url": ""
    },
    {
        "date": "2013-10-28",
        "desc": "As the world's data grow exponentially, organizations across all sectors, including government and not-for-profit, need to understand, manage and use big, complex data sets&mdash;known as big data.",
        "desc_html": "As the world's data grow exponentially, organizations across all sectors,\nincluding government and not-for-profit, need to understand, manage and use\nbig, complex data sets--known as big data.\n\n",
        "name": "Applied Data Science: An Introduction",
        "provider": "CourseSites",
        "rating": "4",
        "reviews": "3",
        "university": [
            "Syracuse University"
        ],
        "url": "https://www.coursesites.com/webapps/Bb-sites-course-creation-BBLEARN/courseHomepage.htmlx?course_id=_276927_1",
        "video_url": ""
    },
    {
        "date": "2013-10-28",
        "desc": "You have probably heard that this is the era of \u201cBig Data\u201d. Stories about\n    companies or scientists using data to recommend movies, discover who is\n    pregnant based on credit card receipts, or confirm the existence of the\n    Higgs Boson regularly appear in Forbes, the Economist, the Wall Street\n    Journal, and The New York Times. But how does one turn data into this type\n    of insight? The answer is data analysis and applied statistics. Data analysis\n    is the process of finding the right data to answer your question, understanding\n    the processes underlying the data, discovering the important patterns in\n    the data, and then communicating your results to have the biggest possible\n    impact. There is a critical shortage of people with these skills in the\n    workforce, which is why Hal Varian (Chief Economist at Google) says that\n    being a statistician will be the sexy job for the next 10 years.This course is an applied statistics course focusing on data analysis.\n    The course will begin with an overview of how to organize, perform, and\n    write-up data analyses. Then we will cover some of the most popular and\n    widely used statistical methods like linear regression, principal components\n    analysis, cross-validation, and p-values. Instead of focusing on mathematical\n    details, the lectures will be designed to help you apply these techniques\n    to real data using the R statistical programming language, interpret the\n    results, and diagnose potential problems in your analysis. You will also\n    have the opportunity to critique and assist your fellow classmates with\n    their data analyses.",
        "desc_html": "You have probably heard that this is the era of \u201cBig Data\u201d. Stories about\ncompanies or scientists using data to recommend movies, discover who is\npregnant based on credit card receipts, or confirm the existence of the Higgs\nBoson regularly appear in Forbes, the Economist, the Wall Street Journal, and\nThe New York Times. But how does one turn data into this type of insight? The\nanswer is data analysis and applied statistics. Data analysis is the process\nof finding the right data to answer your question, understanding the processes\nunderlying the data, discovering the important patterns in the data, and then\ncommunicating your results to have the biggest possible impact. There is a\ncritical shortage of people with these skills in the workforce, which is why\nHal Varian (Chief Economist at Google) says that being a statistician will be\nthe sexy job for the next 10 years.  \n  \nThis course is an applied statistics course focusing on data analysis. The\ncourse will begin with an overview of how to organize, perform, and write-up\ndata analyses. Then we will cover some of the most popular and widely used\nstatistical methods like linear regression, principal components analysis,\ncross-validation, and p-values. Instead of focusing on mathematical details,\nthe lectures will be designed to help you apply these techniques to real data\nusing the R statistical programming language, interpret the results, and\ndiagnose potential problems in your analysis. You will also have the\nopportunity to critique and assist your fellow classmates with their data\nanalyses.\n\n",
        "name": "Data Analysis",
        "provider": "Coursera",
        "rating": "4.1538461538462",
        "reviews": "13",
        "university": [
            "Johns Hopkins University"
        ],
        "url": "https://www.coursera.org/course/dataanalysis",
        "video_url": ""
    },
    {
        "date": "2013-10-20",
        "desc": "\u4ecb\u7ecd\u89c6\u9891\u82e5\u65e0\u6cd5\u6b63\u5e38\u64ad\u653e\uff0c\u8bf7\u770b\u8fd9\u91cc\u3002&nbsp;\u8ba1\u7b97\u673a\u662f\u73b0\u4ee3\u793e\u4f1a\u4e2d\u7528\u4e8e\u89e3\u51b3\u95ee\u9898\u7684\u91cd\u8981\u5de5\u5177\u3002\u5229\u7528\u8ba1\u7b97\u673a\u89e3\u51b3\u5b9e\u9645\u95ee\u9898\u9700\u8981\u5c06\u95ee\u9898\u62bd\u8c61\uff0c\u5e76\u5bf9\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff0c\u6700\u540e\u901a\u8fc7\u8ba1\u7b97\u673a\u7a0b\u5e8f\u6c42\u89e3\u95ee\u9898\u3002\u800c\u672c\u95e8\u8bfe\u7a0b\u4e3b\u8981\u5185\u5bb9\u5c31\u662f\u5bf9\u4ee5\u4e0a\u5185\u5bb9\u8fdb\u884c\u7814\u7a76\u3002\u56fe\u7075\u5956\u83b7\u5f97\u8005N.Wirth\u5199\u4e86\u4e00\u672c\u7ecf\u5178\u8457\u4f5c\u201c\u7a0b\u5e8f=\u7b97\u6cd5+\u6570\u636e\u7ed3\u6784\u201d\u3002\u6570\u636e\u7ed3\u6784\uff0c\u662f\u62bd\u8c61\u7684\u8868\u793a\u6570\u636e\u7684\u65b9\u5f0f\uff1b\u7b97\u6cd5\uff0c\u5219\u662f\u8ba1\u7b97\u7684\u4e00\u7cfb\u5217\u6709\u6548\u3001\u901a\u7528\u7684\u6b65\u9aa4\u3002\u7b97\u6cd5\u4e0e\u6570\u636e\u7ed3\u6784\u662f\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u76f8\u8f85\u76f8\u6210\u7684\u4e24\u4e2a\u65b9\u9762\u3002\u6211\u4eec\u4f1a\u56f4\u7ed5\u7740\u201c\u7b97\u6cd5+\u6570\u636e\u7ed3\u6784=\u7a0b\u5e8f\u201d\u7684\u601d\u8def\uff0c\u4ee5\u95ee\u9898\u6c42\u89e3\u4e3a\u5bfc\u5411\u8fdb\u884c\u5b66\u4e60\u3002\u5e0c\u671b\u80fd\u591f\u5e2e\u52a9\u5927\u5bb6\u63d0\u9ad8\u7406\u8bba\u3001\u62bd\u8c61\u3001\u8bbe\u8ba1\u7684\u80fd\u529b\u3002\u5728\u624e\u5b9e\u7684\u7ecf\u5178\u7406\u8bba\u57fa\u7840\u4e0a\uff0c\u8fd0\u7528\u95ee\u9898\u62bd\u8c61\u3001\u6570\u636e\u62bd\u8c61\u3001\u7b97\u6cd5\u62bd\u8c61\u6765\u5206\u6790\u95ee\u9898\uff0c\u5e94\u7528\u9002\u5f53\u7684\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u6765\u8bbe\u8ba1\u548c\u5b9e\u73b0\u76f8\u5e94\u7684\u7a0b\u5e8f\u3002\u901a\u8fc7\u8bfe\u7a0b\u5b66\u4e60\uff0c\u5927\u5bb6\u7684\u62bd\u8c61\u601d\u7ef4\u80fd\u529b\u3001\u95ee\u9898\u6c42\u89e3\u80fd\u529b\u5c06\u5f97\u5230\u8f83\u5927\u63d0\u5347\uff0c\u7f16\u7a0b\u80fd\u529b\u548c\u4ee3\u7801\u8d28\u91cf\u4f1a\u6709\u8d28\u7684\u98de\u8dc3\uff01\u5728\u6c42\u89e3\u5b9e\u9645\u95ee\u9898\u65b9\u9762\uff0c\u6211\u4eec\u4f1a\u5b66\u4e60\u5230\u901a\u8fc7\u6743\u8861\u65f6\u7a7a\u548c\u5176\u4ed6\u8d44\u6e90\u5f00\u9500\uff0c\u5229\u7528\u6570\u636e\u7ed3\u6784\u6765\u7ec4\u7ec7\u6570\u636e\u3001\u8bbe\u8ba1\u9ad8\u6548\u7684\u7b97\u6cd5\u3001\u5b8c\u6210\u9ad8\u8d28\u91cf\u7684\u7a0b\u5e8f\u4ee5\u6ee1\u8db3\u9519\u7efc\u590d\u6742\u7684\u5b9e\u9645\u5e94\u7528\u9700\u8981\u3002\u6b64\u5916\uff0c\u8bfe\u7a0b\u6240\u5b66\u5230\u7684\u5185\u5bb9\u4f1a\u88ab\u5229\u7528\u5230\u8ba1\u7b97\u673a\u79d1\u5b66\u540e\u7eed\u7684\u5404\u4e2a\u8bfe\u7a0b\u4e2d\uff0c\u5982\u64cd\u4f5c\u7cfb\u7edf\u3001\u8f6f\u4ef6\u5de5\u7a0b\u3001\u6570\u636e\u5e93\u6982\u8bba\u3001\u7f16\u8bd1\u6280\u672f\u3001\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u3001\u4eba\u673a\u4ea4\u4e92\u7b49\u3002\u5e0c\u671b\u53ef\u4ee5\u4e3a\u5927\u5bb6\u5c06\u6765\u4ece\u4e8b\u8ba1\u7b97\u673a\u76f8\u5173\u7684\u5b66\u4e60\u3001\u7814\u7a76\u548c\u5f00\u53d1\u5de5\u4f5c\u6253\u4e0b\u624e\u5b9e\u7684\u57fa\u7840\u3002\u672c\u8bfe\u7a0b\u91c7\u7528\u5f20\u94ed\u4e3b\u7f16\u7684\u56fd\u5bb6\u201c\u5341\u4e00\u4e94\u201d\u89c4\u5212\u6559\u6750\u300a\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u300b\uff08\u9ad8\u7b49\u6559\u80b2\u51fa\u7248\u793e\uff09\u3002\u9002\u5408\u8ba1\u7b97\u673a\u4ee5\u53ca\u76f8\u5173\u7406\u5de5\u4e13\u4e1a\u7684\u5927\u4e8c\u672c\u79d1\u751f\u5b66\u4e60\uff0c\u9700\u8981\u5148\u4fee\u8fc7\u8ba1\u7b97\u6982\u8bba\u7b49\u8bfe\u7a0b\uff0c\u5177\u6709\u7ed3\u6784\u5316\u548c\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u3002\u8bfe\u7a0b\u4e3b\u8981\u5305\u62ec\u7684\u5185\u5bb9\u6709\uff1a\u7ebf\u6027\u8868\uff0c\u6808\u4e0e\u961f\u5217\uff0c\u5b57\u7b26\u4e32\uff0c\u4e8c\u53c9\u6811\uff0c\u6811\uff0c\u56fe\uff0c\u6392\u5e8f\uff08\u5185\u6392\u5e8f\uff0c\u5916\u6392\u5e8f\uff09\uff0c\u68c0\u7d22\uff0c\u7d22\u5f15\u3001\u4ee5\u53ca\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u3002\u8bfe\u7a0b\u6301\u7eed14\u5468\uff0c\u5b66\u4e60\u8005\u6bcf\u5468\u5728\u672c\u8bfe\u7a0b\u4e0a\u9700\u8981\u6295\u51654\uff0d8\u5c0f\u65f6\u3002\u4f5c\u4e3a\u5b8c\u6210\u8bfe\u7a0b\u5b66\u4e60\u7684\u8981\u6c42\uff0c\u5b66\u751f\u9700\u8981\u719f\u6089\u6559\u6750\u6709\u5173\u7ae0\u8282\u7684\u5185\u5bb9\uff0c\u72ec\u7acb\u6b63\u786e\u5730\u5b8c\u6210\u4f5c\u4e1a\u548c\u8003\u8bd5\uff0c\u8fbe\u523060%\u7684\u6210\u7ee9\u5c31\u80fd\u83b7\u5f97\u5317\u5927\u7684\u8bfe\u7a0b\u7ed3\u4e1a\u8bc1\u4e66\uff08\u83b7\u5f9780%\u4ee5\u4e0a\u7684\u6210\u7ee9\uff0c\u80fd\u5f97\u5230\u4f18\u79c0\u8bc1\u4e66\uff09\u3002\u8be5\u8bfe\u7a0b\u662f\u201c\u5317\u5927-\u5fb7\u7a3b\u7f51\u7edc\u516c\u5f00\u8bfe\u7a0b\u201d\u4e2d\u7684\u4e00\u95e8\uff0c\u7531\u5317\u4eac\u5927\u5b66\u4e0e\u5fb7\u7a3b\u6559\u80b2\u8054\u5408\u63d0\u4f9b\u3002Computer, as an important tool for&nbsp;problem&nbsp;solving, has been deeply involved&nbsp;in every aspect of people\u2019s daily lives.&nbsp;Data are the quantities on which operations are performed on computers. What is the logical relationship among data?\n    How are the data stored in computers? What algorithms should be operated to solve the problems on the data? These are the questions that will be answered in \u201cData Structures and Algorithms\u201d, one of the most important core courses in Computer Science.\n    The course also covers fundamental data structures and classical algorithms which are widely used in the&nbsp;succeeding specialized courses,&nbsp;such as Operating Systems, Software Engineering, Database Systems, Compiler&nbsp;Principles, Computer\n    Graphics and Human Computer Interaction.What is the combination of data structures and algorithms? Niklaus Wirth wrote a book titled \"Algorithms + Data Structures = Programs\", which points out their important roles in computing discipline:&nbsp;algorithm and data structure are two closely linked\n    and indivisible parts of programming.The course will follow the idea of&nbsp; \u201cAlgorithms + Data Structures = Programs\u201d, aimed at improving&nbsp; students\u2019 knowledge and skills of theory, abstraction and design in problem solving.&nbsp;On a solid basis of the fundamental theory, the students&nbsp;will\n    analyze the problems using problem, data and algorithm abstraction. Making a tradeoff between space and time complexity, the&nbsp;students will learn how to organize data reasonably, design efficient and effective algorithms, and implement high quality\n    programs, so that they can solve real-world complex problems.&nbsp;After studying this course, students should be well prepared for further study, engineering and research in computer related areas.The course uses the textbook \u201cData Structures and Algorithms\u201d written by Prof. Ming Zhang and two other&nbsp; coauthors. The course is appropriate for sophomore students majoring in computer science or other science/engineering disciplines. Students should&nbsp;have\n    learned \"introduction to computing\",&nbsp;with the knowledge of structured and object-oriented programming.The course will last for 14 weeks and requires the students to study for 4-8 hours per week.&nbsp;After studying the course, the students\u2019 ability of abstract thinking and problem solving should have improved considerably.&nbsp;Their programming skills\n    and the quality of their codes would have increased as well.To be qualified for graduation in Peking University, the students need to be familiar about the materials in the textbook, do homework and exam independently, and obtain the score of 60% or more&nbsp;(80% for A score).The course is one of the PKU-DeTao MOOCs, which is a joint effort by Peking University and DeTao Masters Academy.Syllabus\u65f6\u95f4\u5b89\u6392\u2022 \u7b2c\u4e00\u5468\uff1a\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u7b80\u4ecb\u4ee5\u53ca\u7ebf\u6027\u8868\u2022 \u7b2c\u4e8c\u5468\uff1a\u6808\u548c\u961f\u5217\u2022 \u7b2c\u4e09\u5468\uff1a\u5b57\u7b26\u4e32\u2022 \u7b2c\u56db\u5468\uff1a\u4e8c\u53c9\u6811\uff081\uff09\u2022 \u7b2c\u4e94\u5468\uff1a\u4e8c\u53c9\u6811\uff082\uff09\u2022 \u7b2c\u516d\u5468\uff1a\u6811\u4e0e\u68ee\u6797\u2022 \u7b2c\u4e03\u5468\uff1a\u56fe\u2022 \u7b2c\u516b\u5468\uff1a\u5185\u6392\u5e8f\uff081\uff09\u2022 \u7b2c\u4e5d\u5468\uff1a\u5185\u6392\u5e8f\uff082\uff09\u2022 \u7b2c\u5341\u5468\uff1a\u6587\u4ef6\u7ba1\u7406\u548c\u5916\u6392\u5e8f\u2022 \u7b2c\u5341\u4e00\u5468\uff1a\u68c0\u7d22\u2022 \u7b2c\u5341\u4e8c\u5468\uff1a\u7d22\u5f15\u6280\u672f\u2022 \u7b2c\u5341\u4e09\u5468\uff1a\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\uff081\uff09\u2022 \u7b2c\u5341\u56db\u5468\uff1a\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\uff082\uff09\u4efb\u52a1\u5b89\u6392\uff08\u4f5c\u4e1a\u53ca\u8003\u8bd5\uff09\u8003\u8bd5\u5206\u4e3a\u671f\u4e2d\u8003\u8bd5\uff0811.25-12.8\uff09\u548c\u671f\u672b\u8003\u8bd5\uff081.13-1.26\u8bfe\u7a0b\u5173\u95ed\u65f6\u95f4\uff09\u8bc4\u5206\u65b9\u6848\u8bc4\u5206\u6309\u7167\u65e5\u5e38\u4f5c\u4e1a\u7684\u5b8c\u6210\u60c5\u51b5\u548c\u671f\u4e2d\u671f\u672b\u8003\u8bd5\u7684\u7b54\u9898\u60c5\u51b5\u8fdb\u884c\u3002\u5e73\u65f6\uff08\u8bfe\u7a0b\u53c2\u4e0e\uff0910 %\uff0c\u4f5c\u4e1a30 % \uff0cPOJ 20 %\uff0c\u671f\u4e2d 15 %\uff0c\u671f\u672b 25\n%\u3002POJ\u4f5c\u4e1a\u5728\u7a0b\u5e8f\u81ea\u52a8\u8bc4\u6d4b\u7f51\u7ad9\u53d1\u5e03\uff1ahttp://dsalgo.openjudge.cn/\u8bfe\u7a0b\u53c2\u4e0e\u5ea6\u8f83\u9ad8\u7684\u540c\u5b66\uff08Meetup\u8ba8\u8bba\u4f1a\u3001\u8bba\u575b\u95ee\u7b54\uff09\uff0c\u53ef\u4ee5\u5f97\u5230\u52a0\u5206\u3002\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u7684\u5185\u5bb9\u4e0d\u4f5c\u8003\u6838\u8981\u6c42\uff0c\u5982\u679c\u5b66\u751f\u4e3b\u52a8\u5b8c\u6210\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u7684\u4f5c\u4e1a\uff0c\u4e5f\u53ef\u4ee5\u5f97\u5230\u4e00\u5b9a\u52a0\u5206\u3002\u8bc1\u4e66\u8bbe\u7f6e\u201c\u5408\u683c\u201d\uff08\u8fbe\u523060%\u6210\u7ee9\uff09\u3001\"\u4f18\u79c0\"\uff08\u8fbe\u523080%\u6210\u7ee9\uff09\u4e24\u6863\u8bfe\u7a0b\u6807\u51c6\uff0c\u7531\u4efb\u8bfe\u6559\u5e08\u7b7e\u53d1\u5317\u5927\u7edf\u4e00\u7684\u8bfe\u7a0b\u7ed3\u4e1a\u8bc1\u4e66\u3002",
        "desc_html": "\u4ecb\u7ecd\u89c6\u9891\u82e5\u65e0\u6cd5\u6b63\u5e38\u64ad\u653e\uff0c\u8bf7\u770b[\u8fd9\u91cc](http://video.study.163.com/edu-\nvideo/nos/mp4/2013/11/20/303416_hd.mp4)\u3002\n\n\u8ba1\u7b97\u673a\u662f\u73b0\u4ee3\u793e\u4f1a\u4e2d\u7528\u4e8e\u89e3\u51b3\u95ee\u9898\u7684\u91cd\u8981\u5de5\u5177\u3002\u5229\u7528\u8ba1\u7b97\u673a\u89e3\u51b3\u5b9e\u9645\u95ee\u9898\u9700\u8981\u5c06\u95ee\u9898\u62bd\u8c61\uff0c\u5e76\u5bf9\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff0c\u6700\u540e\u901a\u8fc7\u8ba1\u7b97\u673a\u7a0b\u5e8f\u6c42\u89e3\u95ee\u9898\u3002\u800c\u672c\u95e8\u8bfe\u7a0b\u4e3b\u8981\u5185\u5bb9\u5c31\u662f\u5bf9\u4ee5\u4e0a\u5185\n\u5bb9\u8fdb\u884c\u7814\u7a76\u3002\n\n\u56fe\u7075\u5956\u83b7\u5f97\u8005N.Wirth\u5199\u4e86\u4e00\u672c\u7ecf\u5178\u8457\u4f5c\u201c\u7a0b\u5e8f=\u7b97\u6cd5+\u6570\u636e\u7ed3\u6784\u201d\u3002\u6570\u636e\u7ed3\u6784\uff0c\u662f\u62bd\u8c61\u7684\u8868\u793a\u6570\u636e\u7684\u65b9\u5f0f\uff1b\u7b97\u6cd5\uff0c\u5219\u662f\u8ba1\u7b97\u7684\u4e00\u7cfb\u5217\u6709\u6548\u3001\u901a\u7528\u7684\u6b65\u9aa4\u3002\u7b97\u6cd5\u4e0e\u6570\u636e\u7ed3\u6784\n\u662f\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u76f8\u8f85\u76f8\u6210\u7684\u4e24\u4e2a\u65b9\u9762\u3002\n\n\u6211\u4eec\u4f1a\u56f4\u7ed5\u7740\u201c\u7b97\u6cd5+\u6570\u636e\u7ed3\u6784=\u7a0b\u5e8f\u201d\u7684\u601d\u8def\uff0c\u4ee5\u95ee\u9898\u6c42\u89e3\u4e3a\u5bfc\u5411\u8fdb\u884c\u5b66\u4e60\u3002\u5e0c\u671b\u80fd\u591f\u5e2e\u52a9\u5927\u5bb6\u63d0\u9ad8\u7406\u8bba\u3001\u62bd\u8c61\u3001\u8bbe\u8ba1\u7684\u80fd\u529b\u3002\u5728\u624e\u5b9e\u7684\u7ecf\u5178\u7406\u8bba\u57fa\u7840\u4e0a\uff0c\u8fd0\u7528\u95ee\u9898\u62bd\u8c61\u3001\u6570\u636e\n\u62bd\u8c61\u3001\u7b97\u6cd5\u62bd\u8c61\u6765\u5206\u6790\u95ee\u9898\uff0c\u5e94\u7528\u9002\u5f53\u7684\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u6765\u8bbe\u8ba1\u548c\u5b9e\u73b0\u76f8\u5e94\u7684\u7a0b\u5e8f\u3002\u901a\u8fc7\u8bfe\u7a0b\u5b66\u4e60\uff0c\u5927\u5bb6\u7684\u62bd\u8c61\u601d\u7ef4\u80fd\u529b\u3001\u95ee\u9898\u6c42\u89e3\u80fd\u529b\u5c06\u5f97\u5230\u8f83\u5927\u63d0\u5347\uff0c\u7f16\u7a0b\u80fd\u529b\u548c\u4ee3\u7801\u8d28\u91cf\u4f1a\n\u6709\u8d28\u7684\u98de\u8dc3\uff01\n\n\u5728\u6c42\u89e3\u5b9e\u9645\u95ee\u9898\u65b9\u9762\uff0c\u6211\u4eec\u4f1a\u5b66\u4e60\u5230\u901a\u8fc7\u6743\u8861\u65f6\u7a7a\u548c\u5176\u4ed6\u8d44\u6e90\u5f00\u9500\uff0c\u5229\u7528\u6570\u636e\u7ed3\u6784\u6765\u7ec4\u7ec7\u6570\u636e\u3001\u8bbe\u8ba1\u9ad8\u6548\u7684\u7b97\u6cd5\u3001\u5b8c\u6210\u9ad8\u8d28\u91cf\u7684\u7a0b\u5e8f\u4ee5\u6ee1\u8db3\u9519\u7efc\u590d\u6742\u7684\u5b9e\u9645\u5e94\u7528\u9700\u8981\u3002\n\n\u6b64\u5916\uff0c\u8bfe\u7a0b\u6240\u5b66\u5230\u7684\u5185\u5bb9\u4f1a\u88ab\u5229\u7528\u5230\u8ba1\u7b97\u673a\u79d1\u5b66\u540e\u7eed\u7684\u5404\u4e2a\u8bfe\u7a0b\u4e2d\uff0c\u5982\u64cd\u4f5c\u7cfb\u7edf\u3001\u8f6f\u4ef6\u5de5\u7a0b\u3001\u6570\u636e\u5e93\u6982\u8bba\u3001\u7f16\u8bd1\u6280\u672f\u3001\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u3001\u4eba\u673a\u4ea4\u4e92\u7b49\u3002\u5e0c\u671b\u53ef\u4ee5\u4e3a\u5927\u5bb6\u5c06\u6765\u4ece\u4e8b\u8ba1\u7b97\n\u673a\u76f8\u5173\u7684\u5b66\u4e60\u3001\u7814\u7a76\u548c\u5f00\u53d1\u5de5\u4f5c\u6253\u4e0b\u624e\u5b9e\u7684\u57fa\u7840\u3002\n\n\u672c\u8bfe\u7a0b\u91c7\u7528\u5f20\u94ed\u4e3b\u7f16\u7684\u56fd\u5bb6\u201c\u5341\u4e00\u4e94\u201d\u89c4\u5212\u6559\u6750\u300a\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u300b\uff08\u9ad8\u7b49\u6559\u80b2\u51fa\u7248\u793e\uff09\u3002\u9002\u5408\u8ba1\u7b97\u673a\u4ee5\u53ca\u76f8\u5173\u7406\u5de5\u4e13\u4e1a\u7684\u5927\u4e8c\u672c\u79d1\u751f\u5b66\u4e60\uff0c\u9700\u8981\u5148\u4fee\u8fc7\u8ba1\u7b97\u6982\u8bba\u7b49\u8bfe\u7a0b\uff0c\u5177\u6709\u7ed3\n\u6784\u5316\u548c\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u3002\n\n\u8bfe\u7a0b\u4e3b\u8981\u5305\u62ec\u7684\u5185\u5bb9\u6709\uff1a\u7ebf\u6027\u8868\uff0c\u6808\u4e0e\u961f\u5217\uff0c\u5b57\u7b26\u4e32\uff0c\u4e8c\u53c9\u6811\uff0c\u6811\uff0c\u56fe\uff0c\u6392\u5e8f\uff08\u5185\u6392\u5e8f\uff0c\u5916\u6392\u5e8f\uff09\uff0c\u68c0\u7d22\uff0c\u7d22\u5f15\u3001\u4ee5\u53ca\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u3002\u8bfe\u7a0b\u6301\u7eed14\u5468\uff0c\u5b66\u4e60\u8005\u6bcf\u5468\u5728\u672c\u8bfe\u7a0b\u4e0a\u9700\n\u8981\u6295\u51654\uff0d8\u5c0f\u65f6\u3002\u4f5c\u4e3a\u5b8c\u6210\u8bfe\u7a0b\u5b66\u4e60\u7684\u8981\u6c42\uff0c\u5b66\u751f\u9700\u8981\u719f\u6089\u6559\u6750\u6709\u5173\u7ae0\u8282\u7684\u5185\u5bb9\uff0c\u72ec\u7acb\u6b63\u786e\u5730\u5b8c\u6210\u4f5c\u4e1a\u548c\u8003\u8bd5\uff0c\u8fbe\u523060%\u7684\u6210\u7ee9\u5c31\u80fd\u83b7\u5f97\u5317\u5927\u7684\u8bfe\u7a0b\u7ed3\u4e1a\u8bc1\u4e66\uff08\u83b7\u5f9780%\u4ee5\n\u4e0a\u7684\u6210\u7ee9\uff0c\u80fd\u5f97\u5230\u4f18\u79c0\u8bc1\u4e66\uff09\u3002\n\n\u8be5\u8bfe\u7a0b\u662f\u201c\u5317\u5927-\u5fb7\u7a3b\u7f51\u7edc\u516c\u5f00\u8bfe\u7a0b\u201d\u4e2d\u7684\u4e00\u95e8\uff0c\u7531\u5317\u4eac\u5927\u5b66\u4e0e\u5fb7\u7a3b\u6559\u80b2\u8054\u5408\u63d0\u4f9b\u3002  \n\nComputer, as an important tool for problem solving, has been deeply involved\nin every aspect of people\u2019s daily lives. Data are the quantities on which\noperations are performed on computers. What is the logical relationship among\ndata? How are the data stored in computers? What algorithms should be operated\nto solve the problems on the data? These are the questions that will be\nanswered in \u201cData Structures and Algorithms\u201d, one of the most important core\ncourses in Computer Science. The course also covers fundamental data\nstructures and classical algorithms which are widely used in the succeeding\nspecialized courses, such as Operating Systems, Software Engineering, Database\nSystems, Compiler Principles, Computer Graphics and Human Computer\nInteraction.\n\nWhat is the combination of data structures and algorithms? Niklaus Wirth wrote\na book titled \"Algorithms + Data Structures = Programs\", which points out\ntheir important roles in computing discipline: algorithm and data structure\nare two closely linked and indivisible parts of programming.\n\nThe course will follow the idea of  \u201cAlgorithms + Data Structures = Programs\u201d,\naimed at improving  students\u2019 knowledge and skills of theory, abstraction and\ndesign in problem solving. On a solid basis of the fundamental theory, the\nstudents will analyze the problems using problem, data and algorithm\nabstraction. Making a tradeoff between space and time complexity, the students\nwill learn how to organize data reasonably, design efficient and effective\nalgorithms, and implement high quality programs, so that they can solve real-\nworld complex problems. After studying this course, students should be well\nprepared for further study, engineering and research in computer related\nareas.\n\nThe course uses the textbook \u201cData Structures and Algorithms\u201d written by Prof.\nMing Zhang and two other  coauthors. The course is appropriate for sophomore\nstudents majoring in computer science or other science/engineering\ndisciplines. Students should have learned \"introduction to computing\", with\nthe knowledge of structured and object-oriented programming.\n\nThe course will last for 14 weeks and requires the students to study for 4-8\nhours per week. After studying the course, the students\u2019 ability of abstract\nthinking and problem solving should have improved considerably. Their\nprogramming skills and the quality of their codes would have increased as\nwell.\n\nTo be qualified for graduation in Peking University, the students need to be\nfamiliar about the materials in the textbook, do homework and exam\nindependently, and obtain the score of 60% or more (80% for A score).\n\nThe course is one of the PKU-DeTao MOOCs, which is a joint effort by Peking\nUniversity and DeTao Masters Academy.\n\n## Syllabus\n\n**\u65f6\u95f4\u5b89\u6392**\n\n**\u2022 \u7b2c\u4e00\u5468\uff1a\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u7b80\u4ecb\u4ee5\u53ca\u7ebf\u6027\u8868  \n\u2022 \u7b2c\u4e8c\u5468\uff1a\u6808\u548c\u961f\u5217  \n****\u2022 \u7b2c\u4e09\u5468\uff1a\u5b57\u7b26\u4e32  \n****\u2022 \u7b2c\u56db\u5468\uff1a\u4e8c\u53c9\u6811\uff081\uff09  \n****\u2022 \u7b2c\u4e94\u5468\uff1a\u4e8c\u53c9\u6811\uff082\uff09  \n****\u2022 \u7b2c\u516d\u5468\uff1a\u6811\u4e0e\u68ee\u6797  \n****\u2022 \u7b2c\u4e03\u5468\uff1a\u56fe  \n****\u2022 \u7b2c\u516b\u5468\uff1a\u5185\u6392\u5e8f\uff081\uff09  \n****\u2022 \u7b2c\u4e5d\u5468\uff1a\u5185\u6392\u5e8f\uff082\uff09  \n****\u2022 \u7b2c\u5341\u5468\uff1a\u6587\u4ef6\u7ba1\u7406\u548c\u5916\u6392\u5e8f  \n****\u2022 \u7b2c\u5341\u4e00\u5468\uff1a\u68c0\u7d22  \n****\u2022 \u7b2c\u5341\u4e8c\u5468\uff1a\u7d22\u5f15\u6280\u672f  \n****\u2022 \u7b2c\u5341\u4e09\u5468\uff1a\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\uff081\uff09  \n****\u2022 \u7b2c\u5341\u56db\u5468\uff1a\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\uff082\uff09**\n\n**  \n****\u4efb\u52a1\u5b89\u6392\uff08\u4f5c\u4e1a\u53ca\u8003\u8bd5\uff09**\n\n\u8003\u8bd5\u5206\u4e3a\u671f\u4e2d\u8003\u8bd5\uff0811.25-12.8\uff09\u548c\u671f\u672b\u8003\u8bd5\uff081.13-1.26\u8bfe\u7a0b\u5173\u95ed\u65f6\u95f4\uff09\n\n**\u8bc4\u5206\u65b9\u6848**\n\n\u8bc4\u5206\u6309\u7167\u65e5\u5e38\u4f5c\u4e1a\u7684\u5b8c\u6210\u60c5\u51b5\u548c\u671f\u4e2d\u671f\u672b\u8003\u8bd5\u7684\u7b54\u9898\u60c5\u51b5\u8fdb\u884c\u3002\u5e73\u65f6\uff08\u8bfe\u7a0b\u53c2\u4e0e\uff0910 %\uff0c\u4f5c\u4e1a30 % \uff0cPOJ 20 %\uff0c\u671f\u4e2d 15 %\uff0c\u671f\u672b 25 %\u3002\n\nPOJ\u4f5c\u4e1a\u5728\u7a0b\u5e8f\u81ea\u52a8\u8bc4\u6d4b\u7f51\u7ad9\u53d1\u5e03\uff1a<http://dsalgo.openjudge.cn/>\n\n\u8bfe\u7a0b\u53c2\u4e0e\u5ea6\u8f83\u9ad8\u7684\u540c\u5b66\uff08Meetup\u8ba8\u8bba\u4f1a\u3001\u8bba\u575b\u95ee\u7b54\uff09\uff0c\u53ef\u4ee5\u5f97\u5230\u52a0\u5206\u3002\n\n\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u7684\u5185\u5bb9\u4e0d\u4f5c\u8003\u6838\u8981\u6c42\uff0c\u5982\u679c\u5b66\u751f\u4e3b\u52a8\u5b8c\u6210\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u7684\u4f5c\u4e1a\uff0c\u4e5f\u53ef\u4ee5\u5f97\u5230\u4e00\u5b9a\u52a0\u5206\u3002\n\n\n\n**\u8bc1\u4e66**\n\n\u8bbe\u7f6e\u201c\u5408\u683c\u201d\uff08\u8fbe\u523060%\u6210\u7ee9\uff09\u3001\"\u4f18\u79c0\"\uff08\u8fbe\u523080%\u6210\u7ee9\uff09\u4e24\u6863\u8bfe\u7a0b\u6807\u51c6\uff0c\u7531\u4efb\u8bfe\u6559\u5e08\u7b7e\u53d1\u5317\u5927\u7edf\u4e00\u7684\u8bfe\u7a0b\u7ed3\u4e1a\u8bc1\u4e66\u3002  \n\n",
        "name": "\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5  Data Structures and Algorithms",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Peking University"
        ],
        "url": "https://www.coursera.org/course/dsalgo",
        "video_url": ""
    },
    {
        "date": "2013-10-15",
        "desc": "Lernen Sie die Herausforderungen bei Planung, Entwicklung, Test und Wartung von Websites kennen. Sie erwerben die Kompetenz, W3C-konforme, sichere und performante Webpr&auml;senzen zu entwickeln. &bdquo;Web-Engineering&ldquo; bietet Konzepte, Methoden, Techniken und Werkzeuge f&uuml;r die systematische Entwicklung von Websites und Web-Applikationen.Sie &uuml;ben online den Umgang mit der Infrastruktur und den Werkzeugen, die f&uuml;r die Entwicklung und Wartung einer mit Twitter Bootstrap aufgebauten Website ben&ouml;tigt werden. Sie lernen insbesondere die daf&uuml;r notwendigen technischen und architektonischen Grundlagen. Der Kurs f&uuml;hrt auch in die Sicherheitsproblematik von Websystemen ein. Sie analysieren Angriffsmethoden und entwickeln Gegenma&szlig;nahmen.KursstrukturDer Kurs ist in zwei aufeinanderfolgenden Teilen organisiert: Dieser Kursteil, Web-Engineering I, beginnt am 15. Oktober 2013. Jeder Kursteil umfasst 10 Kapitel mit jeweils 6 bis 8 Lerneinheiten. Der w&ouml;chentliche Zeitaufwand betr&auml;gt ca. 6 Stunden. F&uuml;r Studierende an Hochschulen entspricht der Arbeitsaufwand f&uuml;r den gesamten Kurs 6 ECTS-Leistungspunkten. Im&nbsp;zweiten Teil des Kurses&nbsp;geht es ab dem 17. Januar 2014 zur eigenen HTML5-App.Bei ausreichenden Vorkenntnissen k&ouml;nnen Sie den Kurs auch mit dem zweiten Teil beginnen.LernzielAm Ende des ersten Kursteils \"Web-Engineering I: Grundlagen der Web-Entwicklung\" sollen Sie die folgende Kompetenz erworben haben: Wie entwickle ich im Kundenauftrag eine standardkonforme, barrierefreie, performante und sichere Website?An wen richtet sich dieser Kurs?Der MOOC &bdquo;Web-Engineering&ldquo; richtet sich an Studierende der Informatik, auch Medien- und Wirtschaftsinformatik, an Auszubildende der Fachinformatik mit der Fachrichtung Anwendungsentwicklung und an berufst&auml;tige Web-Designer/innen. F&uuml;r Studierende der TH Mittelhessen im Fachbereich MNI ist der MOOC &bdquo;Web-Engineering&ldquo; &auml;quivalent zum Bachelor-Modul &bdquo;Internetbasierte Systeme&ldquo; (CS 1024).KurszertifikateSie erhalten f&uuml;r jeden Kursteil ein Zertifikat, wenn Sie die folgenden Leistungen erbracht haben:Web-Engineering I: Bestehen der Online-Abschlusspr&uuml;fung des ersten Kursteils und Erstellen einer WebsiteWeb-Engineering II: Bestehen der Online-Abschlusspr&uuml;fung des zweiten Kursteils und Erstellen einer HTML5-AppVoraussetzung f&uuml;r die KursteilnahmeSie sollten grundlegende Kenntnisse in der Programmierung mitbringen. F&uuml;r die Entwicklungswerkzeuge ist ein leistungsf&auml;higer Laptop- oder Desktop-Rechner erforderlich, auf dem Sie Administratorrechte haben.Die im Kurs eingesetzten Lernressourcen (Websites, YouTube-Videos) sind vorwiegend in Englisch, deshalb sollten Sie gute Englischkenntnisse mitbringen.Unsere KompetenzenWer einen Online-Kurs wie &bdquo;Web-Engineering&ldquo; anbietet, sollte entsprechende Referenzen aufweisen k&ouml;nnen. In den letzten Jahren haben wir in den Bereichen E-Learning und Suchmaschinen mehrere webbasierte Systeme, wie z. B. die universit&auml;re Suchmaschine Pharus, die Lern- und Kollaborations-Plattform eCollab oder das mobile Abstimmungssystem ARSnova, als Open-Source-Projekte entwickelt, stets als studentische Projekte beginnend und in Bachelor- und Masterprojekten zur Marktreife gebracht.R&uuml;ckblickend war es der Kurs &bdquo;Web-Engineering&ldquo;, der die Studierenden f&uuml;r diese Projekte ausreichend vorbereitet hat. Wenn Sie die beiden Kursteile Web-Engineering I und II absolvieren, werden Sie Gleiches leisten k&ouml;nnen.SyllabusKursinhaltSie erlernen die folgenden Inhalte anhand von Lehrvideos, Screencasts und interaktiven Online-&Uuml;bungen und erproben die technischen Aspekte an Beispielen aus der Praxis.Kapitel 1: Einf&uuml;hrung in den MOOC \"Web-Engineering\"Kapitel 2: Starter Kit: Tools f&uuml;r die Website in der CloudKapitel 3: Chronik des Internets: vom ARPANET &uuml;ber HTTP in die CloudKapitel 4: HTTP: Hypertext Transfer ProtocolKapitel 5: Interaktives Praktikum: HTML/CSSKapitel 6: Semantische Textauszeichnung, Unicode &amp; UTF-8, (X)HTML-StandardsKapitel 7: Digitale BarrierefreiheitKapitel 8: Webdesign | Web-UsabilityKapitel 9: Website-Analyse und -OptimierungKapitel 10: Sicherheitsrisiken einer Website",
        "desc_html": "Lernen Sie die Herausforderungen bei Planung, Entwicklung, Test und Wartung\nvon Websites kennen. Sie erwerben die Kompetenz, W3C-konforme, sichere und\nperformante Webprasenzen zu entwickeln. \u201eWeb-Engineering\" bietet Konzepte,\nMethoden, Techniken und Werkzeuge fur die systematische Entwicklung von\nWebsites und Web-Applikationen.\n\nSie uben online den Umgang mit der Infrastruktur und den Werkzeugen, die fur\ndie Entwicklung und Wartung einer mit Twitter Bootstrap aufgebauten Website\nbenotigt werden. Sie lernen insbesondere die dafur notwendigen technischen und\narchitektonischen Grundlagen. Der Kurs fuhrt auch in die\nSicherheitsproblematik von Websystemen ein. Sie analysieren Angriffsmethoden\nund entwickeln Gegenma\u00dfnahmen.\n\n**Kursstruktur**\n\nDer Kurs ist in zwei aufeinanderfolgenden Teilen organisiert: Dieser Kursteil,\nWeb-Engineering I, beginnt am 15. Oktober 2013. Jeder Kursteil umfasst 10\nKapitel mit jeweils 6 bis 8 Lerneinheiten. Der wochentliche Zeitaufwand\nbetragt ca. 6 Stunden. Fur Studierende an Hochschulen entspricht der\nArbeitsaufwand fur den gesamten Kurs 6 ECTS-Leistungspunkten. Im [zweiten Teil\ndes Kurses](https://www.iversity.org/courses/web-engineering-ii-entwicklung-\nmobiler-html5-apps) geht es ab dem 17. Januar 2014 zur eigenen HTML5-App.\n\nBei ausreichenden Vorkenntnissen konnen Sie den Kurs auch mit dem zweiten Teil\nbeginnen.\n\n**Lernziel**\n\nAm Ende des ersten Kursteils \"Web-Engineering I: Grundlagen der Web-\nEntwicklung\" sollen Sie die folgende Kompetenz erworben haben: Wie entwickle\nich im Kundenauftrag eine standardkonforme, barrierefreie, performante und\nsichere Website?\n\n**An wen richtet sich dieser Kurs?**\n\nDer MOOC \u201eWeb-Engineering\" richtet sich an Studierende der Informatik, auch\nMedien- und Wirtschaftsinformatik, an Auszubildende der Fachinformatik mit der\nFachrichtung Anwendungsentwicklung und an berufstatige Web-Designer/innen. Fur\nStudierende der TH Mittelhessen im Fachbereich MNI ist der MOOC \u201eWeb-\nEngineering\" aquivalent zum Bachelor-Modul \u201eInternetbasierte Systeme\" (CS\n1024).\n\n**Kurszertifikate**\n\nSie erhalten fur jeden Kursteil ein Zertifikat, wenn Sie die folgenden\nLeistungen erbracht haben:\n\n  * Web-Engineering I: Bestehen der Online-Abschlussprufung des ersten Kursteils und Erstellen einer Website\n  * Web-Engineering II: Bestehen der Online-Abschlussprufung des zweiten Kursteils und Erstellen einer HTML5-App\n**Voraussetzung fur die Kursteilnahme**\n\nSie sollten grundlegende Kenntnisse in der Programmierung mitbringen. Fur die\nEntwicklungswerkzeuge ist ein leistungsfahiger Laptop- oder Desktop-Rechner\nerforderlich, auf dem Sie Administratorrechte haben.\n\nDie im Kurs eingesetzten Lernressourcen (Websites, YouTube-Videos) sind\nvorwiegend in Englisch, deshalb sollten Sie gute Englischkenntnisse\nmitbringen.\n\n**Unsere Kompetenzen**\n\nWer einen Online-Kurs wie \u201eWeb-Engineering\" anbietet, sollte entsprechende\nReferenzen aufweisen konnen. In den letzten Jahren haben wir in den Bereichen\nE-Learning und Suchmaschinen mehrere webbasierte Systeme, wie z. B. die\nuniversitare Suchmaschine Pharus, die Lern- und Kollaborations-Plattform\neCollab oder das mobile Abstimmungssystem ARSnova, als Open-Source-Projekte\nentwickelt, stets als studentische Projekte beginnend und in Bachelor- und\nMasterprojekten zur Marktreife gebracht.\n\nRuckblickend war es der Kurs \u201eWeb-Engineering\", der die Studierenden fur diese\nProjekte ausreichend vorbereitet hat. Wenn Sie die beiden Kursteile Web-\nEngineering I und II absolvieren, werden Sie Gleiches leisten konnen.\n\n## Syllabus\n\n**Kursinhalt**\n\nSie erlernen die folgenden Inhalte anhand von Lehrvideos, Screencasts und\ninteraktiven Online-\u00dcbungen und erproben die technischen Aspekte an Beispielen\naus der Praxis.\n\n  * Kapitel 1: Einfuhrung in den MOOC \"Web-Engineering\"\n  * Kapitel 2: Starter Kit: Tools fur die Website in der Cloud\n  * Kapitel 3: Chronik des Internets: vom ARPANET uber HTTP in die Cloud\n  * Kapitel 4: HTTP: Hypertext Transfer Protocol\n  * Kapitel 5: Interaktives Praktikum: HTML/CSS\n  * Kapitel 6: Semantische Textauszeichnung, Unicode & UTF-8, (X)HTML-Standards\n  * Kapitel 7: Digitale Barrierefreiheit\n  * Kapitel 8: Webdesign | Web-Usability\n  * Kapitel 9: Website-Analyse und -Optimierung\n  * Kapitel 10: Sicherheitsrisiken einer Website\n\n",
        "name": "Web-Engineering I: Grundlagen der Web-Entwicklung",
        "provider": "iversity",
        "rating": "1",
        "reviews": "3",
        "university": [],
        "url": "https://iversity.org/courses/web-engineering-i-grundlagen-der-web-entwicklung",
        "video_url": "https://www.youtube.com/embed/ogdV3O5C6ZY?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-10-14",
        "desc": "The course will focus on database design, executing structured query language (SQL) scripts in MySQL workbench, and data analysis in healthcare. Statistical analysis and data mining techniques will also be discussed along with methods for deploying these techniques using open-access analytical software, R.The program has been approved for 12 continuing education units for use in fulfilling the continuing education requirements of the American Health Information Management Association (AHIMA).",
        "desc_html": "The course will focus on database design, executing structured query language\n(SQL) scripts in MySQL workbench, and data analysis in healthcare. Statistical\nanalysis and data mining techniques will also be discussed along with methods\nfor deploying these techniques using open-access analytical software, R.  \n  \nThe program has been approved for 12 continuing education units for use in\nfulfilling the continuing education requirements of the American Health\nInformation Management Association (AHIMA).\n\n",
        "name": "Health Data Analytics",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [
            "The College of St. Scholastica"
        ],
        "url": "http://www.css.edu/Graduate/Non-Degree/Massive-Open-Online-Courses/Health-Data-Analytics-MOOC.html",
        "video_url": ""
    },
    {
        "date": "2013-10-14",
        "desc": "The course provides an overview of C++ for the experienced C programmer. You will learn how C++ is more powerful than C. The C++ STL library will be featured. This library allows C++ programmers to code generically, efficiently and at a high level. You will learn how to write basic graph algorithms such as the shortest path algorithm. You'll then put this skill to use in a programming assignment aimed at producing an intelligent hex player.",
        "desc_html": "The course provides an overview of C++ for the experienced C programmer. You\nwill learn how C++ is more powerful than C. The C++ STL library will be\nfeatured. This library allows C++ programmers to code generically, efficiently\nand at a high level. You will learn how to write basic graph algorithms such\nas the shortest path algorithm. You'll then put this skill to use in a\nprogramming assignment aimed at producing an intelligent hex player.  \n\n",
        "name": "C++ For C Programmers",
        "provider": "Coursera",
        "rating": "3",
        "reviews": "2",
        "university": [
            "University of California, Santa Cruz"
        ],
        "url": "https://www.coursera.org/course/cplusplus4c",
        "video_url": ""
    },
    {
        "date": "2013-10-07",
        "desc": "Vous voulez comprendre l'arithm\u00e9tique ? Vous souhaitez d\u00e9couvrir une application des math\u00e9matiques \u00e0 la vie quotidienne ? Ce cours est fait pour vous ! De niveau premi\u00e8re ann\u00e9e d'universit\u00e9, vous apprendrez les bases de l'arithm\u00e9tique (division euclidienne, th\u00e9or\u00e8me de B\u00e9zout, nombres premiers, congruence).Vous vous \u00eates d\u00e9j\u00e0 demand\u00e9 comment sont s\u00e9curis\u00e9es les transactions sur Internet ? Vous d\u00e9couvrirez les bases de la cryptographie, en commen\u00e7ant par les codes les plus simples pour aboutir au code RSA. Le code RSA est le code utilis\u00e9 pour crypter les communications sur internet. Il est bas\u00e9 sur de l'arithm\u00e9tique assez simple que l'on comprendra en d\u00e9tail. Vous pourrez en plus mettre en pratique vos connaissances par l'apprentissage de notions sur le langage de programmation Python.Vous travaillerez \u00e0 l'aide de cours \u00e9crits et de vid\u00e9os, d'exercices corrig\u00e9s en vid\u00e9os, des quiz, des travaux pratiques. Le cours est enti\u00e8rement gratuit !",
        "desc_html": "Vous voulez comprendre l'arithm\u00e9tique ? Vous souhaitez d\u00e9couvrir une\napplication des math\u00e9matiques \u00e0 la vie quotidienne ? Ce cours est fait pour\nvous ! De niveau premi\u00e8re ann\u00e9e d'universit\u00e9, vous apprendrez les bases de\nl'arithm\u00e9tique (division euclidienne, th\u00e9or\u00e8me de B\u00e9zout, nombres premiers,\ncongruence).  \n  \nVous vous \u00eates d\u00e9j\u00e0 demand\u00e9 comment sont s\u00e9curis\u00e9es les transactions sur\nInternet ? Vous d\u00e9couvrirez les bases de la cryptographie, en commen\u00e7ant par\nles codes les plus simples pour aboutir au code RSA. Le code RSA est le code\nutilis\u00e9 pour crypter les communications sur internet. Il est bas\u00e9 sur de\nl'arithm\u00e9tique assez simple que l'on comprendra en d\u00e9tail. Vous pourrez en\nplus mettre en pratique vos connaissances par l'apprentissage de notions sur\nle langage de programmation Python.  \n  \nVous travaillerez \u00e0 l'aide de cours \u00e9crits et de vid\u00e9os, d'exercices corrig\u00e9s\nen vid\u00e9os, des quiz, des travaux pratiques. Le cours est enti\u00e8rement gratuit !\n\n",
        "name": "Arithm\u00e9tique: en route pour la cryptographie",
        "provider": "Canvas.net",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Universit\u00e9 Lille 1"
        ],
        "url": "https://www.canvas.net/courses/arithm-tique-en-route-pour-la-cryptographie",
        "video_url": ""
    },
    {
        "date": "2013-10-06",
        "desc": "How to    and critique infographics and visualizations in newspapers, books, TV, etc., and how to propose alternatives that would improve them.How to plan for data-based storytelling through charts, maps, and diagrams.How to design infographics and visualizations that are not just attractive but, above all, informative, deep, and accurate.The rules of graphic design and of interaction design, applied to infographics and visualizations.Optional: How to use Adobe Illustrator to create infographics. Graphicthe University of Texas at Austin Knight Center for Journalism in the Americas",
        "desc_html": "How to and critique infographics and visualizations in newspapers, books, TV,\netc., and how to propose alternatives that would improve them.  \n  \nHow to plan for data-based storytelling through charts, maps, and diagrams.  \n  \nHow to design infographics and visualizations that are not just attractive\nbut, above all, informative, deep, and accurate.  \n  \nThe rules of graphic design and of interaction design, applied to infographics\nand visualizations.  \n  \nOptional: How to use Adobe Illustrator to create infographics. Graphic  \nthe University of Texas at Austin Knight Center for Journalism in the Americas\n\n",
        "name": "Introduction to Infographics and Data Visualization",
        "provider": "Independent",
        "rating": "3.25",
        "reviews": "4",
        "university": [
            "Knight Center for Journalism in the Americas"
        ],
        "url": "http://open.journalismcourses.org/",
        "video_url": "https://www.youtube.com/embed/oYHuoj8CnBM?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-10-02",
        "desc": "Mobile devices, phones as well as Tablet computers, have been spreading fast across the globe. Spread of mobile phones in developing countries has been spectacular. More people have access to cell phones today than to clean water.Mobile communication and computing technologies have much potential to contribute to human development. This is already felt in some measure in learning. There are reports of new advantages and benefits in key other sectors such as agriculture and food production and rural credit and finance. This course is about important concepts and practices in mobile technologies that are relevant to learning and education, agricultural extension and rural credit and finance.",
        "desc_html": "Mobile devices, phones as well as Tablet computers, have been spreading fast\nacross the globe. Spread of mobile phones in developing countries has been\nspectacular. More people have access to cell phones today than to clean water.  \n  \nMobile communication and computing technologies have much potential to\ncontribute to human development. This is already felt in some measure in\nlearning. There are reports of new advantages and benefits in key other\nsectors such as agriculture and food production and rural credit and finance.\nThis course is about important concepts and practices in mobile technologies\nthat are relevant to learning and education, agricultural extension and rural\ncredit and finance.\n\n",
        "name": "Mobiles for Development",
        "provider": "Commonwealth of Learning",
        "rating": "0",
        "reviews": "0",
        "university": [
            "IIT (Indian Institute of Technology, Kanpur)"
        ],
        "url": "http://m4d.colfinder.org/",
        "video_url": "https://www.youtube.com/embed/p_xjBT8zVdA?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-09-16",
        "desc": "The course \"Learning in the Cloud\" will give you the opportunity to join the camp of \"Cloud Computing\" giving you direct application knowledge to create innovative experiences in your learning environment or job training.The tools you will learn in this course are customizable, innovative and provide free services.Optimizing cost and time in training processes.&nbsp;Syllabus&nbsp;What is the cloud?Cloud ComputingLearning in the CloudBenefits and learning achievement in the cloudLearning Tools in the CloudPresentation tools: Prezi, Cacoo, GlogsterA Toolkit Documentation: Dropbox, Dipity and bloggerCollaboration Tools: Google Drive, Padlet and WikispacesCommunication Tools: Skype, Podomatic and social networksMultimedia Tools: GoAnimate and XtranormalInteractive Tools: Educaplay and Quizrevolution&nbsp;&nbsp;",
        "desc_html": "The course \"Learning in the Cloud\" will give you the opportunity to join the\ncamp of \"Cloud Computing\" giving you direct application knowledge to create\ninnovative experiences in your learning environment or job training. The tools\nyou will learn in this course are customizable, innovative and provide free\nservices. Optimizing cost and time in training processes.\n\n## Syllabus\n\n\n\n  * What is the cloud?\n  * Cloud Computing\n  * Learning in the Cloud\n  * Benefits and learning achievement in the cloud\n  * Learning Tools in the Cloud\n  * Presentation tools: Prezi, Cacoo, Glogster\n  * A Toolkit Documentation: Dropbox, Dipity and blogger\n  * Collaboration Tools: Google Drive, Padlet and Wikispaces\n  * Communication Tools: Skype, Podomatic and social networks\n  * Multimedia Tools: GoAnimate and Xtranormal\n  * Interactive Tools: Educaplay and Quizrevolution\n\n\n\n\n\n",
        "name": "Aprendizaje en la Nube, Herramientas web en el Aula",
        "provider": "Telescopio",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Galileo University"
        ],
        "url": "http://telescopio.galileo.edu/curso/aprendizaje-en-la-nube/",
        "video_url": "https://www.youtube.com/embed/SB5VgaBuJZk?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-09-04",
        "desc": "Phones, diesel engines, animated newspapers, medical devices, games, political\n    campaigns, medical research, mining, transportation systems, ... and so\n    on, and on, and on... every day more of the world around us is at least\n    partly run by computer programs. This means that being able to design programs\n    - or at least be able to work with people who design programs - is becoming\n    a more and more valuable skill.To build your own programs you need to know two things: how to use the\n    specific programming language and libraries needed, and the more general\n    skill of how to design a program.This course presents adesign methodthat will enable you to approach\n    the design of complex programs systematically. The method will work for\n    programs in this course as well as hard to design programs you develop\n    in the future.Using this method you will learn how to model the information in a problem\n    domain, how to structure program data to mirror that information and how\n    to further structure the data to lead to a well organized program. You\n    will also learn to distinguish those parts of a program that are naturally\n    data driven, from those that should use an alternative algorithmic approach.\n    The method uses unit-tests to both produce a better developed design, and\n    to test your program as you develop it.In the first course -- Part 1 -- we use a simple\n    teaching language to cover the core of the design method. In Part 1 we cover various forms of data; simple interactive programs like games and animations; storing information in and rendering trees; and finally exploring search programs: programs that solve puzzles like Sudoku boards.&nbsp;A second phase of the course, to be offered later, &nbsp;will consist of parallel tracks, with each track using a different popular\n    programming language and focusing on a different kind of problem. This\n    will help you bring the design method to whatever language and problem\n    domain interests you.SyllabusWeek One: Introduction and the structure of the course. The Beginning\nStudent Language; expressions and evaluation rules; primitive\noperations on numbers, strings and images. The How to Design Functions\n(HtDF) Recipe.Week Two: Representing information as data. The How to Design Data\n(HtDD) recipe. Atomic forms of data including intervals, enumerations,\nand itemizations.Week Three: The design of simple interactive programs. The big-bang\nuser interface framework. The How to Design Worlds (HtDW)\nrecipe. Representing information where two or more values naturally\nform a whole using compound data.Week Four: Representing arbitrary sized information using\nlists. Decomposition of information into multiple types.Week Five: Functions operating on natural numbers. A parlor\ntrick. Rules for decomposing functions.Week Six: List abbreviations. Mutual reference allows more complex\narbitrary-sized data. Using binary trees to enable fast lookup of\ninformation. Using arbitrary arity trees to represent inherently\nhierarchical information.Week Seven: Functions that consume two arguments that have 'one-of' in\ntheir types. Using local definitions to improve the structure of\nprograms.Week Eight: Using abstraction to control reduce repetition and\ncomplexity in programs.Week Nine: Generative recursion, fractals and search problems.",
        "desc_html": "Phones, diesel engines, animated newspapers, medical devices, games, political\ncampaigns, medical research, mining, transportation systems, ... and so on,\nand on, and on... every day more of the world around us is at least partly run\nby computer programs. This means that being able to design programs \\- or at\nleast be able to work with people who design programs - is becoming a more and\nmore valuable skill.\n\nTo build your own programs you need to know two things: how to use the\nspecific programming language and libraries needed, and the more general skill\nof how to design a program.\n\nThis course presents a **design method** that will enable you to approach the\ndesign of complex programs systematically. The method will work for programs\nin this course as well as hard to design programs you develop in the future.\n\nUsing this method you will learn how to model the information in a problem\ndomain, how to structure program data to mirror that information and how to\nfurther structure the data to lead to a well organized program. You will also\nlearn to distinguish those parts of a program that are naturally data driven,\nfrom those that should use an alternative algorithmic approach. The method\nuses unit-tests to both produce a better developed design, and to test your\nprogram as you develop it.\n\nIn the first course -- Part 1 -- we use a simple teaching language to cover\nthe core of the design method. In Part 1 we cover various forms of data;\nsimple interactive programs like games and animations; storing information in\nand rendering trees; and finally exploring search programs: programs that\nsolve puzzles like Sudoku boards.\n\nA second phase of the course, to be offered later,  will consist of parallel\ntracks, with each track using a different popular programming language and\nfocusing on a different kind of problem. This will help you bring the design\nmethod to whatever language and problem domain interests you.  \n\n## Syllabus\n\nWeek One: Introduction and the structure of the course. The Beginning Student\nLanguage; expressions and evaluation rules; primitive operations on numbers,\nstrings and images. The How to Design Functions (HtDF) Recipe.\n\nWeek Two: Representing information as data. The How to Design Data (HtDD)\nrecipe. Atomic forms of data including intervals, enumerations, and\nitemizations.\n\nWeek Three: The design of simple interactive programs. The big-bang user\ninterface framework. The How to Design Worlds (HtDW) recipe. Representing\ninformation where two or more values naturally form a whole using compound\ndata.\n\nWeek Four: Representing arbitrary sized information using lists. Decomposition\nof information into multiple types.\n\nWeek Five: Functions operating on natural numbers. A parlor trick. Rules for\ndecomposing functions.\n\nWeek Six: List abbreviations. Mutual reference allows more complex arbitrary-\nsized data. Using binary trees to enable fast lookup of information. Using\narbitrary arity trees to represent inherently hierarchical information.\n\nWeek Seven: Functions that consume two arguments that have 'one-of' in their\ntypes. Using local definitions to improve the structure of programs.\n\nWeek Eight: Using abstraction to control reduce repetition and complexity in\nprograms.\n\nWeek Nine: Generative recursion, fractals and search problems.\n\n",
        "name": "Introduction to Systematic Program Design - Part 1",
        "provider": "Coursera",
        "rating": "4.6666666666667",
        "reviews": "3",
        "university": [
            "The University of British Columbia"
        ],
        "url": "https://www.coursera.org/course/programdesign",
        "video_url": ""
    },
    {
        "date": "2013-09-03",
        "desc": "Recommender\n systems have changed the way people find products, information, and even \nother people. They study patterns of behavior to know what someone will \nprefer from among a collection of things he has never experienced. The \ntechnology behind recommender systems has evolved over the past 20 years\n into a rich collection of tools that enable the practitioner or \nresearcher to develop effective recommenders. We will study the most \nimportant of those tools, including how they work, how to use them, how \nto evaluate them, and their strengths and weaknesses in practice.The\n algorithms we will study include content-based filtering, user-user \ncollaborative filtering, item-item collaborative filtering, dimensionality \nreduction, and interactive critique-based recommenders. The approach \nwill be hands-on, with six two week projects, each of which will involve\n implementation and evaluation of some type of recommender.In addition to topical lectures, this course includes interviews and \nguest lectures with experts from both academia and industry.Two Ways to Take this Course:This course is designed to support two different types of students and educational goals:Programming Track: \u00a0Designed\n for students with significant programming and mathematics experience \n(see below), the programming track combines a conceptual and \nmathematical understanding of recommender systems with experience \nprogramming six different recommender systems projects. \u00a0Students \ncompleting this travel will gain the skills needed to implement basic \nrecommenders from scratch, and to use software libraries and tools to \nimplement more advanced recommenders.Concepts Track:Students who are not experienced programmers, or who are primarily \ninterested in understanding the concepts and techniques of recommender \nsystems, without learning to program them, can choose to focus on the \nconceptual and mathematical content, skipping the programming projects \nand associated lecture content.\u00a0 Students in the concepts track are \nstill expected to have significant familiarity with computing systems \nand college-level mathematics, but need not be accomplished programmers.\n \u00a0We expect this track to be useful for tech-savvy marketing and \nbusiness leaders, as well as engineering managers who may oversee but \nnot directly develop recommender systems. \u00a0We also hope it will be \nuseful to those looking to understand recommender systems concepts \nwithout the workload associated with programming those systems.SyllabusTopics covered:Week 1:Introduction to Course and to Recommender SystemsWeeks 2 and 3:Non-Personalized RecommendersUnderstanding Ratings, Predictions, and RecommendationsScales and NormalizationInterview with Anthony Jameson (DFKI AI Labs)Weeks 4 and 5:Content-Based RecommendersInferring PreferencesUnary RatingsKnowledge-Based RecommendersIntroduction to LensKit ToolkitInterviews with Robin Burke (DePaul University) and Barry Smyth (University College Dublin)Weeks 6 and 7:Collaborative FilteringUser-User k-Nearest Neighbor ApproachTuning CF AlgorithmsInterviews with Paul Resnick (University of Michigan), Jen Golbeck (University of Maryland) and Dan Cosley(Cornell University)Weeks 8 and 9:Evaluation and Metrics;Error Metrics;Decision-Support MetricsComparative Evaluation: Dead Data vs. Laboratory vs. Field StudyUser-Centered Metrics and EvaluationData SetsInterview with Neal Lathia (University of Cambridge)Weeks 10 and 11:Collaborative Filtering IIItem-Item k-Nearest NeighborBusiness RulesAdjustments for Serendipity and DiversityPerformance ComparisonsHybrid AlgorithmsInterviews with Brad Miller (Luther College) and Robin Burke (DePaul University)Weeks 12 and 13:Dimensionality Reduction RecommendersConcepts behind Latent Semantic Analysis and Singular Value DecompositionWeek 14:Alternative Recommender ApproachesInteractive RecommendersCritique and Dialog-based ApproachesAdvanced TopicsResourcesInterview with Anthony Jameson (DFKI AI Labs), Francesco Ricci (Free University of Bozen-Bolzano), Xavier Amatriain (NetFlix) and Anmol Bhasin (LinkedIn)Conclusion",
        "desc_html": "Recommender systems have changed the way people find products, information,\nand even other people. They study patterns of behavior to know what someone\nwill prefer from among a collection of things he has never experienced. The\ntechnology behind recommender systems has evolved over the past 20 years into\na rich collection of tools that enable the practitioner or researcher to\ndevelop effective recommenders. We will study the most important of those\ntools, including how they work, how to use them, how to evaluate them, and\ntheir strengths and weaknesses in practice.\n\nThe algorithms we will study include content-based filtering, user-user\ncollaborative filtering, item-item collaborative filtering, dimensionality\nreduction, and interactive critique-based recommenders. The approach will be\nhands-on, with six two week projects, each of which will involve\nimplementation and evaluation of some type of recommender.\n\nIn addition to topical lectures, this course includes interviews and guest\nlectures with experts from both academia and industry.  \n\n**Two Ways to Take this Course**:\n\nThis course is designed to support two different types of students and\neducational goals:\n\n_Programming Track_: \u00a0Designed for students with significant programming and\nmathematics experience (see below), the programming track combines a\nconceptual and mathematical understanding of recommender systems with\nexperience programming six different recommender systems projects. \u00a0Students\ncompleting this travel will gain the skills needed to implement basic\nrecommenders from scratch, and to use software libraries and tools to\nimplement more advanced recommenders.\n\n_Concepts Track_: \u00a0Students who are not experienced programmers, or who are\nprimarily interested in understanding the concepts and techniques of\nrecommender systems, without learning to program them, can choose to focus on\nthe conceptual and mathematical content, skipping the programming projects and\nassociated lecture content.\u00a0 Students in the concepts track are still expected\nto have significant familiarity with computing systems and college-level\nmathematics, but need not be accomplished programmers. \u00a0We expect this track\nto be useful for tech-savvy marketing and business leaders, as well as\nengineering managers who may oversee but not directly develop recommender\nsystems. \u00a0We also hope it will be useful to those looking to understand\nrecommender systems concepts without the workload associated with programming\nthose systems.  \n\n## Syllabus\n\n**_Topics covered_**:   \nWeek 1:  \n\n> Introduction to Course and to Recommender Systems  \n\nWeeks 2 and 3:  \n\n> Non-Personalized Recommenders  \nUnderstanding Ratings, Predictions, and Recommendations  \nScales and Normalization  \nInterview with Anthony Jameson (DFKI AI Labs)\n\nWeeks 4 and 5:  \n\n> Content-Based Recommenders  \nInferring Preferences  \nUnary Ratings  \nKnowledge-Based Recommenders  \nIntroduction to LensKit Toolkit  \nInterviews with Robin Burke (DePaul University) and Barry Smyth (University\nCollege Dublin)\n\nWeeks 6 and 7:  \n\n> Collaborative Filtering  \nUser-User k-Nearest Neighbor Approach  \nTuning CF Algorithms  \nInterviews with Paul Resnick (University of Michigan), Jen Golbeck (University\nof Maryland) and Dan Cosley(Cornell University)\n\nWeeks 8 and 9:  \n\n> Evaluation and Metrics;  \nError Metrics;  \nDecision-Support Metrics  \nComparative Evaluation: Dead Data vs. Laboratory vs. Field Study  \nUser-Centered Metrics and Evaluation  \nData Sets  \nInterview with Neal Lathia (University of Cambridge)\n\nWeeks 10 and 11:  \n\n> Collaborative Filtering II  \nItem-Item k-Nearest Neighbor  \nBusiness Rules  \nAdjustments for Serendipity and Diversity  \nPerformance Comparisons  \nHybrid Algorithms  \nInterviews with Brad Miller (Luther College) and Robin Burke (DePaul\nUniversity)\n\nWeeks 12 and 13:  \n\n> Dimensionality Reduction Recommenders  \nConcepts behind Latent Semantic Analysis and Singular Value Decomposition  \n\nWeek 14:  \n\n> Alternative Recommender Approaches  \nInteractive Recommenders  \nCritique and Dialog-based Approaches  \nAdvanced Topics  \nResources  \nInterview with Anthony Jameson (DFKI AI Labs), Francesco Ricci (Free\nUniversity of Bozen-Bolzano), Xavier Amatriain (NetFlix) and Anmol Bhasin\n(LinkedIn)  \nConclusion  \n\n  \n\n",
        "name": "Introduction to Recommender Systems",
        "provider": "Coursera",
        "rating": "5",
        "reviews": "2",
        "university": [
            "University of Minnesota"
        ],
        "url": "https://www.coursera.org/course/recsys",
        "video_url": ""
    },
    {
        "date": "2013-08-19",
        "desc": "A computer program is a set of instructions for a computer to follow, just as a recipe is a set of instructions for a chef. Laptops, kitchen appliances, MP3 players, and many other electronic devices all run computer programs. Programs have been written to manipulate sound and video, write poetry, run banking systems, predict the weather, and analyze athletic performance. This course is intended for people who have never seen a computer program. It will give you a better understanding of how computer applications work and teach you how to write your own applications. More importantly, you\u2019ll start to learn computational thinking, which is a fundamental approach to solving real-world problems. Computer programming languages share common fundamental concepts, and this course will introduce you to those concepts using the Python programming language. By the end of this course, you will be able to write your own programs to process data from the web and create interactive text-based games.",
        "desc_html": "A computer program is a set of instructions for a computer to follow, just as\na recipe is a set of instructions for a chef. Laptops, kitchen appliances, MP3\nplayers, and many other electronic devices all run computer programs. Programs\nhave been written to manipulate sound and video, write poetry, run banking\nsystems, predict the weather, and analyze athletic performance. This course is\nintended for people who have never seen a computer program. It will give you a\nbetter understanding of how computer applications work and teach you how to\nwrite your own applications. More importantly, you\u2019ll start to learn\ncomputational thinking, which is a fundamental approach to solving real-world\nproblems. Computer programming languages share common fundamental concepts,\nand this course will introduce you to those concepts using the Python\nprogramming language. By the end of this course, you will be able to write\nyour own programs to process data from the web and create interactive text-\nbased games.\n\n",
        "name": "Learn to Program: The Fundamentals",
        "provider": "Coursera",
        "rating": "4.8714285714286",
        "reviews": "70",
        "university": [
            "University of Toronto"
        ],
        "url": "https://www.coursera.org/course/programming1",
        "video_url": ""
    },
    {
        "date": "2013-08-11",
        "desc": "Quantum computation is a remarkable subject based on one of the great computational discoveries that computers based on quantum mechanics are exponentially powerful. This course aims to make this cutting-edge material broadly accessible to undergraduate students, including computer science majors who do not have any prior exposure to quantum mechanics. The course starts with a simple introduction to the fundamental principles of quantum mechanics using the concepts of qubits (or quantum bits) and quantum gates. This treatment emphasizes the paradoxical nature of the subject, including entanglement, non-local correlations, the no-cloning theorem and quantum teleportation. The course covers the fundamentals of quantum algorithms, including the quantum fourier transform, period finding, Shor's quantum algorithm for factoring integers, as well as the prospects for quantum algorithms for NP-complete problems.",
        "desc_html": "Quantum computation is a remarkable subject based on one of the great\ncomputational discoveries that computers based on quantum mechanics are\nexponentially powerful. This course aims to make this cutting-edge material\nbroadly accessible to undergraduate students, including computer science\nmajors who do not have any prior exposure to quantum mechanics. The course\nstarts with a simple introduction to the fundamental principles of quantum\nmechanics using the concepts of qubits (or quantum bits) and quantum gates.\nThis treatment emphasizes the paradoxical nature of the subject, including\nentanglement, non-local correlations, the no-cloning theorem and quantum\nteleportation. The course covers the fundamentals of quantum algorithms,\nincluding the quantum fourier transform, period finding, Shor's quantum\nalgorithm for factoring integers, as well as the prospects for quantum\nalgorithms for NP-complete problems.\n\n",
        "name": "CS191x: Quantum Mechanics and Quantum Computation",
        "provider": "edX",
        "rating": "3.8333333333333",
        "reviews": "6",
        "university": [
            "University of California, Berkeley"
        ],
        "url": "https://www.edx.org/course/quantum-mechanics-quantum-computation-uc-berkeleyx-cs-191x",
        "video_url": ""
    },
    {
        "date": "2013-07-31",
        "desc": "This course covers database design and the use of database management systems for applications. It includes extensive coverage of the relational model, relational algebra, and SQL. It also covers XML data including DTDs and XML Schema for validation, and the query and transformation languages XPath, XQuery, and XSLT. The course includes database design in UML, and relational design principles based on dependencies and normal forms. Many additional key database topics from the design and application-building perspective are also covered: indexes, views, transactions, authorization, integrity constraints, triggers, on-line analytical processing (OLAP), JSON, and emerging NoSQL systems. Working through the entire course provides comprehensive coverage of the field, but most of the topics are also well-suited for \"a la carte\" learning.",
        "desc_html": "This course covers database design and the use of database management systems\nfor applications. It includes extensive coverage of the relational model,\nrelational algebra, and SQL. It also covers XML data including DTDs and XML\nSchema for validation, and the query and transformation languages XPath,\nXQuery, and XSLT. The course includes database design in UML, and relational\ndesign principles based on dependencies and normal forms. Many additional key\ndatabase topics from the design and application-building perspective are also\ncovered: indexes, views, transactions, authorization, integrity constraints,\ntriggers, on-line analytical processing (OLAP), JSON, and emerging NoSQL\nsystems. Working through the entire course provides comprehensive coverage of\nthe field, but most of the topics are also well-suited for \"a la carte\"\nlearning.\n\n",
        "name": "Introduction to Databases",
        "provider": "UWA Class2GO",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Stanford University"
        ],
        "url": "https://www.class2go.uwa.edu.au/IntroDB/Semester22013/preview/",
        "video_url": ""
    },
    {
        "date": "2013-07-17",
        "desc": "Das Web &ndash; eigentlich nichts anderes als ein einfacher Informationsdienst im Internet &ndash; hat eine ganz neue digitale Welt entstehen lassen, die eng verwoben mit unserer realen Welt fr&uuml;her Unvorstellbares m&ouml;glich macht: sekundenschnelle Kommunikation &uuml;ber Kontinente, Filme auf dem Smartphone anschauen, mit Partnern in entfernten L&auml;ndern spielen oder Fotos anschauen oder vom Sofa aus einkaufen und Bankgesch&auml;fte t&auml;tigen&hellip; In unserem Onlinekurs zu den Web-Technologien lernen Sie, wie das alles funktioniert. Zun&auml;chst besprechen wir die dem Web zugrundeliegenden Basistechnologien URI, HTTP, HTML, CSS und XML. Auch wenn das zun&auml;chst sehr kryptisch klingt, werden Sie schnell verstehen, worum es geht. Wir sehen uns dann Webservices und die Techniken der Webprogrammierung an und &uuml;ben diese ein. Dann werden wir uns mit der Frage besch&auml;ftigen, wie Suchmaschinen, die uns als Webweiser in der digitalen Welt so schnell und zuverl&auml;ssig helfen, Inhalte und Dienstangebote im Web zu finden, eigentlich funktionieren. Der Kurs schlie&szlig;t mit einem Ausblick auf das Cloud Computing, das die Art und Weise, wie wir in Zukunft auf Rechenleistungen zugreifen werden, grundlegend ver&auml;ndert.SyllabusWoche 1:Einf&uuml;hrung in das WWWWoche 2:Woche 2Woche 3:Woche 3Woche 4:Woche 4Exkurs:ExkursWoche 5:Woche 5Woche 6:Woche 6Klausur:Klausur",
        "desc_html": "Das Web - eigentlich nichts anderes als ein einfacher Informationsdienst im\nInternet - hat eine ganz neue digitale Welt entstehen lassen, die eng verwoben\nmit unserer realen Welt fruher Unvorstellbares moglich macht: sekundenschnelle\nKommunikation uber Kontinente, Filme auf dem Smartphone anschauen, mit\nPartnern in entfernten Landern spielen oder Fotos anschauen oder vom Sofa aus\neinkaufen und Bankgeschafte tatigen\u2026 In unserem Onlinekurs zu den Web-\nTechnologien lernen Sie, wie das alles funktioniert. Zunachst besprechen wir\ndie dem Web zugrundeliegenden Basistechnologien URI, HTTP, HTML, CSS und XML.\nAuch wenn das zunachst sehr kryptisch klingt, werden Sie schnell verstehen,\nworum es geht. Wir sehen uns dann Webservices und die Techniken der\nWebprogrammierung an und uben diese ein. Dann werden wir uns mit der Frage\nbeschaftigen, wie Suchmaschinen, die uns als Webweiser in der digitalen Welt\nso schnell und zuverlassig helfen, Inhalte und Dienstangebote im Web zu\nfinden, eigentlich funktionieren. Der Kurs schlie\u00dft mit einem Ausblick auf das\nCloud Computing, das die Art und Weise, wie wir in Zukunft auf\nRechenleistungen zugreifen werden, grundlegend verandert.\n\n## Syllabus\n\n  * **Woche 1:** Einfuhrung in das WWW\n  * **Woche 2:** Woche 2\n  * **Woche 3:** Woche 3\n  * **Woche 4:** Woche 4\n  * **Exkurs:** Exkurs\n  * **Woche 5:** Woche 5\n  * **Woche 6:** Woche 6\n  * **Klausur:** Klausur\n\n",
        "name": "Web-Technologien",
        "provider": "openHPI",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.hpi.de/courses/www",
        "video_url": ""
    },
    {
        "date": "2013-07-15",
        "desc": "The discipline of user experience examines how we interact with the products and systems that surround us; everything from our kitchen appliances to smart phones. This course provides an overview of the general principles of user experience for the online world. You will learn about tools and techniques you can use to begin to create great user experiences. It will address the design of websites and customer interactions for the online world.User experience also involves balancing the needs of users with the business objectives, and resolving any conflicts between the two. Learn why it is so important to learn about your users, and be introduced to some useful tools to help do this, such as user profiling and personas. Students will also learn about the design process itself, and how user-centred design fits with traditional software development cycles.What will I learn?The characteristics of user experience design, usability, and user centred designThe factors that influence interface design, and how to balance these requirementsThe design streams that impact interface design, and design techniques from each stream:Information DesignInteraction DesignVisual DesignHow branding is an important part of user experienceThe importance of accessibility onlineThe importance of knowing your users and:What you need to knowHow to learn about themHow to communicate your findingsKey usability evaluation techniques, including:WalkthroughsUsability testingExpert reviewCompetitor analysisThis course requires approximately 2 - 4 hours of study per week, but can vary depending on the student. This includes watching videos, and taking quizzes and assessments.If you pass this course you'll receive a Certificate of Achievement. While this certificate isn't a formal qualification or credit, you can use it to demonstrate your interest in learning about this area to potential employers or educational institutions.Where could this lead me?If you're wondering what your future could look like in this area, here are some potential careers you could head towards.Social media managerWeb designerWeb developerWeb publisherWebmasterAssistant web designerAssistant web designerTechnical writerWebsite coordinatorWebmaster assistantSyllabusMODULE&nbsp;1:&nbsp;OVERVIEW OF USER EXPERIENCE&nbsp;MODULE&nbsp;2:&nbsp;THE ELEMENTS OF UX&nbsp;MODULE&nbsp;3:&nbsp;KNOWING YOUR USERS&nbsp;",
        "desc_html": "The discipline of user experience examines how we interact with the products\nand systems that surround us; everything from our kitchen appliances to smart\nphones. This course provides an overview of the general principles of user\nexperience for the online world. You will learn about tools and techniques you\ncan use to begin to create great user experiences. It will address the design\nof websites and customer interactions for the online world.\n\nUser experience also involves balancing the needs of users with the business\nobjectives, and resolving any conflicts between the two. Learn why it is so\nimportant to learn about your users, and be introduced to some useful tools to\nhelp do this, such as user profiling and personas. Students will also learn\nabout the design process itself, and how user-centred design fits with\ntraditional software development cycles.\n\n**What will I learn?**\n\n  * The characteristics of user experience design, usability, and user centred design\n  * The factors that influence interface design, and how to balance these requirements\n  * The design streams that impact interface design, and design techniques from each stream: \n    * Information Design\n    * Interaction Design\n    * Visual Design\n  * How branding is an important part of user experience\n  * The importance of accessibility online\n  * The importance of knowing your users and: \n    * What you need to know\n    * How to learn about them\n    * How to communicate your findings\n  * Key usability evaluation techniques, including: \n    * Walkthroughs\n    * Usability testing\n    * Expert review\n    * Competitor analysis\n\nThis course requires approximately 2 - 4 hours of study per week, but can vary\ndepending on the student. This includes watching videos, and taking quizzes\nand assessments.\n\nIf you pass this course you'll receive a Certificate of Achievement. While\nthis certificate isn't a formal qualification or credit, you can use it to\ndemonstrate your interest in learning about this area to potential employers\nor educational institutions.\n\n**Where could this lead me?**\n\nIf you're wondering what your future could look like in this area, here are\nsome potential careers you could head towards.\n\n  * Social media manager\n  * Web designer\n  * Web developer\n  * Web publisher\n  * Webmaster\n  * Assistant web designer\n  * Assistant web designer\n  * Technical writer\n  * Website coordinator\n  * Webmaster assistant\n\n## Syllabus\n\nMODULE 1: OVERVIEW OF USER EXPERIENCE\n\n|  \n---|---  \n  \nMODULE 2: THE ELEMENTS OF UX\n\n|  \n  \nMODULE 3: KNOWING YOUR USERS\n\n|  \n\n",
        "name": "User Experience for the Web",
        "provider": "Open2Study",
        "rating": "4",
        "reviews": "2",
        "university": [],
        "url": "https://www.open2study.com/courses/user-experience-for-the-web",
        "video_url": "https://www.youtube.com/embed/jRNQ3UQQKQw?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-07-02",
        "desc": "This is a course to teach basic Python programming skills through data analysis. The book and course materials are all free and licensed as Creative Commons. There is no complex math in the course, the programs are generally quite short, and the workload is no more than a few hours per week. By the time you complete the course, you will understand be able to read, parse, and manipulate data using Python. Hopefully at the end of the course you will like programming well enough to take another course in programming or web development. The free, reusable, and remixable course materials will be made available for you to download, use and reuse.",
        "desc_html": "This is a course to teach basic Python programming skills through data\nanalysis. The book and course materials are all free and licensed as Creative\nCommons. There is no complex math in the course, the programs are generally\nquite short, and the workload is no more than a few hours per week. By the\ntime you complete the course, you will understand be able to read, parse, and\nmanipulate data using Python. Hopefully at the end of the course you will like\nprogramming well enough to take another course in programming or web\ndevelopment. The free, reusable, and remixable course materials will be made\navailable for you to download, use and reuse.\n\n",
        "name": "Python for Informatics: Exploring Information",
        "provider": "CourseSites",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.coursesites.com/webapps/Bb-sites-course-creation-BBLEARN/courseHomepage.htmlx?course_id=_250824_1",
        "video_url": ""
    },
    {
        "date": "2013-06-18",
        "desc": "This is an introductory course in machine learning (ML) that covers the basic&nbsp;theory, algorithms, and applications. ML is a key technology in Big Data, and in many financial, medical, commercial, and scientific applications. It enables computational systems to adaptively improve their performance with experience accumulated from the observed data. ML has become one of the hottest fields of study today, taken up by undergraduate and graduate students from 15 different majors at Caltech. This course balances theory and practice, and covers the mathematical as well as the heuristic aspects. The lectures&nbsp;below&nbsp;follow each other in a story-like fashion:What is learning?Can a machine learn?How to do it?How to do it well?Take-home lessons.Syllabus&nbsp;Lecture 1:&nbsp;The Learning ProblemLecture 2:&nbsp;Is Learning Feasible?Lecture 3:&nbsp;The Linear Model ILecture 4:&nbsp;Error and NoiseLecture 5:&nbsp;Training versus TestingLecture 6:&nbsp;Theory of GeneralizationLecture 7:&nbsp;The VC DimensionLecture 8:&nbsp;Bias-Variance TradeoffLecture 9:&nbsp;The Linear Model IILecture 10:&nbsp;Neural NetworksLecture 11:&nbsp;OverfittingLecture 12:&nbsp;RegularizationLecture 13:&nbsp;ValidationLecture 14:&nbsp;Support Vector MachinesLecture 15:&nbsp;Kernel&nbsp;MethodsLecture 16:&nbsp;Radial Basis FunctionsLecture 17:&nbsp;Three Learning PrinciplesLecture 18:&nbsp;Epilogue&nbsp;",
        "desc_html": "This is an introductory course in machine learning (ML) that covers the basic\n**theory, algorithms, and applications**. ML is a key technology in Big Data,\nand in many financial, medical, commercial, and scientific applications. It\nenables computational systems to adaptively improve their performance with\nexperience accumulated from the observed data. ML has become one of the\nhottest fields of study today, taken up by undergraduate and graduate students\nfrom 15 different majors at Caltech. This course balances theory and practice,\nand covers the mathematical as well as the heuristic aspects. The lectures\nbelow follow each other in a story-like fashion:\n\n  * What is learning?\n  * Can a machine learn?\n  * How to do it?\n  * How to do it well?\n  * Take-home lessons.\n\n## Syllabus\n\n\n\n  *   \nLecture 1: **[The Learning\nProblem**](http://www.youtube.com/watch?v=mbyG85GZ0PI&hd=1)\n\n  * Lecture 2: **[Is Learning Feasible?**](http://www.youtube.com/watch?v=MEG35RDD7RA&hd=1)\n  * Lecture 3: **[The Linear Model I**](http://www.youtube.com/watch?v=FIbVs5GbBlQ&hd=1)\n  * Lecture 4: **[Error and Noise**](http://www.youtube.com/watch?v=L_0efNkdGMc&hd=1)\n  * Lecture 5: **[Training versus Testing**](http://www.youtube.com/watch?v=SEYAnnLazMU&hd=1)\n  * Lecture 6: **[Theory of Generalization**](http://www.youtube.com/watch?v=6FWRijsmLtE&hd=1)\n  * Lecture 7: **[The VC Dimension**](http://www.youtube.com/watch?v=Dc0sr0kdBVI&hd=1)\n  * Lecture 8: **[Bias-Variance Tradeoff**](http://www.youtube.com/watch?v=zrEyxfl2-a8&hd=1)\n  * Lecture 9: **[The Linear Model II**](http://www.youtube.com/watch?v=qSTHZvN8hzs&hd=1)\n  * Lecture 10: **[Neural Networks**](http://www.youtube.com/watch?v=IstrongMr93E-2c&hd=1)\n  * Lecture 11: **[Overfitting**](http://www.youtube.com/watch?v=EQWr3GGCdzw&hd=1)\n  * Lecture 12: **[Regularization**](http://www.youtube.com/watch?v=I-VfYXzC5ro&hd=1)\n  * Lecture 13: **[Validation**](http://www.youtube.com/watch?v=o7zzaKd0Lkk&hd=1)\n  * Lecture 14: **[Support Vector Machines**](http://www.youtube.com/watch?v=eHsErlPJWUU&hd=1)\n  * Lecture 15: **[Kernel Methods**](http://www.youtube.com/watch?v=XUj5JbQihlU&hd=1)\n  * Lecture 16: **[Radial Basis Functions**](http://www.youtube.com/watch?v=O8CfrnOPtLc&hd=1)\n  * Lecture 17: **[Three Learning Principles**](http://www.youtube.com/watch?v=EZBUDG12Nr0&hd=1)\n  * Lecture 18: **[Epilogue**](http://www.youtube.com/watch?v=ihLwJPHkMRY&hd=1)\n\n\n\n",
        "name": "Learning from Data (Introductory Machine Learning course)",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [
            "California Institute of Technology"
        ],
        "url": "http://work.caltech.edu/telecourse.html",
        "video_url": "https://www.youtube.com/embed/gPY-dL2EoD4?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-06-17",
        "desc": "Spiritual sequel to Peter Thiel'sCS183course\n    on startups. Bridges the gap between academic computer science and production\n    software engineering. Fast-paced introduction to key tools and techniques\n    (command line, dotfiles, text editor, distributed version control, debugging,\n    testing, documentation, reading code, deployments), featuring guest appearances\n    by senior engineers from successful startups and large-scale academic projects.\n    Over the course of the class, students will build a command line application,\n    expose it as a web service, and then link other students' applications\n    and services together to build an HTML5 mobile app. General principles\n    are illustrated through modern Javascript and the latest web technologies,\n    including Node, Backbone, Coffeescript, Bootstrap, Git, and Github.&nbsp;SyllabusThe syllabus is optimized to enable students to&nbsp;iterate on their final projects as soon as possible, with technical material in the first half of the class and entrepreneurial considerations&nbsp;in the second half.Introduction and QuickstartTools: VMs, IAAS/PAAS, Unix Command Line, Text Editors, DCVSFrontend: HTML/CSS/JS, Wireframing, Market ResearchBackend: SSJS, Databases, Frameworks, Data PipelinesAPIs: Client-side templating, HTTP, SOA/REST/JSON, API as BizDevDevops: Testing, Deployment, CI, Monitoring, PerformanceDev Scaling: DRY, Reading/Reviewing/Documenting Code, ParallelizingFounding: Conception, Composition, CapitalizationBusiness Scaling: Promotion, CAC/LTV/Funnel, Regulation, AccountingSummary and Demo Week",
        "desc_html": "****\n\n****Spiritual sequel to Peter Thiel's [CS183](http://blakemasters.tumblr.com/peter-thiels-cs183-startup) course on startups. Bridges the gap between academic computer science and production softwar****e engineering. Fast-paced introduction to key tools and techniques (command line, dotfiles, text editor, distributed version control, debugging, testing, documentation, reading code, deployments), featuring guest appearances by senior engineers from successful startups and large-scale academic projects. Over the course of the class, students will build a command line application, expose it as a web service, and then link other students' applications and services together to build an HTML5 mobile app. General principles are illustrated through modern Javascript and the latest web technologies, including Node, Backbone, Coffeescript, Bootstrap, Git, and Github. ************\n\n## Syllabus\n\nThe syllabus is optimized to enable students to iterate on their final\nprojects as soon as possible, with technical material in the first half of the\nclass and entrepreneurial considerations in the second half.  \n  \n\n  * Introduction and Quickstart\n  * Tools: VMs, IAAS/PAAS, Unix Command Line, Text Editors, DCVS  \n\n  * Frontend: HTML/CSS/JS, Wireframing, Market Research  \n\n  * Backend: SSJS, Databases, Frameworks, Data Pipelines  \n\n  * APIs: Client-side templating, HTTP, SOA/REST/JSON, API as BizDev  \n\n  * Devops: Testing, Deployment, CI, Monitoring, Performance  \n\n  * Dev Scaling: DRY, Reading/Reviewing/Documenting Code, Parallelizing  \n\n  * Founding: Conception, Composition, Capitalization  \n\n  * Business Scaling: Promotion, CAC/LTV/Funnel, Regulation, Accounting  \n\n  * Summary and Demo Week  \n\n",
        "name": "Startup Engineering",
        "provider": "Coursera",
        "rating": "4.6",
        "reviews": "5",
        "university": [
            "Stanford University"
        ],
        "url": "https://www.coursera.org/course/startup",
        "video_url": ""
    },
    {
        "date": "2013-06-03",
        "desc": "In this class, you will learn basic skills and concepts of computer programming in an object-oriented approach using Java.You will learn concepts like classes, methods and argument passing, loops, and general problem solving ability that will become building blocks to your programming skills.Why Take This Course?How to analyze and explain the behavior of programs involving the fundamental program constructs.How to write short programs that use the fundamental program constructs including standard conditional and iterative control structures.How to design and implement your own classes of Objects given desired attributes and behaviors.How to reason about class hierarchies.How to write good documentation so your code can be re-used.How to use a real-world programming environment and a debugger.Prerequisites and RequirementsNo prior programming experience and knowledge is assumed or needed.See the&nbsp;Technology Requirements&nbsp;for using UdacitySyllabusLesson 1: Introduction to Computers, Programming Languages, Algorithms, and the Java Programming EnvironmentLesson 2: Introduction to Classes and ObjectsLesson 3: GraphicsLesson 4: Fundamental Data TypesLesson 5: DecisionsLesson 6: IterationsLesson 7: Arrays, ArrayLists and Simple Array AlgorithmsLesson 8: Methods (Parameter Passing, Instance vs. Static Methods)Lesson 9: Inheritance",
        "desc_html": "In this class, you will learn basic skills and concepts of computer\nprogramming in an object-oriented approach using Java.\n\nYou will learn concepts like classes, methods and argument passing, loops, and\ngeneral problem solving ability that will become building blocks to your\nprogramming skills.\n\n**Why Take This Course?**\n\n  1. How to analyze and explain the behavior of programs involving the fundamental program constructs.\n  2. How to write short programs that use the fundamental program constructs including standard conditional and iterative control structures.\n  3. How to design and implement your own classes of Objects given desired attributes and behaviors.\n  4. How to reason about class hierarchies.\n  5. How to write good documentation so your code can be re-used.\n  6. How to use a real-world programming environment and a debugger.\n\n**Prerequisites and Requirements**\n\nNo prior programming experience and knowledge is assumed or needed.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n## Syllabus\n\n**Lesson 1: Introduction to Computers, Programming Languages, Algorithms, and the Java Programming Environment** **Lesson 2: Introduction to Classes and Objects** **Lesson 3: Graphics** **Lesson 4: Fundamental Data Types** **Lesson 5: Decisions** **Lesson 6: Iterations** **Lesson 7: Arrays, ArrayLists and Simple Array Algorithms** **Lesson 8: Methods (Parameter Passing, Instance vs. Static Methods)** **Lesson 9: Inheritance**\n\n",
        "name": "Introduction to Programming in Java",
        "provider": "Udacity",
        "rating": "3.8",
        "reviews": "5",
        "university": [
            "San Jose State University"
        ],
        "url": "https://www.udacity.com/course/cs046",
        "video_url": "https://www.youtube.com/embed/Wsp5Rrenoq4?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-05-20",
        "desc": "",
        "desc_html": "\n\n",
        "name": "Building a Basic Website",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of Massachusetts Amherst"
        ],
        "url": "http://www.umass.edu/journalism/mooc/",
        "video_url": ""
    },
    {
        "date": "2013-05-18",
        "desc": "Datenbanken bilden die Basis fast aller gro&szlig;en Software-Anwendungen. In Unternehmen, in der Forschung, im Web &ndash; &uuml;berall entstehen riesige Datenmengen, die es gilt sicher zu speichern und die effizient abfragbar sein m&uuml;ssen. In dem openHPI Kurs \"Datenmanagement mit SQL\" lernen wir die Grundlagen von modernen Datenbanksystemen kennen. Wir untersuchen ihren Aufbau, wir planen den Entwurf von Datenbanken und schlie&szlig;lich lernen wir die weltweit dominierende Anfragesprache SQL kennen. Mittels SQL kann man einfach formulierte aber sehr m&auml;chtige Anfragen an eine Datenbank senden. Diese Anfragen k&ouml;nnen Daten suchen, Daten filtern und sortieren, und schlie&szlig;lich Daten auf vielf&auml;ltige Weise analysieren. Hin und wieder verlassen wir diese Anwendersicht und erfahren wie ein Datenbanksystem die Nutzeranweisungen umsetzt, zum Beispiel um komplexe Operationen besonders effizient umzusetzen.SyllabusBegr&uuml;&szlig;ung:Begr&uuml;&szlig;ungWoche 1:Woche 1Woche 2:Woche 2Woche 3:Woche 3Woche 4:Woche 4Woche 5:Woche 5Bonus:BonusWoche 6:Woche 6Exkurs 1:Exkurs 1Exkurs 2:Exkurs 2Klausur:Klausur",
        "desc_html": "Datenbanken bilden die Basis fast aller gro\u00dfen Software-Anwendungen. In\nUnternehmen, in der Forschung, im Web - uberall entstehen riesige Datenmengen,\ndie es gilt sicher zu speichern und die effizient abfragbar sein mussen. In\ndem openHPI Kurs \"Datenmanagement mit SQL\" lernen wir die Grundlagen von\nmodernen Datenbanksystemen kennen. Wir untersuchen ihren Aufbau, wir planen\nden Entwurf von Datenbanken und schlie\u00dflich lernen wir die weltweit\ndominierende Anfragesprache SQL kennen. Mittels SQL kann man einfach\nformulierte aber sehr machtige Anfragen an eine Datenbank senden. Diese\nAnfragen konnen Daten suchen, Daten filtern und sortieren, und schlie\u00dflich\nDaten auf vielfaltige Weise analysieren. Hin und wieder verlassen wir diese\nAnwendersicht und erfahren wie ein Datenbanksystem die Nutzeranweisungen\numsetzt, zum Beispiel um komplexe Operationen besonders effizient umzusetzen.\n\n## Syllabus\n\n  * **Begru\u00dfung:** Begru\u00dfung\n  * **Woche 1:** Woche 1\n  * **Woche 2:** Woche 2\n  * **Woche 3:** Woche 3\n  * **Woche 4:** Woche 4\n  * **Woche 5:** Woche 5\n  * **Bonus:** Bonus\n  * **Woche 6:** Woche 6\n  * **Exkurs 1:** Exkurs 1\n  * **Exkurs 2:** Exkurs 2\n  * **Klausur:** Klausur\n\n",
        "name": "Datenmanagement mit SQL",
        "provider": "openHPI",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.hpi.de/courses/sql",
        "video_url": ""
    },
    {
        "date": "2013-04-23",
        "desc": "In this research-oriented graduate course, we will study algorithms for graph partitioning and clustering, constructions of expander graphs, and analysis of random walks. These are three topics that build on the same mathematical background and that have several important connections: for example it is possible to find graph clusters via random walks, and it is possible to use the linear programming approach to graph partitioning as a way to study random walks.We will study spectral graph theory, which explains how certain combinatorial properties of graphs are related to the eigenvalues and eigenvectors of the adjacency matrix, and we will use it describe and analyze spectral algorithms for graph partitioning and clustering. Spectral graph theory will recur as an important tool in the rest of the course. We we will also discuss other approaches to graph partitioning via linear programming and semidefinite programming. Then we will study constructions of expander graphs, which are graphs with very strong pseudorandomness properties, which are useful in many applications, including in cryptography, in complexity theory, in algorithms and data structures, and in coding theory. Finally, we will study the mixing time of random walks, a problem that comes up in several applications, including the analysis of the convergence time of certain randomized algorithms, such as the Metropolis algorithm.Prerequisites&nbsp;Linear algebra, discrete probability, and algorithms",
        "desc_html": "In this research-oriented graduate course, we will study algorithms for graph\npartitioning and clustering, constructions of expander graphs, and analysis of\nrandom walks. These are three topics that build on the same mathematical\nbackground and that have several important connections: for example it is\npossible to find graph clusters via random walks, and it is possible to use\nthe linear programming approach to graph partitioning as a way to study random\nwalks.\n\nWe will study spectral graph theory, which explains how certain combinatorial\nproperties of graphs are related to the eigenvalues and eigenvectors of the\nadjacency matrix, and we will use it describe and analyze spectral algorithms\nfor graph partitioning and clustering. Spectral graph theory will recur as an\nimportant tool in the rest of the course. We we will also discuss other\napproaches to graph partitioning via linear programming and semidefinite\nprogramming. Then we will study constructions of expander graphs, which are\ngraphs with very strong pseudorandomness properties, which are useful in many\napplications, including in cryptography, in complexity theory, in algorithms\nand data structures, and in coding theory. Finally, we will study the mixing\ntime of random walks, a problem that comes up in several applications,\nincluding the analysis of the convergence time of certain randomized\nalgorithms, such as the Metropolis algorithm.\n\n**Prerequisites**   \nLinear algebra, discrete probability, and algorithms\n\n",
        "name": "Graph Partitioning and Expanders",
        "provider": "NovoED",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Stanford University"
        ],
        "url": "http://venture-lab.org/expanders",
        "video_url": "https://www.youtube.com/embed/Kr9olRsABR8?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-04-08",
        "desc": "What are Probabilistic Graphical Models?Uncertainty is unavoidable in real-world applications: we can almost never predict with certainty what will happen in the future, and even in the present and the past, many important aspects of the world are not observed with certainty. Probability theory gives us the basic foundation to model our beliefs about the different possible states of the world, and to update these beliefs as new evidence is obtained. These beliefs can be combined with individual preferences to help guide our actions, and even in selecting which observations to make. While probability theory has existed since the 17th century, our ability to use it effectively on large problems involving many inter-related variables is fairly recent, and is due largely to the development of a framework known as Probabilistic Graphical Models (PGMs). This framework, which spans methods such as Bayesian networks and Markov random fields, uses ideas from discrete data structures in computer science to efficiently encode and manipulate probability distributions over high-dimensional spaces, often involving hundreds or even many thousands of variables. These methods have been used in an enormous range of application domains, which include: web search, medical and fault diagnosis, image understanding, reconstruction of biological networks, speech recognition, natural language processing, decoding of messages sent over a noisy communication channel, robot navigation, and many more. The PGM framework provides an essential tool for anyone who wants to learn how to reason coherently from limited and noisy observations.In this class, you will learn the basics of the PGM representation and how to construct them, using both human knowledge and machine learning techniques; you will also learn algorithms for using a PGM to reach conclusions about the world from limited and noisy evidence, and for making good decisions under uncertainty. The class covers both the theoretical underpinnings of the PGM framework and practical skills needed to apply these techniques to new problems.SyllabusTopics covered include:The Bayesian network and Markov network representation, including extensions for reasoning over domains that change over time and over domains with a variable number of entitiesReasoning and inference methods, including exact inference (variable elimination, clique trees) and approximate inference (belief propagation message passing, Markov chain Monte Carlo methods)Learning parameters and structure in PGMsUsing a PGM for decision making under uncertainty.There will be short weekly review quizzes and programming assignments (Octave/Matlab) focusing on case studies and applications of PGMs to real-world problems:Credit Scoring and FactorsModeling Genetic Inheritance and DiseaseMarkov Networks and Optical Character Recognition (OCR)Inference: Belief PropagationMarkov Chain Monte Carlo and Image SegmentationDecision Theory:&nbsp;Arrhythmogenic Right Ventricular DysplasiaConditional Random Field Learning for OCRStructure Learning for Identifying Skeleton StructureHuman Action Recognition with KinectTo prepare for the class in advance, you may consider reading through the following sections of the&nbsp;textbook (discount code DKPGM12)&nbsp;by Daphne and Nir Friedman:Introduction and Overview.&nbsp;Chapters 1, 2.1.1 - 2.1.4, 4.2.1.Bayesian Network Fundamentals.&nbsp;Chapters 3.1 - 3.3.Markov Network Fundamentals.&nbsp;Chapters 4.1, 4.2.2, 4.3.1, 4.4, 4.6.1.Structured CPDs.&nbsp;Chapters 5.1 - 5.5.Template Models.&nbsp;Chapters 6.1 - 6.4.1.These will be covered in the first two weeks of the online class.The slides for the whole class can be found&nbsp;here.",
        "desc_html": "**What are Probabilistic Graphical Models?**\n\nUncertainty is unavoidable in real-world applications: we can almost never\npredict with certainty what will happen in the future, and even in the present\nand the past, many important aspects of the world are not observed with\ncertainty. Probability theory gives us the basic foundation to model our\nbeliefs about the different possible states of the world, and to update these\nbeliefs as new evidence is obtained. These beliefs can be combined with\nindividual preferences to help guide our actions, and even in selecting which\nobservations to make. While probability theory has existed since the 17th\ncentury, our ability to use it effectively on large problems involving many\ninter-related variables is fairly recent, and is due largely to the\ndevelopment of a framework known as Probabilistic Graphical Models (PGMs).\nThis framework, which spans methods such as Bayesian networks and Markov\nrandom fields, uses ideas from discrete data structures in computer science to\nefficiently encode and manipulate probability distributions over high-\ndimensional spaces, often involving hundreds or even many thousands of\nvariables. These methods have been used in an enormous range of application\ndomains, which include: web search, medical and fault diagnosis, image\nunderstanding, reconstruction of biological networks, speech recognition,\nnatural language processing, decoding of messages sent over a noisy\ncommunication channel, robot navigation, and many more. The PGM framework\nprovides an essential tool for anyone who wants to learn how to reason\ncoherently from limited and noisy observations.\n\nIn this class, you will learn the basics of the PGM representation and how to\nconstruct them, using both human knowledge and machine learning techniques;\nyou will also learn algorithms for using a PGM to reach conclusions about the\nworld from limited and noisy evidence, and for making good decisions under\nuncertainty. The class covers both the theoretical underpinnings of the PGM\nframework and practical skills needed to apply these techniques to new\nproblems.\n\n## Syllabus\n\n**Topics covered include:**\n\n  1. The Bayesian network and Markov network representation, including extensions for reasoning over domains that change over time and over domains with a variable number of entities\n  2. Reasoning and inference methods, including exact inference (variable elimination, clique trees) and approximate inference (belief propagation message passing, Markov chain Monte Carlo methods)\n  3. Learning parameters and structure in PGMs\n  4. Using a PGM for decision making under uncertainty.\n\nThere will be short weekly review quizzes and programming assignments\n(Octave/Matlab) focusing on case studies and applications of PGMs to real-\nworld problems:\n\n  1. Credit Scoring and Factors\n  2. Modeling Genetic Inheritance and Disease\n  3. Markov Networks and Optical Character Recognition (OCR)\n  4. Inference: Belief Propagation\n  5. Markov Chain Monte Carlo and Image Segmentation\n  6. Decision Theory: Arrhythmogenic Right Ventricular Dysplasia\n  7. Conditional Random Field Learning for OCR\n  8. Structure Learning for Identifying Skeleton Structure\n  9. Human Action Recognition with Kinect\n\nTo prepare for the class in advance, you may consider reading through the\nfollowing sections of the [textbook (discount code\nDKPGM12)](http://mitpress.mit.edu/9780262013192) by Daphne and Nir Friedman:\n\n  1. **Introduction and Overview. **Chapters 1, 2.1.1 - 2.1.4, 4.2.1.\n  2. **Bayesian Network Fundamentals. **Chapters 3.1 - 3.3.\n  3. **Markov Network Fundamentals. **Chapters 4.1, 4.2.2, 4.3.1, 4.4, 4.6.1.\n  4. **Structured CPDs. **Chapters 5.1 - 5.5.\n  5. **Template Models. **Chapters 6.1 - 6.4.1.\n\nThese will be covered in the first two weeks of the online class.\n\nThe slides for the whole class can be found [here](http://spark-\nuniversity.s3.amazonaws.com/stanford-pgm/PGM_slides.zip).\n\n",
        "name": "Probabilistic Graphical Models",
        "provider": "Coursera",
        "rating": "4.25",
        "reviews": "4",
        "university": [
            "Stanford University"
        ],
        "url": "https://www.coursera.org/course/pgm",
        "video_url": ""
    },
    {
        "date": "2013-04-02",
        "desc": "",
        "desc_html": "\n\n",
        "name": "Introduction aux r\u00e9seaux cellulaires",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Institut Mines-T\u00e9l\u00e9com"
        ],
        "url": "https://courses.mooc.telecom-bretagne.eu/course/introductions-aux-reseaux-cellulaires/",
        "video_url": "https://www.youtube.com/embed/pDl7VMdO8xw?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-03-25",
        "desc": "The goal of this course is to introduce you to the basics of how computation\nhas impacted the entire workflow of photography (i.e., from how images\nare captured, manipulated and collaborated on, and shared). &nbsp;The course begins with a conceptualization of&nbsp;photography as drawing\nwith light and the capturing of light to form images/videos. &nbsp;You\nwill learn about and understand how the optics and the sensor within a\ncamera are generalized, as well as learn about and understand how the lighting\nand other aspects of the environment are also generalized through computation\nto capture novel images.&nbsp;Pre- and post-processing techniques used to manipulate and improve images\nwill be discussed. &nbsp;Activities in this course are selected to give\nyou first hand experience with the power of the web and the Internet for\nboth analyzing and sharing images. &nbsp;This course is interdisciplinary and draws upon concepts and principles\nfrom computer vision, computer graphics, image processing, mathematics\nand optics.We look forward to your engagement and participation with both the course\nand its discussion forums.About the TADenis Lantsman is the TA for the class. Denis is a graduate of Harvey\nMudd College, and is currently finishing his MS in Machine Learning at\nGeorgia Tech. He is responsible for managing the coursera site, monitoring\nthe forums for student feedback, creating the homework assignments and\nquizzes, as well as recording weekly tutorials to help students with their\nprogramming.SyllabusWeek 0 (Module 0): &nbsp;Introductions with an overview of the course\n    structure and content.&nbsp; Topics covered in this module include a description\n    of what is Computational Photography (i.e., whereby examples of dual photography\n    and panoramas are described) and reasons for studying this emerging interdisciplinary\n    field .Week 1 (Module 1): &nbsp;Overview of what is a digital image.&nbsp; Topics\n    covered in this module are image processing and filtering, with emphases\n    placed upon point processes, smoothing, convolution, cross-correlation,\n    gradients and edges.Week 2 (Module 2): &nbsp;Overview of cameras with emphases placed upon\n    the pinhole camera and optics (e. g., lenses, focal length), exposure time\n    and sensors.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Week 3 (Module 3): &nbsp;Feature detection, matching and correspondence.\n    The panorama pipeline and some examples. HDR and tone mapping.Week 4 (Module 4):&nbsp;Overview of light fields, texture synthesis, image\n    retargeting, video, advanced topics.",
        "desc_html": "The goal of this course is to introduce you to the basics of how computation\nhas impacted the entire workflow of photography (i.e., from how images are\ncaptured, manipulated and collaborated on, and shared).  \n  \nThe course begins with a conceptualization of photography as drawing with\nlight and the capturing of light to form images/videos.  You will learn about\nand understand how the optics and the sensor within a camera are generalized,\nas well as learn about and understand how the lighting and other aspects of\nthe environment are also generalized through computation to capture novel\nimages.  \n  \nPre- and post-processing techniques used to manipulate and improve images will\nbe discussed.  Activities in this course are selected to give you first hand\nexperience with the power of the web and the Internet for both analyzing and\nsharing images.  \n  \nThis course is interdisciplinary and draws upon concepts and principles from\ncomputer vision, computer graphics, image processing, mathematics and optics.  \n  \nWe look forward to your engagement and participation with both the course and\nits discussion forums.  \n  \n**About the TA**   \nDenis Lantsman is the TA for the class. Denis is a graduate of Harvey Mudd\nCollege, and is currently finishing his MS in Machine Learning at Georgia\nTech. He is responsible for managing the coursera site, monitoring the forums\nfor student feedback, creating the homework assignments and quizzes, as well\nas recording weekly tutorials to help students with their programming.\n\n## Syllabus\n\nWeek 0 (Module 0):  Introductions with an overview of the course structure and\ncontent.  Topics covered in this module include a description of what is\nComputational Photography (i.e., whereby examples of dual photography and\npanoramas are described) and reasons for studying this emerging\ninterdisciplinary field .\n\nWeek 1 (Module 1):  Overview of what is a digital image.  Topics covered in\nthis module are image processing and filtering, with emphases placed upon\npoint processes, smoothing, convolution, cross-correlation, gradients and\nedges.\n\nWeek 2 (Module 2):  Overview of cameras with emphases placed upon the pinhole\ncamera and optics (e. g., lenses, focal length), exposure time and sensors.  \n\nWeek 3 (Module 3):  Feature detection, matching and correspondence. The\npanorama pipeline and some examples. HDR and tone mapping.\n\nWeek 4 (Module 4): Overview of light fields, texture synthesis, image\nretargeting, video, advanced topics.\n\n",
        "name": "Computational Photography",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Georgia Institute of Technology"
        ],
        "url": "https://www.coursera.org/course/compphoto",
        "video_url": ""
    },
    {
        "date": "2013-03-25",
        "desc": "Most programs are used for years and are worked on by many people. Having programs that are easy to understand is essential, in the same way that a well-organized essay is far easier to follow than a disorganized one. We\u2019ll show you an approach that helps to break down problems into smaller tasks that are easier to both solve and read.&nbsp;This design approach also makes it more straightforward to find and fix flaws. You'll be introduced to the tools that professional programmers use; they're called \"testing\" and \"debugging\".&nbsp;For most complex problems, there are many programs that solve them. Some are inherently slower than others. You'll learn how to read two programs and compare them for efficiency.",
        "desc_html": "Most programs are used for years and are worked on by many people. Having\nprograms that are easy to understand is essential, in the same way that a\nwell-organized essay is far easier to follow than a disorganized one. We\u2019ll\nshow you an approach that helps to break down problems into smaller tasks that\nare easier to both solve and read.\n\n\n\nThis design approach also makes it more straightforward to find and fix flaws.\nYou'll be introduced to the tools that professional programmers use; they're\ncalled \"testing\" and \"debugging\".\n\n\n\nFor most complex problems, there are many programs that solve them. Some are\ninherently slower than others. You'll learn how to read two programs and\ncompare them for efficiency.\n\n",
        "name": "Learn to Program: Crafting Quality Code",
        "provider": "Coursera",
        "rating": "4.5",
        "reviews": "4",
        "university": [
            "University of Toronto"
        ],
        "url": "https://www.coursera.org/course/programming2",
        "video_url": ""
    },
    {
        "date": "2013-03-21",
        "desc": "The Web has become an object of our daily life and the amount of information in the web is ever growing. Besides plain texts, especially multimedia information such as graphics, audio or video have become a predominant part of the web's information traffic. But, how can we find useful information within this huge information space? Traditional search engines will reach the limits of their power, when it comes to understanding information content. The Semantic Web is an extension of the traditional web in the sense that information in the form of natural language text in the web will be complemented by its explicit semantics based on a formal knowledge representation. Thus, the meaning of information expressed in natural language can be accessed in an automated way and interpreted correctly, i.e. it can be understood by machines.Semantic Web technologies enable the explicit representation of knowledge and its further processing to deduce new knowledge from implicitly hidden knowledge. Thus, information access and information search will be more precise and more complete compared to today's traditional information retrieval technology. Previously heterogeneous data can be mapped and combined based on common knowledge representation and schemata easily extended in a dynamic way.In this course, you will learn the fundamentals of Semantic Web technologies. You will learn how to represent knowledge and how to access and benefit from semantic data on the Web.SyllabusWeek 1:Introduction to the Semantic WebWeek 2:Identifying Things with URI and RDFWeek 3:Querying RDF(S) with SPARQLExcursus:Semantic (Meta) Data and the WebWeek 4:Knowledge Representation IWeek 5:Knowledge Representation IIWeek 6:Applications in the Web of DataFinal Exams:Final Exams",
        "desc_html": "The Web has become an object of our daily life and the amount of information\nin the web is ever growing. Besides plain texts, especially multimedia\ninformation such as graphics, audio or video have become a predominant part of\nthe web's information traffic. But, how can we find useful information within\nthis huge information space? Traditional search engines will reach the limits\nof their power, when it comes to understanding information content. The\nSemantic Web is an extension of the traditional web in the sense that\ninformation in the form of natural language text in the web will be\ncomplemented by its explicit semantics based on a formal knowledge\nrepresentation. Thus, the meaning of information expressed in natural language\ncan be accessed in an automated way and interpreted correctly, i.e. it can be\nunderstood by machines.\n\nSemantic Web technologies enable the explicit representation of knowledge and\nits further processing to deduce new knowledge from implicitly hidden\nknowledge. Thus, information access and information search will be more\nprecise and more complete compared to today's traditional information\nretrieval technology. Previously heterogeneous data can be mapped and combined\nbased on common knowledge representation and schemata easily extended in a\ndynamic way.\n\nIn this course, you will learn the fundamentals of Semantic Web technologies.\nYou will learn how to represent knowledge and how to access and benefit from\nsemantic data on the Web.\n\n## Syllabus\n\n  * **Week 1:** Introduction to the Semantic Web\n  * **Week 2:** Identifying Things with URI and RDF\n  * **Week 3:** Querying RDF(S) with SPARQL\n  * **Excursus:** Semantic (Meta) Data and the Web\n  * **Week 4:** Knowledge Representation I\n  * **Week 5:** Knowledge Representation II\n  * **Week 6:** Applications in the Web of Data\n  * **Final Exams:** Final Exams\n\n",
        "name": "Semantic Web Technologies",
        "provider": "openHPI",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://open.hpi.de/courses/semanticweb",
        "video_url": "https://www.youtube.com/embed/nI372ilNunE?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-03-12",
        "desc": "When developing chips it is essential that they get verified thoroughly because it is very hard or impossible to fix them once they have been manufactured. In this class, you will learn how to program verification environments that verify chip functionality efficiently, as well as understand and leverage automation such as constrained random test generation and improve code reuse leveraging a standardized methodology.Why Take This Course?This course will teach you how to think like a verification engineer. It will show the software development aspects you need to know to ensure chips are working as expected. You will learn how to implement verification environments.Prerequisites and RequirementsProgramming experience including object-oriented programming. Data &amp; Control structure.&nbsp;This course is developed by Cadence Design Systems, a global leader in electronic design automation.Cadence&reg; software, hardware, IP, and services help customers around the world to overcome a range of technical and economic hurdles.See the&nbsp;Technology Requirements&nbsp;for using UdacitySyllabusLesson 1:&nbsp;Introduction to Hardware VerificationLesson 2:&nbsp;Basic stimulus modeling and generationLesson 3:&nbsp;Interfacing to the Hardware ModelLesson 4:&nbsp;Monitoring and Functional CoverageLesson 5:&nbsp;CheckingLesson 6:&nbsp;Aspect Oriented ProgrammingLesson 7:&nbsp;Reuse MethodologyLesson 8:&nbsp;DebuggingLesson 9:&nbsp;Conclusion and Exam",
        "desc_html": "When developing chips it is essential that they get verified thoroughly\nbecause it is very hard or impossible to fix them once they have been\nmanufactured. In this class, you will learn how to program verification\nenvironments that verify chip functionality efficiently, as well as understand\nand leverage automation such as constrained random test generation and improve\ncode reuse leveraging a standardized methodology.\n\n**Why Take This Course?**\n\nThis course will teach you how to think like a verification engineer. It will\nshow the software development aspects you need to know to ensure chips are\nworking as expected. You will learn how to implement verification\nenvironments.\n\n**Prerequisites and Requirements**\n\nProgramming experience including object-oriented programming. Data & Control\nstructure.  \n  \n  \nThis course is developed by Cadence Design Systems, a global leader in\nelectronic design automation.[Cadence\u00ae\nsoftware](http://www.cadence.com/solutions/ev/Pages/default.aspx), hardware,\nIP, and services help customers around the world to overcome a range of\ntechnical and economic hurdles.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n## Syllabus\n\nLesson 1: Introduction to Hardware Verification\n\nLesson 2: Basic stimulus modeling and generation\n\nLesson 3: Interfacing to the Hardware Model\n\nLesson 4: Monitoring and Functional Coverage\n\nLesson 5: Checking\n\nLesson 6: Aspect Oriented Programming\n\nLesson 7: Reuse Methodology\n\nLesson 8: Debugging\n\nLesson 9: Conclusion and Exam\n\n",
        "name": "Functional Hardware Verification",
        "provider": "Udacity",
        "rating": "5",
        "reviews": "1",
        "university": [
            "Cadence"
        ],
        "url": "http://www.udacity.com/overview/Course/cs348/CourseRev/1",
        "video_url": "https://www.youtube.com/embed/PZHh2O6iqj8?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-03-12",
        "desc": "Estamos inmersos en una \u00e9poca de cambio que afectan a toda la sociedad (personas, organizaciones, productos y servicios); uno de los cambios m\u00e1s fascinantes, que m\u00e1s moldes est\u00e1n rompiendo y que est\u00e1 cambiando enfoques que hasta hace poco eran inamovibles, es lo que se conoce como el movimiento libre. En este curso de introducci\u00f3n analizaremos dos de sus principales impulsores: el software libre y el conocimiento en abierto; as\u00ed mismo participaremos en este movimiento utilizando software libre (blog y wikis) para construir conocimiento en abierto tanto de forma individual como corporativa.",
        "desc_html": "Estamos inmersos en una \u00e9poca de cambio que afectan a toda la sociedad\n(personas, organizaciones, productos y servicios); uno de los cambios m\u00e1s\nfascinantes, que m\u00e1s moldes est\u00e1n rompiendo y que est\u00e1 cambiando enfoques que\nhasta hace poco eran inamovibles, es lo que se conoce como el movimiento\nlibre. En este curso de introducci\u00f3n analizaremos dos de sus principales\nimpulsores: el software libre y el conocimiento en abierto; as\u00ed mismo\nparticiparemos en este movimiento utilizando software libre (blog y wikis)\npara construir conocimiento en abierto tanto de forma individual como\ncorporativa.\n\n",
        "name": "Software libre y conocimiento en abierto",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.miriadax.net/web/soft_libre_y_conocimiento",
        "video_url": "https://www.youtube.com/embed/7q637mFa-pg?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-03-11",
        "desc": "This class will teach you about the basic principles of 3D computer graphics: meshes, transforms, cameras, materials, lighting, and animation.Why Take This Course?By the end of this class you will know enough to make an animated 3D demo program that runs in a web browser, while also understanding the basic principles of how realistic computer images are generated.You will also have a portfolio of small interactive programs that run in any web browser that supports WebGL.Prerequisites and RequirementsKnowing how to program in some language is all you&rsquo;ll need to get started. Some knowledge of JavaScript is useful later on if you wish to make your projects more interactive and engaging. Familiarity with vectors and matrices will ease your way but is not critical.To be able to see the interactive demos and do programming assignments you need a browser that supportsWebGL&nbsp;technology. An up to date version of Chrome or Firefox will work (see our&nbsp;FAQ&nbsp;for more information). You can test if your browser supports this technology by visiting the&nbsp;WebGL project homepage.Almost all programming will be done in JavaScript using&nbsp;three.js library/API.About AutodeskThis course is developed in conjunction with Autodesk, a worldwide leader in 3D design, engineering, and entertainment software.&nbsp;http://www.autodesk.comSee the&nbsp;Technology Requirements&nbsp;for using UdacitySyllabusLesson 1: IntroductionMotivation and a trip down the graphics pipeline, laying out the fundamental processesLesson 2: Points, Vectors, and MeshesThe basics of 3D geometry definitionLesson 3: Colors and MaterialsColor representation, material computations, transparencyLesson 4: TransformsTranslation, scale, rotate and how to properly combine all theseLesson 5: MatricesTransform representation and how to fully control theseLesson 6: LightsDirectional and point light sourcesLesson 7: CamerasHow the camera is definedLesson 8: Textures and ReflectionsColor and opacity textures, along with reflection and normal mappingLesson 9: Shader ProgrammingAn introduction to programming vertex and pixel shadersLesson 10: Interaction and AnimationHow to select and make objects move",
        "desc_html": "This class will teach you about the basic principles of 3D computer graphics:\nmeshes, transforms, cameras, materials, lighting, and animation.\n\n**Why Take This Course?**\n\nBy the end of this class you will know enough to make an animated 3D demo\nprogram that runs in a web browser, while also understanding the basic\nprinciples of how realistic computer images are generated.\n\nYou will also have a portfolio of small interactive programs that run in any\nweb browser that supports WebGL.\n\n**Prerequisites and Requirements**\n\nKnowing how to program in some language is all you'll need to get started.\nSome knowledge of JavaScript is useful later on if you wish to make your\nprojects more interactive and engaging. Familiarity with vectors and matrices\nwill ease your way but is not critical.\n\nTo be able to see the interactive demos and do programming assignments you\nneed a browser that supportsWebGL technology. An up to date version of Chrome\nor Firefox will work (see our [FAQ](https://www.udacity.com/tech-requirements)\nfor more information). You can test if your browser supports this technology\nby visiting the [WebGL project homepage](http://get.webgl.org/).\n\nAlmost all programming will be done in JavaScript using [three.js\nlibrary/API](http://en.wikipedia.org/wiki/Threejs).\n\n  \nAbout Autodesk\n\nThis course is developed in conjunction with Autodesk, a worldwide leader in\n3D design, engineering, and entertainment software.\n[http://www.autodesk.com](http://www.autodesk.com/)\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n## Syllabus\n\n**Lesson 1: Introduction**\n\nMotivation and a trip down the graphics pipeline, laying out the fundamental\nprocesses\n\n**Lesson 2: Points, Vectors, and Meshes**\n\nThe basics of 3D geometry definition\n\n**Lesson 3: Colors and Materials**\n\nColor representation, material computations, transparency\n\n**Lesson 4: Transforms**\n\nTranslation, scale, rotate and how to properly combine all these\n\n**Lesson 5: Matrices**\n\nTransform representation and how to fully control these\n\n**Lesson 6: Lights**\n\nDirectional and point light sources\n\n**Lesson 7: Cameras**\n\nHow the camera is defined\n\n**Lesson 8: Textures and Reflections**\n\nColor and opacity textures, along with reflection and normal mapping\n\n**Lesson 9: Shader Programming**\n\nAn introduction to programming vertex and pixel shaders\n\n**Lesson 10: Interaction and Animation**\n\nHow to select and make objects move\n\n",
        "name": "Interactive 3D Graphics",
        "provider": "Udacity",
        "rating": "5",
        "reviews": "2",
        "university": [
            "Autodesk"
        ],
        "url": "http://www.udacity.com/overview/Course/cs291/CourseRev/1",
        "video_url": "https://www.youtube.com/embed/Vl0hmKg1pVw?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-03-04",
        "desc": "This course focuses on&nbsp;pattern-oriented software architecture&nbsp;for concurrent and networked software.&nbsp;Concurrent&nbsp;software can simultaneously run multiple computations that potentially interact with each other.&nbsp;Networked&nbsp;defines protocols that enables computing devices to exchange messages and perform services remotely. The topics in this course are timely since the advent of multi-core and distributed-core processors--coupled with ubiquitous wireless and wireline connectivity--is increasing the demand for researchers and practitioners who understand how to successfully develop and deploy concurrent and networked software.Despite continuous improvements in processors and networks during the past four decades, however, developing quality concurrent and networked software remains hard; developing quality&nbsp;reusable&nbsp;concurrent and networked software is even harder. The principles, methods, and skills required to develop such software can be greatly enhanced by understanding how to create and apply patterns and frameworks. A&nbsp;pattern&nbsp;describes a reusable solution to a commonly occurring problem within a particular context. When related patterns are woven together they form a&nbsp;pattern language&nbsp;that provides a vocabulary and a process for the orderly resolution of software development problems. A&nbsp;framework&nbsp;is an integrated set of software components that collaborate to provide a reusable architecture for a family of related applications. Frameworks can also be viewed as concrete realizations of pattern languages that facilitate direct reuse of design and code.This course describes how to apply patterns and frameworks to alleviate many accidental and inherent complexities associated with developing and deploying concurrent and networked software. These patterns and frameworks have been used successfully in many domains, including telecom/datacom, mobile devices, electronic medical imaging, network management, aerospace, avionics, automation, online gaming, and financial systems. Over the coming weeks and months I'll illustrate by example how patterns and frameworks simplify and enhance the development of concurrent and networked software via the use of:Object-oriented design concepts and notations -- such as encapsulation, abstraction, polymorphism, extensibility, and the Unified Modeling Language (UML).Object-oriented programming language features -- such as classes, inheritance, dynamic binding, and parameterized types available in languages like Java, C++, and C#.Middleware -- which is infrastructure software residing between applications and the underlying operating systems, networks, and hardware that encapsulates heterogeneity and enables control over key end-to-end quality-of-service properties, such as dependability and security.Operating system mechanisms -- such as event demultiplexing, multi-threading, multi-processing, and dynamic linking.We'll explore several case studies from the domains of mobile apps, web servers, object request brokers, avionic control systems, and expression tree processing to showcase a time-tested pattern-oriented software design and programming method for concurrent and networked software.SyllabusThe course is organized as follows:Section 0: Overview of all the topics covered in the course.&nbsp;This material is designed to help you visualize the motivations for--and challenges of--of concurrent and networked software. We also summarize how patterns and frameworks help address key challenges of concurrent and networked software.Section 1: Introduction to concurrency and networking, which provides background info pertaining largely to the OS and middleware layers. We discuss key design dimensions of concurrent and networked software, as well as review common operating system programming mechanisms and Android programming mechanisms. This part focuses on concepts and is generally independent of programming language.Section 2: Overview of patterns and frameworks, which focuses on pattern-oriented software architecture, with an emphasis on concurrent and networked software. We explore key pattern and framework concepts, relationships, and examples, as well as evaluate the pros and cons of patterns and frameworks. Small code examples are shown throughout using C++ and Java, though this section concentrates more on design rather than programming.Section 3: Applying patterns and frameworks to develop concurrent and networked software, which examines lots of code. An open-source web server is used as a running example to illustrate patterns and frameworks pertaining to service access, communication, synchronous event handling, connection establishment, service initialization, service configuration and activation, concurrency and synchronization, and asynchronous event handling. These examples are in C++ using&nbsp;ACE.Appendix: Presents a case study that applies many \"Gang of Four\" patterns&nbsp;that aren't directly related to concurrent and networked software. Evaluates the limitations with algorithm design and shows how pattern-oriented design alleviates these limtations. The examples are largely in C++, again with some Java examples to show how pattern-oriented design simplifies portability across programming languages.",
        "desc_html": "This course focuses on [pattern-oriented software\narchitecture](http://www.dre.vanderbilt.edu/~schmidt/POSA/) for concurrent and\nnetworked software.\n[Concurrent](http://en.wikipedia.org/wiki/Concurrency_\\(computer_science\\))\nsoftware can simultaneously run multiple computations that potentially\ninteract with each other.\n[Networked](http://en.wikipedia.org/wiki/Computer_network) defines protocols\nthat enables computing devices to exchange messages and perform services\nremotely. The topics in this course are timely since the advent of multi-core\nand distributed-core processors--coupled with ubiquitous wireless and wireline\nconnectivity--is increasing the demand for researchers and practitioners who\nunderstand how to successfully develop and deploy concurrent and networked\nsoftware.  \n\nDespite continuous improvements in processors and networks during the past\nfour decades, however, developing quality concurrent and networked software\nremains hard; developing quality reusable concurrent and networked software is\neven harder. The principles, methods, and skills required to develop such\nsoftware can be greatly enhanced by understanding how to create and apply\npatterns and frameworks. A\n[pattern](http://en.wikipedia.org/wiki/Software_design_pattern) describes a\nreusable solution to a commonly occurring problem within a particular context.\nWhen related patterns are woven together they form a [pattern\nlanguage](http://en.wikipedia.org/wiki/Pattern_language) that provides a\nvocabulary and a process for the orderly resolution of software development\nproblems. A [framework](http://en.wikipedia.org/wiki/Software_framework) is an\nintegrated set of software components that collaborate to provide a reusable\narchitecture for a family of related applications. Frameworks can also be\nviewed as concrete realizations of pattern languages that facilitate direct\nreuse of design and code.\n\nThis course describes how to apply patterns and frameworks to alleviate many\naccidental and inherent complexities associated with developing and deploying\nconcurrent and networked software. These patterns and frameworks have been\nused successfully in many domains, including telecom/datacom, mobile devices,\nelectronic medical imaging, network management, aerospace, avionics,\nautomation, online gaming, and financial systems. Over the coming weeks and\nmonths I'll illustrate by example how patterns and frameworks simplify and\nenhance the development of concurrent and networked software via the use of:\n\n  * Object-oriented design concepts and notations -- such as encapsulation, abstraction, polymorphism, extensibility, and the Unified Modeling Language (UML).\n\n  * Object-oriented programming language features -- such as classes, inheritance, dynamic binding, and parameterized types available in languages like Java, C++, and C#.\n\n  * Middleware -- which is infrastructure software residing between applications and the underlying operating systems, networks, and hardware that encapsulates heterogeneity and enables control over key end-to-end quality-of-service properties, such as dependability and security.\n\n  * Operating system mechanisms -- such as event demultiplexing, multi-threading, multi-processing, and dynamic linking.\n\nWe'll explore several case studies from the domains of mobile apps, web\nservers, object request brokers, avionic control systems, and expression tree\nprocessing to showcase a time-tested pattern-oriented software design and\nprogramming method for concurrent and networked software.\n\n## Syllabus\n\nThe course is organized as follows:\n\n  * **Section 0: Overview of all the topics covered in the course.** This material is designed to help you visualize the motivations for--and challenges of--of concurrent and networked software. We also summarize how patterns and frameworks help address key challenges of concurrent and networked software.\n\n  * **Section 1: Introduction to concurrency and networking**, which provides background info pertaining largely to the OS and middleware layers. We discuss key design dimensions of concurrent and networked software, as well as review common operating system programming mechanisms and Android programming mechanisms. This part focuses on concepts and is generally independent of programming language.\n\n  * **Section 2: Overview of patterns and frameworks**, which focuses on pattern-oriented software architecture, with an emphasis on concurrent and networked software. We explore key pattern and framework concepts, relationships, and examples, as well as evaluate the pros and cons of patterns and frameworks. Small code examples are shown throughout using C++ and Java, though this section concentrates more on design rather than programming.\n\n  * **Section 3: Applying patterns and frameworks to develop concurrent and networked software, which examines lots of code**. An open-source web server is used as a running example to illustrate patterns and frameworks pertaining to service access, communication, synchronous event handling, connection establishment, service initialization, service configuration and activation, concurrency and synchronization, and asynchronous event handling. These examples are in C++ using [ACE](http://www.dre.vanderbilt.edu/~schmidt/ACE.html).\n\n  * **Appendix: Presents a case study that applies many \"Gang of Four\" patterns** that aren't directly related to concurrent and networked software. Evaluates the limitations with algorithm design and shows how pattern-oriented design alleviates these limtations. The examples are largely in C++, again with some Java examples to show how pattern-oriented design simplifies portability across programming languages.\n\n",
        "name": "Pattern-Oriented Software Architectures for Concurrent and Networked Software",
        "provider": "Coursera",
        "rating": "5",
        "reviews": "2",
        "university": [
            "Vanderbilt University"
        ],
        "url": "https://www.coursera.org/course/posasoftware",
        "video_url": ""
    },
    {
        "date": "2013-02-25",
        "desc": "El curso que est\u00e1 planteado para ser eminentemente pr\u00e1ctico, introduce al alumno, cuyo perfil esperado es un profesor de cualquier nivel educativo (Educaci\u00f3n Infantil,\u00a0 Primaria, Secundaria, Universidad o M\u00e1ster) en las herramientas y metodolog\u00edas que las nuevas tecnolog\u00edas de la Inform\u00e1tica Educativa le pueden aportar para mejorar su docencia. En particular, se espera que cualquier alumno aprenda de este curso qu\u00e9 es la Inform\u00e1tica Educativa, c\u00f3mo las nuevas tecnolog\u00edas les pueden ayudar en su docencia como otra herramienta m\u00e1s para un profesor que en el siglo XXI sabe combinar todos los recursos que el mundo digital le ofrece, tanto para crear nuevos contenidos multimedia interactivos como para evaluar de forma autom\u00e1tica o semiautom\u00e1tica contenidos / competencias en varios dispositivos.",
        "desc_html": "El curso que est\u00e1 planteado para ser eminentemente pr\u00e1ctico, introduce al\nalumno, cuyo perfil esperado es un profesor de cualquier nivel educativo\n(Educaci\u00f3n Infantil,\u00a0 Primaria, Secundaria, Universidad o M\u00e1ster) en las\nherramientas y metodolog\u00edas que las nuevas tecnolog\u00edas de la Inform\u00e1tica\nEducativa le pueden aportar para mejorar su docencia. En particular, se espera\nque cualquier alumno aprenda de este curso qu\u00e9 es la Inform\u00e1tica Educativa,\nc\u00f3mo las nuevas tecnolog\u00edas les pueden ayudar en su docencia como otra\nherramienta m\u00e1s para un profesor que en el siglo XXI sabe combinar todos los\nrecursos que el mundo digital le ofrece, tanto para crear nuevos contenidos\nmultimedia interactivos como para evaluar de forma autom\u00e1tica o semiautom\u00e1tica\ncontenidos / competencias en varios dispositivos.\n\n",
        "name": "Introducci\u00f3n a la inform\u00e1tica educativa",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.miriadax.net/web/introduccion_informatica_educativa",
        "video_url": "https://www.youtube.com/embed/K1z6XyObLtQ?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-02-25",
        "desc": "En el curso aprender\u00e1s a planificar una b\u00fasqueda desde el comienzo y a utilizar las diversas\u00a0herramientas que Internet pone a tu alcance para que encuentres aquello que necesitas. Veremos herramientas para buscar v\u00eddeos, im\u00e1genes, contenido libre de derechos e\u00a0informaci\u00f3n institucional, entre otras muchas cosas.",
        "desc_html": "En el curso aprender\u00e1s a planificar una b\u00fasqueda desde el comienzo y a\nutilizar las diversas\u00a0herramientas que Internet pone a tu alcance para que\nencuentres aquello que necesitas. Veremos herramientas para buscar v\u00eddeos,\nim\u00e1genes, contenido libre de derechos e\u00a0informaci\u00f3n institucional, entre otras\nmuchas cosas.\n\n",
        "name": "Buscar en internet",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.miriadax.net/web/buscar_internet",
        "video_url": "https://www.youtube.com/embed/tMUn2zERL-4?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-02-24",
        "desc": "Natural language processing (NLP) deals with the application of computational models to text or speech data. Application areas within NLP include automatic (machine) translation between languages; dialogue systems, which allow a human to interact with a machine using natural language; and information extraction, where the goal is to transform unstructured text into structured (database) representations that can be searched and browsed in flexible ways. NLP technologies are having a dramatic impact on the way people interact with computers, on the way people interact with each other through the use of language, and on the way people access the vast amount of linguistic data now in electronic form. From a scientific viewpoint, NLP involves fundamental questions of how to structure formal models (for example statistical models) of natural language phenomena, and of how to design algorithms that implement these models.In this course you will study mathematical and computational models of language, and the application of these models to key problems in natural language processing. The course has a focus on machine learning methods, which are widely used in modern NLP systems: we will cover formalisms such as hidden Markov models, probabilistic context-free grammars, log-linear models, and statistical models for machine translation. The curriculum closely follows a course currently taught by Professor Collins at Columbia University, and previously taught at MIT.SyllabusTopics covered include:1. Language modeling.2. Hidden Markov models, and tagging problems.3. Probabilistic context-free grammars, and the parsing problem.4. Statistical approaches to machine translation.5. Log-linear models, and their application to NLP problems.6. Unsupervised and semi-supervised learning in NLP.",
        "desc_html": "Natural language processing (NLP) deals with the application of computational\nmodels to text or speech data. Application areas within NLP include automatic\n(machine) translation between languages; dialogue systems, which allow a human\nto interact with a machine using natural language; and information extraction,\nwhere the goal is to transform unstructured text into structured (database)\nrepresentations that can be searched and browsed in flexible ways. NLP\ntechnologies are having a dramatic impact on the way people interact with\ncomputers, on the way people interact with each other through the use of\nlanguage, and on the way people access the vast amount of linguistic data now\nin electronic form. From a scientific viewpoint, NLP involves fundamental\nquestions of how to structure formal models (for example statistical models)\nof natural language phenomena, and of how to design algorithms that implement\nthese models.\n\nIn this course you will study mathematical and computational models of\nlanguage, and the application of these models to key problems in natural\nlanguage processing. The course has a focus on machine learning methods, which\nare widely used in modern NLP systems: we will cover formalisms such as hidden\nMarkov models, probabilistic context-free grammars, log-linear models, and\nstatistical models for machine translation. The curriculum closely follows a\ncourse currently taught by Professor Collins at Columbia University, and\npreviously taught at MIT.\n\n## Syllabus\n\nTopics covered include:\n\n1\\. Language modeling.  \n2\\. Hidden Markov models, and tagging problems.  \n3\\. Probabilistic context-free grammars, and the parsing problem.  \n4\\. Statistical approaches to machine translation.  \n5\\. Log-linear models, and their application to NLP problems.  \n6\\. Unsupervised and semi-supervised learning in NLP.\n\n",
        "name": "Natural Language Processing",
        "provider": "Coursera",
        "rating": "4",
        "reviews": "2",
        "university": [
            "Columbia University"
        ],
        "url": "https://www.coursera.org/course/nlangp",
        "video_url": ""
    },
    {
        "date": "2013-02-07",
        "desc": "",
        "desc_html": "\n\n",
        "name": "Program Arcade Games - Learn Computer Science",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "http://programarcadegames.com/",
        "video_url": ""
    },
    {
        "date": "2013-02-04",
        "desc": "This course will walk you through the major components of building GRITS, an HTML5 game. We'll talk about how to take standard game development techniques, and use them to create high performance HTML5 applications.Why Take This Course?At the end of this course, you'll understand how to develop an HTML5 game. You will gain familiarity with HTML5 features such as 2D canvas and techniques for improving performance.Prerequisites and RequirementsKnowledge of HTML, Javascript, and how the web works is necessary for this course. There is an optional lesson on the specific parts of Javascript and the DOM that you'll need for this class as a refresher, but this is not an introductory course on Javascript.See the&nbsp;Technology Requirements&nbsp;for using UdacitySyllabusLesson 0Optional HTML/Javascript crash courseLesson 1Introduction to Canvas renderingLesson 2AtlasesLesson 3Map renderingLesson 4Basic Input, handling eventsLesson 5The entity hierarchyLesson 6Box2D, and using external librariesLesson 7Adding soundLesson 8Asynchronous Loading",
        "desc_html": "This course will walk you through the major components of building GRITS, an\nHTML5 game. We'll talk about how to take standard game development techniques,\nand use them to create high performance HTML5 applications.\n\n**Why Take This Course?**\n\nAt the end of this course, you'll understand how to develop an HTML5 game. You\nwill gain familiarity with HTML5 features such as 2D canvas and techniques for\nimproving performance.\n\n**Prerequisites and Requirements**\n\nKnowledge of HTML, Javascript, and how the web works is necessary for this\ncourse. There is an optional lesson on the specific parts of Javascript and\nthe DOM that you'll need for this class as a refresher, but this is not an\nintroductory course on Javascript.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n## Syllabus\n\n**Lesson 0**\n\nOptional HTML/Javascript crash course\n\n**Lesson 1**\n\nIntroduction to Canvas rendering\n\n**Lesson 2**\n\nAtlases\n\n**Lesson 3**\n\nMap rendering\n\n**Lesson 4**\n\nBasic Input, handling events\n\n**Lesson 5**\n\nThe entity hierarchy\n\n**Lesson 6**\n\nBox2D, and using external libraries\n\n**Lesson 7**\n\nAdding sound\n\n**Lesson 8**\n\nAsynchronous Loading\n\n",
        "name": "HTML5 Game Development",
        "provider": "Udacity",
        "rating": "4",
        "reviews": "2",
        "university": [
            "Google"
        ],
        "url": "http://www.udacity.com/overview/Course/cs255/CourseRev/1",
        "video_url": "https://www.youtube.com/embed/F3JeV756B7w?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-02-04",
        "desc": "Learn the fundamentals of parallel computing with the GPU and the CUDA programming environment! In this class, you'll learn about parallel programming by coding a series of image processing algorithms, such as you might find in Photoshop or Instagram. You'll be able to program and run your assignments on high-end GPUs, even if you don't own one yourself.Why It&rsquo;s Important to Think ParallelThird Pillar of Science&nbsp;Learn how scientific discovery can be accelerated by combining theory and experimentation with computing to fight cancer, prevent heart attacks, and spur new advances in robotic surgery.Why Take This Course?You'll master the fundamentals of massively parallel computing by using CUDA C/C++ to program modern GPUs. You'll learn the GPU programming model and architecture, key algorithms and parallel programming patterns, and optimization techniques. Your assignments will illustrate these concepts through image processing applications, but this is a parallel computing course and what you learn will translate to any application domain. Most of all we hope you'll learn how to think in parallel.Prerequisites and RequirementsWe expect students to have a solid experience with the C programming language and basic knowledge of data structures and algorithms.See the&nbsp;Technology Requirements&nbsp;for using UdacitySyllabusLesson 1: GPU Programming ModelProject 1: Greyscale Conversion (for that classy touch!)Lesson 2: GPU Hardware and Parallel CommunicationProject 2: Smart Blurring (miracle product for removing wrinkles!)Lesson 3: Fundamental Parallel AlgorithmsProject 3: HDR Tonemapping (when 1000:1 contrast is not enough!)Lesson 4: Using Sort and ScanProject 4: Red Eye Removal (soothing relief for bright red eyes)Lesson 5: Optimizing GPU ProgramsProject 5: Accelerating Histograms (when fast isn't fast enough)Lesson 6: Parallel Computing PatternsProject 6: Seamless Image Compositing (polar bear in the swimming pool)Lesson 7: The Frontiers and Future of GPU Computing",
        "desc_html": "Learn the fundamentals of parallel computing with the GPU and the CUDA\nprogramming environment! In this class, you'll learn about parallel\nprogramming by coding a series of image processing algorithms, such as you\nmight find in Photoshop or Instagram. You'll be able to program and run your\nassignments on high-end GPUs, even if you don't own one yourself.\n\nWhy It's Important to Think Parallel\n\n[Third Pillar of Science](http://www.youtube.com/watch?v=3DbAB2ChDBw)  \nLearn how scientific discovery can be accelerated by combining theory and\nexperimentation with computing to fight cancer, prevent heart attacks, and\nspur new advances in robotic surgery.\n\n**Why Take This Course?**\n\nYou'll master the fundamentals of massively parallel computing by using CUDA\nC/C++ to program modern GPUs. You'll learn the GPU programming model and\narchitecture, key algorithms and parallel programming patterns, and\noptimization techniques. Your assignments will illustrate these concepts\nthrough image processing applications, but this is a parallel computing course\nand what you learn will translate to any application domain. Most of all we\nhope you'll learn how to think in parallel.\n\n**Prerequisites and Requirements**\n\nWe expect students to have a solid experience with the C programming language\nand basic knowledge of data structures and algorithms.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n## Syllabus\n\n**Lesson 1: GPU Programming Model**\n\nProject 1: Greyscale Conversion (for that classy touch!)\n\n**Lesson 2: GPU Hardware and Parallel Communication**\n\nProject 2: Smart Blurring (miracle product for removing wrinkles!)\n\n**Lesson 3: Fundamental Parallel Algorithms**\n\nProject 3: HDR Tonemapping (when 1000:1 contrast is not enough!)\n\n**Lesson 4: Using Sort and Scan**\n\nProject 4: Red Eye Removal (soothing relief for bright red eyes)\n\n**Lesson 5: Optimizing GPU Programs**\n\nProject 5: Accelerating Histograms (when fast isn't fast enough)\n\n**Lesson 6: Parallel Computing Patterns**\n\nProject 6: Seamless Image Compositing (polar bear in the swimming pool)\n\n**Lesson 7: The Frontiers and Future of GPU Computing**\n\n",
        "name": "Intro to Parallel Programming",
        "provider": "Udacity",
        "rating": "3",
        "reviews": "1",
        "university": [
            "Nvidia",
            "University of California, Davis"
        ],
        "url": "http://www.udacity.com/overview/Course/cs344/CourseRev/1",
        "video_url": "https://www.youtube.com/embed/zb49vDrOxgA?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-02-04",
        "desc": "6.00x is an introduction to using computation to solve real problems. The course is aimed at students with little or no prior programming experience who have a desire (or at least a need) to understand computational approaches to problem solving. Some of the people taking the course will use it as a stepping stone to more advanced computer science courses, but for many, it will be their first and last computer science course. Since the course will be the only formal computer science course many of the students take, we have chosen to focus on breadth rather than depth. The goal is to provide students with a brief introduction to many topics so they will have an idea of what is possible when they need to think about how to use computation to accomplish some goal later in their career. That said, it is not a \"computation appreciation\" course. It is a challenging and rigorous course in which the students spend a lot of time and effort learning to bend the computer to their will.Since the course will be the only formal computer science course many of the students take, we have chosen to focus on breadth rather than depth. The goal is to provide students with a brief introduction to many topics so they will have an idea of what is possible when they need to think about how to use computation to accomplish some goal later in their career. That said, it is not a \"computation appreciation\" course. It is a challenging and rigorous course in which the students spend a lot of time and effort learning to bend the computer to their will.",
        "desc_html": "6.00x is an introduction to using computation to solve real problems. The\ncourse is aimed at students with little or no prior programming experience who\nhave a desire (or at least a need) to understand computational approaches to\nproblem solving. Some of the people taking the course will use it as a\nstepping stone to more advanced computer science courses, but for many, it\nwill be their first and last computer science course. Since the course will be\nthe only formal computer science course many of the students take, we have\nchosen to focus on breadth rather than depth. The goal is to provide students\nwith a brief introduction to many topics so they will have an idea of what is\npossible when they need to think about how to use computation to accomplish\nsome goal later in their career. That said, it is not a \"computation\nappreciation\" course. It is a challenging and rigorous course in which the\nstudents spend a lot of time and effort learning to bend the computer to their\nwill.  \nSince the course will be the only formal computer science course many of the\nstudents take, we have chosen to focus on breadth rather than depth. The goal\nis to provide students with a brief introduction to many topics so they will\nhave an idea of what is possible when they need to think about how to use\ncomputation to accomplish some goal later in their career. That said, it is\nnot a \"computation appreciation\" course. It is a challenging and rigorous\ncourse in which the students spend a lot of time and effort learning to bend\nthe computer to their will.\n\n",
        "name": "6.00x: Introduction to Computer Science and Programming",
        "provider": "edX",
        "rating": "4",
        "reviews": "3",
        "university": [
            "Massachusetts Institute of Technology"
        ],
        "url": "https://www.edx.org/course/mitx/mitx-6-00x-introduction-computer-science-586",
        "video_url": "https://www.youtube.com/embed/3cH_qnEx9P0?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-01-31",
        "desc": "El curso est\u00e1 compuesto por una serie de temas que hemos considerado que son el m\u00ednimo que debe conocer cualquier persona que quiera tener una visi\u00f3n introductoria del desarrollo web actual. Al finalizar el curso, si el alumno ha asimilado correctamente todos los contenidos y ha completado todas las actividades de forma satisfactoria, ser\u00e1 capaz de desarrollar aplicaciones web. El curso comienza con las tecnolog\u00edas que en la actualidad son consideradas el est\u00e1ndar de la programaci\u00f3n de la parte cliente de las aplicaciones web: HTML, CSS, JavaScript y DOM. Adem\u00e1s, se proporcionan conocimientos sobre dise\u00f1o, usabilidad y accesibilidad en general y en particular sobre su aplicaci\u00f3n al desarrollo web. La \u00faltima parte se dedica a la programaci\u00f3n de la parte servidor con la tecnolog\u00eda PHP.",
        "desc_html": "El curso est\u00e1 compuesto por una serie de temas que hemos considerado que son\nel m\u00ednimo que debe conocer cualquier persona que quiera tener una visi\u00f3n\nintroductoria del desarrollo web actual. Al finalizar el curso, si el alumno\nha asimilado correctamente todos los contenidos y ha completado todas las\nactividades de forma satisfactoria, ser\u00e1 capaz de desarrollar aplicaciones\nweb. El curso comienza con las tecnolog\u00edas que en la actualidad son\nconsideradas el est\u00e1ndar de la programaci\u00f3n de la parte cliente de las\naplicaciones web: HTML, CSS, JavaScript y DOM. Adem\u00e1s, se proporcionan\nconocimientos sobre dise\u00f1o, usabilidad y accesibilidad en general y en\nparticular sobre su aplicaci\u00f3n al desarrollo web. La \u00faltima parte se dedica a\nla programaci\u00f3n de la parte servidor con la tecnolog\u00eda PHP.\n\n",
        "name": "iDESWEB, Introducci\u00f3n al desarrollo web",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.miriadax.net/web/introduccion_desarrollo_web",
        "video_url": "https://www.youtube.com/embed/00ABGMuEv1k?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-01-31",
        "desc": "Los dispositivos m\u00f3viles est\u00e1n transformando la forma en que las personas se\u00a0comunican. Se han convirtiendo en el nuevo ordenador personal del siglo XXI.\u00a0Android es la plataforma libre para el desarrollo de aplicaciones m\u00f3viles desarrollada por\u00a0Google. Esta plataforma est\u00e1 ampliando su rango de influencia a sistemas empotrados,\u00a0tabletas o Smart TV. Este curso pretende ser una gu\u00eda para introducirse en la\u00a0programaci\u00f3n en Android. Todos los conceptos son descritos por medio de ejemplos,\u00a0aumentando su nivel de complejidad a medida que avanzan los m\u00f3dulos. A lo largo del\u00a0curso se desarrolla una aplicaci\u00f3n de ejemplo, el m\u00edtico videojuego Asteroides.\u00a0Comienza con una versi\u00f3n sencilla, que se ir\u00e1 completando para que incluya, gr\u00e1ficos,\u00a0pantalla t\u00e1ctil y sensores, geo-localizaci\u00f3n, multimedia, XML, SQL, Internet, servicios\u00a0Web\u2026",
        "desc_html": "Los dispositivos m\u00f3viles est\u00e1n transformando la forma en que las personas se\ncomunican. Se han convirtiendo en el nuevo ordenador personal del siglo XXI.\nAndroid es la plataforma libre para el desarrollo de aplicaciones m\u00f3viles\ndesarrollada por\u00a0Google. Esta plataforma est\u00e1 ampliando su rango de influencia\na sistemas empotrados,\u00a0tabletas o Smart TV. Este curso pretende ser una gu\u00eda\npara introducirse en la\u00a0programaci\u00f3n en Android. Todos los conceptos son\ndescritos por medio de ejemplos,\u00a0aumentando su nivel de complejidad a medida\nque avanzan los m\u00f3dulos. A lo largo del\u00a0curso se desarrolla una aplicaci\u00f3n de\nejemplo, el m\u00edtico videojuego Asteroides.\u00a0Comienza con una versi\u00f3n sencilla,\nque se ir\u00e1 completando para que incluya, gr\u00e1ficos,\u00a0pantalla t\u00e1ctil y sensores,\ngeo-localizaci\u00f3n, multimedia, XML, SQL, Internet, servicios\u00a0Web\u2026\n\n",
        "name": "Android. Programaci\u00f3n de Aplicaciones",
        "provider": "Mir\u00edada X",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.miriadax.net/web/android_programacion",
        "video_url": "https://www.youtube.com/embed/PPsVy0nDOR8?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-01-17",
        "desc": "",
        "desc_html": "\n\n",
        "name": "Introduction to Computer Architecture",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Carnegie Mellon University"
        ],
        "url": "http://www.ece.cmu.edu/~ece447/s13/doku.php?id=schedule",
        "video_url": "https://www.youtube.com/embed/BJ87rZCGWU0?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-01-15",
        "desc": "",
        "desc_html": "\n\n",
        "name": "Introduction to Databases",
        "provider": "Class2Go",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Stanford University"
        ],
        "url": "https://class.stanford.edu/db/Winter2013/preview/",
        "video_url": "https://www.youtube.com/embed/VJyduDiQ_xM?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-01-14",
        "desc": "This is a course to teach basic Python programming skills through data analysis. The book and course materials are all free and licensed as Creative Commons. There is no complex math in the course, the programs are generally quite short, and the workload is no more than a few hours per week. By the time you complete the course, you will understand be able to read, parse, and manipulate data using Python. Hopefully at the end of the course you will like programming well enough to take another course in programming or web development. You can register and launch, take the course, and earn your place on the map at any time and at your own pace",
        "desc_html": "This is a course to teach basic Python programming skills through data\nanalysis. The book and course materials are all free and licensed as Creative\nCommons. There is no complex math in the course, the programs are generally\nquite short, and the workload is no more than a few hours per week. By the\ntime you complete the course, you will understand be able to read, parse, and\nmanipulate data using Python. Hopefully at the end of the course you will like\nprogramming well enough to take another course in programming or web\ndevelopment. You can register and launch, take the course, and earn your place\non the map at any time and at your own pace\n\n",
        "name": "DCO042 - Python For Informatics",
        "provider": "Independent",
        "rating": "4.5",
        "reviews": "2",
        "university": [
            "University of Michigan"
        ],
        "url": "https://online.dr-chuck.com/index.php",
        "video_url": "https://www.youtube.com/embed/hRNFBhEykcY?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2013-01-14",
        "desc": "Whether you are a student, or a professional, this course will aim to introduce you to a number of topics related to HCI. Alan will be providing a series of video lectures supported by key reading materials and exercises, delivered fully online.&nbsp;SyllabusIntroduction to interaction designEmotion and ExperienceIntroduction to information visualisationFormal methods in HCIUser interface software architectureCreativity and innovationDesigning for user (adoption and appropriation)",
        "desc_html": "Whether you are a student, or a professional, this course will aim to\nintroduce you to a number of topics related to HCI. Alan will be providing a\nseries of video lectures supported by key reading materials and exercises,\ndelivered fully online.\n\n## Syllabus\n\n  * Introduction to interaction design\n  * Emotion and Experience\n  * Introduction to information visualisation\n  * Formal methods in HCI\n  * User interface software architecture\n  * Creativity and innovation\n  * Designing for user (adoption and appropriation)\n\n",
        "name": "Human Computer Interaction",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "http://hcicourse.com/",
        "video_url": ""
    },
    {
        "date": "2013-01-07",
        "desc": "",
        "desc_html": "\n\n",
        "name": "Game Design Concepts",
        "provider": "Canvas.net",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.canvas.net/",
        "video_url": ""
    },
    {
        "date": "2012-12-03",
        "desc": "UNSW Computing 1&nbsp;is a public course presented by OpenLearning with original content derived from UNSW COMPUTING's first year computing course.&nbsp;&nbsp;Take the course online for free!This 12 week course will explore the world of software engineering, computing and problem solving. While Computing 1&nbsp;only takes four to five hours a week&nbsp;(that's nothing!), you'll struggle to tear yourself away as you learn:abstraction, estimation, programming, machine code, C, problem solvingtop down design, arithmetic expressions, layout, style++types, variables, memory other numeric typeswhile and for loops, stack frames, arrays...Even better, Computing 1 will give you an understanding of what it's like to be a developer and enable you to appreciate the art of computing.Whether you're in Sydney, Singapore or Santiago,&nbsp;you'll love Computing 1&nbsp;on OpenLearning. You won't just take the course, you'll be a part of the course by contributing to the lecture notes and helping other students.You'll enjoy a mix of short activities, fun software puzzles and projects.&nbsp;You'll&nbsp;learn at your own pace&nbsp;and feel motivated with helpful and immediate feedback on your progress.",
        "desc_html": "**UNSW Computing 1** is a public course presented by OpenLearning with original content derived from UNSW COMPUTING's first year computing course.  Take the course online for free!\n\nThis 12 week course will explore the world of software engineering, computing\nand problem solving. While Computing 1 **only takes four to five hours a\nweek** (that's nothing!), you'll struggle to tear yourself away as you learn:\n\n  * abstraction, estimation, programming, machine code, C, problem solving\n  * top down design, arithmetic expressions, layout, style++\n  * types, variables, memory other numeric types\n  * while and for loops, stack frames, arrays...\n\nEven better, Computing 1 will give you an understanding of what it's like to\nbe a developer and enable you to appreciate the art of computing.\n\nWhether you're in Sydney, Singapore or Santiago, **you'll love Computing 1 on\nOpenLearning**. You won't just take the course, you'll be a part of the course\nby contributing to the lecture notes and helping other students.\n\nYou'll enjoy a mix of short activities, fun software puzzles and projects.\n**You'll learn at your own pace** and feel motivated with helpful and\nimmediate feedback on your progress.\n\n",
        "name": "UNSW Computing 1 - The Art of Programming",
        "provider": "OpenLearning",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.openlearning.com/courses/unsw/computing1",
        "video_url": "https://www.youtube.com/embed/juPY486IhWc?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2012-11-28",
        "desc": "The objective of this class is to teach you modern AI. You will learn about the basic techniques and tricks of the trade. We also aspire to excite you about the field of AI.Why Take This Course?This class introduces students to the basics of Artificial Intelligence, which includes machine learning, probabilistic reasoning, robotics, and natural language processing.Prerequisites and RequirementsSome of the topics in Introduction to Artificial Intelligence will build on probability theory and linear algebra. You should have understanding of probability theory comparable to that at our ST101: Introduction to Statistics classSee the&nbsp;Technology Requirements&nbsp;for using UdacitySyllabusOverview of AIStatistics, Uncertainty, and Bayes networksMachine LearningLogic and PlanningMarkov Decision Processes and Reinforcement LearningHidden Markov Models and FiltersAdversarial and Advanced PlanningImage Processing and Computer VisionRobotics and robot motion planningNatural Language Processing and Information Retrieval",
        "desc_html": "The objective of this class is to teach you modern AI. You will learn about\nthe basic techniques and tricks of the trade. We also aspire to excite you\nabout the field of AI.\n\n**Why Take This Course?**\n\nThis class introduces students to the basics of Artificial Intelligence, which\nincludes machine learning, probabilistic reasoning, robotics, and natural\nlanguage processing.\n\n**Prerequisites and Requirements**\n\nSome of the topics in Introduction to Artificial Intelligence will build on\nprobability theory and linear algebra. You should have understanding of\nprobability theory comparable to that at our ST101: Introduction to Statistics\nclass\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n## Syllabus\n\nOverview of AI\n\nStatistics, Uncertainty, and Bayes networks\n\nMachine Learning\n\nLogic and Planning\n\nMarkov Decision Processes and Reinforcement Learning\n\nHidden Markov Models and Filters\n\nAdversarial and Advanced Planning\n\nImage Processing and Computer Vision\n\nRobotics and robot motion planning\n\nNatural Language Processing and Information Retrieval\n\n",
        "name": "Introduction to Artificial Intelligence",
        "provider": "Udacity",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Stanford University"
        ],
        "url": "http://www.udacity.com/overview/Course/cs271/CourseRev/1",
        "video_url": "https://www.youtube.com/embed/VfnXzwduq6U?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2012-10-22",
        "desc": "Learn everything you need to know to get started building a MongoDB-based app.This course will go over basic installation, JSON, schema design, querying, insertion of data, indexing and working with language drivers. In the course, you will build a blogging platform, backed by MongoDB.",
        "desc_html": "Learn everything you need to know to get started building a MongoDB-based app.  \nThis course will go over basic installation, JSON, schema design, querying,\ninsertion of data, indexing and working with language drivers. In the course,\nyou will build a blogging platform, backed by MongoDB.\n\n",
        "name": "M101: MongoDB for Developers",
        "provider": "MongoDB University",
        "rating": "3.5",
        "reviews": "2",
        "university": [],
        "url": "http://education.10gen.com/courses/10gen/M101/2012_Fall/about",
        "video_url": "https://www.youtube.com/embed/MXKvwHfAUNc?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2012-10-08",
        "desc": "This is an introductory course on computer networking, specifically the Internet. It focuses on explaining how the Internet works, ranging from how bits are modulated on wires and in wireless to application-level protocols like BitTorrent and HTTP. It also explains the principles of how to design networks and network protocols. Students gain experience reading and understanding RFCs (Internet protocol specifications) as statements of what a system should do. The course grounds many of the concepts in current practice and recent developments, such as net neutrality and DNS security.",
        "desc_html": "This is an introductory course on computer networking, specifically the\nInternet. It focuses on explaining how the Internet works, ranging from how\nbits are modulated on wires and in wireless to application-level protocols\nlike BitTorrent and HTTP. It also explains the principles of how to design\nnetworks and network protocols. Students gain experience reading and\nunderstanding RFCs (Internet protocol specifications) as statements of what a\nsystem should do. The course grounds many of the concepts in current practice\nand recent developments, such as net neutrality and DNS security.\n\n",
        "name": "An Introduction to Computer Networks",
        "provider": "Class2Go",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Stanford University"
        ],
        "url": "https://class.stanford.edu/networking/Fall2012/preview/",
        "video_url": "https://www.youtube.com/embed/o4Y_0uug_Oc?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2012-10-01",
        "desc": "This class teaches you about basic concepts in theoretical computer science -- such as NP-completeness -- and what they imply for solving tough algorithmic problems.Why Take This Course?At the end of this course, you will have a solid understanding of theoretical computer science. This will not only allow you to recognize some of the most challenging algorithmic problems out there, but also give you powerful tools to deal with them in practice.Prerequisites and RequirementsYou should have a basic understanding of algorithms (such as&nbsp;CS215) and programming (such as&nbsp;CS101). No prior knowledge about theoretical computer science required!See the&nbsp;Technology Requirements&nbsp;for using UdacitySyllabusLesson 1: Challenging ProblemsAn introduction to tough problems and their analysisLesson 2: Understanding HardnessWhat we mean when a problem is &ldquo;hard&rdquo; and the concept of NP-completenessLesson 3: Showing HardnessTools to let you recognize and prove that a problem is hardLesson 4: Intelligent ForceSmart techniques to solve problems that should &ndash; theoretically &ndash; be impossible to solveLesson 5: Sloppy SolutionsGaining speed by accepting approximate solutionsLesson 6: Poking AroundWhy randomness can be of help &ndash; sometimes. An introduction to complexity classes.Lesson 7: Ultimate LimitsProblems that no computer can ever solve. In theory.",
        "desc_html": "This class teaches you about basic concepts in theoretical computer science --\nsuch as NP-completeness -- and what they imply for solving tough algorithmic\nproblems.\n\n**Why Take This Course?**\n\nAt the end of this course, you will have a solid understanding of theoretical\ncomputer science. This will not only allow you to recognize some of the most\nchallenging algorithmic problems out there, but also give you powerful tools\nto deal with them in practice.\n\n**Prerequisites and Requirements**\n\nYou should have a basic understanding of algorithms (such as\n[CS215](https://www.udacity.com/course/cs215)) and programming (such as\n[CS101](https://www.udacity.com/course/cs101)). No prior knowledge about\ntheoretical computer science required!\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n## Syllabus\n\n**Lesson 1: Challenging Problems**\n\nAn introduction to tough problems and their analysis\n\n**Lesson 2: Understanding Hardness**\n\nWhat we mean when a problem is \"hard\" and the concept of NP-completeness\n\n**Lesson 3: Showing Hardness**\n\nTools to let you recognize and prove that a problem is hard\n\n**Lesson 4: Intelligent Force**\n\nSmart techniques to solve problems that should - theoretically - be impossible\nto solve\n\n**Lesson 5: Sloppy Solutions**\n\nGaining speed by accepting approximate solutions\n\n**Lesson 6: Poking Around**\n\nWhy randomness can be of help - sometimes. An introduction to complexity\nclasses.\n\n**Lesson 7: Ultimate Limits**\n\nProblems that no computer can ever solve. In theory.\n\n",
        "name": "Intro to Theoretical Computer Science",
        "provider": "Udacity",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "http://www.udacity.com/overview/Course/cs313/CourseRev/1",
        "video_url": "https://www.youtube.com/embed/AZ9B1kTW5FA?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2012-10-01",
        "desc": "Neural networks use learning algorithms that are inspired by our understanding of how the brain learns, but they are evaluated by how well they work for practical applications such as speech recognition, object recognition, image retrieval and the ability to recommend products that a user will like. As computers become more powerful, Neural Networks are gradually taking over from simpler Machine Learning methods. They are already at the heart of a new generation of speech recognition devices and they are beginning to outperform earlier systems for recognizing objects in images. The course will explain the new learning procedures that are responsible for these advances, including effective new proceduresr for learning multiple layers of non-linear features, and give you the skills and understanding required to apply these procedures in many other domains.This YouTube videogives examples of the kind of material that will be in the course, but the course will present this material at a much gentler rate and with more examples.",
        "desc_html": "Neural networks use learning algorithms that are inspired by our understanding\nof how the brain learns, but they are evaluated by how well they work for\npractical applications such as speech recognition, object recognition, image\nretrieval and the ability to recommend products that a user will like. As\ncomputers become more powerful, Neural Networks are gradually taking over from\nsimpler Machine Learning methods. They are already at the heart of a new\ngeneration of speech recognition devices and they are beginning to outperform\nearlier systems for recognizing objects in images. The course will explain the\nnew learning procedures that are responsible for these advances, including\neffective new proceduresr for learning multiple layers of non-linear features,\nand give you the skills and understanding required to apply these procedures\nin many other domains.  \n  \n[This YouTube video](http://www.youtube.com/watch?v=AyzOUbkUf3M) gives\nexamples of the kind of material that will be in the course, but the course\nwill present this material at a much gentler rate and with more examples.\n\n",
        "name": "Neural Networks for Machine Learning",
        "provider": "Coursera",
        "rating": "5",
        "reviews": "3",
        "university": [
            "University of Toronto"
        ],
        "url": "https://www.coursera.org/course/neuralnets",
        "video_url": ""
    },
    {
        "date": "2012-09-05",
        "desc": "",
        "desc_html": "\n\n",
        "name": "CSCI 1730 - Introduction to Programming Languages",
        "provider": "Independent",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Brown University"
        ],
        "url": "http://www.cs.brown.edu/courses/cs173/2012/OnLine/",
        "video_url": ""
    },
    {
        "date": "2012-09-03",
        "desc": "In this class you will learn how to debug programs systematically, how to automate the debugging process and build several automated debugging tools in Python.Why Take This Course?At the end of this course you will have a solid understanding about systematic debugging, will know how to automate debugging and will have built several functional debugging tools in Python.Prerequisites and RequirementsBasic knowledge of programming and Python at the level of Udacity CS101 or better is required. Basic understanding of Object-oriented programming is helpful.See the&nbsp;Technology Requirements&nbsp;for using UdacitySyllabusLesson 1: How Debuggers workTheory: Scientific method and its application to debugging.&nbsp;Fun fact: First bug in the history of computer science.&nbsp;Practice: Building a simple tracer.Lesson 2: Asserting ExpectationsTheory: Assertions in testing and in debugging.&nbsp;Fun fact: The most expensive bug in history.&nbsp;Practice: Improving the tracer.Lesson 3: Simplifying FailuresTheory: Strategy of simplifying failures. Binary search. Delta debugging principle.&nbsp;Fun fact: Mozilla bugathon.&nbsp;Practice: Building a delta debugger.Lesson 4: Tracking OriginsTheory: Cause-effect chain. Deduction. Dependencies. Slices.&nbsp;Fun fact: Sherlock Holmes and Doctor Watson.&nbsp;Practice: Improving the delta debugger.Lesson 5: Reproducing FailuresTheory: Types of bugs (Bohr bug, Heisenbug, Mandelbug, Schrodinbug). Systematic reproduction process.&nbsp;Fun fact: Mad laptop bug.&nbsp;Practice: Building a statistic debugging tool.Lesson 6: Learning from MistakesTheory: Bug database management. Classifying bugs. Bug maps. Learning from mistakes.&nbsp;Fun fact: Programmer with the most buggy code.&nbsp;Practice: Improving your tools and practicing on a real world bug database.",
        "desc_html": "In this class you will learn how to debug programs systematically, how to\nautomate the debugging process and build several automated debugging tools in\nPython.\n\n**Why Take This Course?**\n\nAt the end of this course you will have a solid understanding about systematic\ndebugging, will know how to automate debugging and will have built several\nfunctional debugging tools in Python.\n\n**Prerequisites and Requirements**\n\nBasic knowledge of programming and Python at the level of Udacity CS101 or\nbetter is required. Basic understanding of Object-oriented programming is\nhelpful.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n## Syllabus\n\n**Lesson 1: How Debuggers work**\n\nTheory: Scientific method and its application to debugging.  \nFun fact: First bug in the history of computer science.  \nPractice: Building a simple tracer.\n\n**Lesson 2: Asserting Expectations**\n\nTheory: Assertions in testing and in debugging.  \nFun fact: The most expensive bug in history.  \nPractice: Improving the tracer.\n\n**Lesson 3: Simplifying Failures**\n\nTheory: Strategy of simplifying failures. Binary search. Delta debugging\nprinciple.  \nFun fact: Mozilla bugathon.  \nPractice: Building a delta debugger.\n\n**Lesson 4: Tracking Origins**\n\nTheory: Cause-effect chain. Deduction. Dependencies. Slices.  \nFun fact: Sherlock Holmes and Doctor Watson.  \nPractice: Improving the delta debugger.\n\n**Lesson 5: Reproducing Failures**\n\nTheory: Types of bugs (Bohr bug, Heisenbug, Mandelbug, Schrodinbug).\nSystematic reproduction process.  \nFun fact: Mad laptop bug.  \nPractice: Building a statistic debugging tool.\n\n**Lesson 6: Learning from Mistakes**\n\nTheory: Bug database management. Classifying bugs. Bug maps. Learning from\nmistakes.  \nFun fact: Programmer with the most buggy code.  \nPractice: Improving your tools and practicing on a real world bug database.\n\n",
        "name": "Software Debugging",
        "provider": "Udacity",
        "rating": "4",
        "reviews": "2",
        "university": [
            "Saarland University"
        ],
        "url": "http://www.udacity.com/overview/Course/cs259/CourseRev/1",
        "video_url": "https://www.youtube.com/embed/pklED4UfODg?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2012-09-03",
        "desc": "\"In-Memory Data Management\" focuses on the management of enterprise data in column-oriented in-memory databases. Latest hardware and software trends led to the development of a new revolutionary database technology that enables flexible and lightning-fast analysis of massive amounts of enterprise data. The basic concepts and design principles of this technology are explained in detail. Beyond that, the implications of the underlying design principles for future enterprise applications and their development are discussed. The course will explain in detail the differences and advantages of an in-memory column-oriented database in contrast to traditional row-oriented disk-based storages. The following topics are covered (among others):Requirements for Modern Enterprise Computing, Enterprise Application CharacteristicsHardware Trends, Columnar Storage vs. Row StorageDictionary Encoding, CompressionScans, Selects, Deletes, Inserts, UpdatesIndices, JoinsApplicationsSyllabusWeek 1:The first week will give you an understanding of origins of enterprise computing. It is vital to know the historic development which lead to the emergence of current hardware as we know it now in order to understand the decisions made in the past. Many characteristics of current applications, like materialized aggregates and a reduction of detail in the stored information, have their roots in the past. While these measures were helpful in former systems, they form an obstacle which has to be overcome now in order to allow for new, dynamic applications.Week 2:Within the second week, the differences between a horizontal, row oriented layout and a columnar layout are discussed. Concepts like compression and partitioning are introduced. Based on that, you will get an explanation of the internal steps performed inside the database to carry out the fundamental relational operations insert, update and delete. The week concludes with a fundamental difference of SanssouciDB to most other databases: the insert only approach. Following this concept, we circumvent several pitfalls concerning referential integrity and additionally gain the foundation for a gap-less time travel feature.Week 3:The content of week 3 focuses on more advanced structures and operations within the database. The differential buffer, a means to prevent frequent resorting of the dictionaries and rewriting of the attribute vectors, is explained in further detail. Subsequently, also the merge process, which incorporates the changes from the differential buffer into the main store, is illustrated. The retrieval of information via the select statement, as well as related concepts like tuple reconstruction, early and late materialization, or a closer examination of the achieved scan speed, are also part of this week's schedule. The description of the join operation, which is used to connect information from different tables, concludes this week.Week 4:Week 4 is all about aggregation. Aggregations are the centerpiece of every business analytics application. Given that huge impact of aggregates on all parts of a business, it is of great importance to understand what aggregate functions are, why we remove all materialized aggregates and go for aggregation on the fly. You will further learn how to greatly reduce the costs of this on demand approach by using the aggregate cache and understand its connection to the differential buffer and the merge process. In the units concluding this week, you will see new prototype applications using the aggregate cache to deliver complex simulations in real time.Week 5:Week 5 sheds light on some more inner mechanisms of the database. What happens in emergency situations, when for example the power is turned off? Logging and recovery are vital parts to know in order to understand why an in-memory database is as secure as a traditional disk based one. Further, the benefits of replicas are explained. We conclude the week with an outlook onto the implications that arise with the tremendously increased speed at hands.Week 6:Week 6 is centered on applications. The last conceptual unit is about data separation into active and passive. After that, we showcase several prototypes and sketch out potential fields to apply the technology, thereby also leaving the domain of pure enterprise solutions, by using main memory databases in weather simulations and medicine.Exam:The final exam will cover all content from the previous weeks and test your understanding of the course as a whole.",
        "desc_html": "\"In-Memory Data Management\" focuses on the management of enterprise data in\ncolumn-oriented in-memory databases. Latest hardware and software trends led\nto the development of a new revolutionary database technology that enables\nflexible and lightning-fast analysis of massive amounts of enterprise data.\nThe basic concepts and design principles of this technology are explained in\ndetail. Beyond that, the implications of the underlying design principles for\nfuture enterprise applications and their development are discussed. The course\nwill explain in detail the differences and advantages of an in-memory column-\noriented database in contrast to traditional row-oriented disk-based storages.\nThe following topics are covered (among others):\n\n  * Requirements for Modern Enterprise Computing, Enterprise Application Characteristics\n  * Hardware Trends, Columnar Storage vs. Row Storage\n  * Dictionary Encoding, Compression\n  * Scans, Selects, Deletes, Inserts, Updates\n  * Indices, Joins\n  * Applications\n\n## Syllabus\n\n  *     * **Week 1:** The first week will give you an understanding of origins of enterprise computing. It is vital to know the historic development which lead to the emergence of current hardware as we know it now in order to understand the decisions made in the past. Many characteristics of current applications, like materialized aggregates and a reduction of detail in the stored information, have their roots in the past. While these measures were helpful in former systems, they form an obstacle which has to be overcome now in order to allow for new, dynamic applications.\n    * **Week 2:** Within the second week, the differences between a horizontal, row oriented layout and a columnar layout are discussed. Concepts like compression and partitioning are introduced. Based on that, you will get an explanation of the internal steps performed inside the database to carry out the fundamental relational operations insert, update and delete. The week concludes with a fundamental difference of SanssouciDB to most other databases: the insert only approach. Following this concept, we circumvent several pitfalls concerning referential integrity and additionally gain the foundation for a gap-less time travel feature.\n    * **Week 3:** The content of week 3 focuses on more advanced structures and operations within the database. The differential buffer, a means to prevent frequent resorting of the dictionaries and rewriting of the attribute vectors, is explained in further detail. Subsequently, also the merge process, which incorporates the changes from the differential buffer into the main store, is illustrated. The retrieval of information via the select statement, as well as related concepts like tuple reconstruction, early and late materialization, or a closer examination of the achieved scan speed, are also part of this week's schedule. The description of the join operation, which is used to connect information from different tables, concludes this week.\n    * **Week 4:** Week 4 is all about aggregation. Aggregations are the centerpiece of every business analytics application. Given that huge impact of aggregates on all parts of a business, it is of great importance to understand what aggregate functions are, why we remove all materialized aggregates and go for aggregation on the fly. You will further learn how to greatly reduce the costs of this on demand approach by using the aggregate cache and understand its connection to the differential buffer and the merge process. In the units concluding this week, you will see new prototype applications using the aggregate cache to deliver complex simulations in real time.\n    * **Week 5:** Week 5 sheds light on some more inner mechanisms of the database. What happens in emergency situations, when for example the power is turned off? Logging and recovery are vital parts to know in order to understand why an in-memory database is as secure as a traditional disk based one. Further, the benefits of replicas are explained. We conclude the week with an outlook onto the implications that arise with the tremendously increased speed at hands.\n    * **Week 6:** Week 6 is centered on applications. The last conceptual unit is about data separation into active and passive. After that, we showcase several prototypes and sketch out potential fields to apply the technology, thereby also leaving the domain of pure enterprise solutions, by using main memory databases in weather simulations and medicine.\n    * **Exam:** The final exam will cover all content from the previous weeks and test your understanding of the course as a whole.\n\n",
        "name": "In-Memory Data Management (2014) - Implications on Enterprise Systems",
        "provider": "openHPI",
        "rating": "5",
        "reviews": "2",
        "university": [],
        "url": "https://open.hpi.de/courses/imdb2014",
        "video_url": "https://www.youtube.com/embed/1fFRO8JlRts?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2012-07-17",
        "desc": "*Note - This is an Archived course*This is a past/archived course. At this time, you can only explore this course in a self-paced fashion. Certain features of this course may not be active, but many people enjoy watching the videos and working with the materials. Make sure to check for reruns of this course.Quantum computation is a remarkable subject building on the great computational discovery that computers based on quantum mechanics are exponentially powerful. This course aims to make this cutting-edge material broadly accessible to undergraduate students, including computer science majors who do not have any prior exposure to quantum mechanics. The course starts with a simple introduction to the fundamental principles of quantum mechanics using the concepts of qubits (or quantum bits) and quantum gates. This treatment emphasizes the paradoxical nature of the subject, including entanglement, non-local correlations, the no-cloning theorem and quantum teleportation. The course covers the fundamentals of quantum algorithms, including the quantum fourier transform, period finding, Shor's quantum algorithm for factoring integers, as well as the prospects for quantum algorithms for NP-complete problems. It also discusses the basic ideas behind the experimental realization of quantum computers, including the prospects for adiabatic quantum optimization and the D-Wave controversy.Before your course starts, try the new edX Demo where you can explore the fun, interactive learning environment and virtual labs. Learn more.",
        "desc_html": "*Note - This is an Archived course*  \n  \nThis is a past/archived course. At this time, you can only explore this course\nin a self-paced fashion. Certain features of this course may not be active,\nbut many people enjoy watching the videos and working with the materials. Make\nsure to check for reruns of this course.  \n  \nQuantum computation is a remarkable subject building on the great\ncomputational discovery that computers based on quantum mechanics are\nexponentially powerful. This course aims to make this cutting-edge material\nbroadly accessible to undergraduate students, including computer science\nmajors who do not have any prior exposure to quantum mechanics. The course\nstarts with a simple introduction to the fundamental principles of quantum\nmechanics using the concepts of qubits (or quantum bits) and quantum gates.\nThis treatment emphasizes the paradoxical nature of the subject, including\nentanglement, non-local correlations, the no-cloning theorem and quantum\nteleportation. The course covers the fundamentals of quantum algorithms,\nincluding the quantum fourier transform, period finding, Shor's quantum\nalgorithm for factoring integers, as well as the prospects for quantum\nalgorithms for NP-complete problems. It also discusses the basic ideas behind\nthe experimental realization of quantum computers, including the prospects for\nadiabatic quantum optimization and the D-Wave controversy.  \n  \nBefore your course starts, try the new edX Demo where you can explore the fun,\ninteractive learning environment and virtual labs. Learn more.\n\n",
        "name": "CS-191x: Quantum Mechanics and Quantum Computation",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "https://www.coursera.org/course/qcomp",
        "video_url": "https://www.youtube.com/embed/cEiikINgEUQ?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2012-07-13",
        "desc": "",
        "desc_html": "\n\n",
        "name": "Software Engineering for SaaS",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of California, Berkeley"
        ],
        "url": "https://www.coursera.org/course/saas",
        "video_url": "https://www.youtube.com/embed/jCory8n6WEY?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2012-06-25",
        "desc": "Ever played the Kevin Bacon game? This class will show you how it works by giving you an introduction to the design and analysis of algorithms, enabling you to discover how individuals are connected.Why Take This Course?By the end of this class you will understand key concepts needed to devise new algorithms for graphs and other important data structures and to evaluate the efficiency of these algorithms.Prerequisites and RequirementsThis class assumes an understanding of programming at the level of CS101, including the ability to read and write short programs in Python; it also assumes a comfort level with mathematical notation at the level of high school Algebra II or the SATs.See the&nbsp;Technology Requirements&nbsp;for using UdacitySyllabusLesson 1: A Social Network Magic TrickBecoming familiar with algorithm analysisLesson 2: Growth Rates in Social NetworksUsing mathematical tools to analyze how things are connectedLesson 3: Basic Graph AlgorithmsFinding the quickest route to Kevin BaconLesson 4: It&rsquo;s Who You KnowKeeping track of your best friends using heapsLesson 5: Strong and Weak BondsWorking with social networks with edge weights.Lesson 6: Hardness of Network ProblemsExploring what it means for a social network problem to be harder than other.Lesson 7: ConclusionUsing your knowledge",
        "desc_html": "Ever played the Kevin Bacon game? This class will show you how it works by\ngiving you an introduction to the design and analysis of algorithms, enabling\nyou to discover how individuals are connected.\n\n**Why Take This Course?**\n\nBy the end of this class you will understand key concepts needed to devise new\nalgorithms for graphs and other important data structures and to evaluate the\nefficiency of these algorithms.\n\n**Prerequisites and Requirements**\n\nThis class assumes an understanding of programming at the level of CS101,\nincluding the ability to read and write short programs in Python; it also\nassumes a comfort level with mathematical notation at the level of high school\nAlgebra II or the SATs.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n## Syllabus\n\n**Lesson 1: A Social Network Magic Trick**\n\nBecoming familiar with algorithm analysis\n\n**Lesson 2: Growth Rates in Social Networks**\n\nUsing mathematical tools to analyze how things are connected\n\n**Lesson 3: Basic Graph Algorithms**\n\nFinding the quickest route to Kevin Bacon\n\n**Lesson 4: It's Who You Know**\n\nKeeping track of your best friends using heaps\n\n**Lesson 5: Strong and Weak Bonds**\n\nWorking with social networks with edge weights.\n\n**Lesson 6: Hardness of Network Problems**\n\nExploring what it means for a social network problem to be harder than other.\n\n**Lesson 7: Conclusion**\n\nUsing your knowledge\n\n",
        "name": "Algorithms",
        "provider": "Udacity",
        "rating": "0",
        "reviews": "0",
        "university": [],
        "url": "http://www.udacity.com/overview/Course/cs215/CourseRev/1",
        "video_url": "https://www.youtube.com/embed/-jTyn7xuyvE?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2012-06-25",
        "desc": "When writing software, destruction can be just as valuable as creation. Learn how to catch bugs and break software as you discover different testing methods that will help you build better software.Why Take This Course?This course will teach you how to think like a software tester, how to find bugs in code earlier, and write better code.Prerequisites and RequirementsProgramming experience is required.See the&nbsp;Technology Requirements&nbsp;for using UdacitySyllabusLesson 1: Domains, Ranges, Oracles, and Kinds of TestingHow to think about the different elements of software testingLesson 2: Code CoverageHow to find parts of a program that need more testingLesson 3: Random TestingHow to automatically generate test cases that break code in unexpected waysLesson 4: Advanced Random TestingHow to engineer a sophisticated random test case generatorLesson 5: ConsequencesHow to deal with lots of bugs, how to take a big input that triggers a bug and make it smaller, how to report a bug, and more!Lesson 6: Conclusion",
        "desc_html": "When writing software, destruction can be just as valuable as creation. Learn\nhow to catch bugs and break software as you discover different testing methods\nthat will help you build better software.\n\n**Why Take This Course?**\n\nThis course will teach you how to think like a software tester, how to find\nbugs in code earlier, and write better code.\n\n**Prerequisites and Requirements**\n\nProgramming experience is required.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n## Syllabus\n\n**Lesson 1: Domains, Ranges, Oracles, and Kinds of Testing**\n\nHow to think about the different elements of software testing\n\n**Lesson 2: Code Coverage**\n\nHow to find parts of a program that need more testing\n\n**Lesson 3: Random Testing**\n\nHow to automatically generate test cases that break code in unexpected ways\n\n**Lesson 4: Advanced Random Testing**\n\nHow to engineer a sophisticated random test case generator\n\n**Lesson 5: Consequences**\n\nHow to deal with lots of bugs, how to take a big input that triggers a bug and\nmake it smaller, how to report a bug, and more!\n\n**Lesson 6: Conclusion**\n\n",
        "name": "Software Testing",
        "provider": "Udacity",
        "rating": "4.4",
        "reviews": "5",
        "university": [
            "University of Utah"
        ],
        "url": "http://www.udacity.com/overview/Course/cs258/CourseRev/1",
        "video_url": "https://www.youtube.com/embed/e06Vo9rba3k?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2012-04-23",
        "desc": "In this course, we will study the concepts and algorithms behind some of the remarkable successes of computer vision - capabilities such as face detection, handwritten digit recognition, reconstructing three-dimensional models of cities and more.",
        "desc_html": "In this course, we will study the concepts and algorithms behind some of the\nremarkable successes of computer vision - capabilities such as face detection,\nhandwritten digit recognition, reconstructing three-dimensional models of\ncities and more.\n\n",
        "name": "Computer Vision: The Fundamentals",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "University of California, Berkeley"
        ],
        "url": "https://www.coursera.org/course/vision",
        "video_url": "https://www.youtube.com/embed/Dz75hLtCVj0?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2012-04-16",
        "desc": "This class will give you an introduction to the fundamentals of programming languages. Key concepts include how to specify and process valid strings, sentences and program structures.Why Take This Course?Take this class and learn how to build your own simple web browser complete with the ability to parse and understand HTML and JavaScript.Prerequisites and RequirementsThis course assumes previous programming experience, comparable to what is covered by the Udacity CS101 course.See the&nbsp;Technology Requirements&nbsp;for using UdacitySyllabusString PatternsFinding and specifying classes of strings using regular expressionsLexical AnalysisBreaking strings down into important wordsGrammarsSpecifying and deconstructing valid sentencesParsingTurning sentences into treesInterpretingSimulating programsBuilding a Web BrowserInterpreting HTML and JavaScriptWrap-upExam testing your knowledge",
        "desc_html": "This class will give you an introduction to the fundamentals of programming\nlanguages. Key concepts include how to specify and process valid strings,\nsentences and program structures.\n\n**Why Take This Course?**\n\nTake this class and learn how to build your own simple web browser complete\nwith the ability to parse and understand HTML and JavaScript.\n\n**Prerequisites and Requirements**\n\nThis course assumes previous programming experience, comparable to what is\ncovered by the Udacity CS101 course.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n## Syllabus\n\n**String Patterns**\n\nFinding and specifying classes of strings using regular expressions\n\n**Lexical Analysis**\n\nBreaking strings down into important words\n\n**Grammars**\n\nSpecifying and deconstructing valid sentences\n\n**Parsing**\n\nTurning sentences into trees\n\n**Interpreting**\n\nSimulating programs\n\n**Building a Web Browser**\n\nInterpreting HTML and JavaScript\n\n**Wrap-up**\n\nExam testing your knowledge\n\n",
        "name": "Programming Languages",
        "provider": "Udacity",
        "rating": "4.2",
        "reviews": "5",
        "university": [
            "University of Virginia"
        ],
        "url": "http://www.udacity.com/overview/Course/cs262",
        "video_url": "https://www.youtube.com/embed/cn83Tm1jNSo?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2012-04-16",
        "desc": "In this introductory course, you&rsquo;ll learn and practice key computer science concepts by building your own versions of popular web applications. You&rsquo;ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you&rsquo;ll explore fundamental computer science concepts, as you build your own search engine and social network.Why Take This Course?You&rsquo;ll learn the programming language Python, and you&rsquo;ll explore foundational concepts in computer science. Most importantly, you&rsquo;ll start thinking like a software engineer by solving interesting problems (how to build a web crawler or a social network) using computer science.This course is a first step into the world of computer science, and whether you want to become a software engineer, or collaborate with software engineers, this course is for you. You&rsquo;ll be prepared for intermediate-level computer science courses when you&rsquo;ve mastered the concepts covered in this course.Build a Search Engine:Throughout this course, you&rsquo;ll build a search engine by learning about and producing key search engine components including a crawler, an index and a page rank algorithm. As you build these pieces, you&rsquo;ll be learning about and practicing computer science skills that will ready you for intermediate level computer science courses.Build a Social Network:At the end of the course we will give you a set of relationships (i.e. strings of phrases like &ldquo;Dave likes Andy, Kathleen and Kristy&rdquo;) and you will use your new computer science skills to organize these relationships into a social network. With your new social network, you can explore relationships and gain insight into how you fit into your own social networks.Prerequisites and RequirementsThere is no prior programming knowledge needed for this course. Beginners are welcome!See the&nbsp;Technology Requirements&nbsp;for using UdacityWhat Will I Learn?ProjectsBuild a search engine throughout this course. Then, build a social network with your new skills!SyllabusLesson 1: How to Get StartedYour first program: Extracting a linkLesson 2: How to RepeatProcedures, decisions (if), loops; finding all of the links on a pageAdditional Lesson: How to Solve ProblemsUniversal techniques for solving programming problemsLesson 3: How to Manage DataLists; crawling the webLesson 4: Responding to QueriesComplex data structures; building a reverse index to do searches; networksLesson 5: How Programs RunReasoning about cost; hash tables (Dictionary)Lesson 6: How to Have Infinite PowerRecursive definitions; ranking search resultsLesson 7: Where to Go from HerePast, present, and future of computing; examFinal Project: Build a Social Network",
        "desc_html": "In this introductory course, you'll learn and practice key computer science\nconcepts by building your own versions of popular web applications. You'll\nlearn Python, a powerful, easy-to-learn, and widely used programming language,\nand you'll explore fundamental computer science concepts, as you build your\nown search engine and social network.\n\n**Why Take This Course?**\n\nYou'll learn the programming language Python, and you'll explore foundational\nconcepts in computer science. Most importantly, you'll start thinking like a\nsoftware engineer by solving interesting problems (how to build a web crawler\nor a social network) using computer science.\n\nThis course is a first step into the world of computer science, and whether\nyou want to become a software engineer, or collaborate with software\nengineers, this course is for you. You'll be prepared for intermediate-level\ncomputer science courses when you've mastered the concepts covered in this\ncourse.\n\nBuild a Search Engine:\n\nThroughout this course, you'll build a search engine by learning about and\nproducing key search engine components including a crawler, an index and a\npage rank algorithm. As you build these pieces, you'll be learning about and\npracticing computer science skills that will ready you for intermediate level\ncomputer science courses.\n\nBuild a Social Network:\n\nAt the end of the course we will give you a set of relationships (i.e. strings\nof phrases like \"Dave likes Andy, Kathleen and Kristy\") and you will use your\nnew computer science skills to organize these relationships into a social\nnetwork. With your new social network, you can explore relationships and gain\ninsight into how you fit into your own social networks.\n\n**Prerequisites and Requirements**\n\nThere is no prior programming knowledge needed for this course. Beginners are\nwelcome!\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n**What Will I Learn?** **Projects**\n\nBuild a search engine throughout this course. Then, build a social network\nwith your new skills!\n\n## Syllabus\n\n**Lesson 1: How to Get Started**\n\nYour first program: Extracting a link\n\n**Lesson 2: How to Repeat**\n\nProcedures, decisions (if), loops; finding all of the links on a page\n\n**Additional Lesson: How to Solve Problems**\n\nUniversal techniques for solving programming problems\n\n**Lesson 3: How to Manage Data**\n\nLists; crawling the web\n\n**Lesson 4: Responding to Queries**\n\nComplex data structures; building a reverse index to do searches; networks\n\n**Lesson 5: How Programs Run**\n\nReasoning about cost; hash tables (Dictionary)\n\n**Lesson 6: How to Have Infinite Power**\n\nRecursive definitions; ranking search results\n\n**Lesson 7: Where to Go from Here**\n\nPast, present, and future of computing; exam\n\n**Final Project: Build a Social Network**\n\n",
        "name": "Introduction to Computer Science",
        "provider": "Udacity",
        "rating": "4.969696969697",
        "reviews": "33",
        "university": [
            "University of Virginia"
        ],
        "url": "http://www.udacity.com/overview/Course/cs101",
        "video_url": "https://www.youtube.com/embed/BQHMLD9bwq4?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2012-04-16",
        "desc": "Learn new concepts, patterns, and methods that will expand your programming abilities, helping move you from a novice to an expert programmer.Why Take This Course?Move along the path towards becoming an expert programmer! In this class you will practice going from a problem description to a solution, using a series of assignments.Prerequisites and RequirementsThis course assumes previous programming experience, comparable to what is covered by the Udacity CS101 course.See the&nbsp;Technology Requirements&nbsp;for using UdacitySyllabusLesson 1: Winning Poker HandsSteps of the design process; Developing for clarity and generality; Arguments for program correctness; Experimentation and simulation.; Design tradeoffs; Simplicity and Clarity. Decomposition and composability.Lesson 2: Back of the EnvelopeBack of envelope calculations; When to use brute force and when to be clever; The Zebra puzzle; Generator expressions; Permutations and combinations. Cryptarithmetic; Recursive and wishful thinking.Lesson 3: Regular Expressions, other languages and interpretersDefining the language of regular expressions; Interpreting the language; Defining the set of strings matched by a regular expression;&nbsp;Other languages.Lesson 4: Dealing with complexity through searchSearch: finding your way with a flashlight or boat; pouring water. Analyzing the efficiency of an algorithm; Recurrence relations; Matching data types with algorithms; Longest palindrome substring algorithm.Lesson 5: Dealing with uncertainty through probabilityProbability: the game of Pig; Maximizing expected utility to optimize strategy.Lesson 6: Word GamesManaging complexity; Large sets of words; Appropriate data structures; Word games.Lesson 7: ConclusionFinal exam/project",
        "desc_html": "Learn new concepts, patterns, and methods that will expand your programming\nabilities, helping move you from a novice to an expert programmer.\n\n**Why Take This Course?**\n\nMove along the path towards becoming an expert programmer! In this class you\nwill practice going from a problem description to a solution, using a series\nof assignments.\n\n**Prerequisites and Requirements**\n\nThis course assumes previous programming experience, comparable to what is\ncovered by the Udacity CS101 course.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n## Syllabus\n\n**Lesson 1: Winning Poker Hands**\n\nSteps of the design process; Developing for clarity and generality; Arguments\nfor program correctness; Experimentation and simulation.; Design tradeoffs;\nSimplicity and Clarity. Decomposition and composability.\n\n**Lesson 2: Back of the Envelope**\n\nBack of envelope calculations; When to use brute force and when to be clever;\nThe Zebra puzzle; Generator expressions; Permutations and combinations.\nCryptarithmetic; Recursive and wishful thinking.\n\n**Lesson 3: Regular Expressions, other languages and interpreters**\n\nDefining the language of regular expressions; Interpreting the language;\nDefining the set of strings matched by a regular expression;  \nOther languages.\n\n**Lesson 4: Dealing with complexity through search**\n\nSearch: finding your way with a flashlight or boat; pouring water. Analyzing\nthe efficiency of an algorithm; Recurrence relations; Matching data types with\nalgorithms; Longest palindrome substring algorithm.\n\n**Lesson 5: Dealing with uncertainty through probability**\n\nProbability: the game of Pig; Maximizing expected utility to optimize\nstrategy.\n\n**Lesson 6: Word Games**\n\nManaging complexity; Large sets of words; Appropriate data structures; Word\ngames.\n\n**Lesson 7: Conclusion**\n\nFinal exam/project\n\n",
        "name": "Design of Computer Programs",
        "provider": "Udacity",
        "rating": "3.75",
        "reviews": "4",
        "university": [
            "Stanford University"
        ],
        "url": "http://www.udacity.com/overview/Course/cs212",
        "video_url": "https://www.youtube.com/embed/6LSVPBgEl6w?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2012-04-16",
        "desc": "Starting from the basics of how the web works, this class will walk you through everything you need to know to build your own blog application and scale it to support large numbers of users.Why Take This Course?In this project-based course your knowledge will be evaluated as you learn to build your own blog application! Learn everything Steve Huffman wished he would have known when he broke into the startup world. Read more about Huffman and the course&nbsp;here.Prerequisites and RequirementsA moderate amount of programming and computer science experience is necessary for this course.See the&nbsp;Technology Requirements&nbsp;for using UdacityWhat Will I Learn?ProjectsMake a webpage that anyone can add to and edit.SyllabusHow the Web WorksIntroduction to HTTP and Web ApplicationsHow to Have UsersGetting and processing user inputHow to Manage StateDatabases and persistent dataWhom to TrustUser authentication and access controlHow to ConnectWeb applications as services, using APIsHow to Serve MillionsScaling, caching, optimizationsChanging the WorldBuilding a successful web application, project",
        "desc_html": "Starting from the basics of how the web works, this class will walk you\nthrough everything you need to know to build your own blog application and\nscale it to support large numbers of users.\n\n**Why Take This Course?**\n\nIn this project-based course your knowledge will be evaluated as you learn to\nbuild your own blog application! Learn everything Steve Huffman wished he\nwould have known when he broke into the startup world. Read more about Huffman\nand the course [here.](http://www.udacity.blogspot.com/2012/05/steve-huffman-\nhas-something-to-teach.html)\n\n**Prerequisites and Requirements**\n\nA moderate amount of programming and computer science experience is necessary\nfor this course.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n**What Will I Learn?** **Projects**\n\nMake a webpage that anyone can add to and edit.\n\n## Syllabus\n\n**How the Web Works**\n\nIntroduction to HTTP and Web Applications\n\n**How to Have Users**\n\nGetting and processing user input\n\n**How to Manage State**\n\nDatabases and persistent data\n\n**Whom to Trust**\n\nUser authentication and access control\n\n**How to Connect**\n\nWeb applications as services, using APIs\n\n**How to Serve Millions**\n\nScaling, caching, optimizations\n\n**Changing the World**\n\nBuilding a successful web application, project\n\n",
        "name": "Web Development",
        "provider": "Udacity",
        "rating": "4.6666666666667",
        "reviews": "9",
        "university": [],
        "url": "http://www.udacity.com/overview/Course/cs253",
        "video_url": "https://www.youtube.com/embed/xCRU3aRT4KQ?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2012-04-16",
        "desc": "Cryptography is present in everyday life, from paying with a credit card to using the telephone. Learn all about making and breaking puzzles in computing.Why Take This Course?Explore how secrets are written and shared, as well as what can go wrong when cryptography is misused or implemented badly.Prerequisites and RequirementsThis course assumes previous programming experience, comparable to what is covered by the Udacity CS101 course, as well as some understanding of probability and theory of computation and algorithm analysis.See the&nbsp;Technology Requirements&nbsp;for using UdacitySyllabusLesson 1: Perfect CiphersWhat makes certain ciphers perfect, how the Lorenz Cipher was brokenLesson 2: Symmetric EncryptionSending messages when two people share a secretLesson 3: Key ExchangeTechnics to establish a shared secretLesson 4: Asymmetric EncryptionExchanging information using public key cryptosystemsLesson 5: Public Key ProtocolsEncrypted key exchange, certificates, secure commerceLesson 6: Using Cryptographic PrimitivesHow cryptography can be useful for anonymizing communication, voting, and digital cashLesson 7: Secure ComputationComputing without exposing data",
        "desc_html": "Cryptography is present in everyday life, from paying with a credit card to\nusing the telephone. Learn all about making and breaking puzzles in computing.\n\n**Why Take This Course?**\n\nExplore how secrets are written and shared, as well as what can go wrong when\ncryptography is misused or implemented badly.\n\n**Prerequisites and Requirements**\n\nThis course assumes previous programming experience, comparable to what is\ncovered by the Udacity CS101 course, as well as some understanding of\nprobability and theory of computation and algorithm analysis.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n## Syllabus\n\n**Lesson 1: Perfect Ciphers**\n\nWhat makes certain ciphers perfect, how the Lorenz Cipher was broken\n\n**Lesson 2: Symmetric Encryption**\n\nSending messages when two people share a secret\n\n**Lesson 3: Key Exchange**\n\nTechnics to establish a shared secret\n\n**Lesson 4: Asymmetric Encryption**\n\nExchanging information using public key cryptosystems\n\n**Lesson 5: Public Key Protocols**\n\nEncrypted key exchange, certificates, secure commerce\n\n**Lesson 6: Using Cryptographic Primitives**\n\nHow cryptography can be useful for anonymizing communication, voting, and\ndigital cash\n\n**Lesson 7: Secure Computation**\n\nComputing without exposing data\n\n",
        "name": "CS387 - Applied Cryptography",
        "provider": "Udacity",
        "rating": "4",
        "reviews": "2",
        "university": [
            "University of Virginia"
        ],
        "url": "http://www.udacity.com/overview/Course/cs387",
        "video_url": "https://www.youtube.com/embed/k3zr_Qp5_Ss?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2012-04-16",
        "desc": "Learn how to program all the major systems of a robotic car from the leader of Google and Stanford's autonomous driving teams. This class will teach you basic methods in Artificial Intelligence, including: probabilistic inference, planning and search, localization, tracking and control, all with a focus on robotics. Extensive programming examples and assignments will apply these methods in the context of building self-driving cars.This course is offered as part of the Georgia Tech Masters in Computer Science. The updated course includes a final project, where you must chase a runaway robot that is trying to escape!Why Take This Course?This course will teach you probabilistic inference, planning and search, localization, tracking and control, all with a focus on robotics.At the end of the course, you will leverage what you learned by solving the problem of a runaway robot that you must chase and hunt down!Prerequisites and RequirementsSuccess in this course requires some programming experience and some mathematical fluency.Programming in this course is done in Python. We will use some basic object-oriented concepts to model robot motion and perception. If you don&rsquo;t know Python but have experience with another language, you should be able to pick up the syntax fairly quickly. If you have no programming experience, you should consider taking Udacity&rsquo;s&nbsp;Introduction to Computer Science&nbsp;course before attempting this one.The math used will be centered on probability and linear algebra. You don&rsquo;t need to be an expert in either, but some familiarity with concepts in probability (e.g. probabilities must add to one, conditional probability, and Bayes&rsquo; rule) will be extremely helpful. It is possible to learn these concepts during the course, but it will take more work. Knowledge of linear algebra, while helpful, is not required.See the&nbsp;Technology Requirements&nbsp;for using UdacitySyllabusLesson 1: LocalizationLocalizationTotal ProbabilityUniform DistributionProbability After SenseNormalize DistributionPhit and PmissSum of ProbabilitiesSense FunctionExact MotionMove FunctionBayes RuleTheorem of Total ProbabilityLesson 2: Kalman FiltersGaussian IntroVariance ComparisonMaximize GaussianMeasurement and MotionParameter UpdateNew Mean VarianceGaussian MotionKalman Filter CodeKalman PredictionKalman Filter DesignKalman MatricesLesson 3: Particle FiltersSlate SpaceBelief ModalityParticle FiltersUsing Robot ClassRobot WorldRobot ParticlesLesson 4: SearchMotion PlanningCompute CostOptimal PathFirst Search ProgramExpansion GridDynamic ProgrammingComputing ValueOptimal PolicyLesson 5: PID ControlRobot MotionSmoothing AlgorithmPath SmoothingZero Data WeightPid ControlProportional ControlImplement P ControllerOscillationsPd ControllerSystematic BiasPid ImplementationParameter OptimizationLesson 6: SLAM (Simultaneous Localization and Mapping)LocalizationPlanningSegmented SteFun with ParametersSLAMGraph SLAMImplementing ConstraintsAdding LandmarksMatrix ModificationUntouched FieldsLandmark PositionConfident MeasurementsImplementing SLAMRunaway Robot Final Project",
        "desc_html": "Learn how to program all the major systems of a robotic car from the leader of\nGoogle and Stanford's autonomous driving teams. This class will teach you\nbasic methods in Artificial Intelligence, including: probabilistic inference,\nplanning and search, localization, tracking and control, all with a focus on\nrobotics. Extensive programming examples and assignments will apply these\nmethods in the context of building self-driving cars.\n\nThis course is offered as part of the Georgia Tech Masters in Computer\nScience. The updated course includes a final project, where you must chase a\nrunaway robot that is trying to escape!\n\n**Why Take This Course?**\n\nThis course will teach you probabilistic inference, planning and search,\nlocalization, tracking and control, all with a focus on robotics.\n\nAt the end of the course, you will leverage what you learned by solving the\nproblem of a runaway robot that you must chase and hunt down!\n\n**Prerequisites and Requirements**\n\nSuccess in this course requires some programming experience and some\nmathematical fluency.\n\nProgramming in this course is done in Python. We will use some basic object-\noriented concepts to model robot motion and perception. If you don't know\nPython but have experience with another language, you should be able to pick\nup the syntax fairly quickly. If you have no programming experience, you\nshould consider taking Udacity's [Introduction to Computer\nScience](https://www.udacity.com/course/cs101) course before attempting this\none.\n\nThe math used will be centered on probability and linear algebra. You don't\nneed to be an expert in either, but some familiarity with concepts in\nprobability (e.g. probabilities must add to one, conditional probability, and\nBayes' rule) will be extremely helpful. It is possible to learn these concepts\nduring the course, but it will take more work. Knowledge of linear algebra,\nwhile helpful, is not required.\n\nSee the [Technology Requirements](https://www.udacity.com/tech-requirements)\nfor using Udacity\n\n## Syllabus\n\n**Lesson 1: Localization**\n\n  * Localization\n  * Total Probability\n  * Uniform Distribution\n  * Probability After Sense\n  * Normalize Distribution\n  * Phit and Pmiss\n  * Sum of Probabilities\n  * Sense Function\n  * Exact Motion\n  * Move Function\n  * Bayes Rule\n  * Theorem of Total Probability\n**Lesson 2: Kalman Filters**\n\n  * Gaussian Intro\n  * Variance Comparison\n  * Maximize Gaussian\n  * Measurement and Motion\n  * Parameter Update\n  * New Mean Variance\n  * Gaussian Motion\n  * Kalman Filter Code\n  * Kalman Prediction\n  * Kalman Filter Design\n  * Kalman Matrices\n**Lesson 3: Particle Filters**\n\n  * Slate Space\n  * Belief Modality\n  * Particle Filters\n  * Using Robot Class\n  * Robot World\n  * Robot Particles\n**Lesson 4: Search**\n\n  * Motion Planning\n  * Compute Cost\n  * Optimal Path\n  * First Search Program\n  * Expansion Grid\n  * Dynamic Programming\n  * Computing Value\n  * Optimal Policy\n**Lesson 5: PID Control**\n\n  * Robot Motion\n  * Smoothing Algorithm\n  * Path Smoothing\n  * Zero Data Weight\n  * Pid Control\n  * Proportional Control\n  * Implement P Controller\n  * Oscillations\n  * Pd Controller\n  * Systematic Bias\n  * Pid Implementation\n  * Parameter Optimization\n**Lesson 6: SLAM (Simultaneous Localization and Mapping)**\n\n  * Localization\n  * Planning\n  * Segmented Ste\n  * Fun with Parameters\n  * SLAM\n  * Graph SLAM\n  * Implementing Constraints\n  * Adding Landmarks\n  * Matrix Modification\n  * Untouched Fields\n  * Landmark Position\n  * Confident Measurements\n  * Implementing SLAM\n**Runaway Robot Final Project**\n\n",
        "name": "Artificial Intelligence for Robotics",
        "provider": "Udacity",
        "rating": "5",
        "reviews": "5",
        "university": [
            "Stanford University"
        ],
        "url": "http://www.udacity.com/overview/Course/cs373",
        "video_url": "https://www.youtube.com/embed/bdCnb0EFAzk?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2012-03-12",
        "desc": "This course covers a broad range of topics in natural language processing, including word and sentence tokenization, text classification and sentiment analysis, spelling correction, information extraction, parsing, meaning extraction, and question answering, We will also introduce the underlying theory from probability, statistics, and machine learning that are crucial for the field, and cover fundamental algorithms like n-gram language modeling, naive bayes and maxent classifiers, sequence models like Hidden Markov Models, probabilistic dependency and constituent parsing, and vector-space models of meaning.We are offering this course on Natural Language Processing free and online to students worldwide, continuing Stanford's exciting forays into large scale online instruction. Students have access to screencast lecture videos, are given quiz questions, assignments and exams, receive regular feedback on progress, and can participate in a discussion forum. Those who successfully complete the course will receive a statement of accomplishment. Taught by Professors Jurafsky and Manning, the curriculum draws from Stanford's courses in Natural Language Processing. You will need a decent internet connection for accessing course materials, but should be able to watch the videos on your smartphone.&nbsp;&nbsp;SyllabusThe following topics will be covered in the first two weeks:Introduction and Overview:Basic Text Processing:&nbsp;J+M Chapters 2.1, 3.9; MR+S Chapters 2.1-2.2Minimum Edit Distance:&nbsp;J+M Chapter 3.11Language Modeling:&nbsp;J+M Chapter 4Spelling Correction:&nbsp;J+M Chapters 5.9,&nbsp;Peter Norvig (2007) How to Write a Spelling Corrector",
        "desc_html": "This course covers a broad range of topics in natural language processing,\nincluding word and sentence tokenization, text classification and sentiment\nanalysis, spelling correction, information extraction, parsing, meaning\nextraction, and question answering, We will also introduce the underlying\ntheory from probability, statistics, and machine learning that are crucial for\nthe field, and cover fundamental algorithms like n-gram language modeling,\nnaive bayes and maxent classifiers, sequence models like Hidden Markov Models,\nprobabilistic dependency and constituent parsing, and vector-space models of\nmeaning.\n\nWe are offering this course on Natural Language Processing free and online to\nstudents worldwide, continuing Stanford's exciting forays into large scale\nonline instruction. Students have access to screencast lecture videos, are\ngiven quiz questions, assignments and exams, receive regular feedback on\nprogress, and can participate in a discussion forum. Those who successfully\ncomplete the course will receive a statement of accomplishment. Taught by\nProfessors Jurafsky and Manning, the curriculum draws from Stanford's courses\nin Natural Language Processing. You will need a decent internet connection for\naccessing course materials, but should be able to watch the videos on your\nsmartphone.  \n  \n\n** **\n\n## Syllabus\n\nThe following topics will be covered in the first two weeks:\n\n  1. **Introduction and Overview:**\n  2. **Basic Text Processing: **J+M Chapters 2.1, 3.9; MR+S Chapters 2.1-2.2\n  3. **Minimum Edit Distance: **J+M Chapter 3.11\n  4. **Language Modeling: **J+M Chapter 4\n  5. **Spelling Correction:** J+M Chapters 5.9, [Peter Norvig (2007) How to Write a Spelling Corrector](http://norvig.com/spell-correct.html)\n\n",
        "name": "Natural Language Processing",
        "provider": "Coursera",
        "rating": "0",
        "reviews": "0",
        "university": [
            "Stanford University"
        ],
        "url": "https://www.coursera.org/course/nlp",
        "video_url": ""
    },
    {
        "date": "2012-02-20",
        "desc": "",
        "desc_html": "\n\n",
        "name": "Software as a Service",
        "provider": "Coursera",
        "rating": "3",
        "reviews": "1",
        "university": [
            "University of California, Berkeley"
        ],
        "url": "https://www.coursera.org/course/saas",
        "video_url": "https://www.youtube.com/embed/4PZD0rOlWH8?wmode=transparent&controls=0&showinfo=0"
    },
    {
        "date": "2011-10-01",
        "desc": "Online Introduction to Artificial Intelligence is based on Stanford CS221, Introduction to Artificial Intelligence. This class introduces students to the basics of Artificial Intelligence, which includes machine learning, probabilistic reasoning, robotics, and natural language processing.The objective of this class is to teach you modern AI. You learn about the basic techniques and tricks of the trade, at the same level we teach our Stanford students. We also aspire to excite you about the field of AI. Whether you are a seasoned professional, a college student, or a curious high school student - everyone can participate.",
        "desc_html": "Online Introduction to Artificial Intelligence is based on Stanford CS221,\nIntroduction to Artificial Intelligence. This class introduces students to the\nbasics of Artificial Intelligence, which includes machine learning,\nprobabilistic reasoning, robotics, and natural language processing.  \n  \nThe objective of this class is to teach you modern AI. You learn about the\nbasic techniques and tricks of the trade, at the same level we teach our\nStanford students. We also aspire to excite you about the field of AI. Whether\nyou are a seasoned professional, a college student, or a curious high school\nstudent - everyone can participate.\n\n",
        "name": "Introduction to Artificial Intelligence",
        "provider": "Udacity",
        "rating": "5",
        "reviews": "2",
        "university": [
            "Stanford University"
        ],
        "url": "https://www.ai-class.com/",
        "video_url": "https://www.youtube.com/embed/BnIJ7Ba5Sr4?wmode=transparent&controls=0&showinfo=0"
    }
]
